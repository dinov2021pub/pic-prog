

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Apr 16 15:15:24 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 09/02/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F648A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     008C                     	;# 
    86     008E                     	;# 
    87     0092                     	;# 
    88     0098                     	;# 
    89     0099                     	;# 
    90     009A                     	;# 
    91     009B                     	;# 
    92     009C                     	;# 
    93     009D                     	;# 
    94     009F                     	;# 
    95     0000                     	;# 
    96     0001                     	;# 
    97     0002                     	;# 
    98     0003                     	;# 
    99     0004                     	;# 
   100     0005                     	;# 
   101     0006                     	;# 
   102     000A                     	;# 
   103     000B                     	;# 
   104     000C                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0015                     	;# 
   112     0015                     	;# 
   113     0016                     	;# 
   114     0017                     	;# 
   115     0018                     	;# 
   116     0019                     	;# 
   117     001A                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     008C                     	;# 
   123     008E                     	;# 
   124     0092                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009F                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0015                     	;# 
   149     0015                     	;# 
   150     0016                     	;# 
   151     0017                     	;# 
   152     0018                     	;# 
   153     0019                     	;# 
   154     001A                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     008C                     	;# 
   160     008E                     	;# 
   161     0092                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009A                     	;# 
   165     009B                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009F                     	;# 
   169                           
   170                           	psect	strings
   171     0002                     __pstrings:
   172     0002                     stringtab:
   173     0002                     __stringtab:
   174     0002                     stringcode:	
   175                           ;	String table - string pointers are 1 byte each
   176                           
   177     0002                     stringdir:
   178     0002  3000               	movlw	high stringdir
   179     0003  008A               	movwf	10
   180     0004  0804               	movf	4,w
   181     0005  0A84               	incf	4,f
   182     0006  0782               	addwf	2,f
   183     0007                     __stringbase:
   184     0007  3400               	retlw	0
   185     0008                     __end_of__stringtab:
   186     0008                     _dpowers:
   187     0008  3401               	retlw	1
   188     0009  3400               	retlw	0
   189     000A  340A               	retlw	10
   190     000B  3400               	retlw	0
   191     000C  3464               	retlw	100
   192     000D  3400               	retlw	0
   193     000E  34E8               	retlw	232
   194     000F  3403               	retlw	3
   195     0010  3410               	retlw	16
   196     0011  3427               	retlw	39
   197     0012                     __end_of_dpowers:
   198     001A                     _RCREG	set	26
   199     0019                     _TXREG	set	25
   200     0018                     _RCSTA	set	24
   201     001F                     _CMCON	set	31
   202     0006                     _PORTB	set	6
   203     0005                     _PORTA	set	5
   204     0065                     _RCIF	set	101
   205     0064                     _TXIF	set	100
   206     0037                     _RB7	set	55
   207     0036                     _RB6	set	54
   208     0035                     _RB5	set	53
   209     0034                     _RB4	set	52
   210     0098                     _TXSTA	set	152
   211     0099                     _SPBRG	set	153
   212     0086                     _TRISB	set	134
   213     0085                     _TRISA	set	133
   214     0012                     STR_6:
   215     0012  344D               	retlw	77	;'M'
   216     0013  344F               	retlw	79	;'O'
   217     0014  3454               	retlw	84	;'T'
   218     0015  344F               	retlw	79	;'O'
   219     0016  3452               	retlw	82	;'R'
   220     0017  3420               	retlw	32	;' '
   221     0018  343D               	retlw	61	;'='
   222     0019  3420               	retlw	32	;' '
   223     001A  3442               	retlw	66	;'B'
   224     001B  3420               	retlw	32	;' '
   225     001C  3420               	retlw	32	;' '
   226     001D  344F               	retlw	79	;'O'
   227     001E  344B               	retlw	75	;'K'
   228     001F  340D               	retlw	13
   229     0020  340A               	retlw	10
   230     0021  3400               	retlw	0
   231     0022                     STR_4:
   232     0022  344D               	retlw	77	;'M'
   233     0023  344F               	retlw	79	;'O'
   234     0024  3454               	retlw	84	;'T'
   235     0025  344F               	retlw	79	;'O'
   236     0026  3452               	retlw	82	;'R'
   237     0027  3420               	retlw	32	;' '
   238     0028  343D               	retlw	61	;'='
   239     0029  3420               	retlw	32	;' '
   240     002A  3446               	retlw	70	;'F'
   241     002B  3420               	retlw	32	;' '
   242     002C  3420               	retlw	32	;' '
   243     002D  344F               	retlw	79	;'O'
   244     002E  344B               	retlw	75	;'K'
   245     002F  340D               	retlw	13
   246     0030  340A               	retlw	10
   247     0031  3400               	retlw	0
   248     0032                     STR_5:
   249     0032  344D               	retlw	77	;'M'
   250     0033  344F               	retlw	79	;'O'
   251     0034  3454               	retlw	84	;'T'
   252     0035  344F               	retlw	79	;'O'
   253     0036  3452               	retlw	82	;'R'
   254     0037  3420               	retlw	32	;' '
   255     0038  343D               	retlw	61	;'='
   256     0039  3420               	retlw	32	;' '
   257     003A  3442               	retlw	66	;'B'
   258     003B  3420               	retlw	32	;' '
   259     003C  3420               	retlw	32	;' '
   260     003D  344F               	retlw	79	;'O'
   261     003E  344B               	retlw	75	;'K'
   262     003F  3400               	retlw	0
   263     0040                     STR_3:
   264     0040  344D               	retlw	77	;'M'
   265     0041  344F               	retlw	79	;'O'
   266     0042  3454               	retlw	84	;'T'
   267     0043  344F               	retlw	79	;'O'
   268     0044  3452               	retlw	82	;'R'
   269     0045  3420               	retlw	32	;' '
   270     0046  343D               	retlw	61	;'='
   271     0047  3420               	retlw	32	;' '
   272     0048  3446               	retlw	70	;'F'
   273     0049  3420               	retlw	32	;' '
   274     004A  3420               	retlw	32	;' '
   275     004B  344F               	retlw	79	;'O'
   276     004C  344B               	retlw	75	;'K'
   277     004D  3400               	retlw	0
   278     004E                     STR_7:
   279     004E  3425               	retlw	37	;'%'
   280     004F  3464               	retlw	100	;'d'
   281     0050  340D               	retlw	13
   282     0051  340A               	retlw	10
   283     0052  3400               	retlw	0
   284     001D                     
   285                           	psect	cinit
   286     07FD                     start_initialization:	
   287                           ; #config settings
   288                           
   289     07FD                     __initialization:
   290     07FD                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293     07FD                     __end_of__initialization:
   294     07FD  0183               	clrf	3
   295     07FE  118A  2E04         	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	cstackCOMMON
   298     0070                     __pcstackCOMMON:
   299     0070                     ?_initUART:
   300     0070                     ??_initUART:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_gets:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_cgets:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_cputs:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_main:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_putch:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_putch:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_getch:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_getch:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_getche:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_puts:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?___lwdiv:	
   334                           ; 2 bytes @ 0x0
   335                           
   336     0070                     putch@byte:	
   337                           ; 2 bytes @ 0x0
   338                           
   339     0070                     ___lwdiv@divisor:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 2 bytes @ 0x0
   344     0070                     	ds	1
   345     0071                     ??_cputs:
   346     0071                     ??_getche:	
   347                           ; 1 bytes @ 0x1
   348                           
   349     0071                     getche@c:	
   350                           ; 1 bytes @ 0x1
   351                           
   352     0071                     cputs@s:	
   353                           ; 1 bytes @ 0x1
   354                           
   355                           
   356                           ; 1 bytes @ 0x1
   357     0071                     	ds	1
   358     0072                     ??_puts:
   359     0072                     ??_cgets:	
   360                           ; 1 bytes @ 0x2
   361                           
   362     0072                     puts@s:	
   363                           ; 1 bytes @ 0x2
   364                           
   365     0072                     ___lwdiv@dividend:	
   366                           ; 1 bytes @ 0x2
   367                           
   368                           
   369                           ; 2 bytes @ 0x2
   370     0072                     	ds	2
   371     0074                     ??___lwdiv:
   372     0074                     ___lwdiv@quotient:	
   373                           ; 1 bytes @ 0x4
   374                           
   375     0074                     cgets@c:	
   376                           ; 2 bytes @ 0x4
   377                           
   378                           
   379                           ; 2 bytes @ 0x4
   380     0074                     	ds	2
   381     0076                     ___lwdiv@counter:
   382     0076                     cgets@s:	
   383                           ; 1 bytes @ 0x6
   384                           
   385                           
   386                           ; 1 bytes @ 0x6
   387     0076                     	ds	1
   388     0077                     ?___lwmod:
   389     0077                     cgets@s1:	
   390                           ; 2 bytes @ 0x7
   391                           
   392     0077                     ___lwmod@divisor:	
   393                           ; 1 bytes @ 0x7
   394                           
   395                           
   396                           ; 2 bytes @ 0x7
   397     0077                     	ds	1
   398     0078                     ??_gets:
   399     0078                     gets@s:	
   400                           ; 1 bytes @ 0x8
   401                           
   402                           
   403                           ; 1 bytes @ 0x8
   404     0078                     	ds	1
   405     0079                     ___lwmod@dividend:
   406                           
   407                           ; 2 bytes @ 0x9
   408     0079                     	ds	2
   409     007B                     ??___lwmod:
   410     007B                     ___lwmod@counter:	
   411                           ; 1 bytes @ 0xB
   412                           
   413                           
   414                           ; 1 bytes @ 0xB
   415     007B                     	ds	1
   416     007C                     ?_printf:
   417                           
   418                           ; 2 bytes @ 0xC
   419     007C                     	ds	2
   420                           
   421                           	psect	cstackBANK0
   422     0020                     __pcstackBANK0:
   423     0020                     ??_printf:
   424                           
   425                           ; 1 bytes @ 0x0
   426     0020                     	ds	3
   427     0023                     printf@ap:
   428                           
   429                           ; 1 bytes @ 0x3
   430     0023                     	ds	1
   431     0024                     printf@flag:
   432                           
   433                           ; 1 bytes @ 0x4
   434     0024                     	ds	1
   435     0025                     printf@prec:
   436                           
   437                           ; 1 bytes @ 0x5
   438     0025                     	ds	1
   439     0026                     printf@f:
   440                           
   441                           ; 1 bytes @ 0x6
   442     0026                     	ds	1
   443     0027                     printf@val:
   444                           
   445                           ; 2 bytes @ 0x7
   446     0027                     	ds	2
   447     0029                     printf@c:
   448                           
   449                           ; 1 bytes @ 0x9
   450     0029                     	ds	1
   451     002A                     ??_main:
   452                           
   453                           ; 1 bytes @ 0xA
   454     002A                     	ds	1
   455     002B                     main@tmp:
   456                           
   457                           ; 20 bytes @ 0xB
   458     002B                     	ds	20
   459     003F                     main@dist:
   460                           
   461                           ; 2 bytes @ 0x1F
   462     003F                     	ds	2
   463     0041                     main@cnt:
   464                           
   465                           ; 2 bytes @ 0x21
   466     0041                     	ds	2
   467     0043                     main@k:
   468                           
   469                           ; 2 bytes @ 0x23
   470     0043                     	ds	2
   471     0045                     main@intvl:
   472                           
   473                           ; 2 bytes @ 0x25
   474     0045                     	ds	2
   475     0047                     main@j:
   476                           
   477                           ; 2 bytes @ 0x27
   478     0047                     	ds	2
   479                           
   480                           	psect	maintext
   481     0604                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 38 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  tmp            20   11[BANK0 ] unsigned char [20]
   492 ;;  j               2   39[BANK0 ] int 
   493 ;;  intvl           2   37[BANK0 ] int 
   494 ;;  k               2   35[BANK0 ] int 
   495 ;;  cnt             2   33[BANK0 ] int 
   496 ;;  dist            2   31[BANK0 ] int 
   497 ;;  d               2    0        int 
   498 ;;  p               2    0        int 
   499 ;;  pre_RA1         2    0        int 
   500 ;;  pre_RA0         2    0        int 
   501 ;;  val             2    0        unsigned int 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   511 ;;      Params:         0       0       0       0
   512 ;;      Locals:         0      30       0       0
   513 ;;      Temps:          0       1       0       0
   514 ;;      Totals:         0      31       0       0
   515 ;;Total ram usage:       31 bytes
   516 ;; Hardware stack levels required when called: 4
   517 ;; This function calls:
   518 ;;		_gets
   519 ;;		_initUART
   520 ;;		_printf
   521 ;;		_puts
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527     0604                     _main:	
   528                           ;psect for function _main
   529                           
   530     0604                     l1229:	
   531                           ;incstack = 0
   532                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   533                           
   534                           
   535                           ;main.c: 40: PORTA = 0x00;
   536     0604  1283               	bcf	3,5	;RP0=0, select bank0
   537     0605  1303               	bcf	3,6	;RP1=0, select bank0
   538     0606  0185               	clrf	5	;volatile
   539                           
   540                           ;main.c: 41: PORTB = 0x00;
   541     0607  0186               	clrf	6	;volatile
   542     0608                     l1231:
   543                           
   544                           ;main.c: 42: TRISA = 0b00000011;
   545     0608  3003               	movlw	3
   546     0609  1683               	bsf	3,5	;RP0=1, select bank1
   547     060A  1303               	bcf	3,6	;RP1=0, select bank1
   548     060B  0085               	movwf	5	;volatile
   549     060C                     l1233:
   550                           
   551                           ;main.c: 43: TRISB = 0b00000010;
   552     060C  3002               	movlw	2
   553     060D  0086               	movwf	6	;volatile
   554     060E                     l1235:
   555                           
   556                           ;main.c: 44: CMCON = 0b00000111;
   557     060E  3007               	movlw	7
   558     060F  1283               	bcf	3,5	;RP0=0, select bank0
   559     0610  1303               	bcf	3,6	;RP1=0, select bank0
   560     0611  009F               	movwf	31	;volatile
   561     0612                     l1237:
   562                           
   563                           ;main.c: 46: initUART();
   564     0612  118A  2457  118A   	fcall	_initUART
   565     0615                     l1239:
   566     0615                     l1241:
   567     0615                     l1243:
   568     0615                     l1245:
   569     0615                     l1247:
   570                           
   571                           ;main.c: 56: int dist = 0;
   572     0615  1283               	bcf	3,5	;RP0=0, select bank0
   573     0616  1303               	bcf	3,6	;RP1=0, select bank0
   574     0617  01BF               	clrf	main@dist
   575     0618  01C0               	clrf	main@dist+1
   576     0619                     l1249:
   577     0619                     l1251:
   578     0619                     l1253:
   579     0619                     l1255:
   580     0619                     l1257:
   581                           
   582                           ;main.c: 62: int intvl = 10;
   583     0619  300A               	movlw	10
   584     061A  00C5               	movwf	main@intvl
   585     061B  3000               	movlw	0
   586     061C  00C6               	movwf	main@intvl+1
   587     061D                     l1259:
   588                           
   589                           ;main.c: 66: puts("OK");
   590     061D  3036               	movlw	(low (((STR_5+11)-__stringbase)| (0+32768)))& (0+255)
   591     061E  118A  244D  118A   	fcall	_puts
   592     0621                     l1261:
   593                           
   594                           ;main.c: 67: printf("OK\r\n");
   595     0621  3016               	movlw	(low (((STR_6+11)-__stringbase)| (0+32768)))& (0+255)
   596     0622  118A  2550  118A   	fcall	_printf
   597     0625                     l1263:
   598                           
   599                           ;main.c: 69: gets(tmp);
   600     0625  302B               	movlw	(low (main@tmp| 0))& (0+255)
   601     0626  118A  242B  118A   	fcall	_gets
   602                           
   603                           ;main.c: 71: switch(tmp[0]){
   604     0629  2FD4               	goto	l1327
   605     062A                     l1265:
   606     062A  3014               	movlw	20
   607     062B  00C1               	movwf	main@cnt
   608     062C  3000               	movlw	0
   609     062D  00C2               	movwf	main@cnt+1
   610     062E                     l1267:
   611                           
   612                           ;main.c: 73: for(k = 0 ; k < cnt ; k++){
   613     062E  01C3               	clrf	main@k
   614     062F  01C4               	clrf	main@k+1
   615     0630  2ED9               	goto	l36
   616     0631                     l37:
   617                           
   618                           ;main.c: 74: RB4 = 1;
   619     0631  1283               	bcf	3,5	;RP0=0, select bank0
   620     0632  1303               	bcf	3,6	;RP1=0, select bank0
   621     0633  1606               	bsf	6,4	;volatile
   622                           
   623                           ;main.c: 75: RB5 = 0;
   624     0634  1286               	bcf	6,5	;volatile
   625                           
   626                           ;main.c: 76: RB6 = 0;
   627     0635  1306               	bcf	6,6	;volatile
   628                           
   629                           ;main.c: 77: RB7 = 0;
   630     0636  1386               	bcf	6,7	;volatile
   631     0637                     l1269:
   632                           
   633                           ;main.c: 78: for(j = 0 ; j < intvl ; j++){
   634     0637  01C7               	clrf	main@j
   635     0638  01C8               	clrf	main@j+1
   636     0639  2E4B               	goto	l38
   637     063A                     l1271:
   638                           
   639                           ;main.c: 79: _delay((unsigned long)((1)*(4000000/4000.0)));
   640     063A  30C7               	movlw	199
   641     063B  1283               	bcf	3,5	;RP0=0, select bank0
   642     063C  1303               	bcf	3,6	;RP1=0, select bank0
   643     063D  00AA               	movwf	??_main
   644     063E                     u717:
   645     063E  2E3F               	nop2
   646     063F  0BAA               	decfsz	??_main,f
   647     0640  2E3E               	goto	u717
   648     0641  2E42               	nop2
   649     0642  0000               	nop
   650     0643  3001               	movlw	1
   651     0644  1283               	bcf	3,5	;RP0=0, select bank0
   652     0645  1303               	bcf	3,6	;RP1=0, select bank0
   653     0646  07C7               	addwf	main@j,f
   654     0647  1803               	skipnc
   655     0648  0AC8               	incf	main@j+1,f
   656     0649  3000               	movlw	0
   657     064A  07C8               	addwf	main@j+1,f
   658     064B                     l38:
   659     064B  0848               	movf	main@j+1,w
   660     064C  3A80               	xorlw	128
   661     064D  00AA               	movwf	??_main
   662     064E  0846               	movf	main@intvl+1,w
   663     064F  3A80               	xorlw	128
   664     0650  022A               	subwf	??_main,w
   665     0651  1D03               	skipz
   666     0652  2E55               	goto	u615
   667     0653  0845               	movf	main@intvl,w
   668     0654  0247               	subwf	main@j,w
   669     0655                     u615:
   670     0655  1C03               	skipc
   671     0656  2E58               	goto	u611
   672     0657  2E59               	goto	u610
   673     0658                     u611:
   674     0658  2E3A               	goto	l1271
   675     0659                     u610:
   676     0659                     l40:
   677                           
   678                           ;main.c: 80: };main.c: 81: RB4 = 0;
   679     0659  1283               	bcf	3,5	;RP0=0, select bank0
   680     065A  1303               	bcf	3,6	;RP1=0, select bank0
   681     065B  1206               	bcf	6,4	;volatile
   682                           
   683                           ;main.c: 82: RB5 = 1;
   684     065C  1686               	bsf	6,5	;volatile
   685                           
   686                           ;main.c: 83: RB6 = 0;
   687     065D  1306               	bcf	6,6	;volatile
   688                           
   689                           ;main.c: 84: RB7 = 0;
   690     065E  1386               	bcf	6,7	;volatile
   691     065F                     l1273:
   692                           
   693                           ;main.c: 85: for(j = 0 ; j < intvl ; j++){
   694     065F  01C7               	clrf	main@j
   695     0660  01C8               	clrf	main@j+1
   696     0661  2E73               	goto	l41
   697     0662                     l1275:
   698                           
   699                           ;main.c: 86: _delay((unsigned long)((1)*(4000000/4000.0)));
   700     0662  30C7               	movlw	199
   701     0663  1283               	bcf	3,5	;RP0=0, select bank0
   702     0664  1303               	bcf	3,6	;RP1=0, select bank0
   703     0665  00AA               	movwf	??_main
   704     0666                     u727:
   705     0666  2E67               	nop2
   706     0667  0BAA               	decfsz	??_main,f
   707     0668  2E66               	goto	u727
   708     0669  2E6A               	nop2
   709     066A  0000               	nop
   710     066B  3001               	movlw	1
   711     066C  1283               	bcf	3,5	;RP0=0, select bank0
   712     066D  1303               	bcf	3,6	;RP1=0, select bank0
   713     066E  07C7               	addwf	main@j,f
   714     066F  1803               	skipnc
   715     0670  0AC8               	incf	main@j+1,f
   716     0671  3000               	movlw	0
   717     0672  07C8               	addwf	main@j+1,f
   718     0673                     l41:
   719     0673  0848               	movf	main@j+1,w
   720     0674  3A80               	xorlw	128
   721     0675  00AA               	movwf	??_main
   722     0676  0846               	movf	main@intvl+1,w
   723     0677  3A80               	xorlw	128
   724     0678  022A               	subwf	??_main,w
   725     0679  1D03               	skipz
   726     067A  2E7D               	goto	u625
   727     067B  0845               	movf	main@intvl,w
   728     067C  0247               	subwf	main@j,w
   729     067D                     u625:
   730     067D  1C03               	skipc
   731     067E  2E80               	goto	u621
   732     067F  2E81               	goto	u620
   733     0680                     u621:
   734     0680  2E62               	goto	l1275
   735     0681                     u620:
   736     0681                     l43:
   737                           
   738                           ;main.c: 87: };main.c: 88: RB4 = 0;
   739     0681  1283               	bcf	3,5	;RP0=0, select bank0
   740     0682  1303               	bcf	3,6	;RP1=0, select bank0
   741     0683  1206               	bcf	6,4	;volatile
   742                           
   743                           ;main.c: 89: RB5 = 0;
   744     0684  1286               	bcf	6,5	;volatile
   745                           
   746                           ;main.c: 90: RB6 = 1;
   747     0685  1706               	bsf	6,6	;volatile
   748                           
   749                           ;main.c: 91: RB7 = 0;
   750     0686  1386               	bcf	6,7	;volatile
   751     0687                     l1277:
   752                           
   753                           ;main.c: 92: for(j = 0 ; j < intvl ; j++){
   754     0687  01C7               	clrf	main@j
   755     0688  01C8               	clrf	main@j+1
   756     0689  2E9B               	goto	l44
   757     068A                     l1279:
   758                           
   759                           ;main.c: 93: _delay((unsigned long)((1)*(4000000/4000.0)));
   760     068A  30C7               	movlw	199
   761     068B  1283               	bcf	3,5	;RP0=0, select bank0
   762     068C  1303               	bcf	3,6	;RP1=0, select bank0
   763     068D  00AA               	movwf	??_main
   764     068E                     u737:
   765     068E  2E8F               	nop2
   766     068F  0BAA               	decfsz	??_main,f
   767     0690  2E8E               	goto	u737
   768     0691  2E92               	nop2
   769     0692  0000               	nop
   770     0693  3001               	movlw	1
   771     0694  1283               	bcf	3,5	;RP0=0, select bank0
   772     0695  1303               	bcf	3,6	;RP1=0, select bank0
   773     0696  07C7               	addwf	main@j,f
   774     0697  1803               	skipnc
   775     0698  0AC8               	incf	main@j+1,f
   776     0699  3000               	movlw	0
   777     069A  07C8               	addwf	main@j+1,f
   778     069B                     l44:
   779     069B  0848               	movf	main@j+1,w
   780     069C  3A80               	xorlw	128
   781     069D  00AA               	movwf	??_main
   782     069E  0846               	movf	main@intvl+1,w
   783     069F  3A80               	xorlw	128
   784     06A0  022A               	subwf	??_main,w
   785     06A1  1D03               	skipz
   786     06A2  2EA5               	goto	u635
   787     06A3  0845               	movf	main@intvl,w
   788     06A4  0247               	subwf	main@j,w
   789     06A5                     u635:
   790     06A5  1C03               	skipc
   791     06A6  2EA8               	goto	u631
   792     06A7  2EA9               	goto	u630
   793     06A8                     u631:
   794     06A8  2E8A               	goto	l1279
   795     06A9                     u630:
   796     06A9                     l46:
   797                           
   798                           ;main.c: 94: };main.c: 95: RB4 = 0;
   799     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   800     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   801     06AB  1206               	bcf	6,4	;volatile
   802                           
   803                           ;main.c: 96: RB5 = 0;
   804     06AC  1286               	bcf	6,5	;volatile
   805                           
   806                           ;main.c: 97: RB6 = 0;
   807     06AD  1306               	bcf	6,6	;volatile
   808                           
   809                           ;main.c: 98: RB7 = 1;
   810     06AE  1786               	bsf	6,7	;volatile
   811     06AF                     l1281:
   812                           
   813                           ;main.c: 99: for(j = 0 ; j < intvl ; j++){
   814     06AF  01C7               	clrf	main@j
   815     06B0  01C8               	clrf	main@j+1
   816     06B1  2EC3               	goto	l47
   817     06B2                     l1283:
   818                           
   819                           ;main.c: 100: _delay((unsigned long)((1)*(4000000/4000.0)));
   820     06B2  30C7               	movlw	199
   821     06B3  1283               	bcf	3,5	;RP0=0, select bank0
   822     06B4  1303               	bcf	3,6	;RP1=0, select bank0
   823     06B5  00AA               	movwf	??_main
   824     06B6                     u747:
   825     06B6  2EB7               	nop2
   826     06B7  0BAA               	decfsz	??_main,f
   827     06B8  2EB6               	goto	u747
   828     06B9  2EBA               	nop2
   829     06BA  0000               	nop
   830     06BB  3001               	movlw	1
   831     06BC  1283               	bcf	3,5	;RP0=0, select bank0
   832     06BD  1303               	bcf	3,6	;RP1=0, select bank0
   833     06BE  07C7               	addwf	main@j,f
   834     06BF  1803               	skipnc
   835     06C0  0AC8               	incf	main@j+1,f
   836     06C1  3000               	movlw	0
   837     06C2  07C8               	addwf	main@j+1,f
   838     06C3                     l47:
   839     06C3  0848               	movf	main@j+1,w
   840     06C4  3A80               	xorlw	128
   841     06C5  00AA               	movwf	??_main
   842     06C6  0846               	movf	main@intvl+1,w
   843     06C7  3A80               	xorlw	128
   844     06C8  022A               	subwf	??_main,w
   845     06C9  1D03               	skipz
   846     06CA  2ECD               	goto	u645
   847     06CB  0845               	movf	main@intvl,w
   848     06CC  0247               	subwf	main@j,w
   849     06CD                     u645:
   850     06CD  1C03               	skipc
   851     06CE  2ED0               	goto	u641
   852     06CF  2ED1               	goto	u640
   853     06D0                     u641:
   854     06D0  2EB2               	goto	l1283
   855     06D1                     u640:
   856     06D1                     l1285:
   857     06D1  3001               	movlw	1
   858     06D2  1283               	bcf	3,5	;RP0=0, select bank0
   859     06D3  1303               	bcf	3,6	;RP1=0, select bank0
   860     06D4  07C3               	addwf	main@k,f
   861     06D5  1803               	skipnc
   862     06D6  0AC4               	incf	main@k+1,f
   863     06D7  3000               	movlw	0
   864     06D8  07C4               	addwf	main@k+1,f
   865     06D9                     l36:
   866     06D9  0844               	movf	main@k+1,w
   867     06DA  3A80               	xorlw	128
   868     06DB  00AA               	movwf	??_main
   869     06DC  0842               	movf	main@cnt+1,w
   870     06DD  3A80               	xorlw	128
   871     06DE  022A               	subwf	??_main,w
   872     06DF  1D03               	skipz
   873     06E0  2EE3               	goto	u655
   874     06E1  0841               	movf	main@cnt,w
   875     06E2  0243               	subwf	main@k,w
   876     06E3                     u655:
   877     06E3  1C03               	skipc
   878     06E4  2EE6               	goto	u651
   879     06E5  2EE7               	goto	u650
   880     06E6                     u651:
   881     06E6  2E31               	goto	l37
   882     06E7                     u650:
   883     06E7                     l1287:
   884                           
   885                           ;main.c: 101: };main.c: 102: };main.c: 104: puts("MOTOR = F  OK");
   886     06E7  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   887     06E8  118A  244D  118A   	fcall	_puts
   888                           
   889                           ;main.c: 105: printf("MOTOR = F  OK\r\n");
   890     06EB  301B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   891     06EC  118A  2550  118A   	fcall	_printf
   892                           
   893                           ;main.c: 106: break;
   894     06EF  2FF0               	goto	l1329
   895     06F0                     l1289:
   896     06F0  3014               	movlw	20
   897     06F1  00C1               	movwf	main@cnt
   898     06F2  3000               	movlw	0
   899     06F3  00C2               	movwf	main@cnt+1
   900     06F4                     l1291:
   901                           
   902                           ;main.c: 109: for(k = 0 ; k < cnt ; k++){
   903     06F4  01C3               	clrf	main@k
   904     06F5  01C4               	clrf	main@k+1
   905     06F6  2F9F               	goto	l53
   906     06F7                     l54:
   907                           
   908                           ;main.c: 110: RB4 = 0;
   909     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   910     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   911     06F9  1206               	bcf	6,4	;volatile
   912                           
   913                           ;main.c: 111: RB5 = 0;
   914     06FA  1286               	bcf	6,5	;volatile
   915                           
   916                           ;main.c: 112: RB6 = 0;
   917     06FB  1306               	bcf	6,6	;volatile
   918                           
   919                           ;main.c: 113: RB7 = 1;
   920     06FC  1786               	bsf	6,7	;volatile
   921     06FD                     l1293:
   922                           
   923                           ;main.c: 114: for(j = 0 ; j < intvl ; j++){
   924     06FD  01C7               	clrf	main@j
   925     06FE  01C8               	clrf	main@j+1
   926     06FF  2F11               	goto	l55
   927     0700                     l1295:
   928                           
   929                           ;main.c: 115: _delay((unsigned long)((1)*(4000000/4000.0)));
   930     0700  30C7               	movlw	199
   931     0701  1283               	bcf	3,5	;RP0=0, select bank0
   932     0702  1303               	bcf	3,6	;RP1=0, select bank0
   933     0703  00AA               	movwf	??_main
   934     0704                     u757:
   935     0704  2F05               	nop2
   936     0705  0BAA               	decfsz	??_main,f
   937     0706  2F04               	goto	u757
   938     0707  2F08               	nop2
   939     0708  0000               	nop
   940     0709  3001               	movlw	1
   941     070A  1283               	bcf	3,5	;RP0=0, select bank0
   942     070B  1303               	bcf	3,6	;RP1=0, select bank0
   943     070C  07C7               	addwf	main@j,f
   944     070D  1803               	skipnc
   945     070E  0AC8               	incf	main@j+1,f
   946     070F  3000               	movlw	0
   947     0710  07C8               	addwf	main@j+1,f
   948     0711                     l55:
   949     0711  0848               	movf	main@j+1,w
   950     0712  3A80               	xorlw	128
   951     0713  00AA               	movwf	??_main
   952     0714  0846               	movf	main@intvl+1,w
   953     0715  3A80               	xorlw	128
   954     0716  022A               	subwf	??_main,w
   955     0717  1D03               	skipz
   956     0718  2F1B               	goto	u665
   957     0719  0845               	movf	main@intvl,w
   958     071A  0247               	subwf	main@j,w
   959     071B                     u665:
   960     071B  1C03               	skipc
   961     071C  2F1E               	goto	u661
   962     071D  2F1F               	goto	u660
   963     071E                     u661:
   964     071E  2F00               	goto	l1295
   965     071F                     u660:
   966     071F                     l57:
   967                           
   968                           ;main.c: 116: };main.c: 117: RB4 = 0;
   969     071F  1283               	bcf	3,5	;RP0=0, select bank0
   970     0720  1303               	bcf	3,6	;RP1=0, select bank0
   971     0721  1206               	bcf	6,4	;volatile
   972                           
   973                           ;main.c: 118: RB5 = 0;
   974     0722  1286               	bcf	6,5	;volatile
   975                           
   976                           ;main.c: 119: RB6 = 1;
   977     0723  1706               	bsf	6,6	;volatile
   978                           
   979                           ;main.c: 120: RB7 = 0;
   980     0724  1386               	bcf	6,7	;volatile
   981     0725                     l1297:
   982                           
   983                           ;main.c: 121: for(j = 0 ; j < intvl ; j++){
   984     0725  01C7               	clrf	main@j
   985     0726  01C8               	clrf	main@j+1
   986     0727  2F39               	goto	l58
   987     0728                     l1299:
   988                           
   989                           ;main.c: 122: _delay((unsigned long)((1)*(4000000/4000.0)));
   990     0728  30C7               	movlw	199
   991     0729  1283               	bcf	3,5	;RP0=0, select bank0
   992     072A  1303               	bcf	3,6	;RP1=0, select bank0
   993     072B  00AA               	movwf	??_main
   994     072C                     u767:
   995     072C  2F2D               	nop2
   996     072D  0BAA               	decfsz	??_main,f
   997     072E  2F2C               	goto	u767
   998     072F  2F30               	nop2
   999     0730  0000               	nop
  1000     0731  3001               	movlw	1
  1001     0732  1283               	bcf	3,5	;RP0=0, select bank0
  1002     0733  1303               	bcf	3,6	;RP1=0, select bank0
  1003     0734  07C7               	addwf	main@j,f
  1004     0735  1803               	skipnc
  1005     0736  0AC8               	incf	main@j+1,f
  1006     0737  3000               	movlw	0
  1007     0738  07C8               	addwf	main@j+1,f
  1008     0739                     l58:
  1009     0739  0848               	movf	main@j+1,w
  1010     073A  3A80               	xorlw	128
  1011     073B  00AA               	movwf	??_main
  1012     073C  0846               	movf	main@intvl+1,w
  1013     073D  3A80               	xorlw	128
  1014     073E  022A               	subwf	??_main,w
  1015     073F  1D03               	skipz
  1016     0740  2F43               	goto	u675
  1017     0741  0845               	movf	main@intvl,w
  1018     0742  0247               	subwf	main@j,w
  1019     0743                     u675:
  1020     0743  1C03               	skipc
  1021     0744  2F46               	goto	u671
  1022     0745  2F47               	goto	u670
  1023     0746                     u671:
  1024     0746  2F28               	goto	l1299
  1025     0747                     u670:
  1026     0747                     l60:
  1027                           
  1028                           ;main.c: 123: };main.c: 124: RB4 = 0;
  1029     0747  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0748  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0749  1206               	bcf	6,4	;volatile
  1032                           
  1033                           ;main.c: 125: RB5 = 1;
  1034     074A  1686               	bsf	6,5	;volatile
  1035                           
  1036                           ;main.c: 126: RB6 = 0;
  1037     074B  1306               	bcf	6,6	;volatile
  1038                           
  1039                           ;main.c: 127: RB7 = 0;
  1040     074C  1386               	bcf	6,7	;volatile
  1041     074D                     l1301:
  1042                           
  1043                           ;main.c: 128: for(j = 0 ; j < intvl ; j++){
  1044     074D  01C7               	clrf	main@j
  1045     074E  01C8               	clrf	main@j+1
  1046     074F  2F61               	goto	l61
  1047     0750                     l1303:
  1048                           
  1049                           ;main.c: 129: _delay((unsigned long)((1)*(4000000/4000.0)));
  1050     0750  30C7               	movlw	199
  1051     0751  1283               	bcf	3,5	;RP0=0, select bank0
  1052     0752  1303               	bcf	3,6	;RP1=0, select bank0
  1053     0753  00AA               	movwf	??_main
  1054     0754                     u777:
  1055     0754  2F55               	nop2
  1056     0755  0BAA               	decfsz	??_main,f
  1057     0756  2F54               	goto	u777
  1058     0757  2F58               	nop2
  1059     0758  0000               	nop
  1060     0759  3001               	movlw	1
  1061     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1062     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1063     075C  07C7               	addwf	main@j,f
  1064     075D  1803               	skipnc
  1065     075E  0AC8               	incf	main@j+1,f
  1066     075F  3000               	movlw	0
  1067     0760  07C8               	addwf	main@j+1,f
  1068     0761                     l61:
  1069     0761  0848               	movf	main@j+1,w
  1070     0762  3A80               	xorlw	128
  1071     0763  00AA               	movwf	??_main
  1072     0764  0846               	movf	main@intvl+1,w
  1073     0765  3A80               	xorlw	128
  1074     0766  022A               	subwf	??_main,w
  1075     0767  1D03               	skipz
  1076     0768  2F6B               	goto	u685
  1077     0769  0845               	movf	main@intvl,w
  1078     076A  0247               	subwf	main@j,w
  1079     076B                     u685:
  1080     076B  1C03               	skipc
  1081     076C  2F6E               	goto	u681
  1082     076D  2F6F               	goto	u680
  1083     076E                     u681:
  1084     076E  2F50               	goto	l1303
  1085     076F                     u680:
  1086     076F                     l63:
  1087                           
  1088                           ;main.c: 130: };main.c: 131: RB4 = 1;
  1089     076F  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0770  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0771  1606               	bsf	6,4	;volatile
  1092                           
  1093                           ;main.c: 132: RB5 = 0;
  1094     0772  1286               	bcf	6,5	;volatile
  1095                           
  1096                           ;main.c: 133: RB6 = 0;
  1097     0773  1306               	bcf	6,6	;volatile
  1098                           
  1099                           ;main.c: 134: RB7 = 0;
  1100     0774  1386               	bcf	6,7	;volatile
  1101     0775                     l1305:
  1102                           
  1103                           ;main.c: 135: for(j = 0 ; j < intvl ; j++){
  1104     0775  01C7               	clrf	main@j
  1105     0776  01C8               	clrf	main@j+1
  1106     0777  2F89               	goto	l64
  1107     0778                     l1307:
  1108                           
  1109                           ;main.c: 136: _delay((unsigned long)((1)*(4000000/4000.0)));
  1110     0778  30C7               	movlw	199
  1111     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1112     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1113     077B  00AA               	movwf	??_main
  1114     077C                     u787:
  1115     077C  2F7D               	nop2
  1116     077D  0BAA               	decfsz	??_main,f
  1117     077E  2F7C               	goto	u787
  1118     077F  2F80               	nop2
  1119     0780  0000               	nop
  1120     0781  3001               	movlw	1
  1121     0782  1283               	bcf	3,5	;RP0=0, select bank0
  1122     0783  1303               	bcf	3,6	;RP1=0, select bank0
  1123     0784  07C7               	addwf	main@j,f
  1124     0785  1803               	skipnc
  1125     0786  0AC8               	incf	main@j+1,f
  1126     0787  3000               	movlw	0
  1127     0788  07C8               	addwf	main@j+1,f
  1128     0789                     l64:
  1129     0789  0848               	movf	main@j+1,w
  1130     078A  3A80               	xorlw	128
  1131     078B  00AA               	movwf	??_main
  1132     078C  0846               	movf	main@intvl+1,w
  1133     078D  3A80               	xorlw	128
  1134     078E  022A               	subwf	??_main,w
  1135     078F  1D03               	skipz
  1136     0790  2F93               	goto	u695
  1137     0791  0845               	movf	main@intvl,w
  1138     0792  0247               	subwf	main@j,w
  1139     0793                     u695:
  1140     0793  1C03               	skipc
  1141     0794  2F96               	goto	u691
  1142     0795  2F97               	goto	u690
  1143     0796                     u691:
  1144     0796  2F78               	goto	l1307
  1145     0797                     u690:
  1146     0797                     l1309:
  1147     0797  3001               	movlw	1
  1148     0798  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0799  1303               	bcf	3,6	;RP1=0, select bank0
  1150     079A  07C3               	addwf	main@k,f
  1151     079B  1803               	skipnc
  1152     079C  0AC4               	incf	main@k+1,f
  1153     079D  3000               	movlw	0
  1154     079E  07C4               	addwf	main@k+1,f
  1155     079F                     l53:
  1156     079F  0844               	movf	main@k+1,w
  1157     07A0  3A80               	xorlw	128
  1158     07A1  00AA               	movwf	??_main
  1159     07A2  0842               	movf	main@cnt+1,w
  1160     07A3  3A80               	xorlw	128
  1161     07A4  022A               	subwf	??_main,w
  1162     07A5  1D03               	skipz
  1163     07A6  2FA9               	goto	u705
  1164     07A7  0841               	movf	main@cnt,w
  1165     07A8  0243               	subwf	main@k,w
  1166     07A9                     u705:
  1167     07A9  1C03               	skipc
  1168     07AA  2FAC               	goto	u701
  1169     07AB  2FAD               	goto	u700
  1170     07AC                     u701:
  1171     07AC  2EF7               	goto	l54
  1172     07AD                     u700:
  1173     07AD                     l1311:
  1174                           
  1175                           ;main.c: 137: };main.c: 138: };main.c: 139: puts("MOTOR = B  OK");
  1176     07AD  302B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1177     07AE  118A  244D  118A   	fcall	_puts
  1178                           
  1179                           ;main.c: 140: printf("MOTOR = B  OK\r\n");
  1180     07B1  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1181     07B2  118A  2550  118A   	fcall	_printf
  1182                           
  1183                           ;main.c: 141: break;
  1184     07B5  2FF0               	goto	l1329
  1185     07B6                     l1313:
  1186     07B6  3001               	movlw	1
  1187     07B7  00C5               	movwf	main@intvl
  1188     07B8  3000               	movlw	0
  1189     07B9  00C6               	movwf	main@intvl+1
  1190                           
  1191                           ;main.c: 144: break;
  1192     07BA  2FF0               	goto	l1329
  1193     07BB                     l1315:
  1194     07BB  3002               	movlw	2
  1195     07BC  00C5               	movwf	main@intvl
  1196     07BD  3000               	movlw	0
  1197     07BE  00C6               	movwf	main@intvl+1
  1198                           
  1199                           ;main.c: 146: break;
  1200     07BF  2FF0               	goto	l1329
  1201     07C0                     l1317:
  1202     07C0  3005               	movlw	5
  1203     07C1  00C5               	movwf	main@intvl
  1204     07C2  3000               	movlw	0
  1205     07C3  00C6               	movwf	main@intvl+1
  1206                           
  1207                           ;main.c: 148: break;
  1208     07C4  2FF0               	goto	l1329
  1209     07C5                     l1319:
  1210     07C5  300A               	movlw	10
  1211     07C6  00C5               	movwf	main@intvl
  1212     07C7  3000               	movlw	0
  1213     07C8  00C6               	movwf	main@intvl+1
  1214                           
  1215                           ;main.c: 150: break;
  1216     07C9  2FF0               	goto	l1329
  1217     07CA                     l1321:
  1218     07CA  3014               	movlw	20
  1219     07CB  00C5               	movwf	main@intvl
  1220     07CC  3000               	movlw	0
  1221     07CD  00C6               	movwf	main@intvl+1
  1222                           
  1223                           ;main.c: 152: break;
  1224     07CE  2FF0               	goto	l1329
  1225     07CF                     l1323:
  1226     07CF  3032               	movlw	50
  1227     07D0  00C5               	movwf	main@intvl
  1228     07D1  3000               	movlw	0
  1229     07D2  00C6               	movwf	main@intvl+1
  1230                           
  1231                           ;main.c: 154: break;
  1232     07D3  2FF0               	goto	l1329
  1233     07D4                     l1327:
  1234     07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1235     07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1236     07D6  082B               	movf	main@tmp,w
  1237                           
  1238                           ; Switch size 1, requested type "simple"
  1239                           ; Number of cases is 8, Range of values is 98 to 121
  1240                           ; switch strategies available:
  1241                           ; Name         Instructions Cycles
  1242                           ; simple_byte           25    13 (average)
  1243                           ; direct_byte           58    10 (fixed)
  1244                           ; jumptable            263     9 (fixed)
  1245                           ;	Chosen strategy is simple_byte
  1246     07D7  3A62               	xorlw	98	; case 98
  1247     07D8  1903               	skipnz
  1248     07D9  2EF0               	goto	l1289
  1249     07DA  3A04               	xorlw	4	; case 102
  1250     07DB  1903               	skipnz
  1251     07DC  2E2A               	goto	l1265
  1252     07DD  3A0F               	xorlw	15	; case 105
  1253     07DE  1903               	skipnz
  1254     07DF  2FC0               	goto	l1317
  1255     07E0  3A06               	xorlw	6	; case 111
  1256     07E1  1903               	skipnz
  1257     07E2  2FBB               	goto	l1315
  1258     07E3  3A1F               	xorlw	31	; case 112
  1259     07E4  1903               	skipnz
  1260     07E5  2FB6               	goto	l1313
  1261     07E6  3A04               	xorlw	4	; case 116
  1262     07E7  1903               	skipnz
  1263     07E8  2FCF               	goto	l1323
  1264     07E9  3A01               	xorlw	1	; case 117
  1265     07EA  1903               	skipnz
  1266     07EB  2FC5               	goto	l1319
  1267     07EC  3A0C               	xorlw	12	; case 121
  1268     07ED  1903               	skipnz
  1269     07EE  2FCA               	goto	l1321
  1270     07EF  2FF0               	goto	l1329
  1271     07F0                     l1329:
  1272                           
  1273                           ;main.c: 159: printf("%d\r\n", dist);
  1274     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  1275     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  1276     07F2  0840               	movf	main@dist+1,w
  1277     07F3  00FD               	movwf	?_printf+1
  1278     07F4  083F               	movf	main@dist,w
  1279     07F5  00FC               	movwf	?_printf
  1280     07F6  3047               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1281     07F7  118A  2550  118A   	fcall	_printf
  1282     07FA  2E1D               	goto	l1259
  1283     07FB  118A  2800         	ljmp	start
  1284     07FD                     __end_of_main:
  1285                           
  1286                           	psect	text1
  1287     044D                     __ptext1:	
  1288 ;; *************** function _puts *****************
  1289 ;; Defined at:
  1290 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  s               1    wreg     PTR const unsigned char 
  1293 ;;		 -> STR_5(14), STR_3(14), STR_1(3), 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  s               1    2[COMMON] PTR const unsigned char 
  1296 ;;		 -> STR_5(14), STR_3(14), STR_1(3), 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2   14[None  ] int 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1306 ;;      Params:         0       0       0       0
  1307 ;;      Locals:         1       0       0       0
  1308 ;;      Temps:          0       0       0       0
  1309 ;;      Totals:         1       0       0       0
  1310 ;;Total ram usage:        1 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 2
  1313 ;; This function calls:
  1314 ;;		_cputs
  1315 ;;		_putch
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321     044D                     _puts:	
  1322                           ;psect for function _puts
  1323                           
  1324                           
  1325                           ;incstack = 0
  1326                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1327                           ;puts@s stored from wreg
  1328     044D  00F2               	movwf	puts@s
  1329     044E                     l1171:
  1330     044E  0872               	movf	puts@s,w
  1331     044F  118A  2462  118A   	fcall	_cputs
  1332     0452                     l1173:
  1333     0452  300A               	movlw	10
  1334     0453  118A  2439  118A   	fcall	_putch
  1335     0456                     l705:
  1336     0456  0008               	return
  1337     0457                     __end_of_puts:
  1338                           
  1339                           	psect	text2
  1340     0462                     __ptext2:	
  1341 ;; *************** function _cputs *****************
  1342 ;; Defined at:
  1343 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  s               1    wreg     PTR const unsigned char 
  1346 ;;		 -> STR_5(14), STR_3(14), STR_1(3), 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  s               1    1[COMMON] PTR const unsigned char 
  1349 ;;		 -> STR_5(14), STR_3(14), STR_1(3), 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1359 ;;      Params:         0       0       0       0
  1360 ;;      Locals:         1       0       0       0
  1361 ;;      Temps:          0       0       0       0
  1362 ;;      Totals:         1       0       0       0
  1363 ;;Total ram usage:        1 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 1
  1366 ;; This function calls:
  1367 ;;		_putch
  1368 ;; This function is called by:
  1369 ;;		_puts
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373     0462                     _cputs:	
  1374                           ;psect for function _cputs
  1375                           
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1379                           ;cputs@s stored from wreg
  1380     0462  00F1               	movwf	cputs@s
  1381     0463                     l1161:
  1382     0463  2C70               	goto	l1167
  1383     0464                     l1163:
  1384     0464  0871               	movf	cputs@s,w
  1385     0465  0084               	movwf	4
  1386     0466  118A  2002  118A   	fcall	stringdir
  1387     0469  118A  2439  118A   	fcall	_putch
  1388     046C                     l1165:
  1389     046C  3001               	movlw	1
  1390     046D  00FF               	movwf	btemp+1
  1391     046E  087F               	movf	btemp+1,w
  1392     046F  07F1               	addwf	cputs@s,f
  1393     0470                     l1167:
  1394     0470  0871               	movf	cputs@s,w
  1395     0471  0084               	movwf	4
  1396     0472  118A  2002  118A   	fcall	stringdir
  1397     0475  3A00               	xorlw	0
  1398     0476  1D03               	skipz
  1399     0477  2C79               	goto	u531
  1400     0478  2C7A               	goto	u530
  1401     0479                     u531:
  1402     0479  2C64               	goto	l1163
  1403     047A                     u530:
  1404     047A                     l713:
  1405     047A  0008               	return
  1406     047B                     __end_of_cputs:
  1407                           
  1408                           	psect	text3
  1409     0550                     __ptext3:	
  1410 ;; *************** function _printf *****************
  1411 ;; Defined at:
  1412 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  f               1    wreg     PTR const unsigned char 
  1415 ;;		 -> STR_7(5), STR_6(16), STR_4(16), STR_2(5), 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1418 ;;		 -> STR_7(5), STR_6(16), STR_4(16), STR_2(5), 
  1419 ;;  tmpval          4    0        struct .
  1420 ;;  val             2    7[BANK0 ] unsigned int 
  1421 ;;  cp              2    0        PTR const unsigned char 
  1422 ;;  len             2    0        unsigned int 
  1423 ;;  c               1    9[BANK0 ] unsigned char 
  1424 ;;  prec            1    5[BANK0 ] char 
  1425 ;;  flag            1    4[BANK0 ] unsigned char 
  1426 ;;  ap              1    3[BANK0 ] PTR void [1]
  1427 ;;		 -> ?_printf(2), 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2   12[COMMON] int 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1437 ;;      Params:         2       0       0       0
  1438 ;;      Locals:         0       7       0       0
  1439 ;;      Temps:          0       3       0       0
  1440 ;;      Totals:         2      10       0       0
  1441 ;;Total ram usage:       12 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 1
  1444 ;; This function calls:
  1445 ;;		___lwdiv
  1446 ;;		___lwmod
  1447 ;;		_putch
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453     0550                     _printf:	
  1454                           ;psect for function _printf
  1455                           
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1459                           ;printf@f stored from wreg
  1460     0550  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0551  1303               	bcf	3,6	;RP1=0, select bank0
  1462     0552  00A6               	movwf	printf@f
  1463     0553                     l1175:
  1464                           
  1465                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1466     0553  307C               	movlw	(low (?_printf| 0))& (0+255)
  1467     0554  00A3               	movwf	printf@ap
  1468                           
  1469                           ;doprnt.c: 553: while((c = *f++)) {
  1470     0555  2DF3               	goto	l1223
  1471     0556                     l1177:
  1472                           
  1473                           ;doprnt.c: 555: if(c != '%')
  1474     0556  3025               	movlw	37
  1475     0557  0629               	xorwf	printf@c,w
  1476     0558  1903               	btfsc	3,2
  1477     0559  2D5B               	goto	u541
  1478     055A  2D5C               	goto	u540
  1479     055B                     u541:
  1480     055B  2D61               	goto	l1181
  1481     055C                     u540:
  1482     055C                     l1179:
  1483                           
  1484                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  1485     055C  0829               	movf	printf@c,w
  1486     055D  118A  2439  118A   	fcall	_putch
  1487                           
  1488                           ;doprnt.c: 559: continue;
  1489     0560  2DF3               	goto	l1223
  1490     0561                     l1181:
  1491                           
  1492                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1493     0561  01A4               	clrf	printf@flag
  1494     0562                     l1185:	
  1495                           ;doprnt.c: 661: switch(c = *f++) {
  1496                           
  1497     0562  3001               	movlw	1
  1498     0563  07A6               	addwf	printf@f,f
  1499     0564  30FF               	movlw	-1
  1500     0565  0726               	addwf	printf@f,w
  1501     0566  0084               	movwf	4
  1502     0567  118A  2002  118A   	fcall	stringdir
  1503     056A  00A9               	movwf	printf@c
  1504                           
  1505                           ; Switch size 1, requested type "simple"
  1506                           ; Number of cases is 3, Range of values is 0 to 105
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte           10     6 (average)
  1510                           ; direct_byte          219     7 (fixed)
  1511                           ; jumptable            260     6 (fixed)
  1512                           ;	Chosen strategy is simple_byte
  1513     056B  3A00               	xorlw	0	; case 0
  1514     056C  1903               	skipnz
  1515     056D  2E03               	goto	l221
  1516     056E  3A64               	xorlw	100	; case 100
  1517     056F  1903               	skipnz
  1518     0570  2D75               	goto	l1187
  1519     0571  3A0D               	xorlw	13	; case 105
  1520     0572  1903               	skipnz
  1521     0573  2D75               	goto	l1187
  1522     0574  2DF3               	goto	l1223
  1523     0575                     l1187:
  1524                           
  1525                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  1526     0575  0823               	movf	printf@ap,w
  1527     0576  0084               	movwf	4
  1528     0577  0800               	movf	0,w
  1529     0578  00A7               	movwf	printf@val
  1530     0579  0A84               	incf	4,f
  1531     057A  0800               	movf	0,w
  1532     057B  00A8               	movwf	printf@val+1
  1533     057C                     l1189:
  1534     057C  3002               	movlw	2
  1535     057D  00FF               	movwf	btemp+1
  1536     057E  087F               	movf	btemp+1,w
  1537     057F  07A3               	addwf	printf@ap,f
  1538     0580                     l1191:
  1539                           
  1540                           ;doprnt.c: 1287: if((int)val < 0) {
  1541     0580  1FA8               	btfss	printf@val+1,7
  1542     0581  2D83               	goto	u551
  1543     0582  2D84               	goto	u550
  1544     0583                     u551:
  1545     0583  2D8D               	goto	l1197
  1546     0584                     u550:
  1547     0584                     l1193:
  1548                           
  1549                           ;doprnt.c: 1288: flag |= 0x03;
  1550     0584  3003               	movlw	3
  1551     0585  00FF               	movwf	btemp+1
  1552     0586  087F               	movf	btemp+1,w
  1553     0587  04A4               	iorwf	printf@flag,f
  1554     0588                     l1195:
  1555                           
  1556                           ;doprnt.c: 1289: val = -val;
  1557     0588  09A7               	comf	printf@val,f
  1558     0589  09A8               	comf	printf@val+1,f
  1559     058A  0AA7               	incf	printf@val,f
  1560     058B  1903               	skipnz
  1561     058C  0AA8               	incf	printf@val+1,f
  1562     058D                     l1197:
  1563                           
  1564                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  1565     058D  01A9               	clrf	printf@c
  1566     058E  0AA9               	incf	printf@c,f
  1567     058F                     l1203:
  1568                           
  1569                           ;doprnt.c: 1332: if(val < dpowers[c])
  1570     058F  0829               	movf	printf@c,w
  1571     0590  00A0               	movwf	??_printf
  1572     0591  0720               	addwf	??_printf,w
  1573     0592  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1574     0593  0084               	movwf	4
  1575     0594  118A  2002  118A   	fcall	stringdir
  1576     0597  00A1               	movwf	??_printf+1
  1577     0598  118A  2002  118A   	fcall	stringdir
  1578     059B  00A2               	movwf	??_printf+2
  1579     059C  0822               	movf	??_printf+2,w
  1580     059D  0228               	subwf	printf@val+1,w
  1581     059E  1D03               	skipz
  1582     059F  2DA2               	goto	u565
  1583     05A0  0821               	movf	??_printf+1,w
  1584     05A1  0227               	subwf	printf@val,w
  1585     05A2                     u565:
  1586     05A2  1803               	skipnc
  1587     05A3  2DA5               	goto	u561
  1588     05A4  2DA6               	goto	u560
  1589     05A5                     u561:
  1590     05A5  2DA7               	goto	l1207
  1591     05A6                     u560:
  1592     05A6  2DB1               	goto	l1211
  1593     05A7                     l1207:
  1594     05A7  3001               	movlw	1
  1595     05A8  00FF               	movwf	btemp+1
  1596     05A9  087F               	movf	btemp+1,w
  1597     05AA  07A9               	addwf	printf@c,f
  1598     05AB                     l1209:
  1599     05AB  3005               	movlw	5
  1600     05AC  0629               	xorwf	printf@c,w
  1601     05AD  1D03               	btfss	3,2
  1602     05AE  2DB0               	goto	u571
  1603     05AF  2DB1               	goto	u570
  1604     05B0                     u571:
  1605     05B0  2D8F               	goto	l1203
  1606     05B1                     u570:
  1607     05B1                     l1211:
  1608                           
  1609                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  1610     05B1  0824               	movf	printf@flag,w
  1611     05B2  3903               	andlw	3
  1612     05B3  1903               	btfsc	3,2
  1613     05B4  2DB6               	goto	u581
  1614     05B5  2DB7               	goto	u580
  1615     05B6                     u581:
  1616     05B6  2DBB               	goto	l1215
  1617     05B7                     u580:
  1618     05B7                     l1213:
  1619                           
  1620                           ;doprnt.c: 1465: (putch('-') );
  1621     05B7  302D               	movlw	45
  1622     05B8  118A  2439  118A   	fcall	_putch
  1623     05BB                     l1215:
  1624                           
  1625                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1626     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1627     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1628     05BD  0829               	movf	printf@c,w
  1629     05BE  00A5               	movwf	printf@prec
  1630                           
  1631                           ;doprnt.c: 1500: while(prec--) {
  1632     05BF  2DE8               	goto	l1221
  1633     05C0                     l1217:
  1634                           
  1635                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1636     05C0  300A               	movlw	10
  1637     05C1  00F7               	movwf	___lwmod@divisor
  1638     05C2  3000               	movlw	0
  1639     05C3  00F8               	movwf	___lwmod@divisor+1
  1640     05C4  0825               	movf	printf@prec,w
  1641     05C5  00A0               	movwf	??_printf
  1642     05C6  0720               	addwf	??_printf,w
  1643     05C7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1644     05C8  0084               	movwf	4
  1645     05C9  118A  2002  118A   	fcall	stringdir
  1646     05CC  00F0               	movwf	___lwdiv@divisor
  1647     05CD  118A  2002  118A   	fcall	stringdir
  1648     05D0  00F1               	movwf	___lwdiv@divisor+1
  1649     05D1  0828               	movf	printf@val+1,w
  1650     05D2  00F3               	movwf	___lwdiv@dividend+1
  1651     05D3  0827               	movf	printf@val,w
  1652     05D4  00F2               	movwf	___lwdiv@dividend
  1653     05D5  118A  24B5  118A   	fcall	___lwdiv
  1654     05D8  0871               	movf	?___lwdiv+1,w
  1655     05D9  00FA               	movwf	___lwmod@dividend+1
  1656     05DA  0870               	movf	?___lwdiv,w
  1657     05DB  00F9               	movwf	___lwmod@dividend
  1658     05DC  118A  247B  118A   	fcall	___lwmod
  1659     05DF  0877               	movf	?___lwmod,w
  1660     05E0  3E30               	addlw	48
  1661     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1662     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1663     05E3  00A9               	movwf	printf@c
  1664     05E4                     l1219:
  1665                           
  1666                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  1667     05E4  0829               	movf	printf@c,w
  1668     05E5  118A  2439  118A   	fcall	_putch
  1669     05E8                     l1221:
  1670     05E8  30FF               	movlw	255
  1671     05E9  00FF               	movwf	btemp+1
  1672     05EA  087F               	movf	btemp+1,w
  1673     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1674     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1675     05ED  07A5               	addwf	printf@prec,f
  1676     05EE  0A25               	incf	printf@prec,w
  1677     05EF  1D03               	btfss	3,2
  1678     05F0  2DF2               	goto	u591
  1679     05F1  2DF3               	goto	u590
  1680     05F2                     u591:
  1681     05F2  2DC0               	goto	l1217
  1682     05F3                     u590:
  1683     05F3                     l1223:
  1684     05F3  3001               	movlw	1
  1685     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1686     05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1687     05F6  07A6               	addwf	printf@f,f
  1688     05F7  30FF               	movlw	-1
  1689     05F8  0726               	addwf	printf@f,w
  1690     05F9  0084               	movwf	4
  1691     05FA  118A  2002  118A   	fcall	stringdir
  1692     05FD  00A9               	movwf	printf@c
  1693     05FE  0829               	movf	printf@c,w
  1694     05FF  1D03               	btfss	3,2
  1695     0600  2E02               	goto	u601
  1696     0601  2E03               	goto	u600
  1697     0602                     u601:
  1698     0602  2D56               	goto	l1177
  1699     0603                     u600:
  1700     0603                     l221:
  1701     0603  0008               	return
  1702     0604                     __end_of_printf:
  1703                           
  1704                           	psect	text4
  1705     047B                     __ptext4:	
  1706 ;; *************** function ___lwmod *****************
  1707 ;; Defined at:
  1708 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  divisor         2    7[COMMON] unsigned int 
  1711 ;;  dividend        2    9[COMMON] unsigned int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  counter         1   11[COMMON] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  2    7[COMMON] unsigned int 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, btemp+1
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1723 ;;      Params:         4       0       0       0
  1724 ;;      Locals:         1       0       0       0
  1725 ;;      Temps:          0       0       0       0
  1726 ;;      Totals:         5       0       0       0
  1727 ;;Total ram usage:        5 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_printf
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736     047B                     ___lwmod:	
  1737                           ;psect for function ___lwmod
  1738                           
  1739     047B                     l1105:	
  1740                           ;incstack = 0
  1741                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1742                           
  1743     047B  0877               	movf	___lwmod@divisor,w
  1744     047C  0478               	iorwf	___lwmod@divisor+1,w
  1745     047D  1903               	btfsc	3,2
  1746     047E  2C80               	goto	u451
  1747     047F  2C81               	goto	u450
  1748     0480                     u451:
  1749     0480  2CB0               	goto	l1123
  1750     0481                     u450:
  1751     0481                     l1107:
  1752     0481  01FB               	clrf	___lwmod@counter
  1753     0482  0AFB               	incf	___lwmod@counter,f
  1754     0483  2C8F               	goto	l1113
  1755     0484                     l1109:
  1756     0484  3001               	movlw	1
  1757     0485                     u465:
  1758     0485  1003               	clrc
  1759     0486  0DF7               	rlf	___lwmod@divisor,f
  1760     0487  0DF8               	rlf	___lwmod@divisor+1,f
  1761     0488  3EFF               	addlw	-1
  1762     0489  1D03               	skipz
  1763     048A  2C85               	goto	u465
  1764     048B                     l1111:
  1765     048B  3001               	movlw	1
  1766     048C  00FF               	movwf	btemp+1
  1767     048D  087F               	movf	btemp+1,w
  1768     048E  07FB               	addwf	___lwmod@counter,f
  1769     048F                     l1113:
  1770     048F  1FF8               	btfss	___lwmod@divisor+1,7
  1771     0490  2C92               	goto	u471
  1772     0491  2C93               	goto	u470
  1773     0492                     u471:
  1774     0492  2C84               	goto	l1109
  1775     0493                     u470:
  1776     0493                     l1115:
  1777     0493  0878               	movf	___lwmod@divisor+1,w
  1778     0494  027A               	subwf	___lwmod@dividend+1,w
  1779     0495  1D03               	skipz
  1780     0496  2C99               	goto	u485
  1781     0497  0877               	movf	___lwmod@divisor,w
  1782     0498  0279               	subwf	___lwmod@dividend,w
  1783     0499                     u485:
  1784     0499  1C03               	skipc
  1785     049A  2C9C               	goto	u481
  1786     049B  2C9D               	goto	u480
  1787     049C                     u481:
  1788     049C  2CA3               	goto	l1119
  1789     049D                     u480:
  1790     049D                     l1117:
  1791     049D  0877               	movf	___lwmod@divisor,w
  1792     049E  02F9               	subwf	___lwmod@dividend,f
  1793     049F  0878               	movf	___lwmod@divisor+1,w
  1794     04A0  1C03               	skipc
  1795     04A1  03FA               	decf	___lwmod@dividend+1,f
  1796     04A2  02FA               	subwf	___lwmod@dividend+1,f
  1797     04A3                     l1119:
  1798     04A3  3001               	movlw	1
  1799     04A4                     u495:
  1800     04A4  1003               	clrc
  1801     04A5  0CF8               	rrf	___lwmod@divisor+1,f
  1802     04A6  0CF7               	rrf	___lwmod@divisor,f
  1803     04A7  3EFF               	addlw	-1
  1804     04A8  1D03               	skipz
  1805     04A9  2CA4               	goto	u495
  1806     04AA                     l1121:
  1807     04AA  3001               	movlw	1
  1808     04AB  02FB               	subwf	___lwmod@counter,f
  1809     04AC  1D03               	btfss	3,2
  1810     04AD  2CAF               	goto	u501
  1811     04AE  2CB0               	goto	u500
  1812     04AF                     u501:
  1813     04AF  2C93               	goto	l1115
  1814     04B0                     u500:
  1815     04B0                     l1123:
  1816     04B0  087A               	movf	___lwmod@dividend+1,w
  1817     04B1  00F8               	movwf	?___lwmod+1
  1818     04B2  0879               	movf	___lwmod@dividend,w
  1819     04B3  00F7               	movwf	?___lwmod
  1820     04B4                     l507:
  1821     04B4  0008               	return
  1822     04B5                     __end_of___lwmod:
  1823                           
  1824                           	psect	text5
  1825     04B5                     __ptext5:	
  1826 ;; *************** function ___lwdiv *****************
  1827 ;; Defined at:
  1828 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  divisor         2    0[COMMON] unsigned int 
  1831 ;;  dividend        2    2[COMMON] unsigned int 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  quotient        2    4[COMMON] unsigned int 
  1834 ;;  counter         1    6[COMMON] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2    0[COMMON] unsigned int 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, btemp+1
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1844 ;;      Params:         4       0       0       0
  1845 ;;      Locals:         3       0       0       0
  1846 ;;      Temps:          0       0       0       0
  1847 ;;      Totals:         7       0       0       0
  1848 ;;Total ram usage:        7 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_printf
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857     04B5                     ___lwdiv:	
  1858                           ;psect for function ___lwdiv
  1859                           
  1860     04B5                     l1079:	
  1861                           ;incstack = 0
  1862                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1863                           
  1864     04B5  01F4               	clrf	___lwdiv@quotient
  1865     04B6  01F5               	clrf	___lwdiv@quotient+1
  1866     04B7                     l1081:
  1867     04B7  0870               	movf	___lwdiv@divisor,w
  1868     04B8  0471               	iorwf	___lwdiv@divisor+1,w
  1869     04B9  1903               	btfsc	3,2
  1870     04BA  2CBC               	goto	u381
  1871     04BB  2CBD               	goto	u380
  1872     04BC                     u381:
  1873     04BC  2CF4               	goto	l1101
  1874     04BD                     u380:
  1875     04BD                     l1083:
  1876     04BD  01F6               	clrf	___lwdiv@counter
  1877     04BE  0AF6               	incf	___lwdiv@counter,f
  1878     04BF  2CCB               	goto	l1089
  1879     04C0                     l1085:
  1880     04C0  3001               	movlw	1
  1881     04C1                     u395:
  1882     04C1  1003               	clrc
  1883     04C2  0DF0               	rlf	___lwdiv@divisor,f
  1884     04C3  0DF1               	rlf	___lwdiv@divisor+1,f
  1885     04C4  3EFF               	addlw	-1
  1886     04C5  1D03               	skipz
  1887     04C6  2CC1               	goto	u395
  1888     04C7                     l1087:
  1889     04C7  3001               	movlw	1
  1890     04C8  00FF               	movwf	btemp+1
  1891     04C9  087F               	movf	btemp+1,w
  1892     04CA  07F6               	addwf	___lwdiv@counter,f
  1893     04CB                     l1089:
  1894     04CB  1FF1               	btfss	___lwdiv@divisor+1,7
  1895     04CC  2CCE               	goto	u401
  1896     04CD  2CCF               	goto	u400
  1897     04CE                     u401:
  1898     04CE  2CC0               	goto	l1085
  1899     04CF                     u400:
  1900     04CF                     l1091:
  1901     04CF  3001               	movlw	1
  1902     04D0                     u415:
  1903     04D0  1003               	clrc
  1904     04D1  0DF4               	rlf	___lwdiv@quotient,f
  1905     04D2  0DF5               	rlf	___lwdiv@quotient+1,f
  1906     04D3  3EFF               	addlw	-1
  1907     04D4  1D03               	skipz
  1908     04D5  2CD0               	goto	u415
  1909     04D6  0871               	movf	___lwdiv@divisor+1,w
  1910     04D7  0273               	subwf	___lwdiv@dividend+1,w
  1911     04D8  1D03               	skipz
  1912     04D9  2CDC               	goto	u425
  1913     04DA  0870               	movf	___lwdiv@divisor,w
  1914     04DB  0272               	subwf	___lwdiv@dividend,w
  1915     04DC                     u425:
  1916     04DC  1C03               	skipc
  1917     04DD  2CDF               	goto	u421
  1918     04DE  2CE0               	goto	u420
  1919     04DF                     u421:
  1920     04DF  2CE7               	goto	l1097
  1921     04E0                     u420:
  1922     04E0                     l1093:
  1923     04E0  0870               	movf	___lwdiv@divisor,w
  1924     04E1  02F2               	subwf	___lwdiv@dividend,f
  1925     04E2  0871               	movf	___lwdiv@divisor+1,w
  1926     04E3  1C03               	skipc
  1927     04E4  03F3               	decf	___lwdiv@dividend+1,f
  1928     04E5  02F3               	subwf	___lwdiv@dividend+1,f
  1929     04E6                     l1095:
  1930     04E6  1474               	bsf	___lwdiv@quotient,0
  1931     04E7                     l1097:
  1932     04E7  3001               	movlw	1
  1933     04E8                     u435:
  1934     04E8  1003               	clrc
  1935     04E9  0CF1               	rrf	___lwdiv@divisor+1,f
  1936     04EA  0CF0               	rrf	___lwdiv@divisor,f
  1937     04EB  3EFF               	addlw	-1
  1938     04EC  1D03               	skipz
  1939     04ED  2CE8               	goto	u435
  1940     04EE                     l1099:
  1941     04EE  3001               	movlw	1
  1942     04EF  02F6               	subwf	___lwdiv@counter,f
  1943     04F0  1D03               	btfss	3,2
  1944     04F1  2CF3               	goto	u441
  1945     04F2  2CF4               	goto	u440
  1946     04F3                     u441:
  1947     04F3  2CCF               	goto	l1091
  1948     04F4                     u440:
  1949     04F4                     l1101:
  1950     04F4  0875               	movf	___lwdiv@quotient+1,w
  1951     04F5  00F1               	movwf	?___lwdiv+1
  1952     04F6  0874               	movf	___lwdiv@quotient,w
  1953     04F7  00F0               	movwf	?___lwdiv
  1954     04F8                     l497:
  1955     04F8  0008               	return
  1956     04F9                     __end_of___lwdiv:
  1957                           
  1958                           	psect	text6
  1959     0457                     __ptext6:	
  1960 ;; *************** function _initUART *****************
  1961 ;; Defined at:
  1962 ;;		line 6 in file "uart.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1976 ;;      Params:         0       0       0       0
  1977 ;;      Locals:         0       0       0       0
  1978 ;;      Temps:          0       0       0       0
  1979 ;;      Totals:         0       0       0       0
  1980 ;;Total ram usage:        0 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989     0457                     _initUART:	
  1990                           ;psect for function _initUART
  1991                           
  1992     0457                     l1169:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _initUART: [wreg]
  1995                           
  1996                           
  1997                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  1998     0457  3019               	movlw	25
  1999     0458  1683               	bsf	3,5	;RP0=1, select bank1
  2000     0459  1303               	bcf	3,6	;RP1=0, select bank1
  2001     045A  0099               	movwf	25	;volatile
  2002                           
  2003                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  2004     045B  3024               	movlw	36
  2005     045C  0098               	movwf	24	;volatile
  2006                           
  2007                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  2008     045D  3090               	movlw	144
  2009     045E  1283               	bcf	3,5	;RP0=0, select bank0
  2010     045F  1303               	bcf	3,6	;RP1=0, select bank0
  2011     0460  0098               	movwf	24	;volatile
  2012     0461                     l94:
  2013     0461  0008               	return
  2014     0462                     __end_of_initUART:
  2015                           
  2016                           	psect	text7
  2017     042B                     __ptext7:	
  2018 ;; *************** function _gets *****************
  2019 ;; Defined at:
  2020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  s               1    wreg     PTR unsigned char 
  2023 ;;		 -> main@tmp(20), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  s               1    8[COMMON] PTR unsigned char 
  2026 ;;		 -> main@tmp(20), 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      PTR unsigned char 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2036 ;;      Params:         0       0       0       0
  2037 ;;      Locals:         1       0       0       0
  2038 ;;      Temps:          0       0       0       0
  2039 ;;      Totals:         1       0       0       0
  2040 ;;Total ram usage:        1 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 3
  2043 ;; This function calls:
  2044 ;;		_cgets
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050     042B                     _gets:	
  2051                           ;psect for function _gets
  2052                           
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2056                           ;gets@s stored from wreg
  2057     042B  00F8               	movwf	gets@s
  2058     042C                     l1225:
  2059                           
  2060                           ;	Return value of _gets is never used
  2061     042C  0878               	movf	gets@s,w
  2062     042D  118A  24F9  118A   	fcall	_cgets
  2063     0430                     l678:
  2064     0430  0008               	return
  2065     0431                     __end_of_gets:
  2066                           
  2067                           	psect	text8
  2068     04F9                     __ptext8:	
  2069 ;; *************** function _cgets *****************
  2070 ;; Defined at:
  2071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  s               1    wreg     PTR unsigned char 
  2074 ;;		 -> main@tmp(20), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  s               1    6[COMMON] PTR unsigned char 
  2077 ;;		 -> main@tmp(20), 
  2078 ;;  c               2    4[COMMON] int 
  2079 ;;  s1              1    7[COMMON] PTR unsigned char 
  2080 ;;		 -> main@tmp(20), 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      PTR unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2090 ;;      Params:         0       0       0       0
  2091 ;;      Locals:         4       0       0       0
  2092 ;;      Temps:          2       0       0       0
  2093 ;;      Totals:         6       0       0       0
  2094 ;;Total ram usage:        6 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 2
  2097 ;; This function calls:
  2098 ;;		_getche
  2099 ;;		_putch
  2100 ;; This function is called by:
  2101 ;;		_gets
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105     04F9                     _cgets:	
  2106                           ;psect for function _cgets
  2107                           
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2111                           ;cgets@s stored from wreg
  2112     04F9  00F6               	movwf	cgets@s
  2113     04FA                     l1127:
  2114     04FA  0876               	movf	cgets@s,w
  2115     04FB  00F7               	movwf	cgets@s1
  2116     04FC  2D33               	goto	l1155
  2117     04FD                     l1129:
  2118     04FD  0876               	movf	cgets@s,w
  2119     04FE  0677               	xorwf	cgets@s1,w
  2120     04FF  1D03               	skipz
  2121     0500  2D02               	goto	u511
  2122     0501  2D03               	goto	u510
  2123     0502                     u511:
  2124     0502  2D04               	goto	l1133
  2125     0503                     u510:
  2126     0503  2D33               	goto	l1155
  2127     0504                     l1133:
  2128     0504  3020               	movlw	32
  2129     0505  118A  2439  118A   	fcall	_putch
  2130     0508  3008               	movlw	8
  2131     0509  118A  2439  118A   	fcall	_putch
  2132     050C                     l1135:
  2133     050C  3001               	movlw	1
  2134     050D  02F7               	subwf	cgets@s1,f
  2135     050E  2D33               	goto	l1155
  2136     050F                     l1137:
  2137     050F  3008               	movlw	8
  2138     0510  118A  2439  118A   	fcall	_putch
  2139     0513  3020               	movlw	32
  2140     0514  118A  2439  118A   	fcall	_putch
  2141     0517  3008               	movlw	8
  2142     0518  118A  2439  118A   	fcall	_putch
  2143     051B                     l1139:
  2144     051B  3001               	movlw	1
  2145     051C  02F7               	subwf	cgets@s1,f
  2146     051D                     l1141:
  2147     051D  0877               	movf	cgets@s1,w
  2148     051E  0276               	subwf	cgets@s,w
  2149     051F  1C03               	skipc
  2150     0520  2D22               	goto	u521
  2151     0521  2D23               	goto	u520
  2152     0522                     u521:
  2153     0522  2D0F               	goto	l1137
  2154     0523                     u520:
  2155     0523  2D33               	goto	l1155
  2156     0524                     l1143:
  2157     0524  0877               	movf	cgets@s1,w
  2158     0525  0084               	movwf	4
  2159     0526  1383               	bcf	3,7	;select IRP bank0
  2160     0527  0180               	clrf	0
  2161     0528                     l1145:
  2162     0528  0876               	movf	cgets@s,w
  2163     0529  2D4F               	goto	l696
  2164     052A                     l1149:
  2165     052A  0877               	movf	cgets@s1,w
  2166     052B  0084               	movwf	4
  2167     052C  0874               	movf	cgets@c,w
  2168     052D  1383               	bcf	3,7	;select IRP bank0
  2169     052E  0080               	movwf	0
  2170     052F                     l1151:
  2171     052F  3001               	movlw	1
  2172     0530  00FF               	movwf	btemp+1
  2173     0531  087F               	movf	btemp+1,w
  2174     0532  07F7               	addwf	cgets@s1,f
  2175     0533                     l1155:
  2176     0533  118A  2443  118A   	fcall	_getche
  2177     0536  00F2               	movwf	??_cgets
  2178     0537  01F3               	clrf	??_cgets+1
  2179     0538  0872               	movf	??_cgets,w
  2180     0539  00F4               	movwf	cgets@c
  2181     053A  0873               	movf	??_cgets+1,w
  2182     053B  00F5               	movwf	cgets@c+1
  2183                           
  2184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 1, Range of values is 0 to 0
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            4     3 (average)
  2190                           ; direct_byte            9     7 (fixed)
  2191                           ; jumptable            260     6 (fixed)
  2192                           ;	Chosen strategy is simple_byte
  2193     053C  0875               	movf	cgets@c+1,w
  2194     053D  3A00               	xorlw	0	; case 0
  2195     053E  1903               	skipnz
  2196     053F  2D41               	goto	l1351
  2197     0540  2D2A               	goto	l1149
  2198     0541                     l1351:
  2199                           
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 4, Range of values is 8 to 21
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte           13     7 (average)
  2205                           ; direct_byte           38    10 (fixed)
  2206                           ; jumptable            263     9 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208     0541  0874               	movf	cgets@c,w
  2209     0542  3A08               	xorlw	8	; case 8
  2210     0543  1903               	skipnz
  2211     0544  2CFD               	goto	l1129
  2212     0545  3A02               	xorlw	2	; case 10
  2213     0546  1903               	skipnz
  2214     0547  2D24               	goto	l1143
  2215     0548  3A07               	xorlw	7	; case 13
  2216     0549  1903               	skipnz
  2217     054A  2D24               	goto	l1143
  2218     054B  3A18               	xorlw	24	; case 21
  2219     054C  1903               	skipnz
  2220     054D  2D1D               	goto	l1141
  2221     054E  2D2A               	goto	l1149
  2222     054F                     l696:
  2223     054F  0008               	return
  2224     0550                     __end_of_cgets:
  2225                           
  2226                           	psect	text9
  2227     0443                     __ptext9:	
  2228 ;; *************** function _getche *****************
  2229 ;; Defined at:
  2230 ;;		line 28 in file "uart.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  c               1    1[COMMON] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      unsigned char 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2244 ;;      Params:         0       0       0       0
  2245 ;;      Locals:         1       0       0       0
  2246 ;;      Temps:          0       0       0       0
  2247 ;;      Totals:         1       0       0       0
  2248 ;;Total ram usage:        1 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 1
  2251 ;; This function calls:
  2252 ;;		_getch
  2253 ;;		_putch
  2254 ;; This function is called by:
  2255 ;;		_cgets
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259     0443                     _getche:	
  2260                           ;psect for function _getche
  2261                           
  2262     0443                     l1071:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  2265                           
  2266                           
  2267                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  2268     0443  118A  2431  118A   	fcall	_getch
  2269     0446  00F1               	movwf	getche@c
  2270     0447                     l1073:
  2271                           
  2272                           ;uart.c: 33: putch(c);
  2273     0447  0871               	movf	getche@c,w
  2274     0448  118A  2439  118A   	fcall	_putch
  2275     044B                     l1075:
  2276                           
  2277                           ;uart.c: 35: return c;
  2278     044B  0871               	movf	getche@c,w
  2279     044C                     l109:
  2280     044C  0008               	return
  2281     044D                     __end_of_getche:
  2282                           
  2283                           	psect	text10
  2284     0439                     __ptext10:	
  2285 ;; *************** function _putch *****************
  2286 ;; Defined at:
  2287 ;;		line 13 in file "uart.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  byte            1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  byte            1    0[COMMON] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2301 ;;      Params:         0       0       0       0
  2302 ;;      Locals:         1       0       0       0
  2303 ;;      Temps:          0       0       0       0
  2304 ;;      Totals:         1       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_getche
  2311 ;;		_printf
  2312 ;;		_cgets
  2313 ;;		_puts
  2314 ;;		_cputs
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318     0439                     _putch:	
  2319                           ;psect for function _putch
  2320                           
  2321                           
  2322                           ;incstack = 0
  2323                           ; Regs used in _putch: [wreg]
  2324                           ;putch@byte stored from wreg
  2325     0439  00F0               	movwf	putch@byte
  2326     043A                     l1061:
  2327     043A                     l97:	
  2328                           ;uart.c: 15: while(!TXIF){
  2329                           
  2330     043A  1283               	bcf	3,5	;RP0=0, select bank0
  2331     043B  1303               	bcf	3,6	;RP1=0, select bank0
  2332     043C  1E0C               	btfss	12,4	;volatile
  2333     043D  2C3F               	goto	u361
  2334     043E  2C40               	goto	u360
  2335     043F                     u361:
  2336     043F  2C3A               	goto	l97
  2337     0440                     u360:
  2338     0440                     l1063:
  2339                           
  2340                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  2341     0440  0870               	movf	putch@byte,w
  2342     0441  0099               	movwf	25	;volatile
  2343     0442                     l100:
  2344     0442  0008               	return
  2345     0443                     __end_of_putch:
  2346                           
  2347                           	psect	text11
  2348     0431                     __ptext11:	
  2349 ;; *************** function _getch *****************
  2350 ;; Defined at:
  2351 ;;		line 20 in file "uart.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2365 ;;      Params:         0       0       0       0
  2366 ;;      Locals:         0       0       0       0
  2367 ;;      Temps:          0       0       0       0
  2368 ;;      Totals:         0       0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_getche
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378     0431                     _getch:	
  2379                           ;psect for function _getch
  2380                           
  2381     0431                     l1065:	
  2382                           ;incstack = 0
  2383                           ; Regs used in _getch: [wreg]
  2384                           
  2385     0431                     l103:	
  2386                           ;uart.c: 22: while(!RCIF){
  2387                           
  2388     0431  1283               	bcf	3,5	;RP0=0, select bank0
  2389     0432  1303               	bcf	3,6	;RP1=0, select bank0
  2390     0433  1E8C               	btfss	12,5	;volatile
  2391     0434  2C36               	goto	u371
  2392     0435  2C37               	goto	u370
  2393     0436                     u371:
  2394     0436  2C31               	goto	l103
  2395     0437                     u370:
  2396     0437                     l1067:
  2397                           
  2398                           ;uart.c: 23: };uart.c: 25: return RCREG;
  2399     0437  081A               	movf	26,w	;volatile
  2400     0438                     l106:
  2401     0438  0008               	return
  2402     0439                     __end_of_getch:
  2403     007E                     btemp	set	126	;btemp
  2404     007E                     wtemp0	set	126
  2405                           
  2406                           	psect	idloc
  2407                           
  2408                           ;Config register IDLOC0 @ 0x2000
  2409                           ;	unspecified, using default values
  2410     2000                     	org	8192
  2411     2000  3FFF               	dw	16383
  2412                           
  2413                           ;Config register IDLOC1 @ 0x2001
  2414                           ;	unspecified, using default values
  2415     2001                     	org	8193
  2416     2001  3FFF               	dw	16383
  2417                           
  2418                           ;Config register IDLOC2 @ 0x2002
  2419                           ;	unspecified, using default values
  2420     2002                     	org	8194
  2421     2002  3FFF               	dw	16383
  2422                           
  2423                           ;Config register IDLOC3 @ 0x2003
  2424                           ;	unspecified, using default values
  2425     2003                     	org	8195
  2426     2003  3FFF               	dw	16383
  2427                           
  2428                           	psect	config
  2429                           
  2430                           ;Config register CONFIG @ 0x2007
  2431                           ;	Oscillator Selection bits
  2432                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  2433                           ;	Watchdog Timer Enable bit
  2434                           ;	WDTE = OFF, WDT disabled
  2435                           ;	Power-up Timer Enable bit
  2436                           ;	PWRTE = OFF, PWRT disabled
  2437                           ;	RA5/MCLR/VPP Pin Function Select bit
  2438                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  2439                           ;	Brown-out Detect Enable bit
  2440                           ;	BOREN = ON, BOD enabled
  2441                           ;	Low-Voltage Programming Enable bit
  2442                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  2443                           ;	Data EE Memory Code Protection bit
  2444                           ;	CPD = OFF, Data memory code protection off
  2445                           ;	Flash Program Memory Code Protection bit
  2446                           ;	CP = OFF, Code protection off
  2447     2007                     	org	8199
  2448     2007  3F78               	dw	16248

Data Sizes:
    Strings     65
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      41
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    cputs@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[14]), STR_3(CODE[14]), STR_1(CODE[3]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[14]), STR_3(CODE[14]), STR_1(CODE[3]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    gets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[5]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0    2336
                                             10 BANK0     31    31      0
                               _gets
                           _initUART
                             _printf
                               _puts
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     243
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1165
                                             12 COMMON     2     0      2
                                              0 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     29      29       3       51.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Apr 16 15:15:24 2023

                      pc 0002                       l40 0659                       l41 0673  
                     l43 0681                       l60 0747                       l44 069B  
                     l36 06D9                       l61 0761                       l53 079F  
                     l37 0631                       l54 06F7                       l46 06A9  
                     l38 064B                       l63 076F                       l55 0711  
                     l47 06C3                       l64 0789                       l57 071F  
                     l58 0739                       l94 0461                       l97 043A  
                     fsr 0004                      l100 0442                      l103 0431  
                    l106 0438                      l109 044C                      l221 0603  
                    l507 04B4                      l713 047A                      l705 0456  
                    l497 04F8                      l678 0430                      l696 054F  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u400 04CF                      u401 04CE  
                    u420 04E0                      u500 04B0                      u421 04DF  
                    u501 04AF                      u510 0503                      u511 0502  
                    u415 04D0                      u360 0440                      u520 0523  
                    u440 04F4                      u600 0603                      u361 043F  
                    u521 0522                      u441 04F3                      u425 04DC  
                    u601 0602                      u370 0437                      u450 0481  
                    u530 047A                      u610 0659                      u371 0436  
                    u435 04E8                      u451 0480                      u531 0479  
                    u611 0658                      u380 04BD                      u540 055C  
                    u700 07AD                      u620 0681                      u381 04BC  
                    u541 055B                      u701 07AC                      u621 0680  
                    u470 0493                      u550 0584                      u630 06A9  
                    u471 0492                      u551 0583                      u631 06A8  
                    u615 0655                      u480 049D                      u560 05A6  
                    u640 06D1                      u481 049C                      u465 0485  
                    u561 05A5                      u705 07A9                      u641 06D0  
                    u625 067D                      u570 05B1                      u650 06E7  
                    u395 04C1                      u571 05B0                      u651 06E6  
                    u635 06A5                      u580 05B7                      u660 071F  
                    u485 0499                      u581 05B6                      u565 05A2  
                    u661 071E                      u645 06CD                      u717 063E  
                    u590 05F3                      u670 0747                      u495 04A4  
                    u591 05F2                      u671 0746                      u655 06E3  
                    u727 0666                      u680 076F                      u681 076E  
                    u665 071B                      u737 068E                      u690 0797  
                    u691 0796                      u675 0743                      u747 06B6  
                    u685 076B                      u757 0704                      u695 0793  
                    u767 072C                      u777 0754                      u787 077C  
                    fsr0 0004                      indf 0000                     l1101 04F4  
                   l1111 048B                     l1121 04AA                     l1113 048F  
                   l1105 047B                     l1115 0493                     l1107 0481  
                   l1123 04B0                     l1211 05B1                     l1203 058F  
                   l1061 043A                     l1141 051D                     l1133 0504  
                   l1117 049D                     l1109 0484                     l1221 05E8  
                   l1213 05B7                     l1301 074D                     l1063 0440  
                   l1071 0443                     l1151 052F                     l1143 0524  
                   l1135 050C                     l1127 04FA                     l1119 04A3  
                   l1215 05BB                     l1207 05A7                     l1223 05F3  
                   l1311 07AD                     l1303 0750                     l1231 0608  
                   l1065 0431                     l1073 0447                     l1145 0528  
                   l1137 050F                     l1129 04FD                     l1225 042C  
                   l1081 04B7                     l1217 05C0                     l1209 05AB  
                   l1161 0463                     l1321 07CA                     l1313 07B6  
                   l1305 0775                     l1241 0615                     l1233 060C  
                   l1067 0437                     l1075 044B                     l1139 051B  
                   l1155 0533                     l1091 04CF                     l1083 04BD  
                   l1219 05E4                     l1163 0464                     l1171 044E  
                   l1323 07CF                     l1315 07BB                     l1307 0778  
                   l1251 0619                     l1243 0615                     l1235 060E  
                   l1149 052A                     l1093 04E0                     l1085 04C0  
                   l1181 0561                     l1165 046C                     l1173 0452  
                   l1317 07C0                     l1309 0797                     l1261 0621  
                   l1253 0619                     l1245 0615                     l1237 0612  
                   l1229 0604                     l1351 0541                     l1095 04E6  
                   l1087 04C7                     l1079 04B5                     l1191 0580  
                   l1175 0553                     l1167 0470                     l1319 07C5  
                   l1271 063A                     l1327 07D4                     l1263 0625  
                   l1255 0619                     l1247 0615                     l1239 0615  
                   l1169 0457                     l1097 04E7                     l1089 04CB  
                   l1193 0584                     l1185 0562                     l1177 0556  
                   l1329 07F0                     l1281 06AF                     l1273 065F  
                   l1265 062A                     l1257 0619                     l1249 0619  
                   l1099 04EE                     l1195 0588                     l1187 0575  
                   l1179 055C                     l1291 06F4                     l1283 06B2  
                   l1275 0662                     l1267 062E                     l1259 061D  
                   l1197 058D                     l1189 057C                     l1293 06FD  
                   l1285 06D1                     l1277 0687                     l1269 0637  
                   l1295 0700                     l1287 06E7                     l1279 068A  
                   l1297 0725                     l1289 06F0                     l1299 0728  
                   STR_1 003D                     STR_2 001D                     STR_3 0040  
                   STR_4 0022                     STR_5 0032                     STR_6 0012  
                   STR_7 004E                     _RCIF 0065                     _TXIF 0064  
                   _gets 042B                     _main 0604                     btemp 007E  
                   _puts 044D                     start 0000                    ?_gets 0070  
                  ?_main 0070                    _CMCON 001F                    ?_puts 0070  
        __end_of___lwdiv 04F9          __end_of___lwmod 04B5                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _TXSTA 0098                    _cgets 04F9  
                  _getch 0431          __end_of_dpowers 0012                    _cputs 0462  
                  _putch 0439                    gets@s 0078                    main@j 0047  
                  main@k 0043                    pclath 000A                    puts@s 0072  
                  status 0003                    wtemp0 007E          __initialization 07FD  
           __end_of_gets 0431             __end_of_main 07FD             __end_of_puts 0457  
                 ??_gets 0078                   ??_main 002A                   ??_puts 0072  
                 ?_cgets 0070                   ?_getch 0070                   ?_cputs 0070  
                 ?_putch 0070         __end_of_initUART 0462                ??___lwdiv 0074  
              ??___lwmod 007B                   _getche 0443                   cgets@c 0074  
                 cgets@s 0076                   _printf 0550                   cputs@s 0071  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_cgets 0550  
          __end_of_getch 0439            __end_of_cputs 047B            __end_of_putch 0443  
                ??_cgets 0072                  ??_getch 0070                  ??_cputs 0071  
                ??_putch 0070               __pmaintext 0604                  ?_getche 0070  
                ?_printf 007C               __stringtab 0002                ?_initUART 0070  
                ___lwdiv 04B5                  ___lwmod 047B                  __ptext1 044D  
                __ptext2 0462                  __ptext3 0550                  __ptext4 047B  
                __ptext5 04B5                  __ptext6 0457                  __ptext7 042B  
                __ptext8 04F9                  __ptext9 0443                  _dpowers 0008  
                cgets@s1 0077                  getche@c 0071                  main@cnt 0041  
                main@tmp 002B     end_of_initialization 07FD               ??_initUART 0070  
                printf@c 0029                  printf@f 0026           __end_of_getche 044D  
         __end_of_printf 0604      start_initialization 07FD                 ??_getche 0071  
               ??_printf 0020                ___latbits 0001            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0077  
              __pstrings 0002         ___lwdiv@quotient 0074              __stringbase 0007  
             printf@flag 0024               printf@prec 0025                main@intvl 0045  
     __end_of__stringtab 0008          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 0439                 __ptext11 0431                 _initUART 0457  
              printf@val 0027                 main@dist 003F                putch@byte 0070  
       ___lwmod@dividend 0079                stringcode 0002                 printf@ap 0023  
        ___lwmod@divisor 0077          ___lwmod@counter 007B                 stringdir 0002  
               stringtab 0002  
