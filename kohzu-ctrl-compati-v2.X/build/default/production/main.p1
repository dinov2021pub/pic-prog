Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"166 C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f648a.h
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"228
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"907
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"969
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"767
[v _CMCON `Vuc ~T0 @X0 0 e@31 ]
"27 uart.h
[v _initUART `(v ~T0 @X0 0 ef ]
"83 main.c
[c E765 0 1 2 3 4 5 6 7 8 9 10 11 .. ]
[n E765 command RPS WTB OSC NTD NDO NDD NPD NSP NSD VER STS NON  ]
"1504 C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f648a.h
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"1501
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"1498
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"45 C:\Program Files\Microchip\xc8\v2.41\pic\include\c90\string.h
[v _strcmp `(i ~T0 @X0 0 ef2`*Cuc`*Cuc ]
"41
[v _strtok `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"67 C:\Program Files\Microchip\xc8\v2.41\pic\include\c90\stdlib.h
[v _atoi `(i ~T0 @X0 0 ef1`*Cuc ]
"1462 C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f648a.h
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
[v F38 `(v ~T0 @X0 1 tf1`ul ]
"12 C:\Program Files\Microchip\xc8\v2.41\pic\include\builtins.h
[v __delay `JF38 ~T0 @X0 0 e ]
[p i __delay ]
"1465 C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f648a.h
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"195 C:\Program Files\Microchip\xc8\v2.41\pic\include\c90\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
"1486 C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f648a.h
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"12 main.c
[p x FOSC=INTOSCIO ]
"13
[p x WDTE=OFF ]
"14
[p x PWRTE=OFF ]
"15
[p x MCLRE=ON ]
"16
[p x BOREN=ON ]
"17
[p x LVP=OFF ]
"18
[p x CPD=OFF ]
"19
[p x CP=OFF ]
[; ;xc.h: 18: extern const char __xc8_OPTIM_SPEED;
[; ;xc.h: 20: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;builtins.h: 8: extern void __nop(void);
[; ;builtins.h: 12: extern __nonreentrant void _delay(uint32_t);
[; ;builtins.h: 14: extern __nonreentrant void _delaywdt(uint32_t);
[; ;pic16f648a.h: 52: extern volatile unsigned char INDF __at(0x000);
"54 C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f648a.h
[; ;pic16f648a.h: 54: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f648a.h: 59: extern volatile unsigned char TMR0 __at(0x001);
"61
[; ;pic16f648a.h: 61: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f648a.h: 66: extern volatile unsigned char PCL __at(0x002);
"68
[; ;pic16f648a.h: 68: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f648a.h: 73: extern volatile unsigned char STATUS __at(0x003);
"75
[; ;pic16f648a.h: 75: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f648a.h: 78: typedef union {
[; ;pic16f648a.h: 79: struct {
[; ;pic16f648a.h: 80: unsigned C :1;
[; ;pic16f648a.h: 81: unsigned DC :1;
[; ;pic16f648a.h: 82: unsigned Z :1;
[; ;pic16f648a.h: 83: unsigned nPD :1;
[; ;pic16f648a.h: 84: unsigned nTO :1;
[; ;pic16f648a.h: 85: unsigned RP :2;
[; ;pic16f648a.h: 86: unsigned IRP :1;
[; ;pic16f648a.h: 87: };
[; ;pic16f648a.h: 88: struct {
[; ;pic16f648a.h: 89: unsigned :5;
[; ;pic16f648a.h: 90: unsigned RP0 :1;
[; ;pic16f648a.h: 91: unsigned RP1 :1;
[; ;pic16f648a.h: 92: };
[; ;pic16f648a.h: 93: struct {
[; ;pic16f648a.h: 94: unsigned CARRY :1;
[; ;pic16f648a.h: 95: unsigned :1;
[; ;pic16f648a.h: 96: unsigned ZERO :1;
[; ;pic16f648a.h: 97: };
[; ;pic16f648a.h: 98: } STATUSbits_t;
[; ;pic16f648a.h: 99: extern volatile STATUSbits_t STATUSbits __at(0x003);
[; ;pic16f648a.h: 159: extern volatile unsigned char FSR __at(0x004);
"161
[; ;pic16f648a.h: 161: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f648a.h: 166: extern volatile unsigned char PORTA __at(0x005);
"168
[; ;pic16f648a.h: 168: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f648a.h: 171: typedef union {
[; ;pic16f648a.h: 172: struct {
[; ;pic16f648a.h: 173: unsigned RA0 :1;
[; ;pic16f648a.h: 174: unsigned RA1 :1;
[; ;pic16f648a.h: 175: unsigned RA2 :1;
[; ;pic16f648a.h: 176: unsigned RA3 :1;
[; ;pic16f648a.h: 177: unsigned RA4 :1;
[; ;pic16f648a.h: 178: unsigned RA5 :1;
[; ;pic16f648a.h: 179: unsigned RA6 :1;
[; ;pic16f648a.h: 180: unsigned RA7 :1;
[; ;pic16f648a.h: 181: };
[; ;pic16f648a.h: 182: } PORTAbits_t;
[; ;pic16f648a.h: 183: extern volatile PORTAbits_t PORTAbits __at(0x005);
[; ;pic16f648a.h: 228: extern volatile unsigned char PORTB __at(0x006);
"230
[; ;pic16f648a.h: 230: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f648a.h: 233: typedef union {
[; ;pic16f648a.h: 234: struct {
[; ;pic16f648a.h: 235: unsigned RB0 :1;
[; ;pic16f648a.h: 236: unsigned RB1 :1;
[; ;pic16f648a.h: 237: unsigned RB2 :1;
[; ;pic16f648a.h: 238: unsigned RB3 :1;
[; ;pic16f648a.h: 239: unsigned RB4 :1;
[; ;pic16f648a.h: 240: unsigned RB5 :1;
[; ;pic16f648a.h: 241: unsigned RB6 :1;
[; ;pic16f648a.h: 242: unsigned RB7 :1;
[; ;pic16f648a.h: 243: };
[; ;pic16f648a.h: 244: } PORTBbits_t;
[; ;pic16f648a.h: 245: extern volatile PORTBbits_t PORTBbits __at(0x006);
[; ;pic16f648a.h: 290: extern volatile unsigned char PCLATH __at(0x00A);
"292
[; ;pic16f648a.h: 292: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f648a.h: 295: typedef union {
[; ;pic16f648a.h: 296: struct {
[; ;pic16f648a.h: 297: unsigned PCLATH :5;
[; ;pic16f648a.h: 298: };
[; ;pic16f648a.h: 299: } PCLATHbits_t;
[; ;pic16f648a.h: 300: extern volatile PCLATHbits_t PCLATHbits __at(0x00A);
[; ;pic16f648a.h: 310: extern volatile unsigned char INTCON __at(0x00B);
"312
[; ;pic16f648a.h: 312: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f648a.h: 315: typedef union {
[; ;pic16f648a.h: 316: struct {
[; ;pic16f648a.h: 317: unsigned RBIF :1;
[; ;pic16f648a.h: 318: unsigned INTF :1;
[; ;pic16f648a.h: 319: unsigned T0IF :1;
[; ;pic16f648a.h: 320: unsigned RBIE :1;
[; ;pic16f648a.h: 321: unsigned INTE :1;
[; ;pic16f648a.h: 322: unsigned T0IE :1;
[; ;pic16f648a.h: 323: unsigned PEIE :1;
[; ;pic16f648a.h: 324: unsigned GIE :1;
[; ;pic16f648a.h: 325: };
[; ;pic16f648a.h: 326: struct {
[; ;pic16f648a.h: 327: unsigned :2;
[; ;pic16f648a.h: 328: unsigned TMR0IF :1;
[; ;pic16f648a.h: 329: unsigned :2;
[; ;pic16f648a.h: 330: unsigned TMR0IE :1;
[; ;pic16f648a.h: 331: };
[; ;pic16f648a.h: 332: } INTCONbits_t;
[; ;pic16f648a.h: 333: extern volatile INTCONbits_t INTCONbits __at(0x00B);
[; ;pic16f648a.h: 388: extern volatile unsigned char PIR1 __at(0x00C);
"390
[; ;pic16f648a.h: 390: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f648a.h: 393: typedef union {
[; ;pic16f648a.h: 394: struct {
[; ;pic16f648a.h: 395: unsigned TMR1IF :1;
[; ;pic16f648a.h: 396: unsigned TMR2IF :1;
[; ;pic16f648a.h: 397: unsigned CCP1IF :1;
[; ;pic16f648a.h: 398: unsigned :1;
[; ;pic16f648a.h: 399: unsigned TXIF :1;
[; ;pic16f648a.h: 400: unsigned RCIF :1;
[; ;pic16f648a.h: 401: unsigned CMIF :1;
[; ;pic16f648a.h: 402: unsigned EEIF :1;
[; ;pic16f648a.h: 403: };
[; ;pic16f648a.h: 404: } PIR1bits_t;
[; ;pic16f648a.h: 405: extern volatile PIR1bits_t PIR1bits __at(0x00C);
[; ;pic16f648a.h: 445: extern volatile unsigned short TMR1 __at(0x00E);
"447
[; ;pic16f648a.h: 447: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f648a.h: 452: extern volatile unsigned char TMR1L __at(0x00E);
"454
[; ;pic16f648a.h: 454: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f648a.h: 459: extern volatile unsigned char TMR1H __at(0x00F);
"461
[; ;pic16f648a.h: 461: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f648a.h: 466: extern volatile unsigned char T1CON __at(0x010);
"468
[; ;pic16f648a.h: 468: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f648a.h: 471: typedef union {
[; ;pic16f648a.h: 472: struct {
[; ;pic16f648a.h: 473: unsigned TMR1ON :1;
[; ;pic16f648a.h: 474: unsigned TMR1CS :1;
[; ;pic16f648a.h: 475: unsigned nT1SYNC :1;
[; ;pic16f648a.h: 476: unsigned T1OSCEN :1;
[; ;pic16f648a.h: 477: unsigned T1CKPS :2;
[; ;pic16f648a.h: 478: };
[; ;pic16f648a.h: 479: struct {
[; ;pic16f648a.h: 480: unsigned :4;
[; ;pic16f648a.h: 481: unsigned T1CKPS0 :1;
[; ;pic16f648a.h: 482: unsigned T1CKPS1 :1;
[; ;pic16f648a.h: 483: };
[; ;pic16f648a.h: 484: } T1CONbits_t;
[; ;pic16f648a.h: 485: extern volatile T1CONbits_t T1CONbits __at(0x010);
[; ;pic16f648a.h: 525: extern volatile unsigned char TMR2 __at(0x011);
"527
[; ;pic16f648a.h: 527: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f648a.h: 532: extern volatile unsigned char T2CON __at(0x012);
"534
[; ;pic16f648a.h: 534: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f648a.h: 537: typedef union {
[; ;pic16f648a.h: 538: struct {
[; ;pic16f648a.h: 539: unsigned T2CKPS :2;
[; ;pic16f648a.h: 540: unsigned TMR2ON :1;
[; ;pic16f648a.h: 541: unsigned TOUTPS :4;
[; ;pic16f648a.h: 542: };
[; ;pic16f648a.h: 543: struct {
[; ;pic16f648a.h: 544: unsigned T2CKPS0 :1;
[; ;pic16f648a.h: 545: unsigned T2CKPS1 :1;
[; ;pic16f648a.h: 546: unsigned :1;
[; ;pic16f648a.h: 547: unsigned TOUTPS0 :1;
[; ;pic16f648a.h: 548: unsigned TOUTPS1 :1;
[; ;pic16f648a.h: 549: unsigned TOUTPS2 :1;
[; ;pic16f648a.h: 550: unsigned TOUTPS3 :1;
[; ;pic16f648a.h: 551: };
[; ;pic16f648a.h: 552: } T2CONbits_t;
[; ;pic16f648a.h: 553: extern volatile T2CONbits_t T2CONbits __at(0x012);
[; ;pic16f648a.h: 603: extern volatile unsigned short CCPR1 __at(0x015);
"605
[; ;pic16f648a.h: 605: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f648a.h: 610: extern volatile unsigned char CCPR1L __at(0x015);
"612
[; ;pic16f648a.h: 612: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f648a.h: 617: extern volatile unsigned char CCPR1H __at(0x016);
"619
[; ;pic16f648a.h: 619: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f648a.h: 624: extern volatile unsigned char CCP1CON __at(0x017);
"626
[; ;pic16f648a.h: 626: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f648a.h: 629: typedef union {
[; ;pic16f648a.h: 630: struct {
[; ;pic16f648a.h: 631: unsigned CCP1M :4;
[; ;pic16f648a.h: 632: unsigned CCP1Y :1;
[; ;pic16f648a.h: 633: unsigned CCP1X :1;
[; ;pic16f648a.h: 634: };
[; ;pic16f648a.h: 635: struct {
[; ;pic16f648a.h: 636: unsigned CCP1M0 :1;
[; ;pic16f648a.h: 637: unsigned CCP1M1 :1;
[; ;pic16f648a.h: 638: unsigned CCP1M2 :1;
[; ;pic16f648a.h: 639: unsigned CCP1M3 :1;
[; ;pic16f648a.h: 640: };
[; ;pic16f648a.h: 641: } CCP1CONbits_t;
[; ;pic16f648a.h: 642: extern volatile CCP1CONbits_t CCP1CONbits __at(0x017);
[; ;pic16f648a.h: 682: extern volatile unsigned char RCSTA __at(0x018);
"684
[; ;pic16f648a.h: 684: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f648a.h: 687: typedef union {
[; ;pic16f648a.h: 688: struct {
[; ;pic16f648a.h: 689: unsigned RX9D :1;
[; ;pic16f648a.h: 690: unsigned OERR :1;
[; ;pic16f648a.h: 691: unsigned FERR :1;
[; ;pic16f648a.h: 692: unsigned ADEN :1;
[; ;pic16f648a.h: 693: unsigned CREN :1;
[; ;pic16f648a.h: 694: unsigned SREN :1;
[; ;pic16f648a.h: 695: unsigned RX9 :1;
[; ;pic16f648a.h: 696: unsigned SPEN :1;
[; ;pic16f648a.h: 697: };
[; ;pic16f648a.h: 698: struct {
[; ;pic16f648a.h: 699: unsigned :3;
[; ;pic16f648a.h: 700: unsigned ADDEN :1;
[; ;pic16f648a.h: 701: };
[; ;pic16f648a.h: 702: } RCSTAbits_t;
[; ;pic16f648a.h: 703: extern volatile RCSTAbits_t RCSTAbits __at(0x018);
[; ;pic16f648a.h: 753: extern volatile unsigned char TXREG __at(0x019);
"755
[; ;pic16f648a.h: 755: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f648a.h: 760: extern volatile unsigned char RCREG __at(0x01A);
"762
[; ;pic16f648a.h: 762: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f648a.h: 767: extern volatile unsigned char CMCON __at(0x01F);
"769
[; ;pic16f648a.h: 769: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f648a.h: 772: typedef union {
[; ;pic16f648a.h: 773: struct {
[; ;pic16f648a.h: 774: unsigned CM :3;
[; ;pic16f648a.h: 775: unsigned CIS :1;
[; ;pic16f648a.h: 776: unsigned C1INV :1;
[; ;pic16f648a.h: 777: unsigned C2INV :1;
[; ;pic16f648a.h: 778: unsigned C1OUT :1;
[; ;pic16f648a.h: 779: unsigned C2OUT :1;
[; ;pic16f648a.h: 780: };
[; ;pic16f648a.h: 781: struct {
[; ;pic16f648a.h: 782: unsigned CM0 :1;
[; ;pic16f648a.h: 783: unsigned CM1 :1;
[; ;pic16f648a.h: 784: unsigned CM2 :1;
[; ;pic16f648a.h: 785: };
[; ;pic16f648a.h: 786: } CMCONbits_t;
[; ;pic16f648a.h: 787: extern volatile CMCONbits_t CMCONbits __at(0x01F);
[; ;pic16f648a.h: 837: extern volatile unsigned char OPTION_REG __at(0x081);
"839
[; ;pic16f648a.h: 839: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f648a.h: 842: typedef union {
[; ;pic16f648a.h: 843: struct {
[; ;pic16f648a.h: 844: unsigned PS :3;
[; ;pic16f648a.h: 845: unsigned PSA :1;
[; ;pic16f648a.h: 846: unsigned T0SE :1;
[; ;pic16f648a.h: 847: unsigned T0CS :1;
[; ;pic16f648a.h: 848: unsigned INTEDG :1;
[; ;pic16f648a.h: 849: unsigned nRBPU :1;
[; ;pic16f648a.h: 850: };
[; ;pic16f648a.h: 851: struct {
[; ;pic16f648a.h: 852: unsigned PS0 :1;
[; ;pic16f648a.h: 853: unsigned PS1 :1;
[; ;pic16f648a.h: 854: unsigned PS2 :1;
[; ;pic16f648a.h: 855: };
[; ;pic16f648a.h: 856: } OPTION_REGbits_t;
[; ;pic16f648a.h: 857: extern volatile OPTION_REGbits_t OPTION_REGbits __at(0x081);
[; ;pic16f648a.h: 907: extern volatile unsigned char TRISA __at(0x085);
"909
[; ;pic16f648a.h: 909: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f648a.h: 912: typedef union {
[; ;pic16f648a.h: 913: struct {
[; ;pic16f648a.h: 914: unsigned TRISA0 :1;
[; ;pic16f648a.h: 915: unsigned TRISA1 :1;
[; ;pic16f648a.h: 916: unsigned TRISA2 :1;
[; ;pic16f648a.h: 917: unsigned TRISA3 :1;
[; ;pic16f648a.h: 918: unsigned TRISA4 :1;
[; ;pic16f648a.h: 919: unsigned TRISA5 :1;
[; ;pic16f648a.h: 920: unsigned TRISA6 :1;
[; ;pic16f648a.h: 921: unsigned TRISA7 :1;
[; ;pic16f648a.h: 922: };
[; ;pic16f648a.h: 923: } TRISAbits_t;
[; ;pic16f648a.h: 924: extern volatile TRISAbits_t TRISAbits __at(0x085);
[; ;pic16f648a.h: 969: extern volatile unsigned char TRISB __at(0x086);
"971
[; ;pic16f648a.h: 971: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f648a.h: 974: typedef union {
[; ;pic16f648a.h: 975: struct {
[; ;pic16f648a.h: 976: unsigned TRISB0 :1;
[; ;pic16f648a.h: 977: unsigned TRISB1 :1;
[; ;pic16f648a.h: 978: unsigned TRISB2 :1;
[; ;pic16f648a.h: 979: unsigned TRISB3 :1;
[; ;pic16f648a.h: 980: unsigned TRISB4 :1;
[; ;pic16f648a.h: 981: unsigned TRISB5 :1;
[; ;pic16f648a.h: 982: unsigned TRISB6 :1;
[; ;pic16f648a.h: 983: unsigned TRISB7 :1;
[; ;pic16f648a.h: 984: };
[; ;pic16f648a.h: 985: } TRISBbits_t;
[; ;pic16f648a.h: 986: extern volatile TRISBbits_t TRISBbits __at(0x086);
[; ;pic16f648a.h: 1031: extern volatile unsigned char PIE1 __at(0x08C);
"1033
[; ;pic16f648a.h: 1033: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f648a.h: 1036: typedef union {
[; ;pic16f648a.h: 1037: struct {
[; ;pic16f648a.h: 1038: unsigned TMR1IE :1;
[; ;pic16f648a.h: 1039: unsigned TMR2IE :1;
[; ;pic16f648a.h: 1040: unsigned CCP1IE :1;
[; ;pic16f648a.h: 1041: unsigned :1;
[; ;pic16f648a.h: 1042: unsigned TXIE :1;
[; ;pic16f648a.h: 1043: unsigned RCIE :1;
[; ;pic16f648a.h: 1044: unsigned CMIE :1;
[; ;pic16f648a.h: 1045: unsigned EEIE :1;
[; ;pic16f648a.h: 1046: };
[; ;pic16f648a.h: 1047: } PIE1bits_t;
[; ;pic16f648a.h: 1048: extern volatile PIE1bits_t PIE1bits __at(0x08C);
[; ;pic16f648a.h: 1088: extern volatile unsigned char PCON __at(0x08E);
"1090
[; ;pic16f648a.h: 1090: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f648a.h: 1093: typedef union {
[; ;pic16f648a.h: 1094: struct {
[; ;pic16f648a.h: 1095: unsigned nBOR :1;
[; ;pic16f648a.h: 1096: unsigned nPOR :1;
[; ;pic16f648a.h: 1097: unsigned :1;
[; ;pic16f648a.h: 1098: unsigned OSCF :1;
[; ;pic16f648a.h: 1099: };
[; ;pic16f648a.h: 1100: struct {
[; ;pic16f648a.h: 1101: unsigned nBO :1;
[; ;pic16f648a.h: 1102: };
[; ;pic16f648a.h: 1103: struct {
[; ;pic16f648a.h: 1104: unsigned nBOD :1;
[; ;pic16f648a.h: 1105: };
[; ;pic16f648a.h: 1106: } PCONbits_t;
[; ;pic16f648a.h: 1107: extern volatile PCONbits_t PCONbits __at(0x08E);
[; ;pic16f648a.h: 1137: extern volatile unsigned char PR2 __at(0x092);
"1139
[; ;pic16f648a.h: 1139: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f648a.h: 1144: extern volatile unsigned char TXSTA __at(0x098);
"1146
[; ;pic16f648a.h: 1146: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f648a.h: 1149: typedef union {
[; ;pic16f648a.h: 1150: struct {
[; ;pic16f648a.h: 1151: unsigned TX9D :1;
[; ;pic16f648a.h: 1152: unsigned TRMT :1;
[; ;pic16f648a.h: 1153: unsigned BRGH :1;
[; ;pic16f648a.h: 1154: unsigned :1;
[; ;pic16f648a.h: 1155: unsigned SYNC :1;
[; ;pic16f648a.h: 1156: unsigned TXEN :1;
[; ;pic16f648a.h: 1157: unsigned TX9 :1;
[; ;pic16f648a.h: 1158: unsigned CSRC :1;
[; ;pic16f648a.h: 1159: };
[; ;pic16f648a.h: 1160: } TXSTAbits_t;
[; ;pic16f648a.h: 1161: extern volatile TXSTAbits_t TXSTAbits __at(0x098);
[; ;pic16f648a.h: 1201: extern volatile unsigned char SPBRG __at(0x099);
"1203
[; ;pic16f648a.h: 1203: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f648a.h: 1208: extern volatile unsigned char EEDATA __at(0x09A);
"1210
[; ;pic16f648a.h: 1210: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f648a.h: 1215: extern volatile unsigned char EEADR __at(0x09B);
"1217
[; ;pic16f648a.h: 1217: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f648a.h: 1222: extern volatile unsigned char EECON1 __at(0x09C);
"1224
[; ;pic16f648a.h: 1224: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f648a.h: 1227: typedef union {
[; ;pic16f648a.h: 1228: struct {
[; ;pic16f648a.h: 1229: unsigned RD :1;
[; ;pic16f648a.h: 1230: unsigned WR :1;
[; ;pic16f648a.h: 1231: unsigned WREN :1;
[; ;pic16f648a.h: 1232: unsigned WRERR :1;
[; ;pic16f648a.h: 1233: };
[; ;pic16f648a.h: 1234: } EECON1bits_t;
[; ;pic16f648a.h: 1235: extern volatile EECON1bits_t EECON1bits __at(0x09C);
[; ;pic16f648a.h: 1260: extern volatile unsigned char EECON2 __at(0x09D);
"1262
[; ;pic16f648a.h: 1262: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f648a.h: 1267: extern volatile unsigned char VRCON __at(0x09F);
"1269
[; ;pic16f648a.h: 1269: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f648a.h: 1272: typedef union {
[; ;pic16f648a.h: 1273: struct {
[; ;pic16f648a.h: 1274: unsigned VR :4;
[; ;pic16f648a.h: 1275: unsigned :1;
[; ;pic16f648a.h: 1276: unsigned VRR :1;
[; ;pic16f648a.h: 1277: unsigned VROE :1;
[; ;pic16f648a.h: 1278: unsigned VREN :1;
[; ;pic16f648a.h: 1279: };
[; ;pic16f648a.h: 1280: struct {
[; ;pic16f648a.h: 1281: unsigned VR0 :1;
[; ;pic16f648a.h: 1282: unsigned VR1 :1;
[; ;pic16f648a.h: 1283: unsigned VR2 :1;
[; ;pic16f648a.h: 1284: unsigned VR3 :1;
[; ;pic16f648a.h: 1285: };
[; ;pic16f648a.h: 1286: } VRCONbits_t;
[; ;pic16f648a.h: 1287: extern volatile VRCONbits_t VRCONbits __at(0x09F);
[; ;pic16f648a.h: 1342: extern volatile __bit ADDEN __at(0xC3);
[; ;pic16f648a.h: 1345: extern volatile __bit ADEN __at(0xC3);
[; ;pic16f648a.h: 1348: extern volatile __bit BRGH __at(0x4C2);
[; ;pic16f648a.h: 1351: extern volatile __bit C1INV __at(0xFC);
[; ;pic16f648a.h: 1354: extern volatile __bit C1OUT __at(0xFE);
[; ;pic16f648a.h: 1357: extern volatile __bit C2INV __at(0xFD);
[; ;pic16f648a.h: 1360: extern volatile __bit C2OUT __at(0xFF);
[; ;pic16f648a.h: 1363: extern volatile __bit CARRY __at(0x18);
[; ;pic16f648a.h: 1366: extern volatile __bit CCP1IE __at(0x462);
[; ;pic16f648a.h: 1369: extern volatile __bit CCP1IF __at(0x62);
[; ;pic16f648a.h: 1372: extern volatile __bit CCP1M0 __at(0xB8);
[; ;pic16f648a.h: 1375: extern volatile __bit CCP1M1 __at(0xB9);
[; ;pic16f648a.h: 1378: extern volatile __bit CCP1M2 __at(0xBA);
[; ;pic16f648a.h: 1381: extern volatile __bit CCP1M3 __at(0xBB);
[; ;pic16f648a.h: 1384: extern volatile __bit CCP1X __at(0xBD);
[; ;pic16f648a.h: 1387: extern volatile __bit CCP1Y __at(0xBC);
[; ;pic16f648a.h: 1390: extern volatile __bit CIS __at(0xFB);
[; ;pic16f648a.h: 1393: extern volatile __bit CM0 __at(0xF8);
[; ;pic16f648a.h: 1396: extern volatile __bit CM1 __at(0xF9);
[; ;pic16f648a.h: 1399: extern volatile __bit CM2 __at(0xFA);
[; ;pic16f648a.h: 1402: extern volatile __bit CMIE __at(0x466);
[; ;pic16f648a.h: 1405: extern volatile __bit CMIF __at(0x66);
[; ;pic16f648a.h: 1408: extern volatile __bit CREN __at(0xC4);
[; ;pic16f648a.h: 1411: extern volatile __bit CSRC __at(0x4C7);
[; ;pic16f648a.h: 1414: extern volatile __bit DC __at(0x19);
[; ;pic16f648a.h: 1417: extern volatile __bit EEIE __at(0x467);
[; ;pic16f648a.h: 1420: extern volatile __bit EEIF __at(0x67);
[; ;pic16f648a.h: 1423: extern volatile __bit FERR __at(0xC2);
[; ;pic16f648a.h: 1426: extern volatile __bit GIE __at(0x5F);
[; ;pic16f648a.h: 1429: extern volatile __bit INTE __at(0x5C);
[; ;pic16f648a.h: 1432: extern volatile __bit INTEDG __at(0x40E);
[; ;pic16f648a.h: 1435: extern volatile __bit INTF __at(0x59);
[; ;pic16f648a.h: 1438: extern volatile __bit IRP __at(0x1F);
[; ;pic16f648a.h: 1441: extern volatile __bit OERR __at(0xC1);
[; ;pic16f648a.h: 1444: extern volatile __bit OSCF __at(0x473);
[; ;pic16f648a.h: 1447: extern volatile __bit PEIE __at(0x5E);
[; ;pic16f648a.h: 1450: extern volatile __bit PS0 __at(0x408);
[; ;pic16f648a.h: 1453: extern volatile __bit PS1 __at(0x409);
[; ;pic16f648a.h: 1456: extern volatile __bit PS2 __at(0x40A);
[; ;pic16f648a.h: 1459: extern volatile __bit PSA __at(0x40B);
[; ;pic16f648a.h: 1462: extern volatile __bit RA0 __at(0x28);
[; ;pic16f648a.h: 1465: extern volatile __bit RA1 __at(0x29);
[; ;pic16f648a.h: 1468: extern volatile __bit RA2 __at(0x2A);
[; ;pic16f648a.h: 1471: extern volatile __bit RA3 __at(0x2B);
[; ;pic16f648a.h: 1474: extern volatile __bit RA4 __at(0x2C);
[; ;pic16f648a.h: 1477: extern volatile __bit RA5 __at(0x2D);
[; ;pic16f648a.h: 1480: extern volatile __bit RA6 __at(0x2E);
[; ;pic16f648a.h: 1483: extern volatile __bit RA7 __at(0x2F);
[; ;pic16f648a.h: 1486: extern volatile __bit RB0 __at(0x30);
[; ;pic16f648a.h: 1489: extern volatile __bit RB1 __at(0x31);
[; ;pic16f648a.h: 1492: extern volatile __bit RB2 __at(0x32);
[; ;pic16f648a.h: 1495: extern volatile __bit RB3 __at(0x33);
[; ;pic16f648a.h: 1498: extern volatile __bit RB4 __at(0x34);
[; ;pic16f648a.h: 1501: extern volatile __bit RB5 __at(0x35);
[; ;pic16f648a.h: 1504: extern volatile __bit RB6 __at(0x36);
[; ;pic16f648a.h: 1507: extern volatile __bit RB7 __at(0x37);
[; ;pic16f648a.h: 1510: extern volatile __bit RBIE __at(0x5B);
[; ;pic16f648a.h: 1513: extern volatile __bit RBIF __at(0x58);
[; ;pic16f648a.h: 1516: extern volatile __bit RCIE __at(0x465);
[; ;pic16f648a.h: 1519: extern volatile __bit RCIF __at(0x65);
[; ;pic16f648a.h: 1522: extern volatile __bit RD __at(0x4E0);
[; ;pic16f648a.h: 1525: extern volatile __bit RP0 __at(0x1D);
[; ;pic16f648a.h: 1528: extern volatile __bit RP1 __at(0x1E);
[; ;pic16f648a.h: 1531: extern volatile __bit RX9 __at(0xC6);
[; ;pic16f648a.h: 1534: extern volatile __bit RX9D __at(0xC0);
[; ;pic16f648a.h: 1537: extern volatile __bit SPEN __at(0xC7);
[; ;pic16f648a.h: 1540: extern volatile __bit SREN __at(0xC5);
[; ;pic16f648a.h: 1543: extern volatile __bit SYNC __at(0x4C4);
[; ;pic16f648a.h: 1546: extern volatile __bit T0CS __at(0x40D);
[; ;pic16f648a.h: 1549: extern volatile __bit T0IE __at(0x5D);
[; ;pic16f648a.h: 1552: extern volatile __bit T0IF __at(0x5A);
[; ;pic16f648a.h: 1555: extern volatile __bit T0SE __at(0x40C);
[; ;pic16f648a.h: 1558: extern volatile __bit T1CKPS0 __at(0x84);
[; ;pic16f648a.h: 1561: extern volatile __bit T1CKPS1 __at(0x85);
[; ;pic16f648a.h: 1564: extern volatile __bit T1OSCEN __at(0x83);
[; ;pic16f648a.h: 1567: extern volatile __bit T2CKPS0 __at(0x90);
[; ;pic16f648a.h: 1570: extern volatile __bit T2CKPS1 __at(0x91);
[; ;pic16f648a.h: 1573: extern volatile __bit TMR0IE __at(0x5D);
[; ;pic16f648a.h: 1576: extern volatile __bit TMR0IF __at(0x5A);
[; ;pic16f648a.h: 1579: extern volatile __bit TMR1CS __at(0x81);
[; ;pic16f648a.h: 1582: extern volatile __bit TMR1IE __at(0x460);
[; ;pic16f648a.h: 1585: extern volatile __bit TMR1IF __at(0x60);
[; ;pic16f648a.h: 1588: extern volatile __bit TMR1ON __at(0x80);
[; ;pic16f648a.h: 1591: extern volatile __bit TMR2IE __at(0x461);
[; ;pic16f648a.h: 1594: extern volatile __bit TMR2IF __at(0x61);
[; ;pic16f648a.h: 1597: extern volatile __bit TMR2ON __at(0x92);
[; ;pic16f648a.h: 1600: extern volatile __bit TOUTPS0 __at(0x93);
[; ;pic16f648a.h: 1603: extern volatile __bit TOUTPS1 __at(0x94);
[; ;pic16f648a.h: 1606: extern volatile __bit TOUTPS2 __at(0x95);
[; ;pic16f648a.h: 1609: extern volatile __bit TOUTPS3 __at(0x96);
[; ;pic16f648a.h: 1612: extern volatile __bit TRISA0 __at(0x428);
[; ;pic16f648a.h: 1615: extern volatile __bit TRISA1 __at(0x429);
[; ;pic16f648a.h: 1618: extern volatile __bit TRISA2 __at(0x42A);
[; ;pic16f648a.h: 1621: extern volatile __bit TRISA3 __at(0x42B);
[; ;pic16f648a.h: 1624: extern volatile __bit TRISA4 __at(0x42C);
[; ;pic16f648a.h: 1627: extern volatile __bit TRISA5 __at(0x42D);
[; ;pic16f648a.h: 1630: extern volatile __bit TRISA6 __at(0x42E);
[; ;pic16f648a.h: 1633: extern volatile __bit TRISA7 __at(0x42F);
[; ;pic16f648a.h: 1636: extern volatile __bit TRISB0 __at(0x430);
[; ;pic16f648a.h: 1639: extern volatile __bit TRISB1 __at(0x431);
[; ;pic16f648a.h: 1642: extern volatile __bit TRISB2 __at(0x432);
[; ;pic16f648a.h: 1645: extern volatile __bit TRISB3 __at(0x433);
[; ;pic16f648a.h: 1648: extern volatile __bit TRISB4 __at(0x434);
[; ;pic16f648a.h: 1651: extern volatile __bit TRISB5 __at(0x435);
[; ;pic16f648a.h: 1654: extern volatile __bit TRISB6 __at(0x436);
[; ;pic16f648a.h: 1657: extern volatile __bit TRISB7 __at(0x437);
[; ;pic16f648a.h: 1660: extern volatile __bit TRMT __at(0x4C1);
[; ;pic16f648a.h: 1663: extern volatile __bit TX9 __at(0x4C6);
[; ;pic16f648a.h: 1666: extern volatile __bit TX9D __at(0x4C0);
[; ;pic16f648a.h: 1669: extern volatile __bit TXEN __at(0x4C5);
[; ;pic16f648a.h: 1672: extern volatile __bit TXIE __at(0x464);
[; ;pic16f648a.h: 1675: extern volatile __bit TXIF __at(0x64);
[; ;pic16f648a.h: 1678: extern volatile __bit VR0 __at(0x4F8);
[; ;pic16f648a.h: 1681: extern volatile __bit VR1 __at(0x4F9);
[; ;pic16f648a.h: 1684: extern volatile __bit VR2 __at(0x4FA);
[; ;pic16f648a.h: 1687: extern volatile __bit VR3 __at(0x4FB);
[; ;pic16f648a.h: 1690: extern volatile __bit VREN __at(0x4FF);
[; ;pic16f648a.h: 1693: extern volatile __bit VROE __at(0x4FE);
[; ;pic16f648a.h: 1696: extern volatile __bit VRR __at(0x4FD);
[; ;pic16f648a.h: 1699: extern volatile __bit WR __at(0x4E1);
[; ;pic16f648a.h: 1702: extern volatile __bit WREN __at(0x4E2);
[; ;pic16f648a.h: 1705: extern volatile __bit WRERR __at(0x4E3);
[; ;pic16f648a.h: 1708: extern volatile __bit ZERO __at(0x1A);
[; ;pic16f648a.h: 1711: extern volatile __bit nBO __at(0x470);
[; ;pic16f648a.h: 1714: extern volatile __bit nBOD __at(0x470);
[; ;pic16f648a.h: 1717: extern volatile __bit nBOR __at(0x470);
[; ;pic16f648a.h: 1720: extern volatile __bit nPD __at(0x1B);
[; ;pic16f648a.h: 1723: extern volatile __bit nPOR __at(0x471);
[; ;pic16f648a.h: 1726: extern volatile __bit nRBPU __at(0x40F);
[; ;pic16f648a.h: 1729: extern volatile __bit nT1SYNC __at(0x82);
[; ;pic16f648a.h: 1732: extern volatile __bit nTO __at(0x1C);
[; ;pic.h: 76: __attribute__((__unsupported__("The " "FLASH_READ" " macro function is no longer supported. Please use the MPLAB X MCC."))) unsigned char __flash_read(unsigned short addr);
[; ;pic.h: 78: __attribute__((__unsupported__("The " "FLASH_WRITE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_write(unsigned short addr, unsigned short data);
[; ;pic.h: 80: __attribute__((__unsupported__("The " "FLASH_ERASE" " macro function is no longer supported. Please use the MPLAB X MCC."))) void __flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;pic.h: 118: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 119: extern __bank0 __bit __powerdown;
[; ;pic.h: 120: extern __bank0 __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;uart.h: 27: void initUART();
[; ;uart.h: 28: void putch(unsigned char byte);
[; ;uart.h: 29: unsigned char getch();
[; ;uart.h: 30: unsigned char getche();
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 73: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 75: extern int rand(void);
[; ;stdlib.h: 76: extern void srand(unsigned int);
[; ;stdlib.h: 77: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 78: extern div_t div(int numer, int denom);
[; ;stdlib.h: 79: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 80: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 81: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 85: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 86: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 87: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 88: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 93: extern void * malloc(size_t);
[; ;stdlib.h: 94: extern void free(void *);
[; ;stdlib.h: 95: extern void * realloc(void *, size_t);
[; ;stdlib.h: 104: extern int atexit(void (*)(void));
[; ;stdlib.h: 105: extern char * getenv(const char *);
[; ;stdlib.h: 106: extern char ** environ;
[; ;stdlib.h: 107: extern int system(char *);
[; ;stdlib.h: 108: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 109: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 110: extern int abs(int);
[; ;stdlib.h: 111: extern long labs(long);
[; ;stdlib.h: 113: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 114: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 119: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 120: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 122: extern char * ftoa(float f, int * status);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;main.c: 43: enum command {
[; ;main.c: 44: RPS,
[; ;main.c: 45: WTB,
[; ;main.c: 46: OSC,
[; ;main.c: 47: NTD,
[; ;main.c: 48: NDO,
[; ;main.c: 49: NDD,
[; ;main.c: 50: NPD,
[; ;main.c: 51: NSP,
[; ;main.c: 52: NSD,
[; ;main.c: 53: VER,
[; ;main.c: 54: STS,
[; ;main.c: 55: NON
[; ;main.c: 56: };
[v $root$_main `(v ~T0 @X0 0 e ]
"58 main.c
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 58: void main(void) {
[e :U _main ]
[f ]
[; ;main.c: 60: PORTA = 0x00;
"60
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 61: PORTB = 0x00;
"61
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 62: TRISA = 0b00000000;
"62
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 63: TRISB = 0b11110011;
"63
[e = _TRISB -> -> 243 `i `uc ]
[; ;main.c: 64: CMCON = 0b00000111;
"64
[e = _CMCON -> -> 7 `i `uc ]
[; ;main.c: 66: initUART();
"66
[e ( _initUART ..  ]
"68
[v _tmp `uc ~T0 @X0 -> 40 `i a ]
"69
[v _j `i ~T0 @X0 1 a ]
[; ;main.c: 68: char tmp[40];
[; ;main.c: 69: int j = 10;
[e = _j -> 10 `i ]
"70
[v _k `i ~T0 @X0 1 a ]
[; ;main.c: 70: int k = 0;
[e = _k -> 0 `i ]
"71
[v _cnt `i ~T0 @X0 1 a ]
[; ;main.c: 71: int cnt = 10;
[e = _cnt -> 10 `i ]
"72
[v _dist `i ~T0 @X0 1 a ]
[; ;main.c: 72: int dist = 10;
[e = _dist -> 10 `i ]
"73
[v _intvl `i ~T0 @X0 1 a ]
[; ;main.c: 73: int intvl = 20;
[e = _intvl -> 20 `i ]
"74
[v _rcmd `uc ~T0 @X0 -> 4 `i a ]
"75
[v _mx_spd `i ~T0 @X0 1 a ]
[; ;main.c: 74: char rcmd[4];
[; ;main.c: 75: int mx_spd = 20250;
[e = _mx_spd -> 20250 `i ]
"76
[v _set_spd `i ~T0 @X0 1 a ]
"77
[v _npd `i ~T0 @X0 1 a ]
[; ;main.c: 76: int set_spd;
[; ;main.c: 77: int npd = 2500;
[e = _npd -> 2500 `i ]
"78
[v _nsp `i ~T0 @X0 1 a ]
[; ;main.c: 78: int nsp = 1000;
[e = _nsp -> 1000 `i ]
"79
[v _ln `uc ~T0 @X0 -> 4 `i a ]
"81
[v _ptr `*uc ~T0 @X0 1 a ]
"83
[v _cmd `E765 ~T0 @X0 1 a ]
[; ;main.c: 79: char ln[4];
[; ;main.c: 81: char *ptr;
[; ;main.c: 83: enum command cmd;
[; ;main.c: 85: RB6 = 1;
"85
[e = _RB6 -> -> 1 `i `b ]
[; ;main.c: 86: RB5 = 1;
"86
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 87: RB4 = 1;
"87
[e = _RB4 -> -> 1 `i `b ]
[; ;main.c: 90: while(1){
"90
[e :U 58 ]
{
[; ;main.c: 92: cmd = NON;
"92
[e = _cmd . `E765 11 ]
[; ;main.c: 94: rcmd[0] = 'Q';
"94
[e = *U + &U _rcmd * -> -> -> 0 `i `ui `ux -> -> # *U &U _rcmd `ui `ux -> -> 81 `ui `uc ]
[; ;main.c: 95: rcmd[1] = 'Q';
"95
[e = *U + &U _rcmd * -> -> -> 1 `i `ui `ux -> -> # *U &U _rcmd `ui `ux -> -> 81 `ui `uc ]
[; ;main.c: 96: rcmd[2] = 'Q';
"96
[e = *U + &U _rcmd * -> -> -> 2 `i `ui `ux -> -> # *U &U _rcmd `ui `ux -> -> 81 `ui `uc ]
[; ;main.c: 97: rcmd[3] = '\0';
"97
[e = *U + &U _rcmd * -> -> -> 3 `i `ui `ux -> -> # *U &U _rcmd `ui `ux -> -> 0 `ui `uc ]
[; ;main.c: 99: tmp[0] = 'Q';
"99
[e = *U + &U _tmp * -> -> -> 0 `i `ui `ux -> -> # *U &U _tmp `ui `ux -> -> 81 `ui `uc ]
[; ;main.c: 100: tmp[1] = 'Q';
"100
[e = *U + &U _tmp * -> -> -> 1 `i `ui `ux -> -> # *U &U _tmp `ui `ux -> -> 81 `ui `uc ]
[; ;main.c: 101: tmp[2] = 'Q';
"101
[e = *U + &U _tmp * -> -> -> 2 `i `ui `ux -> -> # *U &U _tmp `ui `ux -> -> 81 `ui `uc ]
[; ;main.c: 102: tmp[3] = '\0';
"102
[e = *U + &U _tmp * -> -> -> 3 `i `ui `ux -> -> # *U &U _tmp `ui `ux -> -> 0 `ui `uc ]
[; ;main.c: 104: if(RB6 == 0){
"104
[e $ ! == -> _RB6 `i -> 0 `i 60  ]
{
[; ;main.c: 105: cmd = NTD;
"105
[e = _cmd . `E765 3 ]
"106
}
[; ;main.c: 106: }else if(RB5 == 0){
[e $U 61  ]
[e :U 60 ]
[e $ ! == -> _RB5 `i -> 0 `i 62  ]
{
[; ;main.c: 107: cmd = NSD;
"107
[e = _cmd . `E765 8 ]
"108
}
[; ;main.c: 108: }else if(RB4 == 0){
[e $U 63  ]
[e :U 62 ]
[e $ ! == -> _RB4 `i -> 0 `i 64  ]
{
[; ;main.c: 109: cmd = NDD;
"109
[e = _cmd . `E765 5 ]
"110
}
[e :U 64 ]
"115
[e :U 63 ]
[e :U 61 ]
[; ;main.c: 110: }
[; ;main.c: 115: rcmd[0] = tmp[1];
[e = *U + &U _rcmd * -> -> -> 0 `i `ui `ux -> -> # *U &U _rcmd `ui `ux *U + &U _tmp * -> -> -> 1 `i `ui `ux -> -> # *U &U _tmp `ui `ux ]
[; ;main.c: 116: rcmd[1] = tmp[2];
"116
[e = *U + &U _rcmd * -> -> -> 1 `i `ui `ux -> -> # *U &U _rcmd `ui `ux *U + &U _tmp * -> -> -> 2 `i `ui `ux -> -> # *U &U _tmp `ui `ux ]
[; ;main.c: 117: rcmd[2] = tmp[3];
"117
[e = *U + &U _rcmd * -> -> -> 2 `i `ui `ux -> -> # *U &U _rcmd `ui `ux *U + &U _tmp * -> -> -> 3 `i `ui `ux -> -> # *U &U _tmp `ui `ux ]
[; ;main.c: 118: rcmd[3] = '\0';
"118
[e = *U + &U _rcmd * -> -> -> 3 `i `ui `ux -> -> # *U &U _rcmd `ui `ux -> -> 0 `ui `uc ]
[; ;main.c: 121: if(strcmp(rcmd,"RPS") == 0) {
"121
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 1C -> 0 `i 65  ]
{
[; ;main.c: 122: cmd = RPS;
"122
[e = _cmd . `E765 0 ]
"123
}
[; ;main.c: 123: }else if(strcmp(rcmd,"WTB") == 0){
[e $U 66  ]
[e :U 65 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 2C -> 0 `i 67  ]
{
[; ;main.c: 124: cmd = WTB;
"124
[e = _cmd . `E765 1 ]
"125
}
[; ;main.c: 125: }else if(strcmp(rcmd,"OSC") == 0){
[e $U 68  ]
[e :U 67 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 3C -> 0 `i 69  ]
{
[; ;main.c: 126: cmd = OSC;
"126
[e = _cmd . `E765 2 ]
"127
}
[; ;main.c: 127: }else if(strcmp(rcmd,"NTD") == 0){
[e $U 70  ]
[e :U 69 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 4C -> 0 `i 71  ]
{
[; ;main.c: 128: cmd = NTD;
"128
[e = _cmd . `E765 3 ]
"129
}
[; ;main.c: 129: }else if(strcmp(rcmd,"NDO") == 0){
[e $U 72  ]
[e :U 71 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 5C -> 0 `i 73  ]
{
[; ;main.c: 130: cmd = NDO;
"130
[e = _cmd . `E765 4 ]
"131
}
[; ;main.c: 131: }else if(strcmp(rcmd,"NDD") == 0){
[e $U 74  ]
[e :U 73 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 6C -> 0 `i 75  ]
{
[; ;main.c: 132: cmd = NDD;
"132
[e = _cmd . `E765 5 ]
"133
}
[; ;main.c: 133: }else if(strcmp(rcmd,"VER") == 0){
[e $U 76  ]
[e :U 75 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 7C -> 0 `i 77  ]
{
[; ;main.c: 134: cmd = VER;
"134
[e = _cmd . `E765 9 ]
"135
}
[; ;main.c: 135: }else if(strcmp(rcmd,"STS") == 0){
[e $U 78  ]
[e :U 77 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 8C -> 0 `i 79  ]
{
[; ;main.c: 136: cmd = STS;
"136
[e = _cmd . `E765 10 ]
"137
}
[; ;main.c: 137: }else if(strcmp(rcmd,"NPD") == 0){
[e $U 80  ]
[e :U 79 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 9C -> 0 `i 81  ]
{
[; ;main.c: 138: cmd = NPD;
"138
[e = _cmd . `E765 6 ]
"139
}
[; ;main.c: 139: }else if(strcmp(rcmd,"NSP") == 0){
[e $U 82  ]
[e :U 81 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 10C -> 0 `i 83  ]
{
[; ;main.c: 140: cmd = NSP;
"140
[e = _cmd . `E765 7 ]
"141
}
[; ;main.c: 141: }else if(strcmp(rcmd,"NSD") == 0){
[e $U 84  ]
[e :U 83 ]
[e $ ! == ( _strcmp (2 , -> &U _rcmd `*Cuc :s 11C -> 0 `i 85  ]
{
[; ;main.c: 142: cmd = NSD;
"142
[e = _cmd . `E765 8 ]
"143
}
[e :U 85 ]
"144
[e :U 84 ]
[e :U 82 ]
[e :U 80 ]
[e :U 78 ]
[e :U 76 ]
[e :U 74 ]
[e :U 72 ]
[e :U 70 ]
[e :U 68 ]
[e :U 66 ]
[; ;main.c: 143: }
[; ;main.c: 144: ptr = strtok(tmp, "/");
[e = _ptr ( _strtok (2 , &U _tmp :s 12C ]
[; ;main.c: 147: switch(cmd){
"147
[e $U 87  ]
{
[; ;main.c: 149: case RPS :
"149
[e :U 88 ]
[; ;main.c: 150: ptr = strtok((0), "/");
"150
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 13C ]
[; ;main.c: 151: ptr = strtok((0), "/");
"151
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 14C ]
[; ;main.c: 152: ptr = strtok((0), "/");
"152
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 15C ]
[; ;main.c: 153: ptr = strtok((0), "/");
"153
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 16C ]
[; ;main.c: 154: if(ptr != (0)) {
"154
[e $ ! != _ptr -> -> 0 `i `*uc 89  ]
{
[; ;main.c: 155: dist = atoi(ptr);
"155
[e = _dist ( _atoi (1 -> _ptr `*Cuc ]
"156
}
[e :U 89 ]
[; ;main.c: 156: }
[; ;main.c: 158: if (dist > 0){
"158
[e $ ! > _dist -> 0 `i 90  ]
{
[; ;main.c: 159: for(k = 0 ; k < dist ; k++){
"159
{
[e = _k -> 0 `i ]
[e $U 94  ]
[e :U 91 ]
{
[; ;main.c: 160: RA0 = 1;
"160
[e = _RA0 -> -> 1 `i `b ]
[; ;main.c: 161: for(j = 0 ; j < intvl ; j++){
"161
{
[e = _j -> 0 `i ]
[e $U 98  ]
[e :U 95 ]
{
[; ;main.c: 162: _delay((unsigned long)((1)*(4000000/4000000.0)));
"162
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"163
}
"161
[e ++ _j -> 1 `i ]
[e :U 98 ]
[e $ < _j _intvl 95  ]
[e :U 96 ]
"163
}
[; ;main.c: 163: }
[; ;main.c: 164: RA0 = 0;
"164
[e = _RA0 -> -> 0 `i `b ]
[; ;main.c: 165: for(j = 0 ; j < intvl ; j++){
"165
{
[e = _j -> 0 `i ]
[e $U 102  ]
[e :U 99 ]
{
[; ;main.c: 166: _delay((unsigned long)((1)*(4000000/4000000.0)));
"166
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"167
}
"165
[e ++ _j -> 1 `i ]
[e :U 102 ]
[e $ < _j _intvl 99  ]
[e :U 100 ]
"167
}
"168
}
"159
[e ++ _k -> 1 `i ]
[e :U 94 ]
[e $ < _k _dist 91  ]
[e :U 92 ]
"168
}
"169
}
[; ;main.c: 167: }
[; ;main.c: 168: }
[; ;main.c: 169: } else {
[e $U 103  ]
[e :U 90 ]
{
[; ;main.c: 170: dist *= -1;
"170
[e =* _dist -U -> 1 `i ]
[; ;main.c: 171: for(k = 0 ; k < dist ; k++){
"171
{
[e = _k -> 0 `i ]
[e $U 107  ]
[e :U 104 ]
{
[; ;main.c: 172: RA1 = 1;
"172
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 173: for(j = 0 ; j < intvl ; j++){
"173
{
[e = _j -> 0 `i ]
[e $U 111  ]
[e :U 108 ]
{
[; ;main.c: 174: _delay((unsigned long)((1)*(4000000/4000000.0)));
"174
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"175
}
"173
[e ++ _j -> 1 `i ]
[e :U 111 ]
[e $ < _j _intvl 108  ]
[e :U 109 ]
"175
}
[; ;main.c: 175: }
[; ;main.c: 176: RA1 = 0;
"176
[e = _RA1 -> -> 0 `i `b ]
[; ;main.c: 177: for(j = 0 ; j < intvl ; j++){
"177
{
[e = _j -> 0 `i ]
[e $U 115  ]
[e :U 112 ]
{
[; ;main.c: 178: _delay((unsigned long)((1)*(4000000/4000000.0)));
"178
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"179
}
"177
[e ++ _j -> 1 `i ]
[e :U 115 ]
[e $ < _j _intvl 112  ]
[e :U 113 ]
"179
}
"180
}
"171
[e ++ _k -> 1 `i ]
[e :U 107 ]
[e $ < _k _dist 104  ]
[e :U 105 ]
"180
}
"181
}
[e :U 103 ]
[; ;main.c: 179: }
[; ;main.c: 180: }
[; ;main.c: 181: }
[; ;main.c: 184: printf("C\tRPS\r\n");
"184
[e ( _printf :s 17C ]
[; ;main.c: 185: break;
"185
[e $U 86  ]
[; ;main.c: 187: case WTB :
"187
[e :U 116 ]
[; ;main.c: 188: ptr = strtok((0), "/");
"188
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 18C ]
[; ;main.c: 189: ptr = strtok((0), "/");
"189
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 19C ]
[; ;main.c: 190: ptr = strtok((0), "/");
"190
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 20C ]
[; ;main.c: 191: if(ptr != (0)) {
"191
[e $ ! != _ptr -> -> 0 `i `*uc 117  ]
{
[; ;main.c: 192: set_spd = atoi(ptr);
"192
[e = _set_spd ( _atoi (1 -> _ptr `*Cuc ]
"193
}
[e :U 117 ]
[; ;main.c: 193: }
[; ;main.c: 194: intvl = mx_spd / set_spd;
"194
[e = _intvl / _mx_spd _set_spd ]
[; ;main.c: 195: if (intvl == 0){
"195
[e $ ! == _intvl -> 0 `i 118  ]
{
[; ;main.c: 196: intvl = 1;
"196
[e = _intvl -> 1 `i ]
"197
}
[e :U 118 ]
[; ;main.c: 197: }
[; ;main.c: 198: printf("C\tWTB\r\n");
"198
[e ( _printf :s 21C ]
[; ;main.c: 200: break;
"200
[e $U 86  ]
[; ;main.c: 202: case OSC :
"202
[e :U 119 ]
[; ;main.c: 203: ptr = strtok((0), "/");
"203
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 22C ]
[; ;main.c: 204: ptr = strtok((0), "/");
"204
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 23C ]
[; ;main.c: 205: ptr = strtok((0), "/");
"205
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 24C ]
[; ;main.c: 206: ptr = strtok((0), "/");
"206
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 25C ]
[; ;main.c: 207: ptr = strtok((0), "/");
"207
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 26C ]
[; ;main.c: 208: if(ptr != (0)) {
"208
[e $ ! != _ptr -> -> 0 `i `*uc 120  ]
{
[; ;main.c: 209: dist = atoi(ptr);
"209
[e = _dist ( _atoi (1 -> _ptr `*Cuc ]
"210
}
[e :U 120 ]
[; ;main.c: 210: }
[; ;main.c: 212: if (dist > 0){
"212
[e $ ! > _dist -> 0 `i 121  ]
{
[; ;main.c: 213: for(k = 0 ; k < dist ; k++){
"213
{
[e = _k -> 0 `i ]
[e $U 125  ]
[e :U 122 ]
{
[; ;main.c: 214: RA0 = 1;
"214
[e = _RA0 -> -> 1 `i `b ]
[; ;main.c: 215: for(j = 0 ; j < intvl ; j++){
"215
{
[e = _j -> 0 `i ]
[e $U 129  ]
[e :U 126 ]
{
[; ;main.c: 216: _delay((unsigned long)((1)*(4000000/4000000.0)));
"216
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"217
}
"215
[e ++ _j -> 1 `i ]
[e :U 129 ]
[e $ < _j _intvl 126  ]
[e :U 127 ]
"217
}
[; ;main.c: 217: }
[; ;main.c: 218: RA0 = 0;
"218
[e = _RA0 -> -> 0 `i `b ]
[; ;main.c: 219: for(j = 0 ; j < intvl ; j++){
"219
{
[e = _j -> 0 `i ]
[e $U 133  ]
[e :U 130 ]
{
[; ;main.c: 220: _delay((unsigned long)((1)*(4000000/4000000.0)));
"220
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"221
}
"219
[e ++ _j -> 1 `i ]
[e :U 133 ]
[e $ < _j _intvl 130  ]
[e :U 131 ]
"221
}
"222
}
"213
[e ++ _k -> 1 `i ]
[e :U 125 ]
[e $ < _k _dist 122  ]
[e :U 123 ]
"222
}
[; ;main.c: 221: }
[; ;main.c: 222: }
[; ;main.c: 223: for(k = 0 ; k < dist ; k++){
"223
{
[e = _k -> 0 `i ]
[e $U 137  ]
[e :U 134 ]
{
[; ;main.c: 224: RA1 = 1;
"224
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 225: for(j = 0 ; j < intvl ; j++){
"225
{
[e = _j -> 0 `i ]
[e $U 141  ]
[e :U 138 ]
{
[; ;main.c: 226: _delay((unsigned long)((1)*(4000000/4000000.0)));
"226
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"227
}
"225
[e ++ _j -> 1 `i ]
[e :U 141 ]
[e $ < _j _intvl 138  ]
[e :U 139 ]
"227
}
[; ;main.c: 227: }
[; ;main.c: 228: RA1 = 0;
"228
[e = _RA1 -> -> 0 `i `b ]
[; ;main.c: 229: for(j = 0 ; j < intvl ; j++){
"229
{
[e = _j -> 0 `i ]
[e $U 145  ]
[e :U 142 ]
{
[; ;main.c: 230: _delay((unsigned long)((1)*(4000000/4000000.0)));
"230
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"231
}
"229
[e ++ _j -> 1 `i ]
[e :U 145 ]
[e $ < _j _intvl 142  ]
[e :U 143 ]
"231
}
"232
}
"223
[e ++ _k -> 1 `i ]
[e :U 137 ]
[e $ < _k _dist 134  ]
[e :U 135 ]
"232
}
"233
}
[; ;main.c: 231: }
[; ;main.c: 232: }
[; ;main.c: 233: } else {
[e $U 146  ]
[e :U 121 ]
{
[; ;main.c: 234: dist *= -1;
"234
[e =* _dist -U -> 1 `i ]
[; ;main.c: 235: for(k = 0 ; k < dist ; k++){
"235
{
[e = _k -> 0 `i ]
[e $U 150  ]
[e :U 147 ]
{
[; ;main.c: 236: RA1 = 1;
"236
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 237: for(j = 0 ; j < intvl ; j++){
"237
{
[e = _j -> 0 `i ]
[e $U 154  ]
[e :U 151 ]
{
[; ;main.c: 238: _delay((unsigned long)((1)*(4000000/4000000.0)));
"238
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"239
}
"237
[e ++ _j -> 1 `i ]
[e :U 154 ]
[e $ < _j _intvl 151  ]
[e :U 152 ]
"239
}
[; ;main.c: 239: }
[; ;main.c: 240: RA1 = 0;
"240
[e = _RA1 -> -> 0 `i `b ]
[; ;main.c: 241: for(j = 0 ; j < intvl ; j++){
"241
{
[e = _j -> 0 `i ]
[e $U 158  ]
[e :U 155 ]
{
[; ;main.c: 242: _delay((unsigned long)((1)*(4000000/4000000.0)));
"242
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"243
}
"241
[e ++ _j -> 1 `i ]
[e :U 158 ]
[e $ < _j _intvl 155  ]
[e :U 156 ]
"243
}
"244
}
"235
[e ++ _k -> 1 `i ]
[e :U 150 ]
[e $ < _k _dist 147  ]
[e :U 148 ]
"244
}
[; ;main.c: 243: }
[; ;main.c: 244: }
[; ;main.c: 245: for(k = 0 ; k < dist ; k++){
"245
{
[e = _k -> 0 `i ]
[e $U 162  ]
[e :U 159 ]
{
[; ;main.c: 246: RA0 = 1;
"246
[e = _RA0 -> -> 1 `i `b ]
[; ;main.c: 247: for(j = 0 ; j < intvl ; j++){
"247
{
[e = _j -> 0 `i ]
[e $U 166  ]
[e :U 163 ]
{
[; ;main.c: 248: _delay((unsigned long)((1)*(4000000/4000000.0)));
"248
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"249
}
"247
[e ++ _j -> 1 `i ]
[e :U 166 ]
[e $ < _j _intvl 163  ]
[e :U 164 ]
"249
}
[; ;main.c: 249: }
[; ;main.c: 250: RA0 = 0;
"250
[e = _RA0 -> -> 0 `i `b ]
[; ;main.c: 251: for(j = 0 ; j < intvl ; j++){
"251
{
[e = _j -> 0 `i ]
[e $U 170  ]
[e :U 167 ]
{
[; ;main.c: 252: _delay((unsigned long)((1)*(4000000/4000000.0)));
"252
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"253
}
"251
[e ++ _j -> 1 `i ]
[e :U 170 ]
[e $ < _j _intvl 167  ]
[e :U 168 ]
"253
}
"254
}
"245
[e ++ _k -> 1 `i ]
[e :U 162 ]
[e $ < _k _dist 159  ]
[e :U 160 ]
"254
}
"255
}
[e :U 146 ]
[; ;main.c: 253: }
[; ;main.c: 254: }
[; ;main.c: 255: }
[; ;main.c: 258: printf("C\tOSC\r\n");
"258
[e ( _printf :s 27C ]
[; ;main.c: 259: break;
"259
[e $U 86  ]
[; ;main.c: 261: case NTD :
"261
[e :U 171 ]
[; ;main.c: 262: dist = 10000;
"262
[e = _dist -> 10000 `i ]
[; ;main.c: 263: for(k = 0 ; k < dist ; k++){
"263
{
[e = _k -> 0 `i ]
[e $U 175  ]
[e :U 172 ]
{
[; ;main.c: 264: RA0 = 1;
"264
[e = _RA0 -> -> 1 `i `b ]
[; ;main.c: 265: for(j = 0 ; j < intvl ; j++){
"265
{
[e = _j -> 0 `i ]
[e $U 179  ]
[e :U 176 ]
{
[; ;main.c: 266: _delay((unsigned long)((1)*(4000000/4000000.0)));
"266
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"267
}
"265
[e ++ _j -> 1 `i ]
[e :U 179 ]
[e $ < _j _intvl 176  ]
[e :U 177 ]
"267
}
[; ;main.c: 267: }
[; ;main.c: 268: RA0 = 0;
"268
[e = _RA0 -> -> 0 `i `b ]
[; ;main.c: 269: for(j = 0 ; j < intvl ; j++){
"269
{
[e = _j -> 0 `i ]
[e $U 183  ]
[e :U 180 ]
{
[; ;main.c: 270: _delay((unsigned long)((1)*(4000000/4000000.0)));
"270
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"271
}
"269
[e ++ _j -> 1 `i ]
[e :U 183 ]
[e $ < _j _intvl 180  ]
[e :U 181 ]
"271
}
[; ;main.c: 271: }
[; ;main.c: 273: if(RB0 == 0){
"273
[e $ ! == -> _RB0 `i -> 0 `i 184  ]
{
[; ;main.c: 274: break;
"274
[e $U 173  ]
"275
}
[e :U 184 ]
"277
}
"263
[e ++ _k -> 1 `i ]
[e :U 175 ]
[e $ < _k _dist 172  ]
[e :U 173 ]
"277
}
[; ;main.c: 275: }
[; ;main.c: 277: }
[; ;main.c: 279: printf("C\tNTD\r\n");
"279
[e ( _printf :s 28C ]
[; ;main.c: 281: break;
"281
[e $U 86  ]
[; ;main.c: 283: case NDO :
"283
[e :U 185 ]
[; ;main.c: 284: ptr = strtok((0), "/");
"284
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 29C ]
[; ;main.c: 285: if(ptr != (0)) {
"285
[e $ ! != _ptr -> -> 0 `i `*uc 186  ]
{
[; ;main.c: 286: dist = atoi(ptr);
"286
[e = _dist ( _atoi (1 -> _ptr `*Cuc ]
"287
}
[e :U 186 ]
[; ;main.c: 287: }
[; ;main.c: 289: for(k = 0 ; k < 10000 ; k++){
"289
{
[e = _k -> 0 `i ]
[e $ < _k -> 10000 `i 187  ]
[e $U 188  ]
[e :U 187 ]
{
[; ;main.c: 290: RA0 = 1;
"290
[e = _RA0 -> -> 1 `i `b ]
[; ;main.c: 291: for(j = 0 ; j < intvl ; j++){
"291
{
[e = _j -> 0 `i ]
[e $U 193  ]
[e :U 190 ]
{
[; ;main.c: 292: _delay((unsigned long)((1)*(4000000/4000000.0)));
"292
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"293
}
"291
[e ++ _j -> 1 `i ]
[e :U 193 ]
[e $ < _j _intvl 190  ]
[e :U 191 ]
"293
}
[; ;main.c: 293: }
[; ;main.c: 294: RA0 = 0;
"294
[e = _RA0 -> -> 0 `i `b ]
[; ;main.c: 295: for(j = 0 ; j < intvl ; j++){
"295
{
[e = _j -> 0 `i ]
[e $U 197  ]
[e :U 194 ]
{
[; ;main.c: 296: _delay((unsigned long)((1)*(4000000/4000000.0)));
"296
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"297
}
"295
[e ++ _j -> 1 `i ]
[e :U 197 ]
[e $ < _j _intvl 194  ]
[e :U 195 ]
"297
}
[; ;main.c: 297: }
[; ;main.c: 299: if(RB0 == 0){
"299
[e $ ! == -> _RB0 `i -> 0 `i 198  ]
{
[; ;main.c: 300: break;
"300
[e $U 188  ]
"301
}
[e :U 198 ]
"303
}
"289
[e ++ _k -> 1 `i ]
[e $ < _k -> 10000 `i 187  ]
[e :U 188 ]
"303
}
[; ;main.c: 301: }
[; ;main.c: 303: }
[; ;main.c: 305: for(k = 0 ; k < dist ; k++){
"305
{
[e = _k -> 0 `i ]
[e $U 202  ]
[e :U 199 ]
{
[; ;main.c: 306: RA1 = 1;
"306
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 307: for(j = 0 ; j < intvl ; j++){
"307
{
[e = _j -> 0 `i ]
[e $U 206  ]
[e :U 203 ]
{
[; ;main.c: 308: _delay((unsigned long)((1)*(4000000/4000000.0)));
"308
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"309
}
"307
[e ++ _j -> 1 `i ]
[e :U 206 ]
[e $ < _j _intvl 203  ]
[e :U 204 ]
"309
}
[; ;main.c: 309: }
[; ;main.c: 310: RA1 = 0;
"310
[e = _RA1 -> -> 0 `i `b ]
[; ;main.c: 311: for(j = 0 ; j < intvl ; j++){
"311
{
[e = _j -> 0 `i ]
[e $U 210  ]
[e :U 207 ]
{
[; ;main.c: 312: _delay((unsigned long)((1)*(4000000/4000000.0)));
"312
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"313
}
"311
[e ++ _j -> 1 `i ]
[e :U 210 ]
[e $ < _j _intvl 207  ]
[e :U 208 ]
"313
}
"314
}
"305
[e ++ _k -> 1 `i ]
[e :U 202 ]
[e $ < _k _dist 199  ]
[e :U 200 ]
"314
}
[; ;main.c: 313: }
[; ;main.c: 314: }
[; ;main.c: 317: printf("C\tNDO\r\n");
"317
[e ( _printf :s 30C ]
[; ;main.c: 318: break;
"318
[e $U 86  ]
[; ;main.c: 320: case NDD :
"320
[e :U 211 ]
[; ;main.c: 321: for(k = 0 ; k < 10000 ; k++){
"321
{
[e = _k -> 0 `i ]
[e $ < _k -> 10000 `i 212  ]
[e $U 213  ]
[e :U 212 ]
{
[; ;main.c: 322: RA0 = 1;
"322
[e = _RA0 -> -> 1 `i `b ]
[; ;main.c: 323: for(j = 0 ; j < intvl ; j++){
"323
{
[e = _j -> 0 `i ]
[e $U 218  ]
[e :U 215 ]
{
[; ;main.c: 324: _delay((unsigned long)((1)*(4000000/4000000.0)));
"324
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"325
}
"323
[e ++ _j -> 1 `i ]
[e :U 218 ]
[e $ < _j _intvl 215  ]
[e :U 216 ]
"325
}
[; ;main.c: 325: }
[; ;main.c: 326: RA0 = 0;
"326
[e = _RA0 -> -> 0 `i `b ]
[; ;main.c: 327: for(j = 0 ; j < intvl ; j++){
"327
{
[e = _j -> 0 `i ]
[e $U 222  ]
[e :U 219 ]
{
[; ;main.c: 328: _delay((unsigned long)((1)*(4000000/4000000.0)));
"328
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"329
}
"327
[e ++ _j -> 1 `i ]
[e :U 222 ]
[e $ < _j _intvl 219  ]
[e :U 220 ]
"329
}
[; ;main.c: 329: }
[; ;main.c: 331: if(RB0 == 0){
"331
[e $ ! == -> _RB0 `i -> 0 `i 223  ]
{
[; ;main.c: 332: break;
"332
[e $U 213  ]
"333
}
[e :U 223 ]
"334
}
"321
[e ++ _k -> 1 `i ]
[e $ < _k -> 10000 `i 212  ]
[e :U 213 ]
"334
}
[; ;main.c: 333: }
[; ;main.c: 334: }
[; ;main.c: 336: for(k = 0 ; k < npd ; k++){
"336
{
[e = _k -> 0 `i ]
[e $U 227  ]
[e :U 224 ]
{
[; ;main.c: 337: RA1 = 1;
"337
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 338: for(j = 0 ; j < intvl ; j++){
"338
{
[e = _j -> 0 `i ]
[e $U 231  ]
[e :U 228 ]
{
[; ;main.c: 339: _delay((unsigned long)((1)*(4000000/4000000.0)));
"339
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"340
}
"338
[e ++ _j -> 1 `i ]
[e :U 231 ]
[e $ < _j _intvl 228  ]
[e :U 229 ]
"340
}
[; ;main.c: 340: }
[; ;main.c: 341: RA1 = 0;
"341
[e = _RA1 -> -> 0 `i `b ]
[; ;main.c: 342: for(j = 0 ; j < intvl ; j++){
"342
{
[e = _j -> 0 `i ]
[e $U 235  ]
[e :U 232 ]
{
[; ;main.c: 343: _delay((unsigned long)((1)*(4000000/4000000.0)));
"343
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"344
}
"342
[e ++ _j -> 1 `i ]
[e :U 235 ]
[e $ < _j _intvl 232  ]
[e :U 233 ]
"344
}
"345
}
"336
[e ++ _k -> 1 `i ]
[e :U 227 ]
[e $ < _k _npd 224  ]
[e :U 225 ]
"345
}
[; ;main.c: 344: }
[; ;main.c: 345: }
[; ;main.c: 348: printf("C\tNDD\r\n");
"348
[e ( _printf :s 31C ]
[; ;main.c: 349: break;
"349
[e $U 86  ]
[; ;main.c: 351: case NSD :
"351
[e :U 236 ]
[; ;main.c: 353: for(k = 0 ; k < nsp ; k++){
"353
{
[e = _k -> 0 `i ]
[e $U 240  ]
[e :U 237 ]
{
[; ;main.c: 354: RA1 = 1;
"354
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 355: for(j = 0 ; j < intvl ; j++){
"355
{
[e = _j -> 0 `i ]
[e $U 244  ]
[e :U 241 ]
{
[; ;main.c: 356: _delay((unsigned long)((1)*(4000000/4000000.0)));
"356
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"357
}
"355
[e ++ _j -> 1 `i ]
[e :U 244 ]
[e $ < _j _intvl 241  ]
[e :U 242 ]
"357
}
[; ;main.c: 357: }
[; ;main.c: 358: RA1 = 0;
"358
[e = _RA1 -> -> 0 `i `b ]
[; ;main.c: 359: for(j = 0 ; j < intvl ; j++){
"359
{
[e = _j -> 0 `i ]
[e $U 248  ]
[e :U 245 ]
{
[; ;main.c: 360: _delay((unsigned long)((1)*(4000000/4000000.0)));
"360
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"361
}
"359
[e ++ _j -> 1 `i ]
[e :U 248 ]
[e $ < _j _intvl 245  ]
[e :U 246 ]
"361
}
"362
}
"353
[e ++ _k -> 1 `i ]
[e :U 240 ]
[e $ < _k _nsp 237  ]
[e :U 238 ]
"362
}
[; ;main.c: 361: }
[; ;main.c: 362: }
[; ;main.c: 365: printf("C\tNSD\r\n");
"365
[e ( _printf :s 32C ]
[; ;main.c: 366: break;
"366
[e $U 86  ]
[; ;main.c: 368: case NPD :
"368
[e :U 249 ]
[; ;main.c: 369: ptr = strtok((0), "/");
"369
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 33C ]
[; ;main.c: 370: if(ptr != (0)) {
"370
[e $ ! != _ptr -> -> 0 `i `*uc 250  ]
{
[; ;main.c: 371: npd = atoi(ptr);
"371
[e = _npd ( _atoi (1 -> _ptr `*Cuc ]
"372
}
[e :U 250 ]
[; ;main.c: 372: }
[; ;main.c: 373: printf("C\tNPD\r\n");
"373
[e ( _printf :s 34C ]
[; ;main.c: 374: break;
"374
[e $U 86  ]
[; ;main.c: 376: case NSP :
"376
[e :U 251 ]
[; ;main.c: 377: ptr = strtok((0), "/");
"377
[e = _ptr ( _strtok (2 , -> -> 0 `i `*uc :s 35C ]
[; ;main.c: 378: if(ptr != (0)) {
"378
[e $ ! != _ptr -> -> 0 `i `*uc 252  ]
{
[; ;main.c: 379: nsp = atoi(ptr);
"379
[e = _nsp ( _atoi (1 -> _ptr `*Cuc ]
"380
}
[e :U 252 ]
[; ;main.c: 380: }
[; ;main.c: 381: printf("C\tNSP\r\n");
"381
[e ( _printf :s 36C ]
[; ;main.c: 382: break;
"382
[e $U 86  ]
[; ;main.c: 384: case STS :
"384
[e :U 253 ]
[; ;main.c: 385: printf("C\tREADY\r\n");
"385
[e ( _printf :s 37C ]
[; ;main.c: 386: break;
"386
[e $U 86  ]
[; ;main.c: 388: case VER :
"388
[e :U 254 ]
[; ;main.c: 389: printf("C\tVERSION 2\r\n");
"389
[e ( _printf :s 38C ]
[; ;main.c: 390: break;
"390
[e $U 86  ]
[; ;main.c: 392: default : break;
"392
[e :U 255 ]
[e $U 86  ]
"393
}
[; ;main.c: 393: }
[e $U 86  ]
"147
[e :U 87 ]
[e [\ _cmd , $ . `E765 0 88
 , $ . `E765 1 116
 , $ . `E765 2 119
 , $ . `E765 3 171
 , $ . `E765 4 185
 , $ . `E765 5 211
 , $ . `E765 8 236
 , $ . `E765 6 249
 , $ . `E765 7 251
 , $ . `E765 10 253
 , $ . `E765 9 254
 255 ]
"393
[e :U 86 ]
"400
}
[e :U 57 ]
"90
[e $U 58  ]
[e :U 59 ]
[; ;main.c: 400: }
[; ;main.c: 401: }
"401
[e :UE 56 ]
}
[p f _printf 8388608 ]
[a 8C 83 84 83 0 ]
[a 1C 82 80 83 0 ]
[a 7C 86 69 82 0 ]
[a 10C 78 83 80 0 ]
[a 5C 78 68 79 0 ]
[a 4C 78 84 68 0 ]
[a 11C 78 83 68 0 ]
[a 9C 78 80 68 0 ]
[a 6C 78 68 68 0 ]
[a 3C 79 83 67 0 ]
[a 2C 87 84 66 0 ]
[a 12C 47 0 ]
[a 13C 47 0 ]
[a 14C 47 0 ]
[a 15C 47 0 ]
[a 16C 47 0 ]
[a 18C 47 0 ]
[a 19C 47 0 ]
[a 20C 47 0 ]
[a 22C 47 0 ]
[a 23C 47 0 ]
[a 24C 47 0 ]
[a 25C 47 0 ]
[a 26C 47 0 ]
[a 29C 47 0 ]
[a 33C 47 0 ]
[a 35C 47 0 ]
[a 37C 67 9 82 69 65 68 89 13 10 0 ]
[a 17C 67 9 82 80 83 13 10 0 ]
[a 36C 67 9 78 83 80 13 10 0 ]
[a 30C 67 9 78 68 79 13 10 0 ]
[a 28C 67 9 78 84 68 13 10 0 ]
[a 32C 67 9 78 83 68 13 10 0 ]
[a 34C 67 9 78 80 68 13 10 0 ]
[a 31C 67 9 78 68 68 13 10 0 ]
[a 27C 67 9 79 83 67 13 10 0 ]
[a 21C 67 9 87 84 66 13 10 0 ]
[a 38C 67 9 86 69 82 83 73 79 78 32 50 13 10 0 ]
