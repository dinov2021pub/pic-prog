

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 25 15:40:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 09/02/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F648A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     008C                     	;# 
    91     008E                     	;# 
    92     0092                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009A                     	;# 
    96     009B                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009F                     	;# 
   100     0000                     	;# 
   101     0001                     	;# 
   102     0002                     	;# 
   103     0003                     	;# 
   104     0004                     	;# 
   105     0005                     	;# 
   106     0006                     	;# 
   107     000A                     	;# 
   108     000B                     	;# 
   109     000C                     	;# 
   110     000E                     	;# 
   111     000E                     	;# 
   112     000F                     	;# 
   113     0010                     	;# 
   114     0011                     	;# 
   115     0012                     	;# 
   116     0015                     	;# 
   117     0015                     	;# 
   118     0016                     	;# 
   119     0017                     	;# 
   120     0018                     	;# 
   121     0019                     	;# 
   122     001A                     	;# 
   123     001F                     	;# 
   124     0081                     	;# 
   125     0085                     	;# 
   126     0086                     	;# 
   127     008C                     	;# 
   128     008E                     	;# 
   129     0092                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009F                     	;# 
   137     0000                     	;# 
   138     0001                     	;# 
   139     0002                     	;# 
   140     0003                     	;# 
   141     0004                     	;# 
   142     0005                     	;# 
   143     0006                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001F                     	;# 
   161     0081                     	;# 
   162     0085                     	;# 
   163     0086                     	;# 
   164     008C                     	;# 
   165     008E                     	;# 
   166     0092                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009A                     	;# 
   170     009B                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009F                     	;# 
   174                           
   175                           	psect	strings
   176     0002                     __pstrings:
   177     0002                     stringtab:
   178     0002                     __stringtab:
   179                           
   180                           ;	String table - string pointers are 1 byte each
   181     0002  1BFF               	btfsc	btemp+1,7
   182     0003  280C               	ljmp	stringcode
   183     0004  1383               	bcf	3,7
   184     0005  187F               	btfsc	btemp+1,0
   185     0006  1783               	bsf	3,7
   186     0007  0800               	movf	0,w
   187     0008  0A84               	incf	4,f
   188     0009  1903               	skipnz
   189     000A  0AFF               	incf	btemp+1,f
   190     000B  0008               	return
   191     000C                     stringcode:
   192     000C                     stringdir:
   193     000C  3000               	movlw	high stringdir
   194     000D  008A               	movwf	10
   195     000E  0804               	movf	4,w
   196     000F  0A84               	incf	4,f
   197     0010  0782               	addwf	2,f
   198     0011                     __stringbase:
   199     0011  3400               	retlw	0
   200     0012                     __end_of__stringtab:
   201     0012                     _dpowers:
   202     0012  3401               	retlw	1
   203     0013  3400               	retlw	0
   204     0014  340A               	retlw	10
   205     0015  3400               	retlw	0
   206     0016  3464               	retlw	100
   207     0017  3400               	retlw	0
   208     0018  34E8               	retlw	232
   209     0019  3403               	retlw	3
   210     001A  3410               	retlw	16
   211     001B  3427               	retlw	39
   212     001C                     __end_of_dpowers:
   213     001A                     _RCREG	set	26
   214     0019                     _TXREG	set	25
   215     0018                     _RCSTA	set	24
   216     001F                     _CMCON	set	31
   217     0006                     _PORTB	set	6
   218     0005                     _PORTA	set	5
   219     0065                     _RCIF	set	101
   220     0064                     _TXIF	set	100
   221     0037                     _RB7	set	55
   222     0036                     _RB6	set	54
   223     0035                     _RB5	set	53
   224     0034                     _RB4	set	52
   225     0098                     _TXSTA	set	152
   226     0099                     _SPBRG	set	153
   227     0086                     _TRISB	set	134
   228     0085                     _TRISA	set	133
   229     001C                     STR_16:
   230     001C  344D               	retlw	77	;'M'
   231     001D  344F               	retlw	79	;'O'
   232     001E  3454               	retlw	84	;'T'
   233     001F  344F               	retlw	79	;'O'
   234     0020  3452               	retlw	82	;'R'
   235     0021  3420               	retlw	32	;' '
   236     0022  343D               	retlw	61	;'='
   237     0023  3420               	retlw	32	;' '
   238     0024  3442               	retlw	66	;'B'
   239     0025  3420               	retlw	32	;' '
   240     0026  3420               	retlw	32	;' '
   241     0027  344F               	retlw	79	;'O'
   242     0028  344B               	retlw	75	;'K'
   243     0029  340D               	retlw	13
   244     002A  340A               	retlw	10
   245     002B  3400               	retlw	0
   246     002C                     STR_12:
   247     002C  344D               	retlw	77	;'M'
   248     002D  344F               	retlw	79	;'O'
   249     002E  3454               	retlw	84	;'T'
   250     002F  344F               	retlw	79	;'O'
   251     0030  3452               	retlw	82	;'R'
   252     0031  3420               	retlw	32	;' '
   253     0032  343D               	retlw	61	;'='
   254     0033  3420               	retlw	32	;' '
   255     0034  3446               	retlw	70	;'F'
   256     0035  3420               	retlw	32	;' '
   257     0036  3420               	retlw	32	;' '
   258     0037  344F               	retlw	79	;'O'
   259     0038  344B               	retlw	75	;'K'
   260     0039  340D               	retlw	13
   261     003A  340A               	retlw	10
   262     003B  3400               	retlw	0
   263     003C                     STR_15:
   264     003C  344D               	retlw	77	;'M'
   265     003D  344F               	retlw	79	;'O'
   266     003E  3454               	retlw	84	;'T'
   267     003F  344F               	retlw	79	;'O'
   268     0040  3452               	retlw	82	;'R'
   269     0041  3420               	retlw	32	;' '
   270     0042  343D               	retlw	61	;'='
   271     0043  3420               	retlw	32	;' '
   272     0044  3442               	retlw	66	;'B'
   273     0045  3420               	retlw	32	;' '
   274     0046  3420               	retlw	32	;' '
   275     0047  344F               	retlw	79	;'O'
   276     0048  344B               	retlw	75	;'K'
   277     0049  3400               	retlw	0
   278     004A                     STR_11:
   279     004A  344D               	retlw	77	;'M'
   280     004B  344F               	retlw	79	;'O'
   281     004C  3454               	retlw	84	;'T'
   282     004D  344F               	retlw	79	;'O'
   283     004E  3452               	retlw	82	;'R'
   284     004F  3420               	retlw	32	;' '
   285     0050  343D               	retlw	61	;'='
   286     0051  3420               	retlw	32	;' '
   287     0052  3446               	retlw	70	;'F'
   288     0053  3420               	retlw	32	;' '
   289     0054  3420               	retlw	32	;' '
   290     0055  344F               	retlw	79	;'O'
   291     0056  344B               	retlw	75	;'K'
   292     0057  3400               	retlw	0
   293     0058                     STR_10:
   294     0058  346C               	retlw	108	;'l'
   295     0059  3465               	retlw	101	;'e'
   296     005A  346E               	retlw	110	;'n'
   297     005B  3467               	retlw	103	;'g'
   298     005C  3474               	retlw	116	;'t'
   299     005D  3468               	retlw	104	;'h'
   300     005E  3420               	retlw	32	;' '
   301     005F  343D               	retlw	61	;'='
   302     0060  3420               	retlw	32	;' '
   303     0061  3425               	retlw	37	;'%'
   304     0062  3464               	retlw	100	;'d'
   305     0063  340D               	retlw	13
   306     0064  3400               	retlw	0
   307     0065                     STR_9:
   308     0065  3473               	retlw	115	;'s'
   309     0066  3470               	retlw	112	;'p'
   310     0067  3465               	retlw	101	;'e'
   311     0068  3465               	retlw	101	;'e'
   312     0069  3464               	retlw	100	;'d'
   313     006A  3420               	retlw	32	;' '
   314     006B  343D               	retlw	61	;'='
   315     006C  3420               	retlw	32	;' '
   316     006D  3425               	retlw	37	;'%'
   317     006E  3464               	retlw	100	;'d'
   318     006F  340D               	retlw	13
   319     0070  3400               	retlw	0
   320     0071                     STR_22:
   321     0071  3428               	retlw	40	;'('
   322     0072  346E               	retlw	110	;'n'
   323     0073  3475               	retlw	117	;'u'
   324     0074  346C               	retlw	108	;'l'
   325     0075  346C               	retlw	108	;'l'
   326     0076  3429               	retlw	41	;')'
   327     0077  3400               	retlw	0
   328     0078                     STR_20:
   329     0078  3424               	retlw	36	;'$'
   330     0079  3431               	retlw	49	;'1'
   331     007A  342E               	retlw	46	;'.'
   332     007B  3430               	retlw	48	;'0'
   333     007C  340D               	retlw	13
   334     007D  3400               	retlw	0
   335     007E                     STR_8:
   336     007E  3425               	retlw	37	;'%'
   337     007F  3464               	retlw	100	;'d'
   338     0080  340A               	retlw	10
   339     0081  3400               	retlw	0
   340     0082                     STR_7:
   341     0082  3425               	retlw	37	;'%'
   342     0083  3473               	retlw	115	;'s'
   343     0084  340A               	retlw	10
   344     0085  3400               	retlw	0
   345     0086                     STR_17:
   346     0086  344D               	retlw	77	;'M'
   347     0087  3446               	retlw	70	;'F'
   348     0088  340D               	retlw	13
   349     0089  3400               	retlw	0
   350     008A                     STR_18:
   351     008A  344D               	retlw	77	;'M'
   352     008B  3452               	retlw	82	;'R'
   353     008C  340D               	retlw	13
   354     008D  3400               	retlw	0
   355     008E                     STR_5:
   356     008E  3424               	retlw	36	;'$'
   357     008F  3446               	retlw	70	;'F'
   358     0090  3443               	retlw	67	;'C'
   359     0091  3400               	retlw	0
   360     0092                     STR_6:
   361     0092  3424               	retlw	36	;'$'
   362     0093  3456               	retlw	86	;'V'
   363     0094  3445               	retlw	69	;'E'
   364     0095  3400               	retlw	0
   365     0096                     STR_1:
   366     0096  3424               	retlw	36	;'$'
   367     0097  3437               	retlw	55	;'7'
   368     0098  3446               	retlw	70	;'F'
   369     0099  3400               	retlw	0
   370     009A                     STR_3:
   371     009A  3424               	retlw	36	;'$'
   372     009B  344D               	retlw	77	;'M'
   373     009C  3446               	retlw	70	;'F'
   374     009D  3400               	retlw	0
   375     009E                     STR_2:
   376     009E  3424               	retlw	36	;'$'
   377     009F  3437               	retlw	55	;'7'
   378     00A0  3452               	retlw	82	;'R'
   379     00A1  3400               	retlw	0
   380     00A2                     STR_4:
   381     00A2  3424               	retlw	36	;'$'
   382     00A3  344D               	retlw	77	;'M'
   383     00A4  3452               	retlw	82	;'R'
   384     00A5  3400               	retlw	0
   385     00A6                     STR_19:
   386     00A6  3446               	retlw	70	;'F'
   387     00A7  3443               	retlw	67	;'C'
   388     00A8  3472               	retlw	114	;'r'
   389     00A9  3400               	retlw	0
   390     0078                     
   391                           	psect	cinit
   392     07FD                     start_initialization:	
   393                           ; #config settings
   394                           
   395     07FD                     __initialization:
   396     07FD                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399     07FD                     __end_of__initialization:
   400     07FD  0183               	clrf	3
   401     07FE  118A  2D31         	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	cstackCOMMON
   404     0070                     __pcstackCOMMON:
   405     0070                     ?_isdigit:
   406     0070                     ?_initUART:	
   407                           ; 1 bit 
   408                           
   409     0070                     ??_initUART:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?_gets:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ??_isdigit:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ?_cgets:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0070                     ?_cputs:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ?_main:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     ?_putch:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ??_putch:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ?_getch:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ??_getch:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_getche:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ?_strcmp:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_puts:	
   446                           ; 2 bytes @ 0x0
   447                           
   448     0070                     ?___wmul:	
   449                           ; 2 bytes @ 0x0
   450                           
   451     0070                     ?___awdiv:	
   452                           ; 2 bytes @ 0x0
   453                           
   454     0070                     ?___lwdiv:	
   455                           ; 2 bytes @ 0x0
   456                           
   457     0070                     putch@byte:	
   458                           ; 2 bytes @ 0x0
   459                           
   460     0070                     _isdigit$617:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     strcmp@s2:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ___wmul@multiplier:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ___awdiv@divisor:	
   470                           ; 2 bytes @ 0x0
   471                           
   472     0070                     ___lwdiv@divisor:	
   473                           ; 2 bytes @ 0x0
   474                           
   475                           
   476                           ; 2 bytes @ 0x0
   477     0070                     	ds	1
   478     0071                     ??_cputs:
   479     0071                     ??_getche:	
   480                           ; 1 bytes @ 0x1
   481                           
   482     0071                     getche@c:	
   483                           ; 1 bytes @ 0x1
   484                           
   485     0071                     isdigit@c:	
   486                           ; 1 bytes @ 0x1
   487                           
   488     0071                     cputs@s:	
   489                           ; 1 bytes @ 0x1
   490                           
   491                           
   492                           ; 1 bytes @ 0x1
   493     0071                     	ds	1
   494     0072                     ??_strcmp:
   495     0072                     ??_puts:	
   496                           ; 1 bytes @ 0x2
   497                           
   498     0072                     ??_cgets:	
   499                           ; 1 bytes @ 0x2
   500                           
   501     0072                     puts@s:	
   502                           ; 1 bytes @ 0x2
   503                           
   504     0072                     ___wmul@multiplicand:	
   505                           ; 1 bytes @ 0x2
   506                           
   507     0072                     ___awdiv@dividend:	
   508                           ; 2 bytes @ 0x2
   509                           
   510     0072                     ___lwdiv@dividend:	
   511                           ; 2 bytes @ 0x2
   512                           
   513                           
   514                           ; 2 bytes @ 0x2
   515     0072                     	ds	2
   516     0074                     ??___wmul:
   517     0074                     ??___awdiv:	
   518                           ; 1 bytes @ 0x4
   519                           
   520     0074                     ??___lwdiv:	
   521                           ; 1 bytes @ 0x4
   522                           
   523     0074                     ___awdiv@counter:	
   524                           ; 1 bytes @ 0x4
   525                           
   526     0074                     strcmp@r:	
   527                           ; 1 bytes @ 0x4
   528                           
   529     0074                     ___wmul@product:	
   530                           ; 1 bytes @ 0x4
   531                           
   532     0074                     ___lwdiv@quotient:	
   533                           ; 2 bytes @ 0x4
   534                           
   535     0074                     cgets@c:	
   536                           ; 2 bytes @ 0x4
   537                           
   538                           
   539                           ; 2 bytes @ 0x4
   540     0074                     	ds	1
   541     0075                     ___awdiv@sign:
   542     0075                     strcmp@s1:	
   543                           ; 1 bytes @ 0x5
   544                           
   545                           
   546                           ; 1 bytes @ 0x5
   547     0075                     	ds	1
   548     0076                     ?_atoi:
   549     0076                     ___lwdiv@counter:	
   550                           ; 2 bytes @ 0x6
   551                           
   552     0076                     cgets@s:	
   553                           ; 1 bytes @ 0x6
   554                           
   555     0076                     ___awdiv@quotient:	
   556                           ; 1 bytes @ 0x6
   557                           
   558                           
   559                           ; 2 bytes @ 0x6
   560     0076                     	ds	1
   561     0077                     ?___lwmod:
   562     0077                     cgets@s1:	
   563                           ; 2 bytes @ 0x7
   564                           
   565     0077                     ___lwmod@divisor:	
   566                           ; 1 bytes @ 0x7
   567                           
   568                           
   569                           ; 2 bytes @ 0x7
   570     0077                     	ds	1
   571     0078                     ??_gets:
   572     0078                     ??_atoi:	
   573                           ; 1 bytes @ 0x8
   574                           
   575     0078                     gets@s:	
   576                           ; 1 bytes @ 0x8
   577                           
   578                           
   579                           ; 1 bytes @ 0x8
   580     0078                     	ds	1
   581     0079                     ___lwmod@dividend:
   582                           
   583                           ; 2 bytes @ 0x9
   584     0079                     	ds	1
   585     007A                     atoi@sign:
   586                           
   587                           ; 1 bytes @ 0xA
   588     007A                     	ds	1
   589     007B                     ??___lwmod:
   590     007B                     ___lwmod@counter:	
   591                           ; 1 bytes @ 0xB
   592                           
   593     007B                     atoi@a:	
   594                           ; 1 bytes @ 0xB
   595                           
   596                           
   597                           ; 2 bytes @ 0xB
   598     007B                     	ds	1
   599     007C                     ?_printf:
   600                           
   601                           ; 2 bytes @ 0xC
   602     007C                     	ds	1
   603     007D                     atoi@s:
   604                           
   605                           ; 1 bytes @ 0xD
   606     007D                     	ds	1
   607                           
   608                           	psect	cstackBANK0
   609     0020                     __pcstackBANK0:
   610     0020                     ??_printf:
   611                           
   612                           ; 1 bytes @ 0x0
   613     0020                     	ds	3
   614     0023                     printf@flag:
   615                           
   616                           ; 1 bytes @ 0x3
   617     0023                     	ds	1
   618     0024                     printf@prec:
   619                           
   620                           ; 1 bytes @ 0x4
   621     0024                     	ds	1
   622     0025                     printf@ap:
   623                           
   624                           ; 1 bytes @ 0x5
   625     0025                     	ds	1
   626     0026                     printf@cp:
   627                           
   628                           ; 2 bytes @ 0x6
   629     0026                     	ds	2
   630     0028                     printf@val:
   631                           
   632                           ; 2 bytes @ 0x8
   633     0028                     	ds	2
   634     002A                     printf@f:
   635                           
   636                           ; 1 bytes @ 0xA
   637     002A                     	ds	1
   638     002B                     printf@c:
   639                           
   640                           ; 1 bytes @ 0xB
   641     002B                     	ds	1
   642     002C                     ??_main:
   643                           
   644                           ; 1 bytes @ 0xC
   645     002C                     	ds	2
   646     002E                     main@tmp:
   647                           
   648                           ; 20 bytes @ 0xE
   649     002E                     	ds	20
   650     0042                     main@rcmd:
   651                           
   652                           ; 4 bytes @ 0x22
   653     0042                     	ds	4
   654     0046                     main@speed:
   655                           
   656                           ; 5 bytes @ 0x26
   657     0046                     	ds	5
   658     004B                     main@ln:
   659                           
   660                           ; 4 bytes @ 0x2B
   661     004B                     	ds	4
   662     004F                     main@k:
   663                           
   664                           ; 2 bytes @ 0x2F
   665     004F                     	ds	2
   666     0051                     main@cmd:
   667                           
   668                           ; 1 bytes @ 0x31
   669     0051                     	ds	1
   670     0052                     main@spd:
   671                           
   672                           ; 2 bytes @ 0x32
   673     0052                     	ds	2
   674     0054                     main@hln:
   675                           
   676                           ; 2 bytes @ 0x34
   677     0054                     	ds	2
   678     0056                     main@intvl:
   679                           
   680                           ; 2 bytes @ 0x36
   681     0056                     	ds	2
   682     0058                     main@j:
   683                           
   684                           ; 2 bytes @ 0x38
   685     0058                     	ds	2
   686                           
   687                           	psect	maintext
   688     0531                     __pmaintext:	
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   691 ;;
   692 ;; *************** function _main *****************
   693 ;; Defined at:
   694 ;;		line 53 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  speed           5   38[BANK0 ] unsigned char [5]
   699 ;;  ln              4   43[BANK0 ] unsigned char [4]
   700 ;;  rcmd            4   34[BANK0 ] unsigned char [4]
   701 ;;  hln             2   52[BANK0 ] int 
   702 ;;  spd             2   50[BANK0 ] int 
   703 ;;  mx_spd          2    0        int 
   704 ;;  set_spd         2    0        int 
   705 ;;  cmd             1   49[BANK0 ] enum E765
   706 ;;  tmp            20   14[BANK0 ] unsigned char [20]
   707 ;;  j               2   56[BANK0 ] int 
   708 ;;  intvl           2   54[BANK0 ] int 
   709 ;;  k               2   47[BANK0 ] int 
   710 ;;  cnt             2    0        int 
   711 ;;  ptr             2    0        PTR unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : B00/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   721 ;;      Params:         0       0       0       0
   722 ;;      Locals:         0      44       0       0
   723 ;;      Temps:          0       2       0       0
   724 ;;      Totals:         0      46       0       0
   725 ;;Total ram usage:       46 bytes
   726 ;; Hardware stack levels required when called: 4
   727 ;; This function calls:
   728 ;;		___awdiv
   729 ;;		_atoi
   730 ;;		_gets
   731 ;;		_initUART
   732 ;;		_printf
   733 ;;		_puts
   734 ;;		_strcmp
   735 ;; This function is called by:
   736 ;;		Startup code after reset
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740     0531                     _main:	
   741                           ;psect for function _main
   742                           
   743     0531                     l1599:	
   744                           ;incstack = 0
   745                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   746                           
   747                           
   748                           ;main.c: 55: PORTA = 0x00;
   749     0531  1283               	bcf	3,5	;RP0=0, select bank0
   750     0532  1303               	bcf	3,6	;RP1=0, select bank0
   751     0533  0185               	clrf	5	;volatile
   752                           
   753                           ;main.c: 56: PORTB = 0x00;
   754     0534  0186               	clrf	6	;volatile
   755                           
   756                           ;main.c: 57: TRISA = 0b00000000;
   757     0535  1683               	bsf	3,5	;RP0=1, select bank1
   758     0536  1303               	bcf	3,6	;RP1=0, select bank1
   759     0537  0185               	clrf	5	;volatile
   760     0538                     l1601:
   761                           
   762                           ;main.c: 58: TRISB = 0b00000010;
   763     0538  3002               	movlw	2
   764     0539  0086               	movwf	6	;volatile
   765     053A                     l1603:
   766                           
   767                           ;main.c: 59: CMCON = 0b00000111;
   768     053A  3007               	movlw	7
   769     053B  1283               	bcf	3,5	;RP0=0, select bank0
   770     053C  1303               	bcf	3,6	;RP1=0, select bank0
   771     053D  009F               	movwf	31	;volatile
   772     053E                     l1605:
   773                           
   774                           ;main.c: 61: initUART();
   775     053E  118A  220D  118A   	fcall	_initUART
   776     0541                     l1607:
   777     0541                     l1609:
   778     0541                     l1611:
   779     0541                     l1613:
   780     0541                     l1615:
   781                           
   782                           ;main.c: 73: gets(tmp);
   783     0541  302E               	movlw	(low (main@tmp| 0))& (0+255)
   784     0542  118A  21E1  118A   	fcall	_gets
   785     0545                     l1617:
   786     0545                     l1619:
   787                           
   788                           ;main.c: 78: int set_spd;;main.c: 79: int spd;;main.c: 80: char ln[4];;main.c: 81: int h
      +                          ln;;main.c: 83: rcmd[0] = tmp[0];
   789     0545  1283               	bcf	3,5	;RP0=0, select bank0
   790     0546  1303               	bcf	3,6	;RP1=0, select bank0
   791     0547  082E               	movf	main@tmp,w
   792     0548  00C2               	movwf	main@rcmd
   793     0549                     l1621:
   794                           
   795                           ;main.c: 84: rcmd[1] = tmp[1];
   796     0549  082F               	movf	main@tmp+1,w
   797     054A  00C3               	movwf	main@rcmd+1
   798     054B                     l1623:
   799                           
   800                           ;main.c: 85: rcmd[2] = tmp[2];
   801     054B  0830               	movf	main@tmp+2,w
   802     054C  00C4               	movwf	main@rcmd+2
   803     054D                     l1625:
   804                           
   805                           ;main.c: 86: rcmd[3] = '\0';
   806     054D  01C5               	clrf	main@rcmd+3
   807     054E                     l1627:
   808                           
   809                           ;main.c: 88: enum command cmd;;main.c: 90: if(strcmp(rcmd,"$7F") == 0) {
   810     054E  3085               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   811     054F  00F0               	movwf	strcmp@s2
   812     0550  3042               	movlw	(low (main@rcmd| 0))& (0+255)
   813     0551  118A  2268  118A   	fcall	_strcmp
   814     0554  0870               	movf	?_strcmp,w
   815     0555  0471               	iorwf	?_strcmp+1,w
   816     0556  1D03               	btfss	3,2
   817     0557  2D59               	goto	u1191
   818     0558  2D5A               	goto	u1190
   819     0559                     u1191:
   820     0559  2D5E               	goto	l1631
   821     055A                     u1190:
   822     055A                     l1629:
   823                           
   824                           ;main.c: 91: cmd = F;
   825     055A  1283               	bcf	3,5	;RP0=0, select bank0
   826     055B  1303               	bcf	3,6	;RP1=0, select bank0
   827     055C  01D1               	clrf	main@cmd
   828                           
   829                           ;main.c: 92: }else if(strcmp(rcmd,"$7R") == 0) {
   830     055D  2DB3               	goto	l1651
   831     055E                     l1631:
   832     055E  308D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   833     055F  00F0               	movwf	strcmp@s2
   834     0560  3042               	movlw	(low (main@rcmd| 0))& (0+255)
   835     0561  118A  2268  118A   	fcall	_strcmp
   836     0564  0870               	movf	?_strcmp,w
   837     0565  0471               	iorwf	?_strcmp+1,w
   838     0566  1D03               	btfss	3,2
   839     0567  2D69               	goto	u1201
   840     0568  2D6A               	goto	u1200
   841     0569                     u1201:
   842     0569  2D6F               	goto	l1635
   843     056A                     u1200:
   844     056A                     l1633:
   845                           
   846                           ;main.c: 93: cmd = R;
   847     056A  1283               	bcf	3,5	;RP0=0, select bank0
   848     056B  1303               	bcf	3,6	;RP1=0, select bank0
   849     056C  01D1               	clrf	main@cmd
   850     056D  0AD1               	incf	main@cmd,f
   851                           
   852                           ;main.c: 94: }else if(strcmp(rcmd,"$MF") == 0) {
   853     056E  2DB3               	goto	l1651
   854     056F                     l1635:
   855     056F  3089               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   856     0570  00F0               	movwf	strcmp@s2
   857     0571  3042               	movlw	(low (main@rcmd| 0))& (0+255)
   858     0572  118A  2268  118A   	fcall	_strcmp
   859     0575  0870               	movf	?_strcmp,w
   860     0576  0471               	iorwf	?_strcmp+1,w
   861     0577  1D03               	btfss	3,2
   862     0578  2D7A               	goto	u1211
   863     0579  2D7B               	goto	u1210
   864     057A                     u1211:
   865     057A  2D80               	goto	l1639
   866     057B                     u1210:
   867     057B                     l1637:
   868                           
   869                           ;main.c: 95: cmd = MF;
   870     057B  3002               	movlw	2
   871     057C  1283               	bcf	3,5	;RP0=0, select bank0
   872     057D  1303               	bcf	3,6	;RP1=0, select bank0
   873     057E  00D1               	movwf	main@cmd
   874                           
   875                           ;main.c: 96: }else if(strcmp(rcmd,"$MR") == 0) {
   876     057F  2DB3               	goto	l1651
   877     0580                     l1639:
   878     0580  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   879     0581  00F0               	movwf	strcmp@s2
   880     0582  3042               	movlw	(low (main@rcmd| 0))& (0+255)
   881     0583  118A  2268  118A   	fcall	_strcmp
   882     0586  0870               	movf	?_strcmp,w
   883     0587  0471               	iorwf	?_strcmp+1,w
   884     0588  1D03               	btfss	3,2
   885     0589  2D8B               	goto	u1221
   886     058A  2D8C               	goto	u1220
   887     058B                     u1221:
   888     058B  2D91               	goto	l1643
   889     058C                     u1220:
   890     058C                     l1641:
   891                           
   892                           ;main.c: 97: cmd = MR;
   893     058C  3003               	movlw	3
   894     058D  1283               	bcf	3,5	;RP0=0, select bank0
   895     058E  1303               	bcf	3,6	;RP1=0, select bank0
   896     058F  00D1               	movwf	main@cmd
   897                           
   898                           ;main.c: 98: }else if(strcmp(rcmd,"$FC") == 0) {
   899     0590  2DB3               	goto	l1651
   900     0591                     l1643:
   901     0591  307D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   902     0592  00F0               	movwf	strcmp@s2
   903     0593  3042               	movlw	(low (main@rcmd| 0))& (0+255)
   904     0594  118A  2268  118A   	fcall	_strcmp
   905     0597  0870               	movf	?_strcmp,w
   906     0598  0471               	iorwf	?_strcmp+1,w
   907     0599  1D03               	btfss	3,2
   908     059A  2D9C               	goto	u1231
   909     059B  2D9D               	goto	u1230
   910     059C                     u1231:
   911     059C  2DA2               	goto	l1647
   912     059D                     u1230:
   913     059D                     l1645:
   914                           
   915                           ;main.c: 99: cmd = FC;
   916     059D  3004               	movlw	4
   917     059E  1283               	bcf	3,5	;RP0=0, select bank0
   918     059F  1303               	bcf	3,6	;RP1=0, select bank0
   919     05A0  00D1               	movwf	main@cmd
   920                           
   921                           ;main.c: 100: }else if(strcmp(rcmd,"$VE") == 0) {
   922     05A1  2DB3               	goto	l1651
   923     05A2                     l1647:
   924     05A2  3081               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   925     05A3  00F0               	movwf	strcmp@s2
   926     05A4  3042               	movlw	(low (main@rcmd| 0))& (0+255)
   927     05A5  118A  2268  118A   	fcall	_strcmp
   928     05A8  0870               	movf	?_strcmp,w
   929     05A9  0471               	iorwf	?_strcmp+1,w
   930     05AA  1D03               	btfss	3,2
   931     05AB  2DAD               	goto	u1241
   932     05AC  2DAE               	goto	u1240
   933     05AD                     u1241:
   934     05AD  2DB3               	goto	l43
   935     05AE                     u1240:
   936     05AE                     l1649:
   937                           
   938                           ;main.c: 101: cmd = VE;
   939     05AE  3005               	movlw	5
   940     05AF  1283               	bcf	3,5	;RP0=0, select bank0
   941     05B0  1303               	bcf	3,6	;RP1=0, select bank0
   942     05B1  00D1               	movwf	main@cmd
   943     05B2  2DB3               	goto	l1651
   944     05B3                     l43:
   945     05B3                     l1651:
   946                           
   947                           ;main.c: 102: };main.c: 104: printf("%s\n", tmp);
   948     05B3  302E               	movlw	(low (main@tmp| 0))& (0+255)
   949     05B4  00FC               	movwf	?_printf
   950     05B5  3071               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   951     05B6  118A  2445  118A   	fcall	_printf
   952     05B9                     l1653:
   953                           
   954                           ;main.c: 105: printf("%d\n", cmd);
   955     05B9  1283               	bcf	3,5	;RP0=0, select bank0
   956     05BA  1303               	bcf	3,6	;RP1=0, select bank0
   957     05BB  0851               	movf	main@cmd,w
   958     05BC  00AC               	movwf	??_main
   959     05BD  01AD               	clrf	??_main+1
   960     05BE  082C               	movf	??_main,w
   961     05BF  00FC               	movwf	?_printf
   962     05C0  082D               	movf	??_main+1,w
   963     05C1  00FD               	movwf	?_printf+1
   964     05C2  306D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   965     05C3  118A  2445  118A   	fcall	_printf
   966                           
   967                           ;main.c: 107: switch(cmd){
   968     05C6  2FE5               	goto	l1759
   969     05C7                     l1655:
   970     05C7  0831               	movf	main@tmp+3,w
   971     05C8  00C6               	movwf	main@speed
   972                           
   973                           ;main.c: 110: speed[1] = tmp[4];
   974     05C9  0832               	movf	main@tmp+4,w
   975     05CA  00C7               	movwf	main@speed+1
   976                           
   977                           ;main.c: 111: speed[2] = tmp[5];
   978     05CB  0833               	movf	main@tmp+5,w
   979     05CC  00C8               	movwf	main@speed+2
   980                           
   981                           ;main.c: 112: speed[3] = tmp[6];
   982     05CD  0834               	movf	main@tmp+6,w
   983     05CE  00C9               	movwf	main@speed+3
   984     05CF                     l1657:
   985                           
   986                           ;main.c: 113: speed[4] = '\0';
   987     05CF  01CA               	clrf	main@speed+4
   988     05D0                     l1659:
   989                           
   990                           ;main.c: 114: spd = atoi(speed);
   991     05D0  3046               	movlw	(low (main@speed| 0))& (0+255)
   992     05D1  118A  23CE  118A   	fcall	_atoi
   993     05D4  0877               	movf	?_atoi+1,w
   994     05D5  1283               	bcf	3,5	;RP0=0, select bank0
   995     05D6  1303               	bcf	3,6	;RP1=0, select bank0
   996     05D7  00D3               	movwf	main@spd+1
   997     05D8  0876               	movf	?_atoi,w
   998     05D9  00D2               	movwf	main@spd
   999     05DA                     l1661:
  1000                           
  1001                           ;main.c: 115: printf("speed = %d\r", spd);
  1002     05DA  0853               	movf	main@spd+1,w
  1003     05DB  00FD               	movwf	?_printf+1
  1004     05DC  0852               	movf	main@spd,w
  1005     05DD  00FC               	movwf	?_printf
  1006     05DE  3054               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1007     05DF  118A  2445  118A   	fcall	_printf
  1008     05E2                     l1663:
  1009                           
  1010                           ;main.c: 116: ln[0] = tmp[8];
  1011     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1012     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1013     05E4  0836               	movf	main@tmp+8,w
  1014     05E5  00CB               	movwf	main@ln
  1015     05E6                     l1665:
  1016                           
  1017                           ;main.c: 117: ln[1] = tmp[9];
  1018     05E6  0837               	movf	main@tmp+9,w
  1019     05E7  00CC               	movwf	main@ln+1
  1020     05E8                     l1667:
  1021                           
  1022                           ;main.c: 118: ln[2] = tmp[10];
  1023     05E8  0838               	movf	main@tmp+10,w
  1024     05E9  00CD               	movwf	main@ln+2
  1025                           
  1026                           ;main.c: 119: ln[4] = '\0';
  1027     05EA  01CF               	clrf	main@ln+4
  1028     05EB                     l1669:
  1029                           
  1030                           ;main.c: 120: hln = atoi(ln);
  1031     05EB  304B               	movlw	(low (main@ln| 0))& (0+255)
  1032     05EC  118A  23CE  118A   	fcall	_atoi
  1033     05EF  0877               	movf	?_atoi+1,w
  1034     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1035     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1036     05F2  00D5               	movwf	main@hln+1
  1037     05F3  0876               	movf	?_atoi,w
  1038     05F4  00D4               	movwf	main@hln
  1039     05F5                     l1671:
  1040                           
  1041                           ;main.c: 121: printf("length = %d\r", hln);
  1042     05F5  0855               	movf	main@hln+1,w
  1043     05F6  00FD               	movwf	?_printf+1
  1044     05F7  0854               	movf	main@hln,w
  1045     05F8  00FC               	movwf	?_printf
  1046     05F9  3047               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1047     05FA  118A  2445  118A   	fcall	_printf
  1048     05FD                     l1673:
  1049     05FD                     l1675:
  1050                           
  1051                           ;main.c: 124: intvl = (int)(mx_spd / spd);
  1052     05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1053     05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1054     05FF  0853               	movf	main@spd+1,w
  1055     0600  00F1               	movwf	___awdiv@divisor+1
  1056     0601  0852               	movf	main@spd,w
  1057     0602  00F0               	movwf	___awdiv@divisor
  1058     0603  30F4               	movlw	244
  1059     0604  00F2               	movwf	___awdiv@dividend
  1060     0605  3001               	movlw	1
  1061     0606  00F3               	movwf	___awdiv@dividend+1
  1062     0607  118A  2367  118A   	fcall	___awdiv
  1063     060A  0871               	movf	?___awdiv+1,w
  1064     060B  1283               	bcf	3,5	;RP0=0, select bank0
  1065     060C  1303               	bcf	3,6	;RP1=0, select bank0
  1066     060D  00D7               	movwf	main@intvl+1
  1067     060E  0870               	movf	?___awdiv,w
  1068     060F  00D6               	movwf	main@intvl
  1069     0610                     l1677:
  1070                           
  1071                           ;main.c: 125: for(k = 0 ; k < hln ; k++){
  1072     0610  01CF               	clrf	main@k
  1073     0611  01D0               	clrf	main@k+1
  1074     0612  2EB3               	goto	l51
  1075     0613                     l52:
  1076                           
  1077                           ;main.c: 126: RB4 = 1;
  1078     0613  1283               	bcf	3,5	;RP0=0, select bank0
  1079     0614  1303               	bcf	3,6	;RP1=0, select bank0
  1080     0615  1606               	bsf	6,4	;volatile
  1081                           
  1082                           ;main.c: 127: RB5 = 0;
  1083     0616  1286               	bcf	6,5	;volatile
  1084                           
  1085                           ;main.c: 128: RB6 = 0;
  1086     0617  1306               	bcf	6,6	;volatile
  1087                           
  1088                           ;main.c: 129: RB7 = 0;
  1089     0618  1386               	bcf	6,7	;volatile
  1090     0619                     l1679:
  1091                           
  1092                           ;main.c: 130: for(j = 0 ; j < intvl ; j++){
  1093     0619  01D8               	clrf	main@j
  1094     061A  01D9               	clrf	main@j+1
  1095     061B  2E2B               	goto	l53
  1096     061C                     l1681:
  1097                           
  1098                           ;main.c: 131: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1099     061C  3020               	movlw	32
  1100     061D  1283               	bcf	3,5	;RP0=0, select bank0
  1101     061E  1303               	bcf	3,6	;RP1=0, select bank0
  1102     061F  00AC               	movwf	??_main
  1103     0620                     u1357:
  1104     0620  0BAC               	decfsz	??_main,f
  1105     0621  2E20               	goto	u1357
  1106     0622  2E23               	nop2
  1107     0623  3001               	movlw	1
  1108     0624  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0625  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0626  07D8               	addwf	main@j,f
  1111     0627  1803               	skipnc
  1112     0628  0AD9               	incf	main@j+1,f
  1113     0629  3000               	movlw	0
  1114     062A  07D9               	addwf	main@j+1,f
  1115     062B                     l53:
  1116     062B  0859               	movf	main@j+1,w
  1117     062C  3A80               	xorlw	128
  1118     062D  00AC               	movwf	??_main
  1119     062E  0857               	movf	main@intvl+1,w
  1120     062F  3A80               	xorlw	128
  1121     0630  022C               	subwf	??_main,w
  1122     0631  1D03               	skipz
  1123     0632  2E35               	goto	u1255
  1124     0633  0856               	movf	main@intvl,w
  1125     0634  0258               	subwf	main@j,w
  1126     0635                     u1255:
  1127     0635  1C03               	skipc
  1128     0636  2E38               	goto	u1251
  1129     0637  2E39               	goto	u1250
  1130     0638                     u1251:
  1131     0638  2E1C               	goto	l1681
  1132     0639                     u1250:
  1133     0639                     l55:
  1134                           
  1135                           ;main.c: 132: };main.c: 133: RB4 = 0;
  1136     0639  1283               	bcf	3,5	;RP0=0, select bank0
  1137     063A  1303               	bcf	3,6	;RP1=0, select bank0
  1138     063B  1206               	bcf	6,4	;volatile
  1139                           
  1140                           ;main.c: 134: RB5 = 1;
  1141     063C  1686               	bsf	6,5	;volatile
  1142                           
  1143                           ;main.c: 135: RB6 = 0;
  1144     063D  1306               	bcf	6,6	;volatile
  1145                           
  1146                           ;main.c: 136: RB7 = 0;
  1147     063E  1386               	bcf	6,7	;volatile
  1148     063F                     l1683:
  1149                           
  1150                           ;main.c: 137: for(j = 0 ; j < intvl ; j++){
  1151     063F  01D8               	clrf	main@j
  1152     0640  01D9               	clrf	main@j+1
  1153     0641  2E51               	goto	l56
  1154     0642                     l1685:
  1155                           
  1156                           ;main.c: 138: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1157     0642  3020               	movlw	32
  1158     0643  1283               	bcf	3,5	;RP0=0, select bank0
  1159     0644  1303               	bcf	3,6	;RP1=0, select bank0
  1160     0645  00AC               	movwf	??_main
  1161     0646                     u1367:
  1162     0646  0BAC               	decfsz	??_main,f
  1163     0647  2E46               	goto	u1367
  1164     0648  2E49               	nop2
  1165     0649  3001               	movlw	1
  1166     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1167     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1168     064C  07D8               	addwf	main@j,f
  1169     064D  1803               	skipnc
  1170     064E  0AD9               	incf	main@j+1,f
  1171     064F  3000               	movlw	0
  1172     0650  07D9               	addwf	main@j+1,f
  1173     0651                     l56:
  1174     0651  0859               	movf	main@j+1,w
  1175     0652  3A80               	xorlw	128
  1176     0653  00AC               	movwf	??_main
  1177     0654  0857               	movf	main@intvl+1,w
  1178     0655  3A80               	xorlw	128
  1179     0656  022C               	subwf	??_main,w
  1180     0657  1D03               	skipz
  1181     0658  2E5B               	goto	u1265
  1182     0659  0856               	movf	main@intvl,w
  1183     065A  0258               	subwf	main@j,w
  1184     065B                     u1265:
  1185     065B  1C03               	skipc
  1186     065C  2E5E               	goto	u1261
  1187     065D  2E5F               	goto	u1260
  1188     065E                     u1261:
  1189     065E  2E42               	goto	l1685
  1190     065F                     u1260:
  1191     065F                     l58:
  1192                           
  1193                           ;main.c: 139: };main.c: 140: RB4 = 0;
  1194     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1195     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1196     0661  1206               	bcf	6,4	;volatile
  1197                           
  1198                           ;main.c: 141: RB5 = 0;
  1199     0662  1286               	bcf	6,5	;volatile
  1200                           
  1201                           ;main.c: 142: RB6 = 1;
  1202     0663  1706               	bsf	6,6	;volatile
  1203                           
  1204                           ;main.c: 143: RB7 = 0;
  1205     0664  1386               	bcf	6,7	;volatile
  1206     0665                     l1687:
  1207                           
  1208                           ;main.c: 144: for(j = 0 ; j < intvl ; j++){
  1209     0665  01D8               	clrf	main@j
  1210     0666  01D9               	clrf	main@j+1
  1211     0667  2E77               	goto	l59
  1212     0668                     l1689:
  1213                           
  1214                           ;main.c: 145: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1215     0668  3020               	movlw	32
  1216     0669  1283               	bcf	3,5	;RP0=0, select bank0
  1217     066A  1303               	bcf	3,6	;RP1=0, select bank0
  1218     066B  00AC               	movwf	??_main
  1219     066C                     u1377:
  1220     066C  0BAC               	decfsz	??_main,f
  1221     066D  2E6C               	goto	u1377
  1222     066E  2E6F               	nop2
  1223     066F  3001               	movlw	1
  1224     0670  1283               	bcf	3,5	;RP0=0, select bank0
  1225     0671  1303               	bcf	3,6	;RP1=0, select bank0
  1226     0672  07D8               	addwf	main@j,f
  1227     0673  1803               	skipnc
  1228     0674  0AD9               	incf	main@j+1,f
  1229     0675  3000               	movlw	0
  1230     0676  07D9               	addwf	main@j+1,f
  1231     0677                     l59:
  1232     0677  0859               	movf	main@j+1,w
  1233     0678  3A80               	xorlw	128
  1234     0679  00AC               	movwf	??_main
  1235     067A  0857               	movf	main@intvl+1,w
  1236     067B  3A80               	xorlw	128
  1237     067C  022C               	subwf	??_main,w
  1238     067D  1D03               	skipz
  1239     067E  2E81               	goto	u1275
  1240     067F  0856               	movf	main@intvl,w
  1241     0680  0258               	subwf	main@j,w
  1242     0681                     u1275:
  1243     0681  1C03               	skipc
  1244     0682  2E84               	goto	u1271
  1245     0683  2E85               	goto	u1270
  1246     0684                     u1271:
  1247     0684  2E68               	goto	l1689
  1248     0685                     u1270:
  1249     0685                     l61:
  1250                           
  1251                           ;main.c: 146: };main.c: 147: RB4 = 0;
  1252     0685  1283               	bcf	3,5	;RP0=0, select bank0
  1253     0686  1303               	bcf	3,6	;RP1=0, select bank0
  1254     0687  1206               	bcf	6,4	;volatile
  1255                           
  1256                           ;main.c: 148: RB5 = 0;
  1257     0688  1286               	bcf	6,5	;volatile
  1258                           
  1259                           ;main.c: 149: RB6 = 0;
  1260     0689  1306               	bcf	6,6	;volatile
  1261                           
  1262                           ;main.c: 150: RB7 = 1;
  1263     068A  1786               	bsf	6,7	;volatile
  1264     068B                     l1691:
  1265                           
  1266                           ;main.c: 151: for(j = 0 ; j < intvl ; j++){
  1267     068B  01D8               	clrf	main@j
  1268     068C  01D9               	clrf	main@j+1
  1269     068D  2E9D               	goto	l62
  1270     068E                     l1693:
  1271                           
  1272                           ;main.c: 152: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1273     068E  3020               	movlw	32
  1274     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0691  00AC               	movwf	??_main
  1277     0692                     u1387:
  1278     0692  0BAC               	decfsz	??_main,f
  1279     0693  2E92               	goto	u1387
  1280     0694  2E95               	nop2
  1281     0695  3001               	movlw	1
  1282     0696  1283               	bcf	3,5	;RP0=0, select bank0
  1283     0697  1303               	bcf	3,6	;RP1=0, select bank0
  1284     0698  07D8               	addwf	main@j,f
  1285     0699  1803               	skipnc
  1286     069A  0AD9               	incf	main@j+1,f
  1287     069B  3000               	movlw	0
  1288     069C  07D9               	addwf	main@j+1,f
  1289     069D                     l62:
  1290     069D  0859               	movf	main@j+1,w
  1291     069E  3A80               	xorlw	128
  1292     069F  00AC               	movwf	??_main
  1293     06A0  0857               	movf	main@intvl+1,w
  1294     06A1  3A80               	xorlw	128
  1295     06A2  022C               	subwf	??_main,w
  1296     06A3  1D03               	skipz
  1297     06A4  2EA7               	goto	u1285
  1298     06A5  0856               	movf	main@intvl,w
  1299     06A6  0258               	subwf	main@j,w
  1300     06A7                     u1285:
  1301     06A7  1C03               	skipc
  1302     06A8  2EAA               	goto	u1281
  1303     06A9  2EAB               	goto	u1280
  1304     06AA                     u1281:
  1305     06AA  2E8E               	goto	l1693
  1306     06AB                     u1280:
  1307     06AB                     l1695:
  1308     06AB  3001               	movlw	1
  1309     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1310     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1311     06AE  07CF               	addwf	main@k,f
  1312     06AF  1803               	skipnc
  1313     06B0  0AD0               	incf	main@k+1,f
  1314     06B1  3000               	movlw	0
  1315     06B2  07D0               	addwf	main@k+1,f
  1316     06B3                     l51:
  1317     06B3  0850               	movf	main@k+1,w
  1318     06B4  3A80               	xorlw	128
  1319     06B5  00AC               	movwf	??_main
  1320     06B6  0855               	movf	main@hln+1,w
  1321     06B7  3A80               	xorlw	128
  1322     06B8  022C               	subwf	??_main,w
  1323     06B9  1D03               	skipz
  1324     06BA  2EBD               	goto	u1295
  1325     06BB  0854               	movf	main@hln,w
  1326     06BC  024F               	subwf	main@k,w
  1327     06BD                     u1295:
  1328     06BD  1C03               	skipc
  1329     06BE  2EC0               	goto	u1291
  1330     06BF  2EC1               	goto	u1290
  1331     06C0                     u1291:
  1332     06C0  2E13               	goto	l52
  1333     06C1                     u1290:
  1334     06C1                     l1697:
  1335                           
  1336                           ;main.c: 153: };main.c: 154: };main.c: 156: puts("MOTOR = F  OK");
  1337     06C1  3039               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1338     06C2  118A  2203  118A   	fcall	_puts
  1339                           
  1340                           ;main.c: 157: printf("MOTOR = F  OK\r\n");
  1341     06C5  301B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1342     06C6  118A  2445  118A   	fcall	_printf
  1343                           
  1344                           ;main.c: 158: break;
  1345     06C9  2D41               	goto	l1615
  1346     06CA                     l1699:
  1347     06CA  0831               	movf	main@tmp+3,w
  1348     06CB  00C6               	movwf	main@speed
  1349                           
  1350                           ;main.c: 161: speed[1] = tmp[4];
  1351     06CC  0832               	movf	main@tmp+4,w
  1352     06CD  00C7               	movwf	main@speed+1
  1353                           
  1354                           ;main.c: 162: speed[2] = tmp[5];
  1355     06CE  0833               	movf	main@tmp+5,w
  1356     06CF  00C8               	movwf	main@speed+2
  1357                           
  1358                           ;main.c: 163: speed[3] = tmp[6];
  1359     06D0  0834               	movf	main@tmp+6,w
  1360     06D1  00C9               	movwf	main@speed+3
  1361     06D2                     l1701:
  1362                           
  1363                           ;main.c: 164: speed[4] = '\0';
  1364     06D2  01CA               	clrf	main@speed+4
  1365     06D3                     l1703:
  1366                           
  1367                           ;main.c: 165: spd = atoi(speed);
  1368     06D3  3046               	movlw	(low (main@speed| 0))& (0+255)
  1369     06D4  118A  23CE  118A   	fcall	_atoi
  1370     06D7  0877               	movf	?_atoi+1,w
  1371     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1372     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1373     06DA  00D3               	movwf	main@spd+1
  1374     06DB  0876               	movf	?_atoi,w
  1375     06DC  00D2               	movwf	main@spd
  1376     06DD                     l1705:
  1377                           
  1378                           ;main.c: 166: printf("speed = %d\r", spd);
  1379     06DD  0853               	movf	main@spd+1,w
  1380     06DE  00FD               	movwf	?_printf+1
  1381     06DF  0852               	movf	main@spd,w
  1382     06E0  00FC               	movwf	?_printf
  1383     06E1  3054               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1384     06E2  118A  2445  118A   	fcall	_printf
  1385     06E5                     l1707:
  1386                           
  1387                           ;main.c: 167: ln[0] = tmp[8];
  1388     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1389     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1390     06E7  0836               	movf	main@tmp+8,w
  1391     06E8  00CB               	movwf	main@ln
  1392     06E9                     l1709:
  1393                           
  1394                           ;main.c: 168: ln[1] = tmp[9];
  1395     06E9  0837               	movf	main@tmp+9,w
  1396     06EA  00CC               	movwf	main@ln+1
  1397     06EB                     l1711:
  1398                           
  1399                           ;main.c: 169: ln[2] = tmp[10];
  1400     06EB  0838               	movf	main@tmp+10,w
  1401     06EC  00CD               	movwf	main@ln+2
  1402                           
  1403                           ;main.c: 170: ln[4] = '\0';
  1404     06ED  01CF               	clrf	main@ln+4
  1405     06EE                     l1713:
  1406                           
  1407                           ;main.c: 171: hln = atoi(ln);
  1408     06EE  304B               	movlw	(low (main@ln| 0))& (0+255)
  1409     06EF  118A  23CE  118A   	fcall	_atoi
  1410     06F2  0877               	movf	?_atoi+1,w
  1411     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1412     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1413     06F5  00D5               	movwf	main@hln+1
  1414     06F6  0876               	movf	?_atoi,w
  1415     06F7  00D4               	movwf	main@hln
  1416     06F8                     l1715:
  1417                           
  1418                           ;main.c: 172: printf("length = %d\r", hln);
  1419     06F8  0855               	movf	main@hln+1,w
  1420     06F9  00FD               	movwf	?_printf+1
  1421     06FA  0854               	movf	main@hln,w
  1422     06FB  00FC               	movwf	?_printf
  1423     06FC  3047               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1424     06FD  118A  2445  118A   	fcall	_printf
  1425     0700                     l1717:
  1426     0700                     l1719:
  1427                           
  1428                           ;main.c: 174: intvl = (int)(mx_spd / spd);
  1429     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1430     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1431     0702  0853               	movf	main@spd+1,w
  1432     0703  00F1               	movwf	___awdiv@divisor+1
  1433     0704  0852               	movf	main@spd,w
  1434     0705  00F0               	movwf	___awdiv@divisor
  1435     0706  30F4               	movlw	244
  1436     0707  00F2               	movwf	___awdiv@dividend
  1437     0708  3001               	movlw	1
  1438     0709  00F3               	movwf	___awdiv@dividend+1
  1439     070A  118A  2367  118A   	fcall	___awdiv
  1440     070D  0871               	movf	?___awdiv+1,w
  1441     070E  1283               	bcf	3,5	;RP0=0, select bank0
  1442     070F  1303               	bcf	3,6	;RP1=0, select bank0
  1443     0710  00D7               	movwf	main@intvl+1
  1444     0711  0870               	movf	?___awdiv,w
  1445     0712  00D6               	movwf	main@intvl
  1446     0713                     l1721:
  1447                           
  1448                           ;main.c: 175: for(k = 0 ; k < hln ; k++){
  1449     0713  01CF               	clrf	main@k
  1450     0714  01D0               	clrf	main@k+1
  1451     0715  2FB6               	goto	l68
  1452     0716                     l69:
  1453                           
  1454                           ;main.c: 176: RB4 = 0;
  1455     0716  1283               	bcf	3,5	;RP0=0, select bank0
  1456     0717  1303               	bcf	3,6	;RP1=0, select bank0
  1457     0718  1206               	bcf	6,4	;volatile
  1458                           
  1459                           ;main.c: 177: RB5 = 0;
  1460     0719  1286               	bcf	6,5	;volatile
  1461                           
  1462                           ;main.c: 178: RB6 = 0;
  1463     071A  1306               	bcf	6,6	;volatile
  1464                           
  1465                           ;main.c: 179: RB7 = 1;
  1466     071B  1786               	bsf	6,7	;volatile
  1467     071C                     l1723:
  1468                           
  1469                           ;main.c: 180: for(j = 0 ; j < intvl ; j++){
  1470     071C  01D8               	clrf	main@j
  1471     071D  01D9               	clrf	main@j+1
  1472     071E  2F2E               	goto	l70
  1473     071F                     l1725:
  1474                           
  1475                           ;main.c: 181: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1476     071F  3020               	movlw	32
  1477     0720  1283               	bcf	3,5	;RP0=0, select bank0
  1478     0721  1303               	bcf	3,6	;RP1=0, select bank0
  1479     0722  00AC               	movwf	??_main
  1480     0723                     u1397:
  1481     0723  0BAC               	decfsz	??_main,f
  1482     0724  2F23               	goto	u1397
  1483     0725  2F26               	nop2
  1484     0726  3001               	movlw	1
  1485     0727  1283               	bcf	3,5	;RP0=0, select bank0
  1486     0728  1303               	bcf	3,6	;RP1=0, select bank0
  1487     0729  07D8               	addwf	main@j,f
  1488     072A  1803               	skipnc
  1489     072B  0AD9               	incf	main@j+1,f
  1490     072C  3000               	movlw	0
  1491     072D  07D9               	addwf	main@j+1,f
  1492     072E                     l70:
  1493     072E  0859               	movf	main@j+1,w
  1494     072F  3A80               	xorlw	128
  1495     0730  00AC               	movwf	??_main
  1496     0731  0857               	movf	main@intvl+1,w
  1497     0732  3A80               	xorlw	128
  1498     0733  022C               	subwf	??_main,w
  1499     0734  1D03               	skipz
  1500     0735  2F38               	goto	u1305
  1501     0736  0856               	movf	main@intvl,w
  1502     0737  0258               	subwf	main@j,w
  1503     0738                     u1305:
  1504     0738  1C03               	skipc
  1505     0739  2F3B               	goto	u1301
  1506     073A  2F3C               	goto	u1300
  1507     073B                     u1301:
  1508     073B  2F1F               	goto	l1725
  1509     073C                     u1300:
  1510     073C                     l72:
  1511                           
  1512                           ;main.c: 182: };main.c: 183: RB4 = 0;
  1513     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1514     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1515     073E  1206               	bcf	6,4	;volatile
  1516                           
  1517                           ;main.c: 184: RB5 = 0;
  1518     073F  1286               	bcf	6,5	;volatile
  1519                           
  1520                           ;main.c: 185: RB6 = 1;
  1521     0740  1706               	bsf	6,6	;volatile
  1522                           
  1523                           ;main.c: 186: RB7 = 0;
  1524     0741  1386               	bcf	6,7	;volatile
  1525     0742                     l1727:
  1526                           
  1527                           ;main.c: 187: for(j = 0 ; j < intvl ; j++){
  1528     0742  01D8               	clrf	main@j
  1529     0743  01D9               	clrf	main@j+1
  1530     0744  2F54               	goto	l73
  1531     0745                     l1729:
  1532                           
  1533                           ;main.c: 188: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1534     0745  3020               	movlw	32
  1535     0746  1283               	bcf	3,5	;RP0=0, select bank0
  1536     0747  1303               	bcf	3,6	;RP1=0, select bank0
  1537     0748  00AC               	movwf	??_main
  1538     0749                     u1407:
  1539     0749  0BAC               	decfsz	??_main,f
  1540     074A  2F49               	goto	u1407
  1541     074B  2F4C               	nop2
  1542     074C  3001               	movlw	1
  1543     074D  1283               	bcf	3,5	;RP0=0, select bank0
  1544     074E  1303               	bcf	3,6	;RP1=0, select bank0
  1545     074F  07D8               	addwf	main@j,f
  1546     0750  1803               	skipnc
  1547     0751  0AD9               	incf	main@j+1,f
  1548     0752  3000               	movlw	0
  1549     0753  07D9               	addwf	main@j+1,f
  1550     0754                     l73:
  1551     0754  0859               	movf	main@j+1,w
  1552     0755  3A80               	xorlw	128
  1553     0756  00AC               	movwf	??_main
  1554     0757  0857               	movf	main@intvl+1,w
  1555     0758  3A80               	xorlw	128
  1556     0759  022C               	subwf	??_main,w
  1557     075A  1D03               	skipz
  1558     075B  2F5E               	goto	u1315
  1559     075C  0856               	movf	main@intvl,w
  1560     075D  0258               	subwf	main@j,w
  1561     075E                     u1315:
  1562     075E  1C03               	skipc
  1563     075F  2F61               	goto	u1311
  1564     0760  2F62               	goto	u1310
  1565     0761                     u1311:
  1566     0761  2F45               	goto	l1729
  1567     0762                     u1310:
  1568     0762                     l75:
  1569                           
  1570                           ;main.c: 189: };main.c: 190: RB4 = 0;
  1571     0762  1283               	bcf	3,5	;RP0=0, select bank0
  1572     0763  1303               	bcf	3,6	;RP1=0, select bank0
  1573     0764  1206               	bcf	6,4	;volatile
  1574                           
  1575                           ;main.c: 191: RB5 = 1;
  1576     0765  1686               	bsf	6,5	;volatile
  1577                           
  1578                           ;main.c: 192: RB6 = 0;
  1579     0766  1306               	bcf	6,6	;volatile
  1580                           
  1581                           ;main.c: 193: RB7 = 0;
  1582     0767  1386               	bcf	6,7	;volatile
  1583     0768                     l1731:
  1584                           
  1585                           ;main.c: 194: for(j = 0 ; j < intvl ; j++){
  1586     0768  01D8               	clrf	main@j
  1587     0769  01D9               	clrf	main@j+1
  1588     076A  2F7A               	goto	l76
  1589     076B                     l1733:
  1590                           
  1591                           ;main.c: 195: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1592     076B  3020               	movlw	32
  1593     076C  1283               	bcf	3,5	;RP0=0, select bank0
  1594     076D  1303               	bcf	3,6	;RP1=0, select bank0
  1595     076E  00AC               	movwf	??_main
  1596     076F                     u1417:
  1597     076F  0BAC               	decfsz	??_main,f
  1598     0770  2F6F               	goto	u1417
  1599     0771  2F72               	nop2
  1600     0772  3001               	movlw	1
  1601     0773  1283               	bcf	3,5	;RP0=0, select bank0
  1602     0774  1303               	bcf	3,6	;RP1=0, select bank0
  1603     0775  07D8               	addwf	main@j,f
  1604     0776  1803               	skipnc
  1605     0777  0AD9               	incf	main@j+1,f
  1606     0778  3000               	movlw	0
  1607     0779  07D9               	addwf	main@j+1,f
  1608     077A                     l76:
  1609     077A  0859               	movf	main@j+1,w
  1610     077B  3A80               	xorlw	128
  1611     077C  00AC               	movwf	??_main
  1612     077D  0857               	movf	main@intvl+1,w
  1613     077E  3A80               	xorlw	128
  1614     077F  022C               	subwf	??_main,w
  1615     0780  1D03               	skipz
  1616     0781  2F84               	goto	u1325
  1617     0782  0856               	movf	main@intvl,w
  1618     0783  0258               	subwf	main@j,w
  1619     0784                     u1325:
  1620     0784  1C03               	skipc
  1621     0785  2F87               	goto	u1321
  1622     0786  2F88               	goto	u1320
  1623     0787                     u1321:
  1624     0787  2F6B               	goto	l1733
  1625     0788                     u1320:
  1626     0788                     l78:
  1627                           
  1628                           ;main.c: 196: };main.c: 197: RB4 = 1;
  1629     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1630     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1631     078A  1606               	bsf	6,4	;volatile
  1632                           
  1633                           ;main.c: 198: RB5 = 0;
  1634     078B  1286               	bcf	6,5	;volatile
  1635                           
  1636                           ;main.c: 199: RB6 = 0;
  1637     078C  1306               	bcf	6,6	;volatile
  1638                           
  1639                           ;main.c: 200: RB7 = 0;
  1640     078D  1386               	bcf	6,7	;volatile
  1641     078E                     l1735:
  1642                           
  1643                           ;main.c: 201: for(j = 0 ; j < intvl ; j++){
  1644     078E  01D8               	clrf	main@j
  1645     078F  01D9               	clrf	main@j+1
  1646     0790  2FA0               	goto	l79
  1647     0791                     l1737:
  1648                           
  1649                           ;main.c: 202: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1650     0791  3020               	movlw	32
  1651     0792  1283               	bcf	3,5	;RP0=0, select bank0
  1652     0793  1303               	bcf	3,6	;RP1=0, select bank0
  1653     0794  00AC               	movwf	??_main
  1654     0795                     u1427:
  1655     0795  0BAC               	decfsz	??_main,f
  1656     0796  2F95               	goto	u1427
  1657     0797  2F98               	nop2
  1658     0798  3001               	movlw	1
  1659     0799  1283               	bcf	3,5	;RP0=0, select bank0
  1660     079A  1303               	bcf	3,6	;RP1=0, select bank0
  1661     079B  07D8               	addwf	main@j,f
  1662     079C  1803               	skipnc
  1663     079D  0AD9               	incf	main@j+1,f
  1664     079E  3000               	movlw	0
  1665     079F  07D9               	addwf	main@j+1,f
  1666     07A0                     l79:
  1667     07A0  0859               	movf	main@j+1,w
  1668     07A1  3A80               	xorlw	128
  1669     07A2  00AC               	movwf	??_main
  1670     07A3  0857               	movf	main@intvl+1,w
  1671     07A4  3A80               	xorlw	128
  1672     07A5  022C               	subwf	??_main,w
  1673     07A6  1D03               	skipz
  1674     07A7  2FAA               	goto	u1335
  1675     07A8  0856               	movf	main@intvl,w
  1676     07A9  0258               	subwf	main@j,w
  1677     07AA                     u1335:
  1678     07AA  1C03               	skipc
  1679     07AB  2FAD               	goto	u1331
  1680     07AC  2FAE               	goto	u1330
  1681     07AD                     u1331:
  1682     07AD  2F91               	goto	l1737
  1683     07AE                     u1330:
  1684     07AE                     l1739:
  1685     07AE  3001               	movlw	1
  1686     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1687     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1688     07B1  07CF               	addwf	main@k,f
  1689     07B2  1803               	skipnc
  1690     07B3  0AD0               	incf	main@k+1,f
  1691     07B4  3000               	movlw	0
  1692     07B5  07D0               	addwf	main@k+1,f
  1693     07B6                     l68:
  1694     07B6  0850               	movf	main@k+1,w
  1695     07B7  3A80               	xorlw	128
  1696     07B8  00AC               	movwf	??_main
  1697     07B9  0855               	movf	main@hln+1,w
  1698     07BA  3A80               	xorlw	128
  1699     07BB  022C               	subwf	??_main,w
  1700     07BC  1D03               	skipz
  1701     07BD  2FC0               	goto	u1345
  1702     07BE  0854               	movf	main@hln,w
  1703     07BF  024F               	subwf	main@k,w
  1704     07C0                     u1345:
  1705     07C0  1C03               	skipc
  1706     07C1  2FC3               	goto	u1341
  1707     07C2  2FC4               	goto	u1340
  1708     07C3                     u1341:
  1709     07C3  2F16               	goto	l69
  1710     07C4                     u1340:
  1711     07C4                     l1741:
  1712                           
  1713                           ;main.c: 203: };main.c: 204: };main.c: 205: puts("MOTOR = B  OK");
  1714     07C4  302B               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1715     07C5  118A  2203  118A   	fcall	_puts
  1716                           
  1717                           ;main.c: 206: printf("MOTOR = B  OK\r\n");
  1718     07C8  300B               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1719     07C9  118A  2445  118A   	fcall	_printf
  1720                           
  1721                           ;main.c: 207: break;
  1722     07CC  2D41               	goto	l1615
  1723     07CD                     l1743:
  1724     07CD                     l1745:
  1725                           
  1726                           ;main.c: 210: printf("MF\r");
  1727     07CD  3075               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1728     07CE  118A  2445  118A   	fcall	_printf
  1729                           
  1730                           ;main.c: 211: break;
  1731     07D1  2D41               	goto	l1615
  1732     07D2                     l1747:
  1733     07D2                     l1749:
  1734                           
  1735                           ;main.c: 213: printf("MR\r");
  1736     07D2  3079               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1737     07D3  118A  2445  118A   	fcall	_printf
  1738                           
  1739                           ;main.c: 214: break;
  1740     07D6  2D41               	goto	l1615
  1741     07D7                     l1751:
  1742     07D7                     l1753:
  1743                           
  1744                           ;main.c: 216: printf("FCr");
  1745     07D7  3095               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1746     07D8  118A  2445  118A   	fcall	_printf
  1747                           
  1748                           ;main.c: 217: break;
  1749     07DB  2D41               	goto	l1615
  1750     07DC                     l1755:
  1751     07DC  3067               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1752     07DD  118A  2203  118A   	fcall	_puts
  1753                           
  1754                           ;main.c: 219: printf("$1.0\r");
  1755     07E0  3067               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1756     07E1  118A  2445  118A   	fcall	_printf
  1757                           
  1758                           ;main.c: 220: break;
  1759     07E4  2D41               	goto	l1615
  1760     07E5                     l1759:
  1761     07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1762     07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1763     07E7  0851               	movf	main@cmd,w
  1764                           
  1765                           ; Switch size 1, requested type "simple"
  1766                           ; Number of cases is 6, Range of values is 0 to 5
  1767                           ; switch strategies available:
  1768                           ; Name         Instructions Cycles
  1769                           ; direct_byte           19     7 (fixed)
  1770                           ; simple_byte           19    10 (average)
  1771                           ; jumptable            260     6 (fixed)
  1772                           ;	Chosen strategy is simple_byte
  1773     07E8  3A00               	xorlw	0	; case 0
  1774     07E9  1903               	skipnz
  1775     07EA  2DC7               	goto	l1655
  1776     07EB  3A01               	xorlw	1	; case 1
  1777     07EC  1903               	skipnz
  1778     07ED  2ECA               	goto	l1699
  1779     07EE  3A03               	xorlw	3	; case 2
  1780     07EF  1903               	skipnz
  1781     07F0  2FCD               	goto	l1743
  1782     07F1  3A01               	xorlw	1	; case 3
  1783     07F2  1903               	skipnz
  1784     07F3  2FD2               	goto	l1747
  1785     07F4  3A07               	xorlw	7	; case 4
  1786     07F5  1903               	skipnz
  1787     07F6  2FD7               	goto	l1751
  1788     07F7  3A01               	xorlw	1	; case 5
  1789     07F8  1903               	skipnz
  1790     07F9  2FDC               	goto	l1755
  1791     07FA  2D41               	goto	l1615
  1792     07FB  118A  2800         	ljmp	start
  1793     07FD                     __end_of_main:
  1794                           
  1795                           	psect	text1
  1796     0268                     __ptext1:	
  1797 ;; *************** function _strcmp *****************
  1798 ;; Defined at:
  1799 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  s1              1    wreg     PTR const unsigned char 
  1802 ;;		 -> main@rcmd(4), 
  1803 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1804 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  1805 ;;		 -> STR_2(4), STR_1(4), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1808 ;;		 -> main@rcmd(4), 
  1809 ;;  r               1    4[COMMON] char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2    0[COMMON] int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1819 ;;      Params:         2       0       0       0
  1820 ;;      Locals:         2       0       0       0
  1821 ;;      Temps:          2       0       0       0
  1822 ;;      Totals:         6       0       0       0
  1823 ;;Total ram usage:        6 bytes
  1824 ;; Hardware stack levels used: 2
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832     0268                     _strcmp:	
  1833                           ;psect for function _strcmp
  1834                           
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1838                           ;strcmp@s1 stored from wreg
  1839     0268  00F5               	movwf	strcmp@s1
  1840     0269                     l1439:
  1841     0269  2A72               	goto	l1445
  1842     026A                     l1441:
  1843     026A  3001               	movlw	1
  1844     026B  00FF               	movwf	btemp+1
  1845     026C  087F               	movf	btemp+1,w
  1846     026D  07F5               	addwf	strcmp@s1,f
  1847     026E                     l1443:
  1848     026E  3001               	movlw	1
  1849     026F  00FF               	movwf	btemp+1
  1850     0270  087F               	movf	btemp+1,w
  1851     0271  07F0               	addwf	strcmp@s2,f
  1852     0272                     l1445:
  1853     0272  0870               	movf	strcmp@s2,w
  1854     0273  0084               	movwf	4
  1855     0274  118A  200C  118A   	fcall	stringdir
  1856     0277  00F2               	movwf	??_strcmp
  1857     0278  0875               	movf	strcmp@s1,w
  1858     0279  0084               	movwf	4
  1859     027A  1383               	bcf	3,7	;select IRP bank0
  1860     027B  0800               	movf	0,w
  1861     027C  00F3               	movwf	??_strcmp+1
  1862     027D  0872               	movf	??_strcmp,w
  1863     027E  0273               	subwf	??_strcmp+1,w
  1864     027F  00F4               	movwf	strcmp@r
  1865     0280  0874               	movf	strcmp@r,w
  1866     0281  1D03               	btfss	3,2
  1867     0282  2A84               	goto	u921
  1868     0283  2A85               	goto	u920
  1869     0284                     u921:
  1870     0284  2A8C               	goto	l1449
  1871     0285                     u920:
  1872     0285                     l1447:
  1873     0285  0875               	movf	strcmp@s1,w
  1874     0286  0084               	movwf	4
  1875     0287  0800               	movf	0,w
  1876     0288  1D03               	btfss	3,2
  1877     0289  2A8B               	goto	u931
  1878     028A  2A8C               	goto	u930
  1879     028B                     u931:
  1880     028B  2A6A               	goto	l1441
  1881     028C                     u930:
  1882     028C                     l1449:
  1883     028C  0874               	movf	strcmp@r,w
  1884     028D  00F0               	movwf	?_strcmp
  1885     028E  01F1               	clrf	?_strcmp+1
  1886     028F  1BF0               	btfsc	?_strcmp,7
  1887     0290  03F1               	decf	?_strcmp+1,f
  1888     0291                     l759:
  1889     0291  0008               	return
  1890     0292                     __end_of_strcmp:
  1891                           
  1892                           	psect	text2
  1893     0203                     __ptext2:	
  1894 ;; *************** function _puts *****************
  1895 ;; Defined at:
  1896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  s               1    wreg     PTR const unsigned char 
  1899 ;;		 -> STR_20(6), STR_15(14), STR_11(14), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  s               1    2[COMMON] PTR const unsigned char 
  1902 ;;		 -> STR_20(6), STR_15(14), STR_11(14), 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2   32[None  ] int 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1912 ;;      Params:         0       0       0       0
  1913 ;;      Locals:         1       0       0       0
  1914 ;;      Temps:          0       0       0       0
  1915 ;;      Totals:         1       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used: 1
  1918 ;; Hardware stack levels required when called: 2
  1919 ;; This function calls:
  1920 ;;		_cputs
  1921 ;;		_putch
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927     0203                     _puts:	
  1928                           ;psect for function _puts
  1929                           
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1933                           ;puts@s stored from wreg
  1934     0203  00F2               	movwf	puts@s
  1935     0204                     l1551:
  1936     0204  0872               	movf	puts@s,w
  1937     0205  118A  222A  118A   	fcall	_cputs
  1938     0208                     l1553:
  1939     0208  300A               	movlw	10
  1940     0209  118A  21EF  118A   	fcall	_putch
  1941     020C                     l743:
  1942     020C  0008               	return
  1943     020D                     __end_of_puts:
  1944                           
  1945                           	psect	text3
  1946     022A                     __ptext3:	
  1947 ;; *************** function _cputs *****************
  1948 ;; Defined at:
  1949 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  s               1    wreg     PTR const unsigned char 
  1952 ;;		 -> STR_20(6), STR_15(14), STR_11(14), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  s               1    1[COMMON] PTR const unsigned char 
  1955 ;;		 -> STR_20(6), STR_15(14), STR_11(14), 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1965 ;;      Params:         0       0       0       0
  1966 ;;      Locals:         1       0       0       0
  1967 ;;      Temps:          0       0       0       0
  1968 ;;      Totals:         1       0       0       0
  1969 ;;Total ram usage:        1 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 1
  1972 ;; This function calls:
  1973 ;;		_putch
  1974 ;; This function is called by:
  1975 ;;		_puts
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979     022A                     _cputs:	
  1980                           ;psect for function _cputs
  1981                           
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1985                           ;cputs@s stored from wreg
  1986     022A  00F1               	movwf	cputs@s
  1987     022B                     l1425:
  1988     022B  2A38               	goto	l1431
  1989     022C                     l1427:
  1990     022C  0871               	movf	cputs@s,w
  1991     022D  0084               	movwf	4
  1992     022E  118A  200C  118A   	fcall	stringdir
  1993     0231  118A  21EF  118A   	fcall	_putch
  1994     0234                     l1429:
  1995     0234  3001               	movlw	1
  1996     0235  00FF               	movwf	btemp+1
  1997     0236  087F               	movf	btemp+1,w
  1998     0237  07F1               	addwf	cputs@s,f
  1999     0238                     l1431:
  2000     0238  0871               	movf	cputs@s,w
  2001     0239  0084               	movwf	4
  2002     023A  118A  200C  118A   	fcall	stringdir
  2003     023D  3A00               	xorlw	0
  2004     023E  1D03               	skipz
  2005     023F  2A41               	goto	u911
  2006     0240  2A42               	goto	u910
  2007     0241                     u911:
  2008     0241  2A2C               	goto	l1427
  2009     0242                     u910:
  2010     0242                     l751:
  2011     0242  0008               	return
  2012     0243                     __end_of_cputs:
  2013                           
  2014                           	psect	text4
  2015     0445                     __ptext4:	
  2016 ;; *************** function _printf *****************
  2017 ;; Defined at:
  2018 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  f               1    wreg     PTR const unsigned char 
  2021 ;;		 -> STR_21(6), STR_19(4), STR_18(4), STR_17(4), 
  2022 ;;		 -> STR_16(16), STR_14(13), STR_13(12), STR_12(16), 
  2023 ;;		 -> STR_10(13), STR_9(12), STR_8(4), STR_7(4), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  2026 ;;		 -> STR_21(6), STR_19(4), STR_18(4), STR_17(4), 
  2027 ;;		 -> STR_16(16), STR_14(13), STR_13(12), STR_12(16), 
  2028 ;;		 -> STR_10(13), STR_9(12), STR_8(4), STR_7(4), 
  2029 ;;  tmpval          4    0        struct .
  2030 ;;  val             2    8[BANK0 ] unsigned int 
  2031 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  2032 ;;		 -> STR_22(7), ?_printf(2), main@tmp(20), 
  2033 ;;  len             2    0        unsigned int 
  2034 ;;  c               1   11[BANK0 ] unsigned char 
  2035 ;;  ap              1    5[BANK0 ] PTR void [1]
  2036 ;;		 -> ?_printf(2), 
  2037 ;;  prec            1    4[BANK0 ] char 
  2038 ;;  flag            1    3[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2   12[COMMON] int 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2048 ;;      Params:         2       0       0       0
  2049 ;;      Locals:         0       9       0       0
  2050 ;;      Temps:          0       3       0       0
  2051 ;;      Totals:         2      12       0       0
  2052 ;;Total ram usage:       14 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 1
  2055 ;; This function calls:
  2056 ;;		___lwdiv
  2057 ;;		___lwmod
  2058 ;;		_putch
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064     0445                     _printf:	
  2065                           ;psect for function _printf
  2066                           
  2067                           
  2068                           ;incstack = 0
  2069                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2070                           ;printf@f stored from wreg
  2071     0445  1283               	bcf	3,5	;RP0=0, select bank0
  2072     0446  1303               	bcf	3,6	;RP1=0, select bank0
  2073     0447  00AA               	movwf	printf@f
  2074     0448                     l1453:
  2075                           
  2076                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2077     0448  307C               	movlw	(low (?_printf| 0))& (0+255)
  2078     0449  00A5               	movwf	printf@ap
  2079                           
  2080                           ;doprnt.c: 553: while((c = *f++)) {
  2081     044A  2D20               	goto	l1515
  2082     044B                     l1455:
  2083                           
  2084                           ;doprnt.c: 555: if(c != '%')
  2085     044B  3025               	movlw	37
  2086     044C  062B               	xorwf	printf@c,w
  2087     044D  1903               	btfsc	3,2
  2088     044E  2C50               	goto	u941
  2089     044F  2C51               	goto	u940
  2090     0450                     u941:
  2091     0450  2C56               	goto	l1459
  2092     0451                     u940:
  2093     0451                     l1457:
  2094                           
  2095                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2096     0451  082B               	movf	printf@c,w
  2097     0452  118A  21EF  118A   	fcall	_putch
  2098                           
  2099                           ;doprnt.c: 559: continue;
  2100     0455  2D20               	goto	l1515
  2101     0456                     l1459:
  2102                           
  2103                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2104     0456  01A3               	clrf	printf@flag
  2105                           
  2106                           ;doprnt.c: 661: switch(c = *f++) {
  2107     0457  2C8C               	goto	l1477
  2108     0458                     l1461:
  2109                           
  2110                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2111     0458  0825               	movf	printf@ap,w
  2112     0459  0084               	movwf	4
  2113     045A  0800               	movf	0,w
  2114     045B  00A6               	movwf	printf@cp
  2115     045C  3000               	movlw	0
  2116     045D  00A7               	movwf	printf@cp+1
  2117     045E                     l1463:
  2118     045E  3001               	movlw	1
  2119     045F  00FF               	movwf	btemp+1
  2120     0460  087F               	movf	btemp+1,w
  2121     0461  07A5               	addwf	printf@ap,f
  2122     0462                     l1465:
  2123                           
  2124                           ;doprnt.c: 766: if(!cp)
  2125     0462  0826               	movf	printf@cp,w
  2126     0463  0427               	iorwf	printf@cp+1,w
  2127     0464  1D03               	btfss	3,2
  2128     0465  2C67               	goto	u951
  2129     0466  2C68               	goto	u950
  2130     0467                     u951:
  2131     0467  2C7F               	goto	l1473
  2132     0468                     u950:
  2133     0468                     l1467:
  2134                           
  2135                           ;doprnt.c: 767: cp = "(null)";
  2136     0468  3060               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2137     0469  00A6               	movwf	printf@cp
  2138     046A  3080               	movlw	128
  2139     046B  00A7               	movwf	printf@cp+1
  2140     046C  2C7F               	goto	l1473
  2141     046D                     l1469:
  2142                           
  2143                           ;doprnt.c: 804: (putch(*cp++) );
  2144     046D  0827               	movf	printf@cp+1,w
  2145     046E  00FF               	movwf	btemp+1
  2146     046F  0826               	movf	printf@cp,w
  2147     0470  0084               	movwf	4
  2148     0471  118A  2002  118A   	fcall	stringtab
  2149     0474  118A  21EF  118A   	fcall	_putch
  2150     0477                     l1471:
  2151     0477  3001               	movlw	1
  2152     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2153     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2154     047A  07A6               	addwf	printf@cp,f
  2155     047B  1803               	skipnc
  2156     047C  0AA7               	incf	printf@cp+1,f
  2157     047D  3000               	movlw	0
  2158     047E  07A7               	addwf	printf@cp+1,f
  2159     047F                     l1473:
  2160     047F  0827               	movf	printf@cp+1,w
  2161     0480  00FF               	movwf	btemp+1
  2162     0481  0826               	movf	printf@cp,w
  2163     0482  0084               	movwf	4
  2164     0483  118A  2002  118A   	fcall	stringtab
  2165     0486  3A00               	xorlw	0
  2166     0487  1D03               	skipz
  2167     0488  2C8A               	goto	u961
  2168     0489  2C8B               	goto	u960
  2169     048A                     u961:
  2170     048A  2C6D               	goto	l1469
  2171     048B                     u960:
  2172     048B  2D20               	goto	l1515
  2173     048C                     l1477:
  2174     048C  3001               	movlw	1
  2175     048D  07AA               	addwf	printf@f,f
  2176     048E  30FF               	movlw	-1
  2177     048F  072A               	addwf	printf@f,w
  2178     0490  0084               	movwf	4
  2179     0491  118A  200C  118A   	fcall	stringdir
  2180     0494  00AB               	movwf	printf@c
  2181                           
  2182                           ; Switch size 1, requested type "simple"
  2183                           ; Number of cases is 4, Range of values is 0 to 115
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte           13     7 (average)
  2187                           ; direct_byte          239     7 (fixed)
  2188                           ; jumptable            260     6 (fixed)
  2189                           ;	Chosen strategy is simple_byte
  2190     0495  3A00               	xorlw	0	; case 0
  2191     0496  1903               	skipnz
  2192     0497  2D30               	goto	l239
  2193     0498  3A64               	xorlw	100	; case 100
  2194     0499  1903               	skipnz
  2195     049A  2CA2               	goto	l1479
  2196     049B  3A0D               	xorlw	13	; case 105
  2197     049C  1903               	skipnz
  2198     049D  2CA2               	goto	l1479
  2199     049E  3A1A               	xorlw	26	; case 115
  2200     049F  1903               	skipnz
  2201     04A0  2C58               	goto	l1461
  2202     04A1  2D20               	goto	l1515
  2203     04A2                     l1479:
  2204                           
  2205                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2206     04A2  0825               	movf	printf@ap,w
  2207     04A3  0084               	movwf	4
  2208     04A4  0800               	movf	0,w
  2209     04A5  00A8               	movwf	printf@val
  2210     04A6  0A84               	incf	4,f
  2211     04A7  0800               	movf	0,w
  2212     04A8  00A9               	movwf	printf@val+1
  2213     04A9                     l1481:
  2214     04A9  3002               	movlw	2
  2215     04AA  00FF               	movwf	btemp+1
  2216     04AB  087F               	movf	btemp+1,w
  2217     04AC  07A5               	addwf	printf@ap,f
  2218     04AD                     l1483:
  2219                           
  2220                           ;doprnt.c: 1287: if((int)val < 0) {
  2221     04AD  1FA9               	btfss	printf@val+1,7
  2222     04AE  2CB0               	goto	u971
  2223     04AF  2CB1               	goto	u970
  2224     04B0                     u971:
  2225     04B0  2CBA               	goto	l1489
  2226     04B1                     u970:
  2227     04B1                     l1485:
  2228                           
  2229                           ;doprnt.c: 1288: flag |= 0x03;
  2230     04B1  3003               	movlw	3
  2231     04B2  00FF               	movwf	btemp+1
  2232     04B3  087F               	movf	btemp+1,w
  2233     04B4  04A3               	iorwf	printf@flag,f
  2234     04B5                     l1487:
  2235                           
  2236                           ;doprnt.c: 1289: val = -val;
  2237     04B5  09A8               	comf	printf@val,f
  2238     04B6  09A9               	comf	printf@val+1,f
  2239     04B7  0AA8               	incf	printf@val,f
  2240     04B8  1903               	skipnz
  2241     04B9  0AA9               	incf	printf@val+1,f
  2242     04BA                     l1489:
  2243                           
  2244                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2245     04BA  01AB               	clrf	printf@c
  2246     04BB  0AAB               	incf	printf@c,f
  2247     04BC                     l1495:
  2248                           
  2249                           ;doprnt.c: 1332: if(val < dpowers[c])
  2250     04BC  082B               	movf	printf@c,w
  2251     04BD  00A0               	movwf	??_printf
  2252     04BE  0720               	addwf	??_printf,w
  2253     04BF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2254     04C0  0084               	movwf	4
  2255     04C1  118A  200C  118A   	fcall	stringdir
  2256     04C4  00A1               	movwf	??_printf+1
  2257     04C5  118A  200C  118A   	fcall	stringdir
  2258     04C8  00A2               	movwf	??_printf+2
  2259     04C9  0822               	movf	??_printf+2,w
  2260     04CA  0229               	subwf	printf@val+1,w
  2261     04CB  1D03               	skipz
  2262     04CC  2CCF               	goto	u985
  2263     04CD  0821               	movf	??_printf+1,w
  2264     04CE  0228               	subwf	printf@val,w
  2265     04CF                     u985:
  2266     04CF  1803               	skipnc
  2267     04D0  2CD2               	goto	u981
  2268     04D1  2CD3               	goto	u980
  2269     04D2                     u981:
  2270     04D2  2CD4               	goto	l1499
  2271     04D3                     u980:
  2272     04D3  2CDE               	goto	l1503
  2273     04D4                     l1499:
  2274     04D4  3001               	movlw	1
  2275     04D5  00FF               	movwf	btemp+1
  2276     04D6  087F               	movf	btemp+1,w
  2277     04D7  07AB               	addwf	printf@c,f
  2278     04D8                     l1501:
  2279     04D8  3005               	movlw	5
  2280     04D9  062B               	xorwf	printf@c,w
  2281     04DA  1D03               	btfss	3,2
  2282     04DB  2CDD               	goto	u991
  2283     04DC  2CDE               	goto	u990
  2284     04DD                     u991:
  2285     04DD  2CBC               	goto	l1495
  2286     04DE                     u990:
  2287     04DE                     l1503:
  2288                           
  2289                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2290     04DE  0823               	movf	printf@flag,w
  2291     04DF  3903               	andlw	3
  2292     04E0  1903               	btfsc	3,2
  2293     04E1  2CE3               	goto	u1001
  2294     04E2  2CE4               	goto	u1000
  2295     04E3                     u1001:
  2296     04E3  2CE8               	goto	l1507
  2297     04E4                     u1000:
  2298     04E4                     l1505:
  2299                           
  2300                           ;doprnt.c: 1465: (putch('-') );
  2301     04E4  302D               	movlw	45
  2302     04E5  118A  21EF  118A   	fcall	_putch
  2303     04E8                     l1507:
  2304                           
  2305                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2306     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2307     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2308     04EA  082B               	movf	printf@c,w
  2309     04EB  00A4               	movwf	printf@prec
  2310                           
  2311                           ;doprnt.c: 1500: while(prec--) {
  2312     04EC  2D15               	goto	l1513
  2313     04ED                     l1509:
  2314                           
  2315                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2316     04ED  300A               	movlw	10
  2317     04EE  00F7               	movwf	___lwmod@divisor
  2318     04EF  3000               	movlw	0
  2319     04F0  00F8               	movwf	___lwmod@divisor+1
  2320     04F1  0824               	movf	printf@prec,w
  2321     04F2  00A0               	movwf	??_printf
  2322     04F3  0720               	addwf	??_printf,w
  2323     04F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2324     04F5  0084               	movwf	4
  2325     04F6  118A  200C  118A   	fcall	stringdir
  2326     04F9  00F0               	movwf	___lwdiv@divisor
  2327     04FA  118A  200C  118A   	fcall	stringdir
  2328     04FD  00F1               	movwf	___lwdiv@divisor+1
  2329     04FE  0829               	movf	printf@val+1,w
  2330     04FF  00F3               	movwf	___lwdiv@dividend+1
  2331     0500  0828               	movf	printf@val,w
  2332     0501  00F2               	movwf	___lwdiv@dividend
  2333     0502  118A  22CC  118A   	fcall	___lwdiv
  2334     0505  0871               	movf	?___lwdiv+1,w
  2335     0506  00FA               	movwf	___lwmod@dividend+1
  2336     0507  0870               	movf	?___lwdiv,w
  2337     0508  00F9               	movwf	___lwmod@dividend
  2338     0509  118A  2292  118A   	fcall	___lwmod
  2339     050C  0877               	movf	?___lwmod,w
  2340     050D  3E30               	addlw	48
  2341     050E  1283               	bcf	3,5	;RP0=0, select bank0
  2342     050F  1303               	bcf	3,6	;RP1=0, select bank0
  2343     0510  00AB               	movwf	printf@c
  2344     0511                     l1511:
  2345                           
  2346                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2347     0511  082B               	movf	printf@c,w
  2348     0512  118A  21EF  118A   	fcall	_putch
  2349     0515                     l1513:
  2350     0515  30FF               	movlw	255
  2351     0516  00FF               	movwf	btemp+1
  2352     0517  087F               	movf	btemp+1,w
  2353     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2354     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2355     051A  07A4               	addwf	printf@prec,f
  2356     051B  0A24               	incf	printf@prec,w
  2357     051C  1D03               	btfss	3,2
  2358     051D  2D1F               	goto	u1011
  2359     051E  2D20               	goto	u1010
  2360     051F                     u1011:
  2361     051F  2CED               	goto	l1509
  2362     0520                     u1010:
  2363     0520                     l1515:
  2364     0520  3001               	movlw	1
  2365     0521  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0522  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0523  07AA               	addwf	printf@f,f
  2368     0524  30FF               	movlw	-1
  2369     0525  072A               	addwf	printf@f,w
  2370     0526  0084               	movwf	4
  2371     0527  118A  200C  118A   	fcall	stringdir
  2372     052A  00AB               	movwf	printf@c
  2373     052B  082B               	movf	printf@c,w
  2374     052C  1D03               	btfss	3,2
  2375     052D  2D2F               	goto	u1021
  2376     052E  2D30               	goto	u1020
  2377     052F                     u1021:
  2378     052F  2C4B               	goto	l1455
  2379     0530                     u1020:
  2380     0530                     l239:
  2381     0530  0008               	return
  2382     0531                     __end_of_printf:
  2383                           
  2384                           	psect	text5
  2385     0292                     __ptext5:	
  2386 ;; *************** function ___lwmod *****************
  2387 ;; Defined at:
  2388 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  divisor         2    7[COMMON] unsigned int 
  2391 ;;  dividend        2    9[COMMON] unsigned int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  counter         1   11[COMMON] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    7[COMMON] unsigned int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, btemp+1
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2403 ;;      Params:         4       0       0       0
  2404 ;;      Locals:         1       0       0       0
  2405 ;;      Temps:          0       0       0       0
  2406 ;;      Totals:         5       0       0       0
  2407 ;;Total ram usage:        5 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_printf
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416     0292                     ___lwmod:	
  2417                           ;psect for function ___lwmod
  2418                           
  2419     0292                     l1357:	
  2420                           ;incstack = 0
  2421                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2422                           
  2423     0292  0877               	movf	___lwmod@divisor,w
  2424     0293  0478               	iorwf	___lwmod@divisor+1,w
  2425     0294  1903               	btfsc	3,2
  2426     0295  2A97               	goto	u811
  2427     0296  2A98               	goto	u810
  2428     0297                     u811:
  2429     0297  2AC7               	goto	l1375
  2430     0298                     u810:
  2431     0298                     l1359:
  2432     0298  01FB               	clrf	___lwmod@counter
  2433     0299  0AFB               	incf	___lwmod@counter,f
  2434     029A  2AA6               	goto	l1365
  2435     029B                     l1361:
  2436     029B  3001               	movlw	1
  2437     029C                     u825:
  2438     029C  1003               	clrc
  2439     029D  0DF7               	rlf	___lwmod@divisor,f
  2440     029E  0DF8               	rlf	___lwmod@divisor+1,f
  2441     029F  3EFF               	addlw	-1
  2442     02A0  1D03               	skipz
  2443     02A1  2A9C               	goto	u825
  2444     02A2                     l1363:
  2445     02A2  3001               	movlw	1
  2446     02A3  00FF               	movwf	btemp+1
  2447     02A4  087F               	movf	btemp+1,w
  2448     02A5  07FB               	addwf	___lwmod@counter,f
  2449     02A6                     l1365:
  2450     02A6  1FF8               	btfss	___lwmod@divisor+1,7
  2451     02A7  2AA9               	goto	u831
  2452     02A8  2AAA               	goto	u830
  2453     02A9                     u831:
  2454     02A9  2A9B               	goto	l1361
  2455     02AA                     u830:
  2456     02AA                     l1367:
  2457     02AA  0878               	movf	___lwmod@divisor+1,w
  2458     02AB  027A               	subwf	___lwmod@dividend+1,w
  2459     02AC  1D03               	skipz
  2460     02AD  2AB0               	goto	u845
  2461     02AE  0877               	movf	___lwmod@divisor,w
  2462     02AF  0279               	subwf	___lwmod@dividend,w
  2463     02B0                     u845:
  2464     02B0  1C03               	skipc
  2465     02B1  2AB3               	goto	u841
  2466     02B2  2AB4               	goto	u840
  2467     02B3                     u841:
  2468     02B3  2ABA               	goto	l1371
  2469     02B4                     u840:
  2470     02B4                     l1369:
  2471     02B4  0877               	movf	___lwmod@divisor,w
  2472     02B5  02F9               	subwf	___lwmod@dividend,f
  2473     02B6  0878               	movf	___lwmod@divisor+1,w
  2474     02B7  1C03               	skipc
  2475     02B8  03FA               	decf	___lwmod@dividend+1,f
  2476     02B9  02FA               	subwf	___lwmod@dividend+1,f
  2477     02BA                     l1371:
  2478     02BA  3001               	movlw	1
  2479     02BB                     u855:
  2480     02BB  1003               	clrc
  2481     02BC  0CF8               	rrf	___lwmod@divisor+1,f
  2482     02BD  0CF7               	rrf	___lwmod@divisor,f
  2483     02BE  3EFF               	addlw	-1
  2484     02BF  1D03               	skipz
  2485     02C0  2ABB               	goto	u855
  2486     02C1                     l1373:
  2487     02C1  3001               	movlw	1
  2488     02C2  02FB               	subwf	___lwmod@counter,f
  2489     02C3  1D03               	btfss	3,2
  2490     02C4  2AC6               	goto	u861
  2491     02C5  2AC7               	goto	u860
  2492     02C6                     u861:
  2493     02C6  2AAA               	goto	l1367
  2494     02C7                     u860:
  2495     02C7                     l1375:
  2496     02C7  087A               	movf	___lwmod@dividend+1,w
  2497     02C8  00F8               	movwf	?___lwmod+1
  2498     02C9  0879               	movf	___lwmod@dividend,w
  2499     02CA  00F7               	movwf	?___lwmod
  2500     02CB                     l525:
  2501     02CB  0008               	return
  2502     02CC                     __end_of___lwmod:
  2503                           
  2504                           	psect	text6
  2505     02CC                     __ptext6:	
  2506 ;; *************** function ___lwdiv *****************
  2507 ;; Defined at:
  2508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  divisor         2    0[COMMON] unsigned int 
  2511 ;;  dividend        2    2[COMMON] unsigned int 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  quotient        2    4[COMMON] unsigned int 
  2514 ;;  counter         1    6[COMMON] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  2    0[COMMON] unsigned int 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, btemp+1
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2524 ;;      Params:         4       0       0       0
  2525 ;;      Locals:         3       0       0       0
  2526 ;;      Temps:          0       0       0       0
  2527 ;;      Totals:         7       0       0       0
  2528 ;;Total ram usage:        7 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_printf
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     02CC                     ___lwdiv:	
  2538                           ;psect for function ___lwdiv
  2539                           
  2540     02CC                     l1331:	
  2541                           ;incstack = 0
  2542                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2543                           
  2544     02CC  01F4               	clrf	___lwdiv@quotient
  2545     02CD  01F5               	clrf	___lwdiv@quotient+1
  2546     02CE                     l1333:
  2547     02CE  0870               	movf	___lwdiv@divisor,w
  2548     02CF  0471               	iorwf	___lwdiv@divisor+1,w
  2549     02D0  1903               	btfsc	3,2
  2550     02D1  2AD3               	goto	u741
  2551     02D2  2AD4               	goto	u740
  2552     02D3                     u741:
  2553     02D3  2B0B               	goto	l1353
  2554     02D4                     u740:
  2555     02D4                     l1335:
  2556     02D4  01F6               	clrf	___lwdiv@counter
  2557     02D5  0AF6               	incf	___lwdiv@counter,f
  2558     02D6  2AE2               	goto	l1341
  2559     02D7                     l1337:
  2560     02D7  3001               	movlw	1
  2561     02D8                     u755:
  2562     02D8  1003               	clrc
  2563     02D9  0DF0               	rlf	___lwdiv@divisor,f
  2564     02DA  0DF1               	rlf	___lwdiv@divisor+1,f
  2565     02DB  3EFF               	addlw	-1
  2566     02DC  1D03               	skipz
  2567     02DD  2AD8               	goto	u755
  2568     02DE                     l1339:
  2569     02DE  3001               	movlw	1
  2570     02DF  00FF               	movwf	btemp+1
  2571     02E0  087F               	movf	btemp+1,w
  2572     02E1  07F6               	addwf	___lwdiv@counter,f
  2573     02E2                     l1341:
  2574     02E2  1FF1               	btfss	___lwdiv@divisor+1,7
  2575     02E3  2AE5               	goto	u761
  2576     02E4  2AE6               	goto	u760
  2577     02E5                     u761:
  2578     02E5  2AD7               	goto	l1337
  2579     02E6                     u760:
  2580     02E6                     l1343:
  2581     02E6  3001               	movlw	1
  2582     02E7                     u775:
  2583     02E7  1003               	clrc
  2584     02E8  0DF4               	rlf	___lwdiv@quotient,f
  2585     02E9  0DF5               	rlf	___lwdiv@quotient+1,f
  2586     02EA  3EFF               	addlw	-1
  2587     02EB  1D03               	skipz
  2588     02EC  2AE7               	goto	u775
  2589     02ED  0871               	movf	___lwdiv@divisor+1,w
  2590     02EE  0273               	subwf	___lwdiv@dividend+1,w
  2591     02EF  1D03               	skipz
  2592     02F0  2AF3               	goto	u785
  2593     02F1  0870               	movf	___lwdiv@divisor,w
  2594     02F2  0272               	subwf	___lwdiv@dividend,w
  2595     02F3                     u785:
  2596     02F3  1C03               	skipc
  2597     02F4  2AF6               	goto	u781
  2598     02F5  2AF7               	goto	u780
  2599     02F6                     u781:
  2600     02F6  2AFE               	goto	l1349
  2601     02F7                     u780:
  2602     02F7                     l1345:
  2603     02F7  0870               	movf	___lwdiv@divisor,w
  2604     02F8  02F2               	subwf	___lwdiv@dividend,f
  2605     02F9  0871               	movf	___lwdiv@divisor+1,w
  2606     02FA  1C03               	skipc
  2607     02FB  03F3               	decf	___lwdiv@dividend+1,f
  2608     02FC  02F3               	subwf	___lwdiv@dividend+1,f
  2609     02FD                     l1347:
  2610     02FD  1474               	bsf	___lwdiv@quotient,0
  2611     02FE                     l1349:
  2612     02FE  3001               	movlw	1
  2613     02FF                     u795:
  2614     02FF  1003               	clrc
  2615     0300  0CF1               	rrf	___lwdiv@divisor+1,f
  2616     0301  0CF0               	rrf	___lwdiv@divisor,f
  2617     0302  3EFF               	addlw	-1
  2618     0303  1D03               	skipz
  2619     0304  2AFF               	goto	u795
  2620     0305                     l1351:
  2621     0305  3001               	movlw	1
  2622     0306  02F6               	subwf	___lwdiv@counter,f
  2623     0307  1D03               	btfss	3,2
  2624     0308  2B0A               	goto	u801
  2625     0309  2B0B               	goto	u800
  2626     030A                     u801:
  2627     030A  2AE6               	goto	l1343
  2628     030B                     u800:
  2629     030B                     l1353:
  2630     030B  0875               	movf	___lwdiv@quotient+1,w
  2631     030C  00F1               	movwf	?___lwdiv+1
  2632     030D  0874               	movf	___lwdiv@quotient,w
  2633     030E  00F0               	movwf	?___lwdiv
  2634     030F                     l515:
  2635     030F  0008               	return
  2636     0310                     __end_of___lwdiv:
  2637                           
  2638                           	psect	text7
  2639     020D                     __ptext7:	
  2640 ;; *************** function _initUART *****************
  2641 ;; Defined at:
  2642 ;;		line 6 in file "uart.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2656 ;;      Params:         0       0       0       0
  2657 ;;      Locals:         0       0       0       0
  2658 ;;      Temps:          0       0       0       0
  2659 ;;      Totals:         0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669     020D                     _initUART:	
  2670                           ;psect for function _initUART
  2671                           
  2672     020D                     l1433:	
  2673                           ;incstack = 0
  2674                           ; Regs used in _initUART: [wreg]
  2675                           
  2676                           
  2677                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  2678     020D  3019               	movlw	25
  2679     020E  1683               	bsf	3,5	;RP0=1, select bank1
  2680     020F  1303               	bcf	3,6	;RP1=0, select bank1
  2681     0210  0099               	movwf	25	;volatile
  2682                           
  2683                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  2684     0211  3024               	movlw	36
  2685     0212  0098               	movwf	24	;volatile
  2686                           
  2687                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  2688     0213  3090               	movlw	144
  2689     0214  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0215  1303               	bcf	3,6	;RP1=0, select bank0
  2691     0216  0098               	movwf	24	;volatile
  2692     0217                     l107:
  2693     0217  0008               	return
  2694     0218                     __end_of_initUART:
  2695                           
  2696                           	psect	text8
  2697     01E1                     __ptext8:	
  2698 ;; *************** function _gets *****************
  2699 ;; Defined at:
  2700 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  s               1    wreg     PTR unsigned char 
  2703 ;;		 -> main@tmp(20), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  s               1    8[COMMON] PTR unsigned char 
  2706 ;;		 -> main@tmp(20), 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      PTR unsigned char 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2716 ;;      Params:         0       0       0       0
  2717 ;;      Locals:         1       0       0       0
  2718 ;;      Temps:          0       0       0       0
  2719 ;;      Totals:         1       0       0       0
  2720 ;;Total ram usage:        1 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 3
  2723 ;; This function calls:
  2724 ;;		_cgets
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730     01E1                     _gets:	
  2731                           ;psect for function _gets
  2732                           
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2736                           ;gets@s stored from wreg
  2737     01E1  00F8               	movwf	gets@s
  2738     01E2                     l1435:
  2739                           
  2740                           ;	Return value of _gets is never used
  2741     01E2  0878               	movf	gets@s,w
  2742     01E3  118A  2310  118A   	fcall	_cgets
  2743     01E6                     l711:
  2744     01E6  0008               	return
  2745     01E7                     __end_of_gets:
  2746                           
  2747                           	psect	text9
  2748     0310                     __ptext9:	
  2749 ;; *************** function _cgets *****************
  2750 ;; Defined at:
  2751 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  s               1    wreg     PTR unsigned char 
  2754 ;;		 -> main@tmp(20), 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  s               1    6[COMMON] PTR unsigned char 
  2757 ;;		 -> main@tmp(20), 
  2758 ;;  c               2    4[COMMON] int 
  2759 ;;  s1              1    7[COMMON] PTR unsigned char 
  2760 ;;		 -> main@tmp(20), 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      PTR unsigned char 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2770 ;;      Params:         0       0       0       0
  2771 ;;      Locals:         4       0       0       0
  2772 ;;      Temps:          2       0       0       0
  2773 ;;      Totals:         6       0       0       0
  2774 ;;Total ram usage:        6 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 2
  2777 ;; This function calls:
  2778 ;;		_getche
  2779 ;;		_putch
  2780 ;; This function is called by:
  2781 ;;		_gets
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785     0310                     _cgets:	
  2786                           ;psect for function _cgets
  2787                           
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2791                           ;cgets@s stored from wreg
  2792     0310  00F6               	movwf	cgets@s
  2793     0311                     l1391:
  2794     0311  0876               	movf	cgets@s,w
  2795     0312  00F7               	movwf	cgets@s1
  2796     0313  2B4A               	goto	l1419
  2797     0314                     l1393:
  2798     0314  0876               	movf	cgets@s,w
  2799     0315  0677               	xorwf	cgets@s1,w
  2800     0316  1D03               	skipz
  2801     0317  2B19               	goto	u891
  2802     0318  2B1A               	goto	u890
  2803     0319                     u891:
  2804     0319  2B1B               	goto	l1397
  2805     031A                     u890:
  2806     031A  2B4A               	goto	l1419
  2807     031B                     l1397:
  2808     031B  3020               	movlw	32
  2809     031C  118A  21EF  118A   	fcall	_putch
  2810     031F  3008               	movlw	8
  2811     0320  118A  21EF  118A   	fcall	_putch
  2812     0323                     l1399:
  2813     0323  3001               	movlw	1
  2814     0324  02F7               	subwf	cgets@s1,f
  2815     0325  2B4A               	goto	l1419
  2816     0326                     l1401:
  2817     0326  3008               	movlw	8
  2818     0327  118A  21EF  118A   	fcall	_putch
  2819     032A  3020               	movlw	32
  2820     032B  118A  21EF  118A   	fcall	_putch
  2821     032E  3008               	movlw	8
  2822     032F  118A  21EF  118A   	fcall	_putch
  2823     0332                     l1403:
  2824     0332  3001               	movlw	1
  2825     0333  02F7               	subwf	cgets@s1,f
  2826     0334                     l1405:
  2827     0334  0877               	movf	cgets@s1,w
  2828     0335  0276               	subwf	cgets@s,w
  2829     0336  1C03               	skipc
  2830     0337  2B39               	goto	u901
  2831     0338  2B3A               	goto	u900
  2832     0339                     u901:
  2833     0339  2B26               	goto	l1401
  2834     033A                     u900:
  2835     033A  2B4A               	goto	l1419
  2836     033B                     l1407:
  2837     033B  0877               	movf	cgets@s1,w
  2838     033C  0084               	movwf	4
  2839     033D  1383               	bcf	3,7	;select IRP bank0
  2840     033E  0180               	clrf	0
  2841     033F                     l1409:
  2842     033F  0876               	movf	cgets@s,w
  2843     0340  2B66               	goto	l729
  2844     0341                     l1413:
  2845     0341  0877               	movf	cgets@s1,w
  2846     0342  0084               	movwf	4
  2847     0343  0874               	movf	cgets@c,w
  2848     0344  1383               	bcf	3,7	;select IRP bank0
  2849     0345  0080               	movwf	0
  2850     0346                     l1415:
  2851     0346  3001               	movlw	1
  2852     0347  00FF               	movwf	btemp+1
  2853     0348  087F               	movf	btemp+1,w
  2854     0349  07F7               	addwf	cgets@s1,f
  2855     034A                     l1419:
  2856     034A  118A  21F9  118A   	fcall	_getche
  2857     034D  00F2               	movwf	??_cgets
  2858     034E  01F3               	clrf	??_cgets+1
  2859     034F  0872               	movf	??_cgets,w
  2860     0350  00F4               	movwf	cgets@c
  2861     0351  0873               	movf	??_cgets+1,w
  2862     0352  00F5               	movwf	cgets@c+1
  2863                           
  2864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2865                           ; Switch size 1, requested type "simple"
  2866                           ; Number of cases is 1, Range of values is 0 to 0
  2867                           ; switch strategies available:
  2868                           ; Name         Instructions Cycles
  2869                           ; simple_byte            4     3 (average)
  2870                           ; direct_byte            9     7 (fixed)
  2871                           ; jumptable            260     6 (fixed)
  2872                           ;	Chosen strategy is simple_byte
  2873     0353  0875               	movf	cgets@c+1,w
  2874     0354  3A00               	xorlw	0	; case 0
  2875     0355  1903               	skipnz
  2876     0356  2B58               	goto	l1781
  2877     0357  2B41               	goto	l1413
  2878     0358                     l1781:
  2879                           
  2880                           ; Switch size 1, requested type "simple"
  2881                           ; Number of cases is 4, Range of values is 8 to 21
  2882                           ; switch strategies available:
  2883                           ; Name         Instructions Cycles
  2884                           ; simple_byte           13     7 (average)
  2885                           ; direct_byte           38    10 (fixed)
  2886                           ; jumptable            263     9 (fixed)
  2887                           ;	Chosen strategy is simple_byte
  2888     0358  0874               	movf	cgets@c,w
  2889     0359  3A08               	xorlw	8	; case 8
  2890     035A  1903               	skipnz
  2891     035B  2B14               	goto	l1393
  2892     035C  3A02               	xorlw	2	; case 10
  2893     035D  1903               	skipnz
  2894     035E  2B3B               	goto	l1407
  2895     035F  3A07               	xorlw	7	; case 13
  2896     0360  1903               	skipnz
  2897     0361  2B3B               	goto	l1407
  2898     0362  3A18               	xorlw	24	; case 21
  2899     0363  1903               	skipnz
  2900     0364  2B34               	goto	l1405
  2901     0365  2B41               	goto	l1413
  2902     0366                     l729:
  2903     0366  0008               	return
  2904     0367                     __end_of_cgets:
  2905                           
  2906                           	psect	text10
  2907     01F9                     __ptext10:	
  2908 ;; *************** function _getche *****************
  2909 ;; Defined at:
  2910 ;;		line 28 in file "uart.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  c               1    1[COMMON] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      unsigned char 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2924 ;;      Params:         0       0       0       0
  2925 ;;      Locals:         1       0       0       0
  2926 ;;      Temps:          0       0       0       0
  2927 ;;      Totals:         1       0       0       0
  2928 ;;Total ram usage:        1 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 1
  2931 ;; This function calls:
  2932 ;;		_getch
  2933 ;;		_putch
  2934 ;; This function is called by:
  2935 ;;		_cgets
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939     01F9                     _getche:	
  2940                           ;psect for function _getche
  2941                           
  2942     01F9                     l1309:	
  2943                           ;incstack = 0
  2944                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  2945                           
  2946                           
  2947                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  2948     01F9  118A  21E7  118A   	fcall	_getch
  2949     01FC  00F1               	movwf	getche@c
  2950     01FD                     l1311:
  2951                           
  2952                           ;uart.c: 33: putch(c);
  2953     01FD  0871               	movf	getche@c,w
  2954     01FE  118A  21EF  118A   	fcall	_putch
  2955     0201                     l1313:
  2956                           
  2957                           ;uart.c: 35: return c;
  2958     0201  0871               	movf	getche@c,w
  2959     0202                     l122:
  2960     0202  0008               	return
  2961     0203                     __end_of_getche:
  2962                           
  2963                           	psect	text11
  2964     01EF                     __ptext11:	
  2965 ;; *************** function _putch *****************
  2966 ;; Defined at:
  2967 ;;		line 13 in file "uart.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  byte            1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  byte            1    0[COMMON] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2981 ;;      Params:         0       0       0       0
  2982 ;;      Locals:         1       0       0       0
  2983 ;;      Temps:          0       0       0       0
  2984 ;;      Totals:         1       0       0       0
  2985 ;;Total ram usage:        1 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_getche
  2991 ;;		_printf
  2992 ;;		_cgets
  2993 ;;		_puts
  2994 ;;		_cputs
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998     01EF                     _putch:	
  2999                           ;psect for function _putch
  3000                           
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _putch: [wreg]
  3004                           ;putch@byte stored from wreg
  3005     01EF  00F0               	movwf	putch@byte
  3006     01F0                     l1299:
  3007     01F0                     l110:	
  3008                           ;uart.c: 15: while(!TXIF){
  3009                           
  3010     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3011     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  3012     01F2  1E0C               	btfss	12,4	;volatile
  3013     01F3  29F5               	goto	u681
  3014     01F4  29F6               	goto	u680
  3015     01F5                     u681:
  3016     01F5  29F0               	goto	l110
  3017     01F6                     u680:
  3018     01F6                     l1301:
  3019                           
  3020                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  3021     01F6  0870               	movf	putch@byte,w
  3022     01F7  0099               	movwf	25	;volatile
  3023     01F8                     l113:
  3024     01F8  0008               	return
  3025     01F9                     __end_of_putch:
  3026                           
  3027                           	psect	text12
  3028     01E7                     __ptext12:	
  3029 ;; *************** function _getch *****************
  3030 ;; Defined at:
  3031 ;;		line 20 in file "uart.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      unsigned char 
  3038 ;; Registers used:
  3039 ;;		wreg
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3045 ;;      Params:         0       0       0       0
  3046 ;;      Locals:         0       0       0       0
  3047 ;;      Temps:          0       0       0       0
  3048 ;;      Totals:         0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_getche
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     01E7                     _getch:	
  3059                           ;psect for function _getch
  3060                           
  3061     01E7                     l1303:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _getch: [wreg]
  3064                           
  3065     01E7                     l116:	
  3066                           ;uart.c: 22: while(!RCIF){
  3067                           
  3068     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  3069     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  3070     01E9  1E8C               	btfss	12,5	;volatile
  3071     01EA  29EC               	goto	u691
  3072     01EB  29ED               	goto	u690
  3073     01EC                     u691:
  3074     01EC  29E7               	goto	l116
  3075     01ED                     u690:
  3076     01ED                     l1305:
  3077                           
  3078                           ;uart.c: 23: };uart.c: 25: return RCREG;
  3079     01ED  081A               	movf	26,w	;volatile
  3080     01EE                     l119:
  3081     01EE  0008               	return
  3082     01EF                     __end_of_getch:
  3083                           
  3084                           	psect	text13
  3085     03CE                     __ptext13:	
  3086 ;; *************** function _atoi *****************
  3087 ;; Defined at:
  3088 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  s               1    wreg     PTR const unsigned char 
  3091 ;;		 -> main@ln(4), main@speed(5), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  s               1   13[COMMON] PTR const unsigned char 
  3094 ;;		 -> main@ln(4), main@speed(5), 
  3095 ;;  a               2   11[COMMON] int 
  3096 ;;  sign            1   10[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2    6[COMMON] int 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3106 ;;      Params:         2       0       0       0
  3107 ;;      Locals:         4       0       0       0
  3108 ;;      Temps:          2       0       0       0
  3109 ;;      Totals:         8       0       0       0
  3110 ;;Total ram usage:        8 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 1
  3113 ;; This function calls:
  3114 ;;		___wmul
  3115 ;;		_isdigit
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     03CE                     _atoi:	
  3122                           ;psect for function _atoi
  3123                           
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3127                           ;atoi@s stored from wreg
  3128     03CE  00FD               	movwf	atoi@s
  3129     03CF                     l1517:
  3130     03CF  2BD4               	goto	l1521
  3131     03D0                     l1519:
  3132     03D0  3001               	movlw	1
  3133     03D1  00FF               	movwf	btemp+1
  3134     03D2  087F               	movf	btemp+1,w
  3135     03D3  07FD               	addwf	atoi@s,f
  3136     03D4                     l1521:
  3137     03D4  087D               	movf	atoi@s,w
  3138     03D5  0084               	movwf	4
  3139     03D6  3020               	movlw	32
  3140     03D7  1383               	bcf	3,7	;select IRP bank0
  3141     03D8  0600               	xorwf	0,w
  3142     03D9  1903               	btfsc	3,2
  3143     03DA  2BDC               	goto	u1031
  3144     03DB  2BDD               	goto	u1030
  3145     03DC                     u1031:
  3146     03DC  2BD0               	goto	l1519
  3147     03DD                     u1030:
  3148     03DD                     l1523:
  3149     03DD  087D               	movf	atoi@s,w
  3150     03DE  0084               	movwf	4
  3151     03DF  3009               	movlw	9
  3152     03E0  0600               	xorwf	0,w
  3153     03E1  1903               	btfsc	3,2
  3154     03E2  2BE4               	goto	u1041
  3155     03E3  2BE5               	goto	u1040
  3156     03E4                     u1041:
  3157     03E4  2BD0               	goto	l1519
  3158     03E5                     u1040:
  3159     03E5                     l1525:
  3160     03E5  01FB               	clrf	atoi@a
  3161     03E6  01FC               	clrf	atoi@a+1
  3162     03E7  01FA               	clrf	atoi@sign
  3163     03E8                     l1527:
  3164     03E8  087D               	movf	atoi@s,w
  3165     03E9  0084               	movwf	4
  3166     03EA  302D               	movlw	45
  3167     03EB  0600               	xorwf	0,w
  3168     03EC  1D03               	btfss	3,2
  3169     03ED  2BEF               	goto	u1051
  3170     03EE  2BF0               	goto	u1050
  3171     03EF                     u1051:
  3172     03EF  2BF9               	goto	l1531
  3173     03F0                     u1050:
  3174     03F0                     l1529:
  3175     03F0  3001               	movlw	1
  3176     03F1  00FF               	movwf	btemp+1
  3177     03F2  087F               	movf	btemp+1,w
  3178     03F3  07FA               	addwf	atoi@sign,f
  3179     03F4  3001               	movlw	1
  3180     03F5  00FF               	movwf	btemp+1
  3181     03F6  087F               	movf	btemp+1,w
  3182     03F7  07FD               	addwf	atoi@s,f
  3183     03F8  2C25               	goto	l1539
  3184     03F9                     l1531:
  3185     03F9  087D               	movf	atoi@s,w
  3186     03FA  0084               	movwf	4
  3187     03FB  302B               	movlw	43
  3188     03FC  0600               	xorwf	0,w
  3189     03FD  1D03               	btfss	3,2
  3190     03FE  2C00               	goto	u1061
  3191     03FF  2C01               	goto	u1060
  3192     0400                     u1061:
  3193     0400  2C25               	goto	l1539
  3194     0401                     u1060:
  3195     0401                     l1533:
  3196     0401  3001               	movlw	1
  3197     0402  00FF               	movwf	btemp+1
  3198     0403  087F               	movf	btemp+1,w
  3199     0404  07FD               	addwf	atoi@s,f
  3200     0405  2C25               	goto	l1539
  3201     0406                     l1535:
  3202     0406  087D               	movf	atoi@s,w
  3203     0407  0084               	movwf	4
  3204     0408  087C               	movf	atoi@a+1,w
  3205     0409  00F1               	movwf	___wmul@multiplier+1
  3206     040A  087B               	movf	atoi@a,w
  3207     040B  00F0               	movwf	___wmul@multiplier
  3208     040C  300A               	movlw	10
  3209     040D  00F2               	movwf	___wmul@multiplicand
  3210     040E  3000               	movlw	0
  3211     040F  00F3               	movwf	___wmul@multiplicand+1
  3212     0410  118A  2243  118A   	fcall	___wmul
  3213     0413  1383               	bcf	3,7	;select IRP bank0
  3214     0414  0800               	movf	0,w
  3215     0415  0770               	addwf	?___wmul,w
  3216     0416  00F8               	movwf	??_atoi
  3217     0417  3000               	movlw	0
  3218     0418  1803               	skipnc
  3219     0419  3001               	movlw	1
  3220     041A  0771               	addwf	?___wmul+1,w
  3221     041B  00F9               	movwf	??_atoi+1
  3222     041C  0878               	movf	??_atoi,w
  3223     041D  3ED0               	addlw	208
  3224     041E  00FB               	movwf	atoi@a
  3225     041F  0879               	movf	??_atoi+1,w
  3226     0420  1803               	skipnc
  3227     0421  3E01               	addlw	1
  3228     0422  3EFF               	addlw	255
  3229     0423  00FC               	movwf	atoi@a+1
  3230     0424  2C01               	goto	l1533
  3231     0425                     l1539:
  3232     0425  087D               	movf	atoi@s,w
  3233     0426  0084               	movwf	4
  3234     0427  0800               	movf	0,w
  3235     0428  118A  2218  118A   	fcall	_isdigit
  3236     042B  1803               	btfsc	3,0
  3237     042C  2C2E               	goto	u1071
  3238     042D  2C2F               	goto	u1070
  3239     042E                     u1071:
  3240     042E  2C06               	goto	l1535
  3241     042F                     u1070:
  3242     042F                     l1541:
  3243     042F  087A               	movf	atoi@sign,w
  3244     0430  1903               	btfsc	3,2
  3245     0431  2C33               	goto	u1081
  3246     0432  2C34               	goto	u1080
  3247     0433                     u1081:
  3248     0433  2C40               	goto	l1547
  3249     0434                     u1080:
  3250     0434                     l1543:
  3251     0434  097B               	comf	atoi@a,w
  3252     0435  00F8               	movwf	??_atoi
  3253     0436  097C               	comf	atoi@a+1,w
  3254     0437  00F9               	movwf	??_atoi+1
  3255     0438  0AF8               	incf	??_atoi,f
  3256     0439  1903               	skipnz
  3257     043A  0AF9               	incf	??_atoi+1,f
  3258     043B  0878               	movf	??_atoi,w
  3259     043C  00F6               	movwf	?_atoi
  3260     043D  0879               	movf	??_atoi+1,w
  3261     043E  00F7               	movwf	?_atoi+1
  3262     043F  2C44               	goto	l706
  3263     0440                     l1547:
  3264     0440  087C               	movf	atoi@a+1,w
  3265     0441  00F7               	movwf	?_atoi+1
  3266     0442  087B               	movf	atoi@a,w
  3267     0443  00F6               	movwf	?_atoi
  3268     0444                     l706:
  3269     0444  0008               	return
  3270     0445                     __end_of_atoi:
  3271                           
  3272                           	psect	text14
  3273     0218                     __ptext14:	
  3274 ;; *************** function _isdigit *****************
  3275 ;; Defined at:
  3276 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  c               1    wreg     unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  c               1    1[COMMON] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;		None               void
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3290 ;;      Params:         0       0       0       0
  3291 ;;      Locals:         2       0       0       0
  3292 ;;      Temps:          0       0       0       0
  3293 ;;      Totals:         2       0       0       0
  3294 ;;Total ram usage:        2 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_atoi
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     0218                     _isdigit:	
  3304                           ;psect for function _isdigit
  3305                           
  3306                           
  3307                           ;incstack = 0
  3308                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3309                           ;isdigit@c stored from wreg
  3310     0218  00F1               	movwf	isdigit@c
  3311     0219                     l1379:
  3312     0219  01F0               	clrf	_isdigit$617
  3313     021A                     l1381:
  3314     021A  303A               	movlw	58
  3315     021B  0271               	subwf	isdigit@c,w
  3316     021C  1803               	skipnc
  3317     021D  2A1F               	goto	u871
  3318     021E  2A20               	goto	u870
  3319     021F                     u871:
  3320     021F  2A28               	goto	l1387
  3321     0220                     u870:
  3322     0220                     l1383:
  3323     0220  3030               	movlw	48
  3324     0221  0271               	subwf	isdigit@c,w
  3325     0222  1C03               	skipc
  3326     0223  2A25               	goto	u881
  3327     0224  2A26               	goto	u880
  3328     0225                     u881:
  3329     0225  2A28               	goto	l1387
  3330     0226                     u880:
  3331     0226                     l1385:
  3332     0226  01F0               	clrf	_isdigit$617
  3333     0227  0AF0               	incf	_isdigit$617,f
  3334     0228                     l1387:
  3335     0228  0C70               	rrf	_isdigit$617,w
  3336     0229                     l736:
  3337     0229  0008               	return
  3338     022A                     __end_of_isdigit:
  3339                           
  3340                           	psect	text15
  3341     0243                     __ptext15:	
  3342 ;; *************** function ___wmul *****************
  3343 ;; Defined at:
  3344 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  multiplier      2    0[COMMON] unsigned int 
  3347 ;;  multiplicand    2    2[COMMON] unsigned int 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  product         2    4[COMMON] unsigned int 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2    0[COMMON] unsigned int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3359 ;;      Params:         4       0       0       0
  3360 ;;      Locals:         2       0       0       0
  3361 ;;      Temps:          0       0       0       0
  3362 ;;      Totals:         6       0       0       0
  3363 ;;Total ram usage:        6 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_atoi
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372     0243                     ___wmul:	
  3373                           ;psect for function ___wmul
  3374                           
  3375     0243                     l1317:	
  3376                           ;incstack = 0
  3377                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3378                           
  3379     0243  01F4               	clrf	___wmul@product
  3380     0244  01F5               	clrf	___wmul@product+1
  3381     0245                     l1319:
  3382     0245  1C70               	btfss	___wmul@multiplier,0
  3383     0246  2A48               	goto	u701
  3384     0247  2A49               	goto	u700
  3385     0248                     u701:
  3386     0248  2A4F               	goto	l243
  3387     0249                     u700:
  3388     0249                     l1321:
  3389     0249  0872               	movf	___wmul@multiplicand,w
  3390     024A  07F4               	addwf	___wmul@product,f
  3391     024B  1803               	skipnc
  3392     024C  0AF5               	incf	___wmul@product+1,f
  3393     024D  0873               	movf	___wmul@multiplicand+1,w
  3394     024E  07F5               	addwf	___wmul@product+1,f
  3395     024F                     l243:
  3396     024F  3001               	movlw	1
  3397     0250                     u715:
  3398     0250  1003               	clrc
  3399     0251  0DF2               	rlf	___wmul@multiplicand,f
  3400     0252  0DF3               	rlf	___wmul@multiplicand+1,f
  3401     0253  3EFF               	addlw	-1
  3402     0254  1D03               	skipz
  3403     0255  2A50               	goto	u715
  3404     0256                     l1323:
  3405     0256  3001               	movlw	1
  3406     0257                     u725:
  3407     0257  1003               	clrc
  3408     0258  0CF1               	rrf	___wmul@multiplier+1,f
  3409     0259  0CF0               	rrf	___wmul@multiplier,f
  3410     025A  3EFF               	addlw	-1
  3411     025B  1D03               	skipz
  3412     025C  2A57               	goto	u725
  3413     025D                     l1325:
  3414     025D  0870               	movf	___wmul@multiplier,w
  3415     025E  0471               	iorwf	___wmul@multiplier+1,w
  3416     025F  1D03               	btfss	3,2
  3417     0260  2A62               	goto	u731
  3418     0261  2A63               	goto	u730
  3419     0262                     u731:
  3420     0262  2A45               	goto	l1319
  3421     0263                     u730:
  3422     0263                     l1327:
  3423     0263  0875               	movf	___wmul@product+1,w
  3424     0264  00F1               	movwf	?___wmul+1
  3425     0265  0874               	movf	___wmul@product,w
  3426     0266  00F0               	movwf	?___wmul
  3427     0267                     l245:
  3428     0267  0008               	return
  3429     0268                     __end_of___wmul:
  3430                           
  3431                           	psect	text16
  3432     0367                     __ptext16:	
  3433 ;; *************** function ___awdiv *****************
  3434 ;; Defined at:
  3435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  divisor         2    0[COMMON] int 
  3438 ;;  dividend        2    2[COMMON] int 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        2    6[COMMON] int 
  3441 ;;  sign            1    5[COMMON] unsigned char 
  3442 ;;  counter         1    4[COMMON] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    0[COMMON] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, btemp+1
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3452 ;;      Params:         4       0       0       0
  3453 ;;      Locals:         4       0       0       0
  3454 ;;      Temps:          0       0       0       0
  3455 ;;      Totals:         8       0       0       0
  3456 ;;Total ram usage:        8 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465     0367                     ___awdiv:	
  3466                           ;psect for function ___awdiv
  3467                           
  3468     0367                     l1555:	
  3469                           ;incstack = 0
  3470                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3471                           
  3472     0367  01F5               	clrf	___awdiv@sign
  3473     0368                     l1557:
  3474     0368  1FF1               	btfss	___awdiv@divisor+1,7
  3475     0369  2B6B               	goto	u1091
  3476     036A  2B6C               	goto	u1090
  3477     036B                     u1091:
  3478     036B  2B73               	goto	l1563
  3479     036C                     u1090:
  3480     036C                     l1559:
  3481     036C  09F0               	comf	___awdiv@divisor,f
  3482     036D  09F1               	comf	___awdiv@divisor+1,f
  3483     036E  0AF0               	incf	___awdiv@divisor,f
  3484     036F  1903               	skipnz
  3485     0370  0AF1               	incf	___awdiv@divisor+1,f
  3486     0371                     l1561:
  3487     0371  01F5               	clrf	___awdiv@sign
  3488     0372  0AF5               	incf	___awdiv@sign,f
  3489     0373                     l1563:
  3490     0373  1FF3               	btfss	___awdiv@dividend+1,7
  3491     0374  2B76               	goto	u1101
  3492     0375  2B77               	goto	u1100
  3493     0376                     u1101:
  3494     0376  2B80               	goto	l1569
  3495     0377                     u1100:
  3496     0377                     l1565:
  3497     0377  09F2               	comf	___awdiv@dividend,f
  3498     0378  09F3               	comf	___awdiv@dividend+1,f
  3499     0379  0AF2               	incf	___awdiv@dividend,f
  3500     037A  1903               	skipnz
  3501     037B  0AF3               	incf	___awdiv@dividend+1,f
  3502     037C                     l1567:
  3503     037C  3001               	movlw	1
  3504     037D  00FF               	movwf	btemp+1
  3505     037E  087F               	movf	btemp+1,w
  3506     037F  06F5               	xorwf	___awdiv@sign,f
  3507     0380                     l1569:
  3508     0380  01F6               	clrf	___awdiv@quotient
  3509     0381  01F7               	clrf	___awdiv@quotient+1
  3510     0382                     l1571:
  3511     0382  0870               	movf	___awdiv@divisor,w
  3512     0383  0471               	iorwf	___awdiv@divisor+1,w
  3513     0384  1903               	btfsc	3,2
  3514     0385  2B87               	goto	u1111
  3515     0386  2B88               	goto	u1110
  3516     0387                     u1111:
  3517     0387  2BBF               	goto	l1591
  3518     0388                     u1110:
  3519     0388                     l1573:
  3520     0388  01F4               	clrf	___awdiv@counter
  3521     0389  0AF4               	incf	___awdiv@counter,f
  3522     038A  2B96               	goto	l1579
  3523     038B                     l1575:
  3524     038B  3001               	movlw	1
  3525     038C                     u1125:
  3526     038C  1003               	clrc
  3527     038D  0DF0               	rlf	___awdiv@divisor,f
  3528     038E  0DF1               	rlf	___awdiv@divisor+1,f
  3529     038F  3EFF               	addlw	-1
  3530     0390  1D03               	skipz
  3531     0391  2B8C               	goto	u1125
  3532     0392                     l1577:
  3533     0392  3001               	movlw	1
  3534     0393  00FF               	movwf	btemp+1
  3535     0394  087F               	movf	btemp+1,w
  3536     0395  07F4               	addwf	___awdiv@counter,f
  3537     0396                     l1579:
  3538     0396  1FF1               	btfss	___awdiv@divisor+1,7
  3539     0397  2B99               	goto	u1131
  3540     0398  2B9A               	goto	u1130
  3541     0399                     u1131:
  3542     0399  2B8B               	goto	l1575
  3543     039A                     u1130:
  3544     039A                     l1581:
  3545     039A  3001               	movlw	1
  3546     039B                     u1145:
  3547     039B  1003               	clrc
  3548     039C  0DF6               	rlf	___awdiv@quotient,f
  3549     039D  0DF7               	rlf	___awdiv@quotient+1,f
  3550     039E  3EFF               	addlw	-1
  3551     039F  1D03               	skipz
  3552     03A0  2B9B               	goto	u1145
  3553     03A1  0871               	movf	___awdiv@divisor+1,w
  3554     03A2  0273               	subwf	___awdiv@dividend+1,w
  3555     03A3  1D03               	skipz
  3556     03A4  2BA7               	goto	u1155
  3557     03A5  0870               	movf	___awdiv@divisor,w
  3558     03A6  0272               	subwf	___awdiv@dividend,w
  3559     03A7                     u1155:
  3560     03A7  1C03               	skipc
  3561     03A8  2BAA               	goto	u1151
  3562     03A9  2BAB               	goto	u1150
  3563     03AA                     u1151:
  3564     03AA  2BB2               	goto	l1587
  3565     03AB                     u1150:
  3566     03AB                     l1583:
  3567     03AB  0870               	movf	___awdiv@divisor,w
  3568     03AC  02F2               	subwf	___awdiv@dividend,f
  3569     03AD  0871               	movf	___awdiv@divisor+1,w
  3570     03AE  1C03               	skipc
  3571     03AF  03F3               	decf	___awdiv@dividend+1,f
  3572     03B0  02F3               	subwf	___awdiv@dividend+1,f
  3573     03B1                     l1585:
  3574     03B1  1476               	bsf	___awdiv@quotient,0
  3575     03B2                     l1587:
  3576     03B2  3001               	movlw	1
  3577     03B3                     u1165:
  3578     03B3  1003               	clrc
  3579     03B4  0CF1               	rrf	___awdiv@divisor+1,f
  3580     03B5  0CF0               	rrf	___awdiv@divisor,f
  3581     03B6  3EFF               	addlw	-1
  3582     03B7  1D03               	skipz
  3583     03B8  2BB3               	goto	u1165
  3584     03B9                     l1589:
  3585     03B9  3001               	movlw	1
  3586     03BA  02F4               	subwf	___awdiv@counter,f
  3587     03BB  1D03               	btfss	3,2
  3588     03BC  2BBE               	goto	u1171
  3589     03BD  2BBF               	goto	u1170
  3590     03BE                     u1171:
  3591     03BE  2B9A               	goto	l1581
  3592     03BF                     u1170:
  3593     03BF                     l1591:
  3594     03BF  0875               	movf	___awdiv@sign,w
  3595     03C0  1903               	btfsc	3,2
  3596     03C1  2BC3               	goto	u1181
  3597     03C2  2BC4               	goto	u1180
  3598     03C3                     u1181:
  3599     03C3  2BC9               	goto	l1595
  3600     03C4                     u1180:
  3601     03C4                     l1593:
  3602     03C4  09F6               	comf	___awdiv@quotient,f
  3603     03C5  09F7               	comf	___awdiv@quotient+1,f
  3604     03C6  0AF6               	incf	___awdiv@quotient,f
  3605     03C7  1903               	skipnz
  3606     03C8  0AF7               	incf	___awdiv@quotient+1,f
  3607     03C9                     l1595:
  3608     03C9  0877               	movf	___awdiv@quotient+1,w
  3609     03CA  00F1               	movwf	?___awdiv+1
  3610     03CB  0876               	movf	___awdiv@quotient,w
  3611     03CC  00F0               	movwf	?___awdiv
  3612     03CD                     l396:
  3613     03CD  0008               	return
  3614     03CE                     __end_of___awdiv:
  3615     007E                     btemp	set	126	;btemp
  3616     007E                     wtemp0	set	126
  3617                           
  3618                           	psect	idloc
  3619                           
  3620                           ;Config register IDLOC0 @ 0x2000
  3621                           ;	unspecified, using default values
  3622     2000                     	org	8192
  3623     2000  3FFF               	dw	16383
  3624                           
  3625                           ;Config register IDLOC1 @ 0x2001
  3626                           ;	unspecified, using default values
  3627     2001                     	org	8193
  3628     2001  3FFF               	dw	16383
  3629                           
  3630                           ;Config register IDLOC2 @ 0x2002
  3631                           ;	unspecified, using default values
  3632     2002                     	org	8194
  3633     2002  3FFF               	dw	16383
  3634                           
  3635                           ;Config register IDLOC3 @ 0x2003
  3636                           ;	unspecified, using default values
  3637     2003                     	org	8195
  3638     2003  3FFF               	dw	16383
  3639                           
  3640                           	psect	config
  3641                           
  3642                           ;Config register CONFIG @ 0x2007
  3643                           ;	Oscillator Selection bits
  3644                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  3645                           ;	Watchdog Timer Enable bit
  3646                           ;	WDTE = OFF, WDT disabled
  3647                           ;	Power-up Timer Enable bit
  3648                           ;	PWRTE = OFF, PWRT disabled
  3649                           ;	RA5/MCLR/VPP Pin Function Select bit
  3650                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  3651                           ;	Brown-out Detect Enable bit
  3652                           ;	BOREN = ON, BOD enabled
  3653                           ;	Low-Voltage Programming Enable bit
  3654                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3655                           ;	Data EE Memory Code Protection bit
  3656                           ;	CPD = OFF, Data memory code protection off
  3657                           ;	Flash Program Memory Code Protection bit
  3658                           ;	CP = OFF, Code protection off
  3659     2007                     	org	8199
  3660     2007  3F78               	dw	16248

Data Sizes:
    Strings     142
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      58
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 4
		 -> main@rcmd(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_20(CODE[6]), STR_15(CODE[14]), STR_11(CODE[14]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_20(CODE[6]), STR_15(CODE[14]), STR_11(CODE[14]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    gets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 5
		 -> main@ln(BANK0[4]), main@speed(BANK0[5]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_21(CODE[6]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> STR_16(CODE[16]), STR_14(CODE[13]), STR_13(CODE[12]), STR_12(CODE[16]), 
		 -> STR_10(CODE[13]), STR_9(CODE[12]), STR_8(CODE[4]), STR_7(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_22(CODE[7]), ?_printf(COMMON[2]), main@tmp(BANK0[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _main->_printf
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0    5954
                                             12 BANK0     46    46      0
                            ___awdiv
                               _atoi
                               _gets
                           _initUART
                             _printf
                               _puts
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     4      2     745
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     243
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1521
                                             12 COMMON     2     0      2
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     672
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     3A      3A       3       72.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 25 15:40:14 2023

                      pc 0002                       l51 06B3                       l43 05B3  
                     l52 0613                       l61 0685                       l53 062B  
                     l70 072E                       l62 069D                       l55 0639  
                     l72 073C                       l56 0651                       l73 0754  
                     l58 065F                       l75 0762                       l59 0677  
                     l76 077A                       l68 07B6                       l69 0716  
                     l78 0788                       l79 07A0             ___awdiv@sign 0075  
                     fsr 0004      ___wmul@multiplicand 0072                      l110 01F0  
                    l113 01F8                      l122 0202                      l107 0217  
                    l116 01E7                      l119 01EE                      l243 024F  
                    l245 0267                      l239 0530                      l515 030F  
                    l525 02CB                      l711 01E6                      l706 0444  
                    l396 03CD                      l751 0242                      l743 020C  
                    l736 0229                      l729 0366                      l759 0291  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u700 0249                      u701 0248  
                    u800 030B                      u801 030A                      u730 0263  
                    u810 0298                      u731 0262                      u715 0250  
                    u811 0297                      u900 033A                      u740 02D4  
                    u725 0257                      u901 0339                      u741 02D3  
                    u830 02AA                      u910 0242                      u831 02A9  
                    u911 0241                      u680 01F6                      u760 02E6  
                    u840 02B4                      u920 0285                      u681 01F5  
                    u761 02E5                      u841 02B3                      u825 029C  
                    u921 0284                      u690 01ED                      u930 028C  
                    u691 01EC                      u755 02D8                      u931 028B  
                    u780 02F7                      u860 02C7                      u940 0451  
                    u781 02F6                      u861 02C6                      u845 02B0  
                    u941 0450                      u870 0220                      u950 0468  
                    u871 021F                      u775 02E7                      u855 02BB  
                    u951 0467                      u880 0226                      u960 048B  
                    u881 0225                      u785 02F3                      u961 048A  
                    u890 031A                      u970 04B1                      u891 0319  
                    u795 02FF                      u971 04B0                      u980 04D3  
                    u981 04D2                      u990 04DE                      u991 04DD  
                    u985 04CF                      fsr0 0004                      indf 0000  
                   l1301 01F6                     l1303 01E7                     l1311 01FD  
                   l1321 0249                     l1305 01ED                     l1313 0201  
                   l1401 0326                     l1323 0256                     l1403 0332  
                   l1331 02CC                     l1325 025D                     l1317 0243  
                   l1309 01F9                     l1413 0341                     l1405 0334  
                   l1341 02E2                     l1333 02CE                     l1501 04D8  
                   l1327 0263                     l1319 0245                     l1415 0346  
                   l1407 033B                     l1351 0305                     l1343 02E6  
                   l1335 02D4                     l1511 0511                     l1503 04DE  
                   l1431 0238                     l1521 03D4                     l1409 033F  
                   l1433 020D                     l1345 02F7                     l1337 02D7  
                   l1353 030B                     l1361 029B                     l1513 0515  
                   l1505 04E4                     l1425 022B                     l1441 026A  
                   l1601 0538                     l1531 03F9                     l1523 03DD  
                   l1419 034A                     l1435 01E2                     l1347 02FD  
                   l1339 02DE                     l1371 02BA                     l1363 02A2  
                   l1507 04E8                     l1515 0520                     l1427 022C  
                   l1443 026E                     l1611 0541                     l1603 053A  
                   l1381 021A                     l1541 042F                     l1533 0401  
                   l1525 03E5                     l1517 03CF                     l1349 02FE  
                   l1373 02C1                     l1365 02A6                     l1357 0292  
                   l1509 04ED                     l1461 0458                     l1453 0448  
                   l1429 0234                     l1445 0272                     l1701 06D2  
                   l1621 0549                     l1613 0541                     l1605 053E  
                   l1383 0220                     l1543 0434                     l1535 0406  
                   l1527 03E8                     l1519 03D0                     l1391 0311  
                   l1367 02AA                     l1359 0298                     l1375 02C7  
                   l1471 0477                     l1463 045E                     l1455 044B  
                   l1551 0204                     l1447 0285                     l1439 0269  
                   l1711 06EB                     l1703 06D3                     l1631 055E  
                   l1623 054B                     l1615 0541                     l1607 0541  
                   l1561 0371                     l1385 0226                     l1529 03F0  
                   l1393 0314                     l1369 02B4                     l1481 04A9  
                   l1473 047F                     l1465 0462                     l1457 0451  
                   l1553 0208                     l1449 028C                     l1721 0713  
                   l1713 06EE                     l1705 06DD                     l1641 058C  
                   l1633 056A                     l1625 054D                     l1617 0545  
                   l1609 0541                     l1571 0382                     l1563 0373  
                   l1555 0367                     l1387 0228                     l1379 0219  
                   l1547 0440                     l1539 0425                     l1299 01F0  
                   l1483 04AD                     l1467 0468                     l1459 0456  
                   l1731 0768                     l1723 071C                     l1715 06F8  
                   l1707 06E5                     l1643 0591                     l1635 056F  
                   l1651 05B3                     l1627 054E                     l1619 0545  
                   l1581 039A                     l1573 0388                     l1565 0377  
                   l1557 0368                     l1397 031B                     l1485 04B1  
                   l1469 046D                     l1477 048C                     l1741 07C4  
                   l1733 076B                     l1725 071F                     l1717 0700  
                   l1709 06E9                     l1661 05DA                     l1653 05B9  
                   l1645 059D                     l1637 057B                     l1629 055A  
                   l1583 03AB                     l1575 038B                     l1591 03BF  
                   l1567 037C                     l1559 036C                     l1399 0323  
                   l1495 04BC                     l1487 04B5                     l1479 04A2  
                   l1751 07D7                     l1743 07CD                     l1735 078E  
                   l1727 0742                     l1719 0700                     l1671 05F5  
                   l1663 05E2                     l1655 05C7                     l1647 05A2  
                   l1639 0580                     l1593 03C4                     l1585 03B1  
                   l1577 0392                     l1569 0380                     l1489 04BA  
                   l1753 07D7                     l1745 07CD                     l1737 0791  
                   l1729 0745                     l1681 061C                     l1673 05FD  
                   l1665 05E6                     l1657 05CF                     l1649 05AE  
                   l1595 03C9                     l1587 03B2                     l1579 0396  
                   l1499 04D4                     l1755 07DC                     l1747 07D2  
                   l1739 07AE                     l1691 068B                     l1683 063F  
                   l1675 05FD                     l1667 05E8                     l1659 05D0  
                   l1589 03B9                     l1781 0358                     l1749 07D2  
                   l1693 068E                     l1685 0642                     l1677 0610  
                   l1669 05EB                     l1695 06AB                     l1687 0665  
                   l1679 0619                     l1759 07E5                     l1599 0531  
                   l1697 06C1                     l1689 0668                     l1699 06CA  
                   STR_1 0096                     STR_2 009E                     STR_3 009A  
                   STR_4 00A2                     STR_5 008E                     STR_6 0092  
                   STR_7 0082                     STR_8 007E                     STR_9 0065  
                   u1000 04E4                     u1001 04E3                     u1010 0520  
                   u1011 051F                     u1100 0377                     u1020 0530  
                   u1101 0376                     u1021 052F                     u1110 0388  
                   u1030 03DD                     u1111 0387                     u1031 03DC  
                   u1040 03E5                     u1200 056A                     u1041 03E4  
                   u1201 0569                     u1130 039A                     u1050 03F0  
                   u1210 057B                     u1131 0399                     u1051 03EF  
                   u1211 057A                     u1060 0401                     u1300 073C  
                   u1220 058C                     u1125 038C                     u1061 0400  
                   u1301 073B                     u1221 058B                     u1150 03AB  
                   u1070 042F                     u1310 0762                     u1230 059D  
                   u1151 03AA                     u1071 042E                     u1311 0761  
                   u1231 059C                     u1080 0434                     u1320 0788  
                   u1240 05AE                     u1145 039B                     u1081 0433  
                   u1321 0787                     u1305 0738                     u1241 05AD  
                   u1170 03BF                     u1090 036C                     u1330 07AE  
                   u1250 0639                     u1171 03BE                     u1155 03A7  
                   u1091 036B                     u1331 07AD                     u1315 075E  
                   u1251 0638                     u1180 03C4                     u1340 07C4  
                   u1260 065F                     u1181 03C3                     u1165 03B3  
                   u1341 07C3                     u1325 0784                     u1261 065E  
                   u1270 0685                     u1190 055A                     u1335 07AA  
                   u1407 0749                     u1271 0684                     u1255 0635  
                   u1191 0559                     u1280 06AB                     u1345 07C0  
                   u1417 076F                     u1281 06AA                     u1265 065B  
                   u1290 06C1                     u1427 0795                     u1291 06C0  
                   u1275 0681                     u1285 06A7                     u1357 0620  
                   u1295 06BD                     u1367 0646                     u1377 066C  
                   u1387 0692                     u1397 0723                     _RCIF 0065  
                   _TXIF 0064                     _atoi 03CE                     _gets 01E1  
                   _main 0531                     btemp 007E                     _puts 0203  
                   start 0000                    ?_atoi 0076                    ?_gets 0070  
                  ?_main 0070          __end_of___awdiv 03CE                    STR_10 0058  
                  STR_11 004A                    STR_20 0078                    STR_12 002C  
                  STR_21 0078                    STR_13 0065                    STR_14 0058  
                  STR_22 0071                    STR_15 003C                    STR_16 001C  
                  STR_17 0086                    STR_18 008A                    STR_19 00A6  
                  _CMCON 001F                    ?_puts 0070          ___awdiv@divisor 0070  
        __end_of___lwdiv 0310          __end_of___lwmod 02CC          ___awdiv@counter 0074  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _TXSTA 0098  
                  _cgets 0310                    _getch 01E7          __end_of_dpowers 001C  
                  _cputs 022A          __end_of_isdigit 022A                    atoi@a 007B  
                  atoi@s 007D                    _putch 01EF                    gets@s 0078  
                  main@j 0058                    main@k 004F                    pclath 000A  
                  puts@s 0072                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_atoi 0445             __end_of_gets 01E7  
           __end_of_main 07FD             __end_of_puts 020D                   ??_atoi 0078  
                 ??_gets 0078                   ??_main 002C                   ??_puts 0072  
                 ?_cgets 0070                   ?_getch 0070                   ?_cputs 0070  
       ___awdiv@dividend 0072                   ?_putch 0070                   ___wmul 0243  
              ??___awdiv 0074         __end_of_initUART 0218                ??___lwdiv 0074  
              ??___lwmod 007B                   _getche 01F9                   cgets@c 0074  
                 cgets@s 0076         ___awdiv@quotient 0076                   _printf 0445  
                 main@ln 004B                   _strcmp 0268                   cputs@s 0071  
              ??_isdigit 0070  __end_of__initialization 07FD           __pcstackCOMMON 0070  
          __end_of_cgets 0367            __end_of_getch 01EF            __end_of_cputs 0243  
          __end_of_putch 01F9                  ??_cgets 0072                  ??_getch 0070  
                ??_cputs 0071                  ??_putch 0070               __pmaintext 0531  
                ?___wmul 0070                  ?_getche 0070                  ?_printf 007C  
                ?_strcmp 0070               __stringtab 0002                ?_initUART 0070  
                ___awdiv 0367                  ___lwdiv 02CC                  ___lwmod 0292  
                __ptext1 0268                  __ptext2 0203                  __ptext3 022A  
                __ptext4 0445                  __ptext5 0292                  __ptext6 02CC  
                __ptext7 020D                  __ptext8 01E1                  __ptext9 0310  
                _dpowers 0012                  _isdigit 0218                  cgets@s1 0077  
                getche@c 0071                  main@cmd 0051                  main@hln 0054  
                main@spd 0052                  main@tmp 002E     end_of_initialization 07FD  
             ??_initUART 0070                  printf@c 002B                  printf@f 002A  
                strcmp@r 0074           __end_of___wmul 0268           __end_of_getche 0203  
         __end_of_printf 0531           __end_of_strcmp 0292      start_initialization 07FD  
               ??___wmul 0074                 ??_getche 0071                 ??_printf 0020  
               ??_strcmp 0072                ___latbits 0001            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072                 ?___awdiv 0070                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0002                 ?_isdigit 0070  
       ___lwdiv@quotient 0074           ___wmul@product 0074              __stringbase 0011  
      ___wmul@multiplier 0070               printf@flag 0023               printf@prec 0024  
              main@intvl 0056                main@speed 0046       __end_of__stringtab 0012  
            _isdigit$617 0070          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 01F9                 __ptext11 01EF                 __ptext12 01E7  
               __ptext13 03CE                 __ptext14 0218                 __ptext15 0243  
               __ptext16 0367                 _initUART 020D                 atoi@sign 007A  
              printf@val 0028                 main@rcmd 0042                putch@byte 0070  
               isdigit@c 0071         ___lwmod@dividend 0079                stringcode 000C  
               printf@ap 0025                 printf@cp 0026                 strcmp@s1 0075  
               strcmp@s2 0070          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 000C                 stringtab 0002  
