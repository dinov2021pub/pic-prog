

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 18 15:36:01 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 09/02/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F648A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     008C                     	;# 
    94     008E                     	;# 
    95     0092                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009A                     	;# 
    99     009B                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009F                     	;# 
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     000A                     	;# 
   111     000B                     	;# 
   112     000C                     	;# 
   113     000E                     	;# 
   114     000E                     	;# 
   115     000F                     	;# 
   116     0010                     	;# 
   117     0011                     	;# 
   118     0012                     	;# 
   119     0015                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0017                     	;# 
   123     0018                     	;# 
   124     0019                     	;# 
   125     001A                     	;# 
   126     001F                     	;# 
   127     0081                     	;# 
   128     0085                     	;# 
   129     0086                     	;# 
   130     008C                     	;# 
   131     008E                     	;# 
   132     0092                     	;# 
   133     0098                     	;# 
   134     0099                     	;# 
   135     009A                     	;# 
   136     009B                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009F                     	;# 
   140     0000                     	;# 
   141     0001                     	;# 
   142     0002                     	;# 
   143     0003                     	;# 
   144     0004                     	;# 
   145     0005                     	;# 
   146     0006                     	;# 
   147     000A                     	;# 
   148     000B                     	;# 
   149     000C                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     008C                     	;# 
   168     008E                     	;# 
   169     0092                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009A                     	;# 
   173     009B                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009F                     	;# 
   177                           
   178                           	psect	strings
   179     0002                     __pstrings:
   180     0002                     stringtab:
   181     0002                     __stringtab:
   182                           
   183                           ;	String table - string pointers are 1 byte each
   184     0002  1BFF               	btfsc	btemp+1,7
   185     0003  280C               	ljmp	stringcode
   186     0004  1383               	bcf	3,7
   187     0005  187F               	btfsc	btemp+1,0
   188     0006  1783               	bsf	3,7
   189     0007  0800               	movf	0,w
   190     0008  0A84               	incf	4,f
   191     0009  1903               	skipnz
   192     000A  0AFF               	incf	btemp+1,f
   193     000B  0008               	return
   194     000C                     stringcode:
   195     000C                     stringdir:
   196     000C  3000               	movlw	high stringdir
   197     000D  008A               	movwf	10
   198     000E  0804               	movf	4,w
   199     000F  0A84               	incf	4,f
   200     0010  0782               	addwf	2,f
   201     0011                     __stringbase:
   202     0011  3400               	retlw	0
   203     0012                     __end_of__stringtab:
   204     0012                     _dpowers:
   205     0012  3401               	retlw	1
   206     0013  3400               	retlw	0
   207     0014  340A               	retlw	10
   208     0015  3400               	retlw	0
   209     0016  3464               	retlw	100
   210     0017  3400               	retlw	0
   211     0018  34E8               	retlw	232
   212     0019  3403               	retlw	3
   213     001A  3410               	retlw	16
   214     001B  3427               	retlw	39
   215     001C                     __end_of_dpowers:
   216     001A                     _RCREG	set	26
   217     0019                     _TXREG	set	25
   218     0018                     _RCSTA	set	24
   219     001F                     _CMCON	set	31
   220     0006                     _PORTB	set	6
   221     0005                     _PORTA	set	5
   222     0065                     _RCIF	set	101
   223     0064                     _TXIF	set	100
   224     0037                     _RB7	set	55
   225     0036                     _RB6	set	54
   226     0035                     _RB5	set	53
   227     0034                     _RB4	set	52
   228     0098                     _TXSTA	set	152
   229     0099                     _SPBRG	set	153
   230     0086                     _TRISB	set	134
   231     0085                     _TRISA	set	133
   232     001C                     STR_11:
   233     001C  344D               	retlw	77	;'M'
   234     001D  344F               	retlw	79	;'O'
   235     001E  3454               	retlw	84	;'T'
   236     001F  344F               	retlw	79	;'O'
   237     0020  3452               	retlw	82	;'R'
   238     0021  3420               	retlw	32	;' '
   239     0022  343D               	retlw	61	;'='
   240     0023  3420               	retlw	32	;' '
   241     0024  3442               	retlw	66	;'B'
   242     0025  3420               	retlw	32	;' '
   243     0026  3420               	retlw	32	;' '
   244     0027  344F               	retlw	79	;'O'
   245     0028  344B               	retlw	75	;'K'
   246     0029  340D               	retlw	13
   247     002A  340A               	retlw	10
   248     002B  3400               	retlw	0
   249     002C                     STR_9:
   250     002C  344D               	retlw	77	;'M'
   251     002D  344F               	retlw	79	;'O'
   252     002E  3454               	retlw	84	;'T'
   253     002F  344F               	retlw	79	;'O'
   254     0030  3452               	retlw	82	;'R'
   255     0031  3420               	retlw	32	;' '
   256     0032  343D               	retlw	61	;'='
   257     0033  3420               	retlw	32	;' '
   258     0034  3446               	retlw	70	;'F'
   259     0035  3420               	retlw	32	;' '
   260     0036  3420               	retlw	32	;' '
   261     0037  344F               	retlw	79	;'O'
   262     0038  344B               	retlw	75	;'K'
   263     0039  340D               	retlw	13
   264     003A  340A               	retlw	10
   265     003B  3400               	retlw	0
   266     003C                     STR_10:
   267     003C  344D               	retlw	77	;'M'
   268     003D  344F               	retlw	79	;'O'
   269     003E  3454               	retlw	84	;'T'
   270     003F  344F               	retlw	79	;'O'
   271     0040  3452               	retlw	82	;'R'
   272     0041  3420               	retlw	32	;' '
   273     0042  343D               	retlw	61	;'='
   274     0043  3420               	retlw	32	;' '
   275     0044  3442               	retlw	66	;'B'
   276     0045  3420               	retlw	32	;' '
   277     0046  3420               	retlw	32	;' '
   278     0047  344F               	retlw	79	;'O'
   279     0048  344B               	retlw	75	;'K'
   280     0049  3400               	retlw	0
   281     004A                     STR_8:
   282     004A  344D               	retlw	77	;'M'
   283     004B  344F               	retlw	79	;'O'
   284     004C  3454               	retlw	84	;'T'
   285     004D  344F               	retlw	79	;'O'
   286     004E  3452               	retlw	82	;'R'
   287     004F  3420               	retlw	32	;' '
   288     0050  343D               	retlw	61	;'='
   289     0051  3420               	retlw	32	;' '
   290     0052  3446               	retlw	70	;'F'
   291     0053  3420               	retlw	32	;' '
   292     0054  3420               	retlw	32	;' '
   293     0055  344F               	retlw	79	;'O'
   294     0056  344B               	retlw	75	;'K'
   295     0057  3400               	retlw	0
   296     0058                     STR_7:
   297     0058  3469               	retlw	105	;'i'
   298     0059  346E               	retlw	110	;'n'
   299     005A  3474               	retlw	116	;'t'
   300     005B  3476               	retlw	118	;'v'
   301     005C  346C               	retlw	108	;'l'
   302     005D  3420               	retlw	32	;' '
   303     005E  343D               	retlw	61	;'='
   304     005F  3420               	retlw	32	;' '
   305     0060  3425               	retlw	37	;'%'
   306     0061  3464               	retlw	100	;'d'
   307     0062  340A               	retlw	10
   308     0063  3400               	retlw	0
   309     0064                     STR_5:
   310     0064  3463               	retlw	99	;'c'
   311     0065  346E               	retlw	110	;'n'
   312     0066  3474               	retlw	116	;'t'
   313     0067  3420               	retlw	32	;' '
   314     0068  343D               	retlw	61	;'='
   315     0069  3420               	retlw	32	;' '
   316     006A  3425               	retlw	37	;'%'
   317     006B  3464               	retlw	100	;'d'
   318     006C  340A               	retlw	10
   319     006D  3400               	retlw	0
   320     006E                     STR_12:
   321     006E  3428               	retlw	40	;'('
   322     006F  346E               	retlw	110	;'n'
   323     0070  3475               	retlw	117	;'u'
   324     0071  346C               	retlw	108	;'l'
   325     0072  346C               	retlw	108	;'l'
   326     0073  3429               	retlw	41	;')'
   327     0074  3400               	retlw	0
   328     0075                     STR_2:
   329     0075  3425               	retlw	37	;'%'
   330     0076  3473               	retlw	115	;'s'
   331     0077  340A               	retlw	10
   332     0078  3400               	retlw	0
   333     0079                     STR_1:
   334     0079  342C               	retlw	44	;','
   335     007A  3400               	retlw	0
   336     0075                     
   337                           	psect	cinit
   338     07FA                     start_initialization:	
   339                           ; #config settings
   340                           
   341     07FA                     __initialization:
   342                           
   343                           ; Clear objects allocated to BANK0
   344     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   345     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   346     07FC  01CB               	clrf	__pbssBANK0& (0+127)
   347     07FD                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350     07FD                     __end_of__initialization:
   351     07FD  0183               	clrf	3
   352     07FE  118A  2DB3         	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bssBANK0
   355     004B                     __pbssBANK0:
   356     004B                     strtok@sp:
   357     004B                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360     0070                     __pcstackCOMMON:
   361     0070                     ?_isdigit:
   362     0070                     ?_initUART:	
   363                           ; 1 bit 
   364                           
   365     0070                     ??_initUART:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?_gets:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ??_isdigit:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_cgets:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_cputs:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_strchr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?_putch:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ??_putch:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_getch:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_getch:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_getche:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_puts:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?___wmul:	
   405                           ; 2 bytes @ 0x0
   406                           
   407     0070                     ?___lwdiv:	
   408                           ; 2 bytes @ 0x0
   409                           
   410     0070                     putch@byte:	
   411                           ; 2 bytes @ 0x0
   412                           
   413     0070                     _isdigit$592:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ___wmul@multiplier:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ___lwdiv@divisor:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     strchr@chr:	
   423                           ; 2 bytes @ 0x0
   424                           
   425                           
   426                           ; 2 bytes @ 0x0
   427     0070                     	ds	1
   428     0071                     ??_cputs:
   429     0071                     ??_getche:	
   430                           ; 1 bytes @ 0x1
   431                           
   432     0071                     getche@c:	
   433                           ; 1 bytes @ 0x1
   434                           
   435     0071                     isdigit@c:	
   436                           ; 1 bytes @ 0x1
   437                           
   438     0071                     cputs@s:	
   439                           ; 1 bytes @ 0x1
   440                           
   441                           
   442                           ; 1 bytes @ 0x1
   443     0071                     	ds	1
   444     0072                     ??_puts:
   445     0072                     ??_cgets:	
   446                           ; 1 bytes @ 0x2
   447                           
   448     0072                     ??_strchr:	
   449                           ; 1 bytes @ 0x2
   450                           
   451     0072                     puts@s:	
   452                           ; 1 bytes @ 0x2
   453                           
   454     0072                     strchr@ptr:	
   455                           ; 1 bytes @ 0x2
   456                           
   457     0072                     ___wmul@multiplicand:	
   458                           ; 1 bytes @ 0x2
   459                           
   460     0072                     ___lwdiv@dividend:	
   461                           ; 2 bytes @ 0x2
   462                           
   463                           
   464                           ; 2 bytes @ 0x2
   465     0072                     	ds	1
   466     0073                     ?_strspn:
   467     0073                     ?_strcspn:	
   468                           ; 2 bytes @ 0x3
   469                           
   470     0073                     strcspn@s2:	
   471                           ; 2 bytes @ 0x3
   472                           
   473     0073                     strspn@s2:	
   474                           ; 1 bytes @ 0x3
   475                           
   476                           
   477                           ; 1 bytes @ 0x3
   478     0073                     	ds	1
   479     0074                     ??___wmul:
   480     0074                     ??___lwdiv:	
   481                           ; 1 bytes @ 0x4
   482                           
   483     0074                     ___wmul@product:	
   484                           ; 1 bytes @ 0x4
   485                           
   486     0074                     ___lwdiv@quotient:	
   487                           ; 2 bytes @ 0x4
   488                           
   489     0074                     cgets@c:	
   490                           ; 2 bytes @ 0x4
   491                           
   492                           
   493                           ; 2 bytes @ 0x4
   494     0074                     	ds	1
   495     0075                     ??_strspn:
   496     0075                     ??_strcspn:	
   497                           ; 1 bytes @ 0x5
   498                           
   499                           
   500                           ; 1 bytes @ 0x5
   501     0075                     	ds	1
   502     0076                     ?_atoi:
   503     0076                     ___lwdiv@counter:	
   504                           ; 2 bytes @ 0x6
   505                           
   506     0076                     cgets@s:	
   507                           ; 1 bytes @ 0x6
   508                           
   509                           
   510                           ; 1 bytes @ 0x6
   511     0076                     	ds	1
   512     0077                     ?___lwmod:
   513     0077                     cgets@s1:	
   514                           ; 2 bytes @ 0x7
   515                           
   516     0077                     ___lwmod@divisor:	
   517                           ; 1 bytes @ 0x7
   518                           
   519     0077                     strcspn@i:	
   520                           ; 2 bytes @ 0x7
   521                           
   522     0077                     strspn@i:	
   523                           ; 2 bytes @ 0x7
   524                           
   525                           
   526                           ; 2 bytes @ 0x7
   527     0077                     	ds	1
   528     0078                     ??_gets:
   529     0078                     ??_atoi:	
   530                           ; 1 bytes @ 0x8
   531                           
   532     0078                     gets@s:	
   533                           ; 1 bytes @ 0x8
   534                           
   535                           
   536                           ; 1 bytes @ 0x8
   537     0078                     	ds	1
   538     0079                     strcspn@s1:
   539     0079                     strspn@s1:	
   540                           ; 1 bytes @ 0x9
   541                           
   542     0079                     ___lwmod@dividend:	
   543                           ; 1 bytes @ 0x9
   544                           
   545                           
   546                           ; 2 bytes @ 0x9
   547     0079                     	ds	1
   548     007A                     ?_strtok:
   549     007A                     atoi@sign:	
   550                           ; 1 bytes @ 0xA
   551                           
   552     007A                     strtok@s2:	
   553                           ; 1 bytes @ 0xA
   554                           
   555                           
   556                           ; 1 bytes @ 0xA
   557     007A                     	ds	1
   558     007B                     ??_strtok:
   559     007B                     ??___lwmod:	
   560                           ; 1 bytes @ 0xB
   561                           
   562     007B                     ___lwmod@counter:	
   563                           ; 1 bytes @ 0xB
   564                           
   565     007B                     strtok@s1:	
   566                           ; 1 bytes @ 0xB
   567                           
   568     007B                     atoi@a:	
   569                           ; 1 bytes @ 0xB
   570                           
   571                           
   572                           ; 2 bytes @ 0xB
   573     007B                     	ds	1
   574     007C                     ?_printf:
   575                           
   576                           ; 2 bytes @ 0xC
   577     007C                     	ds	1
   578     007D                     atoi@s:
   579                           
   580                           ; 1 bytes @ 0xD
   581     007D                     	ds	1
   582                           
   583                           	psect	cstackBANK0
   584     0020                     __pcstackBANK0:
   585     0020                     ??_printf:
   586                           
   587                           ; 1 bytes @ 0x0
   588     0020                     	ds	3
   589     0023                     printf@flag:
   590                           
   591                           ; 1 bytes @ 0x3
   592     0023                     	ds	1
   593     0024                     printf@prec:
   594                           
   595                           ; 1 bytes @ 0x4
   596     0024                     	ds	1
   597     0025                     printf@ap:
   598                           
   599                           ; 1 bytes @ 0x5
   600     0025                     	ds	1
   601     0026                     printf@cp:
   602                           
   603                           ; 2 bytes @ 0x6
   604     0026                     	ds	2
   605     0028                     printf@val:
   606                           
   607                           ; 2 bytes @ 0x8
   608     0028                     	ds	2
   609     002A                     printf@f:
   610                           
   611                           ; 1 bytes @ 0xA
   612     002A                     	ds	1
   613     002B                     printf@c:
   614                           
   615                           ; 1 bytes @ 0xB
   616     002B                     	ds	1
   617     002C                     ??_main:
   618                           
   619                           ; 1 bytes @ 0xC
   620     002C                     	ds	2
   621     002E                     main@tmp:
   622                           
   623                           ; 20 bytes @ 0xE
   624     002E                     	ds	20
   625     0042                     main@k:
   626                           
   627                           ; 2 bytes @ 0x22
   628     0042                     	ds	2
   629     0044                     main@cnt:
   630                           
   631                           ; 2 bytes @ 0x24
   632     0044                     	ds	2
   633     0046                     main@ptr:
   634                           
   635                           ; 1 bytes @ 0x26
   636     0046                     	ds	1
   637     0047                     main@intvl:
   638                           
   639                           ; 2 bytes @ 0x27
   640     0047                     	ds	2
   641     0049                     main@j:
   642                           
   643                           ; 2 bytes @ 0x29
   644     0049                     	ds	2
   645                           
   646                           	psect	maintext
   647     05B3                     __pmaintext:	
   648 ;;
   649 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   650 ;;
   651 ;; *************** function _main *****************
   652 ;; Defined at:
   653 ;;		line 38 in file "main.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  tmp            20   14[BANK0 ] unsigned char [20]
   658 ;;  j               2   41[BANK0 ] int 
   659 ;;  intvl           2   39[BANK0 ] int 
   660 ;;  cnt             2   36[BANK0 ] int 
   661 ;;  k               2   34[BANK0 ] int 
   662 ;;  ptr             1   38[BANK0 ] PTR unsigned char 
   663 ;;		 -> NULL(0), main@tmp(20), 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : B00/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   673 ;;      Params:         0       0       0       0
   674 ;;      Locals:         0      29       0       0
   675 ;;      Temps:          0       2       0       0
   676 ;;      Totals:         0      31       0       0
   677 ;;Total ram usage:       31 bytes
   678 ;; Hardware stack levels required when called: 4
   679 ;; This function calls:
   680 ;;		_atoi
   681 ;;		_gets
   682 ;;		_initUART
   683 ;;		_printf
   684 ;;		_puts
   685 ;;		_strtok
   686 ;; This function is called by:
   687 ;;		Startup code after reset
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691     05B3                     _main:	
   692                           ;psect for function _main
   693                           
   694     05B3                     l1582:	
   695                           ;incstack = 0
   696                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   697                           
   698                           
   699                           ;main.c: 40: PORTA = 0x00;
   700     05B3  1283               	bcf	3,5	;RP0=0, select bank0
   701     05B4  1303               	bcf	3,6	;RP1=0, select bank0
   702     05B5  0185               	clrf	5	;volatile
   703                           
   704                           ;main.c: 41: PORTB = 0x00;
   705     05B6  0186               	clrf	6	;volatile
   706     05B7                     l1584:
   707                           
   708                           ;main.c: 42: TRISA = 0b00000011;
   709     05B7  3003               	movlw	3
   710     05B8  1683               	bsf	3,5	;RP0=1, select bank1
   711     05B9  1303               	bcf	3,6	;RP1=0, select bank1
   712     05BA  0085               	movwf	5	;volatile
   713     05BB                     l1586:
   714                           
   715                           ;main.c: 43: TRISB = 0b00000010;
   716     05BB  3002               	movlw	2
   717     05BC  0086               	movwf	6	;volatile
   718     05BD                     l1588:
   719                           
   720                           ;main.c: 44: CMCON = 0b00000111;
   721     05BD  3007               	movlw	7
   722     05BE  1283               	bcf	3,5	;RP0=0, select bank0
   723     05BF  1303               	bcf	3,6	;RP1=0, select bank0
   724     05C0  009F               	movwf	31	;volatile
   725     05C1                     l1590:
   726                           
   727                           ;main.c: 46: initUART();
   728     05C1  118A  2264  118A   	fcall	_initUART
   729     05C4                     l1592:
   730     05C4                     l1594:
   731     05C4                     l1596:
   732     05C4                     l1598:
   733                           
   734                           ;main.c: 52: int intvl = 10;
   735     05C4  300A               	movlw	10
   736     05C5  1283               	bcf	3,5	;RP0=0, select bank0
   737     05C6  1303               	bcf	3,6	;RP1=0, select bank0
   738     05C7  00C7               	movwf	main@intvl
   739     05C8  3000               	movlw	0
   740     05C9  00C8               	movwf	main@intvl+1
   741     05CA                     l1600:
   742                           
   743                           ;main.c: 58: gets(tmp);
   744     05CA  302E               	movlw	(low (main@tmp| 0))& (0+255)
   745     05CB  118A  2238  118A   	fcall	_gets
   746     05CE                     l1602:
   747                           
   748                           ;main.c: 62: ptr = strtok(tmp, ",");
   749     05CE  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   750     05CF  00FA               	movwf	strtok@s2
   751     05D0  302E               	movlw	(low (main@tmp| 0))& (0+255)
   752     05D1  118A  23B3  118A   	fcall	_strtok
   753     05D4  1283               	bcf	3,5	;RP0=0, select bank0
   754     05D5  1303               	bcf	3,6	;RP1=0, select bank0
   755     05D6  00C6               	movwf	main@ptr
   756     05D7                     l1604:
   757                           
   758                           ;main.c: 63: printf("%s\n", ptr);
   759     05D7  0846               	movf	main@ptr,w
   760     05D8  00FC               	movwf	?_printf
   761     05D9  3064               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   762     05DA  118A  24C7  118A   	fcall	_printf
   763     05DD                     l1606:
   764                           
   765                           ;main.c: 64: printf("%s\n", ptr[0]);
   766     05DD  1283               	bcf	3,5	;RP0=0, select bank0
   767     05DE  1303               	bcf	3,6	;RP1=0, select bank0
   768     05DF  0846               	movf	main@ptr,w
   769     05E0  0084               	movwf	4
   770     05E1  1383               	bcf	3,7	;select IRP bank0
   771     05E2  0800               	movf	0,w
   772     05E3  00AC               	movwf	??_main
   773     05E4  01AD               	clrf	??_main+1
   774     05E5  082C               	movf	??_main,w
   775     05E6  00FC               	movwf	?_printf
   776     05E7  082D               	movf	??_main+1,w
   777     05E8  00FD               	movwf	?_printf+1
   778     05E9  3064               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   779     05EA  118A  24C7  118A   	fcall	_printf
   780                           
   781                           ;main.c: 66: switch(ptr[0]){
   782     05ED  2FD9               	goto	l1680
   783     05EE                     l1608:
   784     05EE  3014               	movlw	20
   785     05EF  00C4               	movwf	main@cnt
   786     05F0  3000               	movlw	0
   787     05F1  00C5               	movwf	main@cnt+1
   788                           
   789                           ;main.c: 68: intvl=5;
   790     05F2  3005               	movlw	5
   791     05F3  00C7               	movwf	main@intvl
   792     05F4  3000               	movlw	0
   793     05F5  00C8               	movwf	main@intvl+1
   794     05F6                     l1610:
   795                           
   796                           ;main.c: 69: ptr = strtok((0), ",");
   797     05F6  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   798     05F7  00FA               	movwf	strtok@s2
   799     05F8  3000               	movlw	0
   800     05F9  118A  23B3  118A   	fcall	_strtok
   801     05FC  1283               	bcf	3,5	;RP0=0, select bank0
   802     05FD  1303               	bcf	3,6	;RP1=0, select bank0
   803     05FE  00C6               	movwf	main@ptr
   804     05FF                     l1612:
   805                           
   806                           ;main.c: 70: if(ptr != (0)) {
   807     05FF  0846               	movf	main@ptr,w
   808     0600  1903               	btfsc	3,2
   809     0601  2E03               	goto	u1111
   810     0602  2E04               	goto	u1110
   811     0603                     u1111:
   812     0603  2E0E               	goto	l40
   813     0604                     u1110:
   814     0604                     l1614:
   815                           
   816                           ;main.c: 71: cnt = atoi(ptr);
   817     0604  0846               	movf	main@ptr,w
   818     0605  118A  2450  118A   	fcall	_atoi
   819     0608  0877               	movf	?_atoi+1,w
   820     0609  1283               	bcf	3,5	;RP0=0, select bank0
   821     060A  1303               	bcf	3,6	;RP1=0, select bank0
   822     060B  00C5               	movwf	main@cnt+1
   823     060C  0876               	movf	?_atoi,w
   824     060D  00C4               	movwf	main@cnt
   825     060E                     l40:
   826                           
   827                           ;main.c: 72: };main.c: 73: printf("cnt = %d\n", cnt);
   828     060E  0845               	movf	main@cnt+1,w
   829     060F  00FD               	movwf	?_printf+1
   830     0610  0844               	movf	main@cnt,w
   831     0611  00FC               	movwf	?_printf
   832     0612  3053               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   833     0613  118A  24C7  118A   	fcall	_printf
   834                           
   835                           ;main.c: 74: ptr = strtok((0), ",");
   836     0616  3068               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   837     0617  00FA               	movwf	strtok@s2
   838     0618  3000               	movlw	0
   839     0619  118A  23B3  118A   	fcall	_strtok
   840     061C  1283               	bcf	3,5	;RP0=0, select bank0
   841     061D  1303               	bcf	3,6	;RP1=0, select bank0
   842     061E  00C6               	movwf	main@ptr
   843     061F                     l1616:
   844                           
   845                           ;main.c: 75: if(ptr != (0)) {
   846     061F  0846               	movf	main@ptr,w
   847     0620  1903               	btfsc	3,2
   848     0621  2E23               	goto	u1121
   849     0622  2E24               	goto	u1120
   850     0623                     u1121:
   851     0623  2E2E               	goto	l41
   852     0624                     u1120:
   853     0624                     l1618:
   854                           
   855                           ;main.c: 76: intvl = atoi(ptr);
   856     0624  0846               	movf	main@ptr,w
   857     0625  118A  2450  118A   	fcall	_atoi
   858     0628  0877               	movf	?_atoi+1,w
   859     0629  1283               	bcf	3,5	;RP0=0, select bank0
   860     062A  1303               	bcf	3,6	;RP1=0, select bank0
   861     062B  00C8               	movwf	main@intvl+1
   862     062C  0876               	movf	?_atoi,w
   863     062D  00C7               	movwf	main@intvl
   864     062E                     l41:
   865                           
   866                           ;main.c: 77: };main.c: 78: printf("intvl = %d\n", intvl);
   867     062E  0848               	movf	main@intvl+1,w
   868     062F  00FD               	movwf	?_printf+1
   869     0630  0847               	movf	main@intvl,w
   870     0631  00FC               	movwf	?_printf
   871     0632  3047               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   872     0633  118A  24C7  118A   	fcall	_printf
   873     0636                     l1620:
   874                           
   875                           ;main.c: 79: for(k = 0 ; k < cnt ; k++){
   876     0636  1283               	bcf	3,5	;RP0=0, select bank0
   877     0637  1303               	bcf	3,6	;RP1=0, select bank0
   878     0638  01C2               	clrf	main@k
   879     0639  01C3               	clrf	main@k+1
   880     063A  2EE3               	goto	l42
   881     063B                     l43:
   882                           
   883                           ;main.c: 80: RB4 = 1;
   884     063B  1283               	bcf	3,5	;RP0=0, select bank0
   885     063C  1303               	bcf	3,6	;RP1=0, select bank0
   886     063D  1606               	bsf	6,4	;volatile
   887                           
   888                           ;main.c: 81: RB5 = 0;
   889     063E  1286               	bcf	6,5	;volatile
   890                           
   891                           ;main.c: 82: RB6 = 0;
   892     063F  1306               	bcf	6,6	;volatile
   893                           
   894                           ;main.c: 83: RB7 = 0;
   895     0640  1386               	bcf	6,7	;volatile
   896     0641                     l1622:
   897                           
   898                           ;main.c: 84: for(j = 0 ; j < intvl ; j++){
   899     0641  01C9               	clrf	main@j
   900     0642  01CA               	clrf	main@j+1
   901     0643  2E55               	goto	l44
   902     0644                     l1624:
   903                           
   904                           ;main.c: 85: _delay((unsigned long)((1)*(4000000/4000.0)));
   905     0644  30C7               	movlw	199
   906     0645  1283               	bcf	3,5	;RP0=0, select bank0
   907     0646  1303               	bcf	3,6	;RP1=0, select bank0
   908     0647  00AC               	movwf	??_main
   909     0648                     u1237:
   910     0648  2E49               	nop2
   911     0649  0BAC               	decfsz	??_main,f
   912     064A  2E48               	goto	u1237
   913     064B  2E4C               	nop2
   914     064C  0000               	nop
   915     064D  3001               	movlw	1
   916     064E  1283               	bcf	3,5	;RP0=0, select bank0
   917     064F  1303               	bcf	3,6	;RP1=0, select bank0
   918     0650  07C9               	addwf	main@j,f
   919     0651  1803               	skipnc
   920     0652  0ACA               	incf	main@j+1,f
   921     0653  3000               	movlw	0
   922     0654  07CA               	addwf	main@j+1,f
   923     0655                     l44:
   924     0655  084A               	movf	main@j+1,w
   925     0656  3A80               	xorlw	128
   926     0657  00AC               	movwf	??_main
   927     0658  0848               	movf	main@intvl+1,w
   928     0659  3A80               	xorlw	128
   929     065A  022C               	subwf	??_main,w
   930     065B  1D03               	skipz
   931     065C  2E5F               	goto	u1135
   932     065D  0847               	movf	main@intvl,w
   933     065E  0249               	subwf	main@j,w
   934     065F                     u1135:
   935     065F  1C03               	skipc
   936     0660  2E62               	goto	u1131
   937     0661  2E63               	goto	u1130
   938     0662                     u1131:
   939     0662  2E44               	goto	l1624
   940     0663                     u1130:
   941     0663                     l46:
   942                           
   943                           ;main.c: 86: };main.c: 87: RB4 = 0;
   944     0663  1283               	bcf	3,5	;RP0=0, select bank0
   945     0664  1303               	bcf	3,6	;RP1=0, select bank0
   946     0665  1206               	bcf	6,4	;volatile
   947                           
   948                           ;main.c: 88: RB5 = 1;
   949     0666  1686               	bsf	6,5	;volatile
   950                           
   951                           ;main.c: 89: RB6 = 0;
   952     0667  1306               	bcf	6,6	;volatile
   953                           
   954                           ;main.c: 90: RB7 = 0;
   955     0668  1386               	bcf	6,7	;volatile
   956     0669                     l1626:
   957                           
   958                           ;main.c: 91: for(j = 0 ; j < intvl ; j++){
   959     0669  01C9               	clrf	main@j
   960     066A  01CA               	clrf	main@j+1
   961     066B  2E7D               	goto	l47
   962     066C                     l1628:
   963                           
   964                           ;main.c: 92: _delay((unsigned long)((1)*(4000000/4000.0)));
   965     066C  30C7               	movlw	199
   966     066D  1283               	bcf	3,5	;RP0=0, select bank0
   967     066E  1303               	bcf	3,6	;RP1=0, select bank0
   968     066F  00AC               	movwf	??_main
   969     0670                     u1247:
   970     0670  2E71               	nop2
   971     0671  0BAC               	decfsz	??_main,f
   972     0672  2E70               	goto	u1247
   973     0673  2E74               	nop2
   974     0674  0000               	nop
   975     0675  3001               	movlw	1
   976     0676  1283               	bcf	3,5	;RP0=0, select bank0
   977     0677  1303               	bcf	3,6	;RP1=0, select bank0
   978     0678  07C9               	addwf	main@j,f
   979     0679  1803               	skipnc
   980     067A  0ACA               	incf	main@j+1,f
   981     067B  3000               	movlw	0
   982     067C  07CA               	addwf	main@j+1,f
   983     067D                     l47:
   984     067D  084A               	movf	main@j+1,w
   985     067E  3A80               	xorlw	128
   986     067F  00AC               	movwf	??_main
   987     0680  0848               	movf	main@intvl+1,w
   988     0681  3A80               	xorlw	128
   989     0682  022C               	subwf	??_main,w
   990     0683  1D03               	skipz
   991     0684  2E87               	goto	u1145
   992     0685  0847               	movf	main@intvl,w
   993     0686  0249               	subwf	main@j,w
   994     0687                     u1145:
   995     0687  1C03               	skipc
   996     0688  2E8A               	goto	u1141
   997     0689  2E8B               	goto	u1140
   998     068A                     u1141:
   999     068A  2E6C               	goto	l1628
  1000     068B                     u1140:
  1001     068B                     l49:
  1002                           
  1003                           ;main.c: 93: };main.c: 94: RB4 = 0;
  1004     068B  1283               	bcf	3,5	;RP0=0, select bank0
  1005     068C  1303               	bcf	3,6	;RP1=0, select bank0
  1006     068D  1206               	bcf	6,4	;volatile
  1007                           
  1008                           ;main.c: 95: RB5 = 0;
  1009     068E  1286               	bcf	6,5	;volatile
  1010                           
  1011                           ;main.c: 96: RB6 = 1;
  1012     068F  1706               	bsf	6,6	;volatile
  1013                           
  1014                           ;main.c: 97: RB7 = 0;
  1015     0690  1386               	bcf	6,7	;volatile
  1016     0691                     l1630:
  1017                           
  1018                           ;main.c: 98: for(j = 0 ; j < intvl ; j++){
  1019     0691  01C9               	clrf	main@j
  1020     0692  01CA               	clrf	main@j+1
  1021     0693  2EA5               	goto	l50
  1022     0694                     l1632:
  1023                           
  1024                           ;main.c: 99: _delay((unsigned long)((1)*(4000000/4000.0)));
  1025     0694  30C7               	movlw	199
  1026     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1027     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1028     0697  00AC               	movwf	??_main
  1029     0698                     u1257:
  1030     0698  2E99               	nop2
  1031     0699  0BAC               	decfsz	??_main,f
  1032     069A  2E98               	goto	u1257
  1033     069B  2E9C               	nop2
  1034     069C  0000               	nop
  1035     069D  3001               	movlw	1
  1036     069E  1283               	bcf	3,5	;RP0=0, select bank0
  1037     069F  1303               	bcf	3,6	;RP1=0, select bank0
  1038     06A0  07C9               	addwf	main@j,f
  1039     06A1  1803               	skipnc
  1040     06A2  0ACA               	incf	main@j+1,f
  1041     06A3  3000               	movlw	0
  1042     06A4  07CA               	addwf	main@j+1,f
  1043     06A5                     l50:
  1044     06A5  084A               	movf	main@j+1,w
  1045     06A6  3A80               	xorlw	128
  1046     06A7  00AC               	movwf	??_main
  1047     06A8  0848               	movf	main@intvl+1,w
  1048     06A9  3A80               	xorlw	128
  1049     06AA  022C               	subwf	??_main,w
  1050     06AB  1D03               	skipz
  1051     06AC  2EAF               	goto	u1155
  1052     06AD  0847               	movf	main@intvl,w
  1053     06AE  0249               	subwf	main@j,w
  1054     06AF                     u1155:
  1055     06AF  1C03               	skipc
  1056     06B0  2EB2               	goto	u1151
  1057     06B1  2EB3               	goto	u1150
  1058     06B2                     u1151:
  1059     06B2  2E94               	goto	l1632
  1060     06B3                     u1150:
  1061     06B3                     l52:
  1062                           
  1063                           ;main.c: 100: };main.c: 101: RB4 = 0;
  1064     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1065     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1066     06B5  1206               	bcf	6,4	;volatile
  1067                           
  1068                           ;main.c: 102: RB5 = 0;
  1069     06B6  1286               	bcf	6,5	;volatile
  1070                           
  1071                           ;main.c: 103: RB6 = 0;
  1072     06B7  1306               	bcf	6,6	;volatile
  1073                           
  1074                           ;main.c: 104: RB7 = 1;
  1075     06B8  1786               	bsf	6,7	;volatile
  1076     06B9                     l1634:
  1077                           
  1078                           ;main.c: 105: for(j = 0 ; j < intvl ; j++){
  1079     06B9  01C9               	clrf	main@j
  1080     06BA  01CA               	clrf	main@j+1
  1081     06BB  2ECD               	goto	l53
  1082     06BC                     l1636:
  1083                           
  1084                           ;main.c: 106: _delay((unsigned long)((1)*(4000000/4000.0)));
  1085     06BC  30C7               	movlw	199
  1086     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1087     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1088     06BF  00AC               	movwf	??_main
  1089     06C0                     u1267:
  1090     06C0  2EC1               	nop2
  1091     06C1  0BAC               	decfsz	??_main,f
  1092     06C2  2EC0               	goto	u1267
  1093     06C3  2EC4               	nop2
  1094     06C4  0000               	nop
  1095     06C5  3001               	movlw	1
  1096     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1097     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1098     06C8  07C9               	addwf	main@j,f
  1099     06C9  1803               	skipnc
  1100     06CA  0ACA               	incf	main@j+1,f
  1101     06CB  3000               	movlw	0
  1102     06CC  07CA               	addwf	main@j+1,f
  1103     06CD                     l53:
  1104     06CD  084A               	movf	main@j+1,w
  1105     06CE  3A80               	xorlw	128
  1106     06CF  00AC               	movwf	??_main
  1107     06D0  0848               	movf	main@intvl+1,w
  1108     06D1  3A80               	xorlw	128
  1109     06D2  022C               	subwf	??_main,w
  1110     06D3  1D03               	skipz
  1111     06D4  2ED7               	goto	u1165
  1112     06D5  0847               	movf	main@intvl,w
  1113     06D6  0249               	subwf	main@j,w
  1114     06D7                     u1165:
  1115     06D7  1C03               	skipc
  1116     06D8  2EDA               	goto	u1161
  1117     06D9  2EDB               	goto	u1160
  1118     06DA                     u1161:
  1119     06DA  2EBC               	goto	l1636
  1120     06DB                     u1160:
  1121     06DB                     l1638:
  1122     06DB  3001               	movlw	1
  1123     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1124     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1125     06DE  07C2               	addwf	main@k,f
  1126     06DF  1803               	skipnc
  1127     06E0  0AC3               	incf	main@k+1,f
  1128     06E1  3000               	movlw	0
  1129     06E2  07C3               	addwf	main@k+1,f
  1130     06E3                     l42:
  1131     06E3  0843               	movf	main@k+1,w
  1132     06E4  3A80               	xorlw	128
  1133     06E5  00AC               	movwf	??_main
  1134     06E6  0845               	movf	main@cnt+1,w
  1135     06E7  3A80               	xorlw	128
  1136     06E8  022C               	subwf	??_main,w
  1137     06E9  1D03               	skipz
  1138     06EA  2EED               	goto	u1175
  1139     06EB  0844               	movf	main@cnt,w
  1140     06EC  0242               	subwf	main@k,w
  1141     06ED                     u1175:
  1142     06ED  1C03               	skipc
  1143     06EE  2EF0               	goto	u1171
  1144     06EF  2EF1               	goto	u1170
  1145     06F0                     u1171:
  1146     06F0  2E3B               	goto	l43
  1147     06F1                     u1170:
  1148     06F1                     l1640:
  1149                           
  1150                           ;main.c: 107: };main.c: 108: };main.c: 110: puts("MOTOR = F  OK");
  1151     06F1  3039               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1152     06F2  118A  225A  118A   	fcall	_puts
  1153                           
  1154                           ;main.c: 111: printf("MOTOR = F  OK\r\n");
  1155     06F5  301B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1156     06F6  118A  24C7  118A   	fcall	_printf
  1157                           
  1158                           ;main.c: 112: break;
  1159     06F9  2DCA               	goto	l1600
  1160     06FA                     l1642:
  1161     06FA  3014               	movlw	20
  1162     06FB  00C4               	movwf	main@cnt
  1163     06FC  3000               	movlw	0
  1164     06FD  00C5               	movwf	main@cnt+1
  1165     06FE                     l1644:
  1166                           
  1167                           ;main.c: 115: for(k = 0 ; k < cnt ; k++){
  1168     06FE  01C2               	clrf	main@k
  1169     06FF  01C3               	clrf	main@k+1
  1170     0700  2FA9               	goto	l59
  1171     0701                     l60:
  1172                           
  1173                           ;main.c: 116: RB4 = 0;
  1174     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1175     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1176     0703  1206               	bcf	6,4	;volatile
  1177                           
  1178                           ;main.c: 117: RB5 = 0;
  1179     0704  1286               	bcf	6,5	;volatile
  1180                           
  1181                           ;main.c: 118: RB6 = 0;
  1182     0705  1306               	bcf	6,6	;volatile
  1183                           
  1184                           ;main.c: 119: RB7 = 1;
  1185     0706  1786               	bsf	6,7	;volatile
  1186     0707                     l1646:
  1187                           
  1188                           ;main.c: 120: for(j = 0 ; j < intvl ; j++){
  1189     0707  01C9               	clrf	main@j
  1190     0708  01CA               	clrf	main@j+1
  1191     0709  2F1B               	goto	l61
  1192     070A                     l1648:
  1193                           
  1194                           ;main.c: 121: _delay((unsigned long)((1)*(4000000/4000.0)));
  1195     070A  30C7               	movlw	199
  1196     070B  1283               	bcf	3,5	;RP0=0, select bank0
  1197     070C  1303               	bcf	3,6	;RP1=0, select bank0
  1198     070D  00AC               	movwf	??_main
  1199     070E                     u1277:
  1200     070E  2F0F               	nop2
  1201     070F  0BAC               	decfsz	??_main,f
  1202     0710  2F0E               	goto	u1277
  1203     0711  2F12               	nop2
  1204     0712  0000               	nop
  1205     0713  3001               	movlw	1
  1206     0714  1283               	bcf	3,5	;RP0=0, select bank0
  1207     0715  1303               	bcf	3,6	;RP1=0, select bank0
  1208     0716  07C9               	addwf	main@j,f
  1209     0717  1803               	skipnc
  1210     0718  0ACA               	incf	main@j+1,f
  1211     0719  3000               	movlw	0
  1212     071A  07CA               	addwf	main@j+1,f
  1213     071B                     l61:
  1214     071B  084A               	movf	main@j+1,w
  1215     071C  3A80               	xorlw	128
  1216     071D  00AC               	movwf	??_main
  1217     071E  0848               	movf	main@intvl+1,w
  1218     071F  3A80               	xorlw	128
  1219     0720  022C               	subwf	??_main,w
  1220     0721  1D03               	skipz
  1221     0722  2F25               	goto	u1185
  1222     0723  0847               	movf	main@intvl,w
  1223     0724  0249               	subwf	main@j,w
  1224     0725                     u1185:
  1225     0725  1C03               	skipc
  1226     0726  2F28               	goto	u1181
  1227     0727  2F29               	goto	u1180
  1228     0728                     u1181:
  1229     0728  2F0A               	goto	l1648
  1230     0729                     u1180:
  1231     0729                     l63:
  1232                           
  1233                           ;main.c: 122: };main.c: 123: RB4 = 0;
  1234     0729  1283               	bcf	3,5	;RP0=0, select bank0
  1235     072A  1303               	bcf	3,6	;RP1=0, select bank0
  1236     072B  1206               	bcf	6,4	;volatile
  1237                           
  1238                           ;main.c: 124: RB5 = 0;
  1239     072C  1286               	bcf	6,5	;volatile
  1240                           
  1241                           ;main.c: 125: RB6 = 1;
  1242     072D  1706               	bsf	6,6	;volatile
  1243                           
  1244                           ;main.c: 126: RB7 = 0;
  1245     072E  1386               	bcf	6,7	;volatile
  1246     072F                     l1650:
  1247                           
  1248                           ;main.c: 127: for(j = 0 ; j < intvl ; j++){
  1249     072F  01C9               	clrf	main@j
  1250     0730  01CA               	clrf	main@j+1
  1251     0731  2F43               	goto	l64
  1252     0732                     l1652:
  1253                           
  1254                           ;main.c: 128: _delay((unsigned long)((1)*(4000000/4000.0)));
  1255     0732  30C7               	movlw	199
  1256     0733  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0734  1303               	bcf	3,6	;RP1=0, select bank0
  1258     0735  00AC               	movwf	??_main
  1259     0736                     u1287:
  1260     0736  2F37               	nop2
  1261     0737  0BAC               	decfsz	??_main,f
  1262     0738  2F36               	goto	u1287
  1263     0739  2F3A               	nop2
  1264     073A  0000               	nop
  1265     073B  3001               	movlw	1
  1266     073C  1283               	bcf	3,5	;RP0=0, select bank0
  1267     073D  1303               	bcf	3,6	;RP1=0, select bank0
  1268     073E  07C9               	addwf	main@j,f
  1269     073F  1803               	skipnc
  1270     0740  0ACA               	incf	main@j+1,f
  1271     0741  3000               	movlw	0
  1272     0742  07CA               	addwf	main@j+1,f
  1273     0743                     l64:
  1274     0743  084A               	movf	main@j+1,w
  1275     0744  3A80               	xorlw	128
  1276     0745  00AC               	movwf	??_main
  1277     0746  0848               	movf	main@intvl+1,w
  1278     0747  3A80               	xorlw	128
  1279     0748  022C               	subwf	??_main,w
  1280     0749  1D03               	skipz
  1281     074A  2F4D               	goto	u1195
  1282     074B  0847               	movf	main@intvl,w
  1283     074C  0249               	subwf	main@j,w
  1284     074D                     u1195:
  1285     074D  1C03               	skipc
  1286     074E  2F50               	goto	u1191
  1287     074F  2F51               	goto	u1190
  1288     0750                     u1191:
  1289     0750  2F32               	goto	l1652
  1290     0751                     u1190:
  1291     0751                     l66:
  1292                           
  1293                           ;main.c: 129: };main.c: 130: RB4 = 0;
  1294     0751  1283               	bcf	3,5	;RP0=0, select bank0
  1295     0752  1303               	bcf	3,6	;RP1=0, select bank0
  1296     0753  1206               	bcf	6,4	;volatile
  1297                           
  1298                           ;main.c: 131: RB5 = 1;
  1299     0754  1686               	bsf	6,5	;volatile
  1300                           
  1301                           ;main.c: 132: RB6 = 0;
  1302     0755  1306               	bcf	6,6	;volatile
  1303                           
  1304                           ;main.c: 133: RB7 = 0;
  1305     0756  1386               	bcf	6,7	;volatile
  1306     0757                     l1654:
  1307                           
  1308                           ;main.c: 134: for(j = 0 ; j < intvl ; j++){
  1309     0757  01C9               	clrf	main@j
  1310     0758  01CA               	clrf	main@j+1
  1311     0759  2F6B               	goto	l67
  1312     075A                     l1656:
  1313                           
  1314                           ;main.c: 135: _delay((unsigned long)((1)*(4000000/4000.0)));
  1315     075A  30C7               	movlw	199
  1316     075B  1283               	bcf	3,5	;RP0=0, select bank0
  1317     075C  1303               	bcf	3,6	;RP1=0, select bank0
  1318     075D  00AC               	movwf	??_main
  1319     075E                     u1297:
  1320     075E  2F5F               	nop2
  1321     075F  0BAC               	decfsz	??_main,f
  1322     0760  2F5E               	goto	u1297
  1323     0761  2F62               	nop2
  1324     0762  0000               	nop
  1325     0763  3001               	movlw	1
  1326     0764  1283               	bcf	3,5	;RP0=0, select bank0
  1327     0765  1303               	bcf	3,6	;RP1=0, select bank0
  1328     0766  07C9               	addwf	main@j,f
  1329     0767  1803               	skipnc
  1330     0768  0ACA               	incf	main@j+1,f
  1331     0769  3000               	movlw	0
  1332     076A  07CA               	addwf	main@j+1,f
  1333     076B                     l67:
  1334     076B  084A               	movf	main@j+1,w
  1335     076C  3A80               	xorlw	128
  1336     076D  00AC               	movwf	??_main
  1337     076E  0848               	movf	main@intvl+1,w
  1338     076F  3A80               	xorlw	128
  1339     0770  022C               	subwf	??_main,w
  1340     0771  1D03               	skipz
  1341     0772  2F75               	goto	u1205
  1342     0773  0847               	movf	main@intvl,w
  1343     0774  0249               	subwf	main@j,w
  1344     0775                     u1205:
  1345     0775  1C03               	skipc
  1346     0776  2F78               	goto	u1201
  1347     0777  2F79               	goto	u1200
  1348     0778                     u1201:
  1349     0778  2F5A               	goto	l1656
  1350     0779                     u1200:
  1351     0779                     l69:
  1352                           
  1353                           ;main.c: 136: };main.c: 137: RB4 = 1;
  1354     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1355     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1356     077B  1606               	bsf	6,4	;volatile
  1357                           
  1358                           ;main.c: 138: RB5 = 0;
  1359     077C  1286               	bcf	6,5	;volatile
  1360                           
  1361                           ;main.c: 139: RB6 = 0;
  1362     077D  1306               	bcf	6,6	;volatile
  1363                           
  1364                           ;main.c: 140: RB7 = 0;
  1365     077E  1386               	bcf	6,7	;volatile
  1366     077F                     l1658:
  1367                           
  1368                           ;main.c: 141: for(j = 0 ; j < intvl ; j++){
  1369     077F  01C9               	clrf	main@j
  1370     0780  01CA               	clrf	main@j+1
  1371     0781  2F93               	goto	l70
  1372     0782                     l1660:
  1373                           
  1374                           ;main.c: 142: _delay((unsigned long)((1)*(4000000/4000.0)));
  1375     0782  30C7               	movlw	199
  1376     0783  1283               	bcf	3,5	;RP0=0, select bank0
  1377     0784  1303               	bcf	3,6	;RP1=0, select bank0
  1378     0785  00AC               	movwf	??_main
  1379     0786                     u1307:
  1380     0786  2F87               	nop2
  1381     0787  0BAC               	decfsz	??_main,f
  1382     0788  2F86               	goto	u1307
  1383     0789  2F8A               	nop2
  1384     078A  0000               	nop
  1385     078B  3001               	movlw	1
  1386     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1387     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1388     078E  07C9               	addwf	main@j,f
  1389     078F  1803               	skipnc
  1390     0790  0ACA               	incf	main@j+1,f
  1391     0791  3000               	movlw	0
  1392     0792  07CA               	addwf	main@j+1,f
  1393     0793                     l70:
  1394     0793  084A               	movf	main@j+1,w
  1395     0794  3A80               	xorlw	128
  1396     0795  00AC               	movwf	??_main
  1397     0796  0848               	movf	main@intvl+1,w
  1398     0797  3A80               	xorlw	128
  1399     0798  022C               	subwf	??_main,w
  1400     0799  1D03               	skipz
  1401     079A  2F9D               	goto	u1215
  1402     079B  0847               	movf	main@intvl,w
  1403     079C  0249               	subwf	main@j,w
  1404     079D                     u1215:
  1405     079D  1C03               	skipc
  1406     079E  2FA0               	goto	u1211
  1407     079F  2FA1               	goto	u1210
  1408     07A0                     u1211:
  1409     07A0  2F82               	goto	l1660
  1410     07A1                     u1210:
  1411     07A1                     l1662:
  1412     07A1  3001               	movlw	1
  1413     07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1414     07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1415     07A4  07C2               	addwf	main@k,f
  1416     07A5  1803               	skipnc
  1417     07A6  0AC3               	incf	main@k+1,f
  1418     07A7  3000               	movlw	0
  1419     07A8  07C3               	addwf	main@k+1,f
  1420     07A9                     l59:
  1421     07A9  0843               	movf	main@k+1,w
  1422     07AA  3A80               	xorlw	128
  1423     07AB  00AC               	movwf	??_main
  1424     07AC  0845               	movf	main@cnt+1,w
  1425     07AD  3A80               	xorlw	128
  1426     07AE  022C               	subwf	??_main,w
  1427     07AF  1D03               	skipz
  1428     07B0  2FB3               	goto	u1225
  1429     07B1  0844               	movf	main@cnt,w
  1430     07B2  0242               	subwf	main@k,w
  1431     07B3                     u1225:
  1432     07B3  1C03               	skipc
  1433     07B4  2FB6               	goto	u1221
  1434     07B5  2FB7               	goto	u1220
  1435     07B6                     u1221:
  1436     07B6  2F01               	goto	l60
  1437     07B7                     u1220:
  1438     07B7                     l1664:
  1439                           
  1440                           ;main.c: 143: };main.c: 144: };main.c: 145: puts("MOTOR = B  OK");
  1441     07B7  302B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1442     07B8  118A  225A  118A   	fcall	_puts
  1443                           
  1444                           ;main.c: 146: printf("MOTOR = B  OK\r\n");
  1445     07BB  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1446     07BC  118A  24C7  118A   	fcall	_printf
  1447                           
  1448                           ;main.c: 147: break;
  1449     07BF  2DCA               	goto	l1600
  1450     07C0                     l1666:
  1451     07C0  3001               	movlw	1
  1452     07C1  00C7               	movwf	main@intvl
  1453     07C2  3000               	movlw	0
  1454     07C3  00C8               	movwf	main@intvl+1
  1455                           
  1456                           ;main.c: 150: break;
  1457     07C4  2DCA               	goto	l1600
  1458     07C5                     l1668:
  1459     07C5  3002               	movlw	2
  1460     07C6  00C7               	movwf	main@intvl
  1461     07C7  3000               	movlw	0
  1462     07C8  00C8               	movwf	main@intvl+1
  1463                           
  1464                           ;main.c: 152: break;
  1465     07C9  2DCA               	goto	l1600
  1466     07CA                     l1670:
  1467     07CA  3005               	movlw	5
  1468     07CB  00C7               	movwf	main@intvl
  1469     07CC  3000               	movlw	0
  1470     07CD  00C8               	movwf	main@intvl+1
  1471                           
  1472                           ;main.c: 154: break;
  1473     07CE  2DCA               	goto	l1600
  1474     07CF                     l1674:
  1475     07CF  3014               	movlw	20
  1476     07D0  00C7               	movwf	main@intvl
  1477     07D1  3000               	movlw	0
  1478     07D2  00C8               	movwf	main@intvl+1
  1479                           
  1480                           ;main.c: 158: break;
  1481     07D3  2DCA               	goto	l1600
  1482     07D4                     l1676:
  1483     07D4  3032               	movlw	50
  1484     07D5  00C7               	movwf	main@intvl
  1485     07D6  3000               	movlw	0
  1486     07D7  00C8               	movwf	main@intvl+1
  1487                           
  1488                           ;main.c: 160: break;
  1489     07D8  2DCA               	goto	l1600
  1490     07D9                     l1680:
  1491     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1492     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1493     07DB  0846               	movf	main@ptr,w
  1494     07DC  0084               	movwf	4
  1495     07DD  1383               	bcf	3,7	;select IRP bank0
  1496     07DE  0800               	movf	0,w
  1497                           
  1498                           ; Switch size 1, requested type "simple"
  1499                           ; Number of cases is 8, Range of values is 98 to 121
  1500                           ; switch strategies available:
  1501                           ; Name         Instructions Cycles
  1502                           ; simple_byte           25    13 (average)
  1503                           ; direct_byte           58    10 (fixed)
  1504                           ; jumptable            263     9 (fixed)
  1505                           ;	Chosen strategy is simple_byte
  1506     07DF  3A62               	xorlw	98	; case 98
  1507     07E0  1903               	skipnz
  1508     07E1  2EFA               	goto	l1642
  1509     07E2  3A04               	xorlw	4	; case 102
  1510     07E3  1903               	skipnz
  1511     07E4  2DEE               	goto	l1608
  1512     07E5  3A0F               	xorlw	15	; case 105
  1513     07E6  1903               	skipnz
  1514     07E7  2FCA               	goto	l1670
  1515     07E8  3A06               	xorlw	6	; case 111
  1516     07E9  1903               	skipnz
  1517     07EA  2FC5               	goto	l1668
  1518     07EB  3A1F               	xorlw	31	; case 112
  1519     07EC  1903               	skipnz
  1520     07ED  2FC0               	goto	l1666
  1521     07EE  3A04               	xorlw	4	; case 116
  1522     07EF  1903               	skipnz
  1523     07F0  2FD4               	goto	l1676
  1524     07F1  3A01               	xorlw	1	; case 117
  1525     07F2  1903               	skipnz
  1526     07F3  2DC4               	goto	l1598
  1527     07F4  3A0C               	xorlw	12	; case 121
  1528     07F5  1903               	skipnz
  1529     07F6  2FCF               	goto	l1674
  1530     07F7  2DCA               	goto	l1600
  1531     07F8  118A  2800         	ljmp	start
  1532     07FA                     __end_of_main:
  1533                           
  1534                           	psect	text1
  1535     03B3                     __ptext1:	
  1536 ;; *************** function _strtok *****************
  1537 ;; Defined at:
  1538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  s1              1    wreg     PTR unsigned char 
  1541 ;;		 -> NULL(0), main@tmp(20), 
  1542 ;;  s2              1   10[COMMON] PTR const unsigned char 
  1543 ;;		 -> STR_6(2), STR_4(2), STR_1(2), 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  s1              1   11[COMMON] PTR unsigned char 
  1546 ;;		 -> NULL(0), main@tmp(20), 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      PTR unsigned char 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1556 ;;      Params:         1       0       0       0
  1557 ;;      Locals:         1       0       0       0
  1558 ;;      Temps:          0       0       0       0
  1559 ;;      Totals:         2       0       0       0
  1560 ;;Total ram usage:        2 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 3
  1563 ;; This function calls:
  1564 ;;		_strcspn
  1565 ;;		_strspn
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571     03B3                     _strtok:	
  1572                           ;psect for function _strtok
  1573                           
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1577                           ;strtok@s1 stored from wreg
  1578     03B3  00FB               	movwf	strtok@s1
  1579     03B4                     l1448:
  1580     03B4  087B               	movf	strtok@s1,w
  1581     03B5  1D03               	btfss	3,2
  1582     03B6  2BB8               	goto	u921
  1583     03B7  2BB9               	goto	u920
  1584     03B8                     u921:
  1585     03B8  2BBD               	goto	l1452
  1586     03B9                     u920:
  1587     03B9                     l1450:
  1588     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1589     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1590     03BB  084B               	movf	strtok@sp,w
  1591     03BC  00FB               	movwf	strtok@s1
  1592     03BD                     l1452:
  1593     03BD  087B               	movf	strtok@s1,w
  1594     03BE  1D03               	btfss	3,2
  1595     03BF  2BC1               	goto	u931
  1596     03C0  2BC2               	goto	u930
  1597     03C1                     u931:
  1598     03C1  2BC4               	goto	l1458
  1599     03C2                     u930:
  1600     03C2                     l1454:
  1601     03C2  3000               	movlw	0
  1602     03C3  2BF8               	goto	l755
  1603     03C4                     l1458:
  1604     03C4  087A               	movf	strtok@s2,w
  1605     03C5  00F3               	movwf	strspn@s2
  1606     03C6  087B               	movf	strtok@s1,w
  1607     03C7  118A  2308  118A   	fcall	_strspn
  1608     03CA  0873               	movf	?_strspn,w
  1609     03CB  00FF               	movwf	btemp+1
  1610     03CC  087F               	movf	btemp+1,w
  1611     03CD  07FB               	addwf	strtok@s1,f
  1612     03CE                     l1460:
  1613     03CE  087B               	movf	strtok@s1,w
  1614     03CF  0084               	movwf	4
  1615     03D0  1383               	bcf	3,7	;select IRP bank0
  1616     03D1  0800               	movf	0,w
  1617     03D2  1D03               	btfss	3,2
  1618     03D3  2BD5               	goto	u941
  1619     03D4  2BD6               	goto	u940
  1620     03D5                     u941:
  1621     03D5  2BDB               	goto	l1466
  1622     03D6                     u940:
  1623     03D6                     l1462:
  1624     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1625     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1626     03D8  01CB               	clrf	strtok@sp
  1627     03D9  3000               	movlw	0
  1628     03DA  2BF8               	goto	l755
  1629     03DB                     l1466:
  1630     03DB  087A               	movf	strtok@s2,w
  1631     03DC  00F3               	movwf	strcspn@s2
  1632     03DD  087B               	movf	strtok@s1,w
  1633     03DE  118A  22DB  118A   	fcall	_strcspn
  1634     03E1  0873               	movf	?_strcspn,w
  1635     03E2  077B               	addwf	strtok@s1,w
  1636     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1637     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1638     03E5  00CB               	movwf	strtok@sp
  1639     03E6                     l1468:
  1640     03E6  084B               	movf	strtok@sp,w
  1641     03E7  0084               	movwf	4
  1642     03E8  1383               	bcf	3,7	;select IRP bank0
  1643     03E9  0800               	movf	0,w
  1644     03EA  1903               	btfsc	3,2
  1645     03EB  2BED               	goto	u951
  1646     03EC  2BEE               	goto	u950
  1647     03ED                     u951:
  1648     03ED  2BF6               	goto	l1474
  1649     03EE                     u950:
  1650     03EE                     l1470:
  1651     03EE  084B               	movf	strtok@sp,w
  1652     03EF  0084               	movwf	4
  1653     03F0  0180               	clrf	0
  1654     03F1                     l1472:
  1655     03F1  3001               	movlw	1
  1656     03F2  00FF               	movwf	btemp+1
  1657     03F3  087F               	movf	btemp+1,w
  1658     03F4  07CB               	addwf	strtok@sp,f
  1659     03F5  2BF7               	goto	l1476
  1660     03F6                     l1474:
  1661     03F6  01CB               	clrf	strtok@sp
  1662     03F7                     l1476:
  1663     03F7  087B               	movf	strtok@s1,w
  1664     03F8                     l755:
  1665     03F8  0008               	return
  1666     03F9                     __end_of_strtok:
  1667                           
  1668                           	psect	text2
  1669     0308                     __ptext2:	
  1670 ;; *************** function _strspn *****************
  1671 ;; Defined at:
  1672 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  s1              1    wreg     PTR const unsigned char 
  1675 ;;		 -> NULL(0), main@tmp(20), 
  1676 ;;  s2              1    3[COMMON] PTR const unsigned char 
  1677 ;;		 -> STR_6(2), STR_4(2), STR_1(2), 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  s1              1    9[COMMON] PTR const unsigned char 
  1680 ;;		 -> NULL(0), main@tmp(20), 
  1681 ;;  i               2    7[COMMON] unsigned int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2    3[COMMON] unsigned int 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1691 ;;      Params:         2       0       0       0
  1692 ;;      Locals:         3       0       0       0
  1693 ;;      Temps:          2       0       0       0
  1694 ;;      Totals:         7       0       0       0
  1695 ;;Total ram usage:        7 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 2
  1698 ;; This function calls:
  1699 ;;		_strchr
  1700 ;; This function is called by:
  1701 ;;		_strtok
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705     0308                     _strspn:	
  1706                           ;psect for function _strspn
  1707                           
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1711                           ;strspn@s1 stored from wreg
  1712     0308  00F9               	movwf	strspn@s1
  1713     0309                     l1418:
  1714     0309  01F7               	clrf	strspn@i
  1715     030A  01F8               	clrf	strspn@i+1
  1716     030B  2B16               	goto	l1422
  1717     030C                     l1420:
  1718     030C  3001               	movlw	1
  1719     030D  00FF               	movwf	btemp+1
  1720     030E  087F               	movf	btemp+1,w
  1721     030F  07F9               	addwf	strspn@s1,f
  1722     0310  3001               	movlw	1
  1723     0311  07F7               	addwf	strspn@i,f
  1724     0312  1803               	skipnc
  1725     0313  0AF8               	incf	strspn@i+1,f
  1726     0314  3000               	movlw	0
  1727     0315  07F8               	addwf	strspn@i+1,f
  1728     0316                     l1422:
  1729     0316  0879               	movf	strspn@s1,w
  1730     0317  0084               	movwf	4
  1731     0318  1383               	bcf	3,7	;select IRP bank0
  1732     0319  0800               	movf	0,w
  1733     031A  1903               	btfsc	3,2
  1734     031B  2B1D               	goto	u881
  1735     031C  2B1E               	goto	u880
  1736     031D                     u881:
  1737     031D  2B30               	goto	l1426
  1738     031E                     u880:
  1739     031E                     l1424:
  1740     031E  0879               	movf	strspn@s1,w
  1741     031F  0084               	movwf	4
  1742     0320  0800               	movf	0,w
  1743     0321  00F5               	movwf	??_strspn
  1744     0322  01F6               	clrf	??_strspn+1
  1745     0323  0875               	movf	??_strspn,w
  1746     0324  00F0               	movwf	strchr@chr
  1747     0325  0876               	movf	??_strspn+1,w
  1748     0326  00F1               	movwf	strchr@chr+1
  1749     0327  0873               	movf	strspn@s2,w
  1750     0328  118A  229A  118A   	fcall	_strchr
  1751     032B  3A00               	xorlw	0
  1752     032C  1D03               	skipz
  1753     032D  2B2F               	goto	u891
  1754     032E  2B30               	goto	u890
  1755     032F                     u891:
  1756     032F  2B0C               	goto	l1420
  1757     0330                     u890:
  1758     0330                     l1426:
  1759     0330  0878               	movf	strspn@i+1,w
  1760     0331  00F4               	movwf	?_strspn+1
  1761     0332  0877               	movf	strspn@i,w
  1762     0333  00F3               	movwf	?_strspn
  1763     0334                     l784:
  1764     0334  0008               	return
  1765     0335                     __end_of_strspn:
  1766                           
  1767                           	psect	text3
  1768     02DB                     __ptext3:	
  1769 ;; *************** function _strcspn *****************
  1770 ;; Defined at:
  1771 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  s1              1    wreg     PTR const unsigned char 
  1774 ;;		 -> NULL(0), main@tmp(20), 
  1775 ;;  s2              1    3[COMMON] PTR const unsigned char 
  1776 ;;		 -> STR_6(2), STR_4(2), STR_1(2), 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  s1              1    9[COMMON] PTR const unsigned char 
  1779 ;;		 -> NULL(0), main@tmp(20), 
  1780 ;;  i               2    7[COMMON] unsigned int 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    3[COMMON] unsigned int 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1790 ;;      Params:         2       0       0       0
  1791 ;;      Locals:         3       0       0       0
  1792 ;;      Temps:          2       0       0       0
  1793 ;;      Totals:         7       0       0       0
  1794 ;;Total ram usage:        7 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 2
  1797 ;; This function calls:
  1798 ;;		_strchr
  1799 ;; This function is called by:
  1800 ;;		_strtok
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804     02DB                     _strcspn:	
  1805                           ;psect for function _strcspn
  1806                           
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1810                           ;strcspn@s1 stored from wreg
  1811     02DB  00F9               	movwf	strcspn@s1
  1812     02DC                     l1430:
  1813     02DC  01F7               	clrf	strcspn@i
  1814     02DD  01F8               	clrf	strcspn@i+1
  1815     02DE  2AE9               	goto	l1434
  1816     02DF                     l1432:
  1817     02DF  3001               	movlw	1
  1818     02E0  00FF               	movwf	btemp+1
  1819     02E1  087F               	movf	btemp+1,w
  1820     02E2  07F9               	addwf	strcspn@s1,f
  1821     02E3  3001               	movlw	1
  1822     02E4  07F7               	addwf	strcspn@i,f
  1823     02E5  1803               	skipnc
  1824     02E6  0AF8               	incf	strcspn@i+1,f
  1825     02E7  3000               	movlw	0
  1826     02E8  07F8               	addwf	strcspn@i+1,f
  1827     02E9                     l1434:
  1828     02E9  0879               	movf	strcspn@s1,w
  1829     02EA  0084               	movwf	4
  1830     02EB  1383               	bcf	3,7	;select IRP bank0
  1831     02EC  0800               	movf	0,w
  1832     02ED  1903               	btfsc	3,2
  1833     02EE  2AF0               	goto	u901
  1834     02EF  2AF1               	goto	u900
  1835     02F0                     u901:
  1836     02F0  2B03               	goto	l1438
  1837     02F1                     u900:
  1838     02F1                     l1436:
  1839     02F1  0879               	movf	strcspn@s1,w
  1840     02F2  0084               	movwf	4
  1841     02F3  0800               	movf	0,w
  1842     02F4  00F5               	movwf	??_strcspn
  1843     02F5  01F6               	clrf	??_strcspn+1
  1844     02F6  0875               	movf	??_strcspn,w
  1845     02F7  00F0               	movwf	strchr@chr
  1846     02F8  0876               	movf	??_strcspn+1,w
  1847     02F9  00F1               	movwf	strchr@chr+1
  1848     02FA  0873               	movf	strcspn@s2,w
  1849     02FB  118A  229A  118A   	fcall	_strchr
  1850     02FE  3A00               	xorlw	0
  1851     02FF  1903               	skipnz
  1852     0300  2B02               	goto	u911
  1853     0301  2B03               	goto	u910
  1854     0302                     u911:
  1855     0302  2ADF               	goto	l1432
  1856     0303                     u910:
  1857     0303                     l1438:
  1858     0303  0878               	movf	strcspn@i+1,w
  1859     0304  00F4               	movwf	?_strcspn+1
  1860     0305  0877               	movf	strcspn@i,w
  1861     0306  00F3               	movwf	?_strcspn
  1862     0307                     l768:
  1863     0307  0008               	return
  1864     0308                     __end_of_strcspn:
  1865                           
  1866                           	psect	text4
  1867     029A                     __ptext4:	
  1868 ;; *************** function _strchr *****************
  1869 ;; Defined at:
  1870 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  ptr             1    wreg     PTR const unsigned char 
  1873 ;;		 -> STR_6(2), STR_4(2), STR_1(2), 
  1874 ;;  chr             2    0[COMMON] int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  1877 ;;		 -> STR_6(2), STR_4(2), STR_1(2), 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      PTR unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr0l, fsr0h, pclath
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1887 ;;      Params:         2       0       0       0
  1888 ;;      Locals:         1       0       0       0
  1889 ;;      Temps:          0       0       0       0
  1890 ;;      Totals:         3       0       0       0
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used: 2
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_strcspn
  1897 ;;		_strspn
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901     029A                     _strchr:	
  1902                           ;psect for function _strchr
  1903                           
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  1907                           ;strchr@ptr stored from wreg
  1908     029A  00F2               	movwf	strchr@ptr
  1909     029B                     l771:
  1910     029B                     l1290:
  1911     029B  0872               	movf	strchr@ptr,w
  1912     029C  0084               	movwf	4
  1913     029D  118A  200C  118A   	fcall	stringdir
  1914     02A0  0670               	xorwf	strchr@chr,w
  1915     02A1  1D03               	skipz
  1916     02A2  2AA4               	goto	u641
  1917     02A3  2AA5               	goto	u640
  1918     02A4                     u641:
  1919     02A4  2AA7               	goto	l1296
  1920     02A5                     u640:
  1921     02A5                     l1292:
  1922     02A5  0872               	movf	strchr@ptr,w
  1923     02A6  2AB5               	goto	l773
  1924     02A7                     l1296:
  1925     02A7  3001               	movlw	1
  1926     02A8  07F2               	addwf	strchr@ptr,f
  1927     02A9  30FF               	movlw	-1
  1928     02AA  0772               	addwf	strchr@ptr,w
  1929     02AB  0084               	movwf	4
  1930     02AC  118A  200C  118A   	fcall	stringdir
  1931     02AF  3A00               	xorlw	0
  1932     02B0  1D03               	skipz
  1933     02B1  2AB3               	goto	u651
  1934     02B2  2AB4               	goto	u650
  1935     02B3                     u651:
  1936     02B3  2A9B               	goto	l771
  1937     02B4                     u650:
  1938     02B4                     l1298:
  1939     02B4  3000               	movlw	0
  1940     02B5                     l773:
  1941     02B5  0008               	return
  1942     02B6                     __end_of_strchr:
  1943                           
  1944                           	psect	text5
  1945     025A                     __ptext5:	
  1946 ;; *************** function _puts *****************
  1947 ;; Defined at:
  1948 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  s               1    wreg     PTR const unsigned char 
  1951 ;;		 -> STR_10(14), STR_8(14), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  s               1    2[COMMON] PTR const unsigned char 
  1954 ;;		 -> STR_10(14), STR_8(14), 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   32[None  ] int 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1964 ;;      Params:         0       0       0       0
  1965 ;;      Locals:         1       0       0       0
  1966 ;;      Temps:          0       0       0       0
  1967 ;;      Totals:         1       0       0       0
  1968 ;;Total ram usage:        1 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 2
  1971 ;; This function calls:
  1972 ;;		_cputs
  1973 ;;		_putch
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979     025A                     _puts:	
  1980                           ;psect for function _puts
  1981                           
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1985                           ;puts@s stored from wreg
  1986     025A  00F2               	movwf	puts@s
  1987     025B                     l1578:
  1988     025B  0872               	movf	puts@s,w
  1989     025C  118A  2281  118A   	fcall	_cputs
  1990     025F                     l1580:
  1991     025F  300A               	movlw	10
  1992     0260  118A  2246  118A   	fcall	_putch
  1993     0263                     l736:
  1994     0263  0008               	return
  1995     0264                     __end_of_puts:
  1996                           
  1997                           	psect	text6
  1998     0281                     __ptext6:	
  1999 ;; *************** function _cputs *****************
  2000 ;; Defined at:
  2001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  s               1    wreg     PTR const unsigned char 
  2004 ;;		 -> STR_10(14), STR_8(14), 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  s               1    1[COMMON] PTR const unsigned char 
  2007 ;;		 -> STR_10(14), STR_8(14), 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2017 ;;      Params:         0       0       0       0
  2018 ;;      Locals:         1       0       0       0
  2019 ;;      Temps:          0       0       0       0
  2020 ;;      Totals:         1       0       0       0
  2021 ;;Total ram usage:        1 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 1
  2024 ;; This function calls:
  2025 ;;		_putch
  2026 ;; This function is called by:
  2027 ;;		_puts
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031     0281                     _cputs:	
  2032                           ;psect for function _cputs
  2033                           
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2037                           ;cputs@s stored from wreg
  2038     0281  00F1               	movwf	cputs@s
  2039     0282                     l1410:
  2040     0282  2A8F               	goto	l1416
  2041     0283                     l1412:
  2042     0283  0871               	movf	cputs@s,w
  2043     0284  0084               	movwf	4
  2044     0285  118A  200C  118A   	fcall	stringdir
  2045     0288  118A  2246  118A   	fcall	_putch
  2046     028B                     l1414:
  2047     028B  3001               	movlw	1
  2048     028C  00FF               	movwf	btemp+1
  2049     028D  087F               	movf	btemp+1,w
  2050     028E  07F1               	addwf	cputs@s,f
  2051     028F                     l1416:
  2052     028F  0871               	movf	cputs@s,w
  2053     0290  0084               	movwf	4
  2054     0291  118A  200C  118A   	fcall	stringdir
  2055     0294  3A00               	xorlw	0
  2056     0295  1D03               	skipz
  2057     0296  2A98               	goto	u871
  2058     0297  2A99               	goto	u870
  2059     0298                     u871:
  2060     0298  2A83               	goto	l1412
  2061     0299                     u870:
  2062     0299                     l744:
  2063     0299  0008               	return
  2064     029A                     __end_of_cputs:
  2065                           
  2066                           	psect	text7
  2067     04C7                     __ptext7:	
  2068 ;; *************** function _printf *****************
  2069 ;; Defined at:
  2070 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  f               1    wreg     PTR const unsigned char 
  2073 ;;		 -> STR_11(16), STR_9(16), STR_7(12), STR_5(10), 
  2074 ;;		 -> STR_3(4), STR_2(4), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  2077 ;;		 -> STR_11(16), STR_9(16), STR_7(12), STR_5(10), 
  2078 ;;		 -> STR_3(4), STR_2(4), 
  2079 ;;  tmpval          4    0        struct .
  2080 ;;  val             2    8[BANK0 ] unsigned int 
  2081 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  2082 ;;		 -> STR_12(7), ?_printf(2), NULL(0), main@tmp(20), 
  2083 ;;  len             2    0        unsigned int 
  2084 ;;  c               1   11[BANK0 ] unsigned char 
  2085 ;;  ap              1    5[BANK0 ] PTR void [1]
  2086 ;;		 -> ?_printf(2), 
  2087 ;;  prec            1    4[BANK0 ] char 
  2088 ;;  flag            1    3[BANK0 ] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  2   12[COMMON] int 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2098 ;;      Params:         2       0       0       0
  2099 ;;      Locals:         0       9       0       0
  2100 ;;      Temps:          0       3       0       0
  2101 ;;      Totals:         2      12       0       0
  2102 ;;Total ram usage:       14 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 1
  2105 ;; This function calls:
  2106 ;;		___lwdiv
  2107 ;;		___lwmod
  2108 ;;		_putch
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114     04C7                     _printf:	
  2115                           ;psect for function _printf
  2116                           
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2120                           ;printf@f stored from wreg
  2121     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2122     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2123     04C9  00AA               	movwf	printf@f
  2124     04CA                     l1480:
  2125                           
  2126                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2127     04CA  307C               	movlw	(low (?_printf| 0))& (0+255)
  2128     04CB  00A5               	movwf	printf@ap
  2129                           
  2130                           ;doprnt.c: 553: while((c = *f++)) {
  2131     04CC  2DA2               	goto	l1542
  2132     04CD                     l1482:
  2133                           
  2134                           ;doprnt.c: 555: if(c != '%')
  2135     04CD  3025               	movlw	37
  2136     04CE  062B               	xorwf	printf@c,w
  2137     04CF  1903               	btfsc	3,2
  2138     04D0  2CD2               	goto	u961
  2139     04D1  2CD3               	goto	u960
  2140     04D2                     u961:
  2141     04D2  2CD8               	goto	l1486
  2142     04D3                     u960:
  2143     04D3                     l1484:
  2144                           
  2145                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2146     04D3  082B               	movf	printf@c,w
  2147     04D4  118A  2246  118A   	fcall	_putch
  2148                           
  2149                           ;doprnt.c: 559: continue;
  2150     04D7  2DA2               	goto	l1542
  2151     04D8                     l1486:
  2152                           
  2153                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2154     04D8  01A3               	clrf	printf@flag
  2155                           
  2156                           ;doprnt.c: 661: switch(c = *f++) {
  2157     04D9  2D0E               	goto	l1504
  2158     04DA                     l1488:
  2159                           
  2160                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2161     04DA  0825               	movf	printf@ap,w
  2162     04DB  0084               	movwf	4
  2163     04DC  0800               	movf	0,w
  2164     04DD  00A6               	movwf	printf@cp
  2165     04DE  3000               	movlw	0
  2166     04DF  00A7               	movwf	printf@cp+1
  2167     04E0                     l1490:
  2168     04E0  3001               	movlw	1
  2169     04E1  00FF               	movwf	btemp+1
  2170     04E2  087F               	movf	btemp+1,w
  2171     04E3  07A5               	addwf	printf@ap,f
  2172     04E4                     l1492:
  2173                           
  2174                           ;doprnt.c: 766: if(!cp)
  2175     04E4  0826               	movf	printf@cp,w
  2176     04E5  0427               	iorwf	printf@cp+1,w
  2177     04E6  1D03               	btfss	3,2
  2178     04E7  2CE9               	goto	u971
  2179     04E8  2CEA               	goto	u970
  2180     04E9                     u971:
  2181     04E9  2D01               	goto	l1500
  2182     04EA                     u970:
  2183     04EA                     l1494:
  2184                           
  2185                           ;doprnt.c: 767: cp = "(null)";
  2186     04EA  305D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2187     04EB  00A6               	movwf	printf@cp
  2188     04EC  3080               	movlw	128
  2189     04ED  00A7               	movwf	printf@cp+1
  2190     04EE  2D01               	goto	l1500
  2191     04EF                     l1496:
  2192                           
  2193                           ;doprnt.c: 804: (putch(*cp++) );
  2194     04EF  0827               	movf	printf@cp+1,w
  2195     04F0  00FF               	movwf	btemp+1
  2196     04F1  0826               	movf	printf@cp,w
  2197     04F2  0084               	movwf	4
  2198     04F3  118A  2002  118A   	fcall	stringtab
  2199     04F6  118A  2246  118A   	fcall	_putch
  2200     04F9                     l1498:
  2201     04F9  3001               	movlw	1
  2202     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2203     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2204     04FC  07A6               	addwf	printf@cp,f
  2205     04FD  1803               	skipnc
  2206     04FE  0AA7               	incf	printf@cp+1,f
  2207     04FF  3000               	movlw	0
  2208     0500  07A7               	addwf	printf@cp+1,f
  2209     0501                     l1500:
  2210     0501  0827               	movf	printf@cp+1,w
  2211     0502  00FF               	movwf	btemp+1
  2212     0503  0826               	movf	printf@cp,w
  2213     0504  0084               	movwf	4
  2214     0505  118A  2002  118A   	fcall	stringtab
  2215     0508  3A00               	xorlw	0
  2216     0509  1D03               	skipz
  2217     050A  2D0C               	goto	u981
  2218     050B  2D0D               	goto	u980
  2219     050C                     u981:
  2220     050C  2CEF               	goto	l1496
  2221     050D                     u980:
  2222     050D  2DA2               	goto	l1542
  2223     050E                     l1504:
  2224     050E  3001               	movlw	1
  2225     050F  07AA               	addwf	printf@f,f
  2226     0510  30FF               	movlw	-1
  2227     0511  072A               	addwf	printf@f,w
  2228     0512  0084               	movwf	4
  2229     0513  118A  200C  118A   	fcall	stringdir
  2230     0516  00AB               	movwf	printf@c
  2231                           
  2232                           ; Switch size 1, requested type "simple"
  2233                           ; Number of cases is 4, Range of values is 0 to 115
  2234                           ; switch strategies available:
  2235                           ; Name         Instructions Cycles
  2236                           ; simple_byte           13     7 (average)
  2237                           ; direct_byte          239     7 (fixed)
  2238                           ; jumptable            260     6 (fixed)
  2239                           ;	Chosen strategy is simple_byte
  2240     0517  3A00               	xorlw	0	; case 0
  2241     0518  1903               	skipnz
  2242     0519  2DB2               	goto	l232
  2243     051A  3A64               	xorlw	100	; case 100
  2244     051B  1903               	skipnz
  2245     051C  2D24               	goto	l1506
  2246     051D  3A0D               	xorlw	13	; case 105
  2247     051E  1903               	skipnz
  2248     051F  2D24               	goto	l1506
  2249     0520  3A1A               	xorlw	26	; case 115
  2250     0521  1903               	skipnz
  2251     0522  2CDA               	goto	l1488
  2252     0523  2DA2               	goto	l1542
  2253     0524                     l1506:
  2254                           
  2255                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2256     0524  0825               	movf	printf@ap,w
  2257     0525  0084               	movwf	4
  2258     0526  0800               	movf	0,w
  2259     0527  00A8               	movwf	printf@val
  2260     0528  0A84               	incf	4,f
  2261     0529  0800               	movf	0,w
  2262     052A  00A9               	movwf	printf@val+1
  2263     052B                     l1508:
  2264     052B  3002               	movlw	2
  2265     052C  00FF               	movwf	btemp+1
  2266     052D  087F               	movf	btemp+1,w
  2267     052E  07A5               	addwf	printf@ap,f
  2268     052F                     l1510:
  2269                           
  2270                           ;doprnt.c: 1287: if((int)val < 0) {
  2271     052F  1FA9               	btfss	printf@val+1,7
  2272     0530  2D32               	goto	u991
  2273     0531  2D33               	goto	u990
  2274     0532                     u991:
  2275     0532  2D3C               	goto	l1516
  2276     0533                     u990:
  2277     0533                     l1512:
  2278                           
  2279                           ;doprnt.c: 1288: flag |= 0x03;
  2280     0533  3003               	movlw	3
  2281     0534  00FF               	movwf	btemp+1
  2282     0535  087F               	movf	btemp+1,w
  2283     0536  04A3               	iorwf	printf@flag,f
  2284     0537                     l1514:
  2285                           
  2286                           ;doprnt.c: 1289: val = -val;
  2287     0537  09A8               	comf	printf@val,f
  2288     0538  09A9               	comf	printf@val+1,f
  2289     0539  0AA8               	incf	printf@val,f
  2290     053A  1903               	skipnz
  2291     053B  0AA9               	incf	printf@val+1,f
  2292     053C                     l1516:
  2293                           
  2294                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2295     053C  01AB               	clrf	printf@c
  2296     053D  0AAB               	incf	printf@c,f
  2297     053E                     l1522:
  2298                           
  2299                           ;doprnt.c: 1332: if(val < dpowers[c])
  2300     053E  082B               	movf	printf@c,w
  2301     053F  00A0               	movwf	??_printf
  2302     0540  0720               	addwf	??_printf,w
  2303     0541  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2304     0542  0084               	movwf	4
  2305     0543  118A  200C  118A   	fcall	stringdir
  2306     0546  00A1               	movwf	??_printf+1
  2307     0547  118A  200C  118A   	fcall	stringdir
  2308     054A  00A2               	movwf	??_printf+2
  2309     054B  0822               	movf	??_printf+2,w
  2310     054C  0229               	subwf	printf@val+1,w
  2311     054D  1D03               	skipz
  2312     054E  2D51               	goto	u1005
  2313     054F  0821               	movf	??_printf+1,w
  2314     0550  0228               	subwf	printf@val,w
  2315     0551                     u1005:
  2316     0551  1803               	skipnc
  2317     0552  2D54               	goto	u1001
  2318     0553  2D55               	goto	u1000
  2319     0554                     u1001:
  2320     0554  2D56               	goto	l1526
  2321     0555                     u1000:
  2322     0555  2D60               	goto	l1530
  2323     0556                     l1526:
  2324     0556  3001               	movlw	1
  2325     0557  00FF               	movwf	btemp+1
  2326     0558  087F               	movf	btemp+1,w
  2327     0559  07AB               	addwf	printf@c,f
  2328     055A                     l1528:
  2329     055A  3005               	movlw	5
  2330     055B  062B               	xorwf	printf@c,w
  2331     055C  1D03               	btfss	3,2
  2332     055D  2D5F               	goto	u1011
  2333     055E  2D60               	goto	u1010
  2334     055F                     u1011:
  2335     055F  2D3E               	goto	l1522
  2336     0560                     u1010:
  2337     0560                     l1530:
  2338                           
  2339                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2340     0560  0823               	movf	printf@flag,w
  2341     0561  3903               	andlw	3
  2342     0562  1903               	btfsc	3,2
  2343     0563  2D65               	goto	u1021
  2344     0564  2D66               	goto	u1020
  2345     0565                     u1021:
  2346     0565  2D6A               	goto	l1534
  2347     0566                     u1020:
  2348     0566                     l1532:
  2349                           
  2350                           ;doprnt.c: 1465: (putch('-') );
  2351     0566  302D               	movlw	45
  2352     0567  118A  2246  118A   	fcall	_putch
  2353     056A                     l1534:
  2354                           
  2355                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2356     056A  1283               	bcf	3,5	;RP0=0, select bank0
  2357     056B  1303               	bcf	3,6	;RP1=0, select bank0
  2358     056C  082B               	movf	printf@c,w
  2359     056D  00A4               	movwf	printf@prec
  2360                           
  2361                           ;doprnt.c: 1500: while(prec--) {
  2362     056E  2D97               	goto	l1540
  2363     056F                     l1536:
  2364                           
  2365                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2366     056F  300A               	movlw	10
  2367     0570  00F7               	movwf	___lwmod@divisor
  2368     0571  3000               	movlw	0
  2369     0572  00F8               	movwf	___lwmod@divisor+1
  2370     0573  0824               	movf	printf@prec,w
  2371     0574  00A0               	movwf	??_printf
  2372     0575  0720               	addwf	??_printf,w
  2373     0576  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2374     0577  0084               	movwf	4
  2375     0578  118A  200C  118A   	fcall	stringdir
  2376     057B  00F0               	movwf	___lwdiv@divisor
  2377     057C  118A  200C  118A   	fcall	stringdir
  2378     057F  00F1               	movwf	___lwdiv@divisor+1
  2379     0580  0829               	movf	printf@val+1,w
  2380     0581  00F3               	movwf	___lwdiv@dividend+1
  2381     0582  0828               	movf	printf@val,w
  2382     0583  00F2               	movwf	___lwdiv@dividend
  2383     0584  118A  236F  118A   	fcall	___lwdiv
  2384     0587  0871               	movf	?___lwdiv+1,w
  2385     0588  00FA               	movwf	___lwmod@dividend+1
  2386     0589  0870               	movf	?___lwdiv,w
  2387     058A  00F9               	movwf	___lwmod@dividend
  2388     058B  118A  2335  118A   	fcall	___lwmod
  2389     058E  0877               	movf	?___lwmod,w
  2390     058F  3E30               	addlw	48
  2391     0590  1283               	bcf	3,5	;RP0=0, select bank0
  2392     0591  1303               	bcf	3,6	;RP1=0, select bank0
  2393     0592  00AB               	movwf	printf@c
  2394     0593                     l1538:
  2395                           
  2396                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2397     0593  082B               	movf	printf@c,w
  2398     0594  118A  2246  118A   	fcall	_putch
  2399     0597                     l1540:
  2400     0597  30FF               	movlw	255
  2401     0598  00FF               	movwf	btemp+1
  2402     0599  087F               	movf	btemp+1,w
  2403     059A  1283               	bcf	3,5	;RP0=0, select bank0
  2404     059B  1303               	bcf	3,6	;RP1=0, select bank0
  2405     059C  07A4               	addwf	printf@prec,f
  2406     059D  0A24               	incf	printf@prec,w
  2407     059E  1D03               	btfss	3,2
  2408     059F  2DA1               	goto	u1031
  2409     05A0  2DA2               	goto	u1030
  2410     05A1                     u1031:
  2411     05A1  2D6F               	goto	l1536
  2412     05A2                     u1030:
  2413     05A2                     l1542:
  2414     05A2  3001               	movlw	1
  2415     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2416     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2417     05A5  07AA               	addwf	printf@f,f
  2418     05A6  30FF               	movlw	-1
  2419     05A7  072A               	addwf	printf@f,w
  2420     05A8  0084               	movwf	4
  2421     05A9  118A  200C  118A   	fcall	stringdir
  2422     05AC  00AB               	movwf	printf@c
  2423     05AD  082B               	movf	printf@c,w
  2424     05AE  1D03               	btfss	3,2
  2425     05AF  2DB1               	goto	u1041
  2426     05B0  2DB2               	goto	u1040
  2427     05B1                     u1041:
  2428     05B1  2CCD               	goto	l1482
  2429     05B2                     u1040:
  2430     05B2                     l232:
  2431     05B2  0008               	return
  2432     05B3                     __end_of_printf:
  2433                           
  2434                           	psect	text8
  2435     0335                     __ptext8:	
  2436 ;; *************** function ___lwmod *****************
  2437 ;; Defined at:
  2438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  divisor         2    7[COMMON] unsigned int 
  2441 ;;  dividend        2    9[COMMON] unsigned int 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  counter         1   11[COMMON] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    7[COMMON] unsigned int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, btemp+1
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2453 ;;      Params:         4       0       0       0
  2454 ;;      Locals:         1       0       0       0
  2455 ;;      Temps:          0       0       0       0
  2456 ;;      Totals:         5       0       0       0
  2457 ;;Total ram usage:        5 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_printf
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     0335                     ___lwmod:	
  2467                           ;psect for function ___lwmod
  2468                           
  2469     0335                     l1342:	
  2470                           ;incstack = 0
  2471                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2472                           
  2473     0335  0877               	movf	___lwmod@divisor,w
  2474     0336  0478               	iorwf	___lwmod@divisor+1,w
  2475     0337  1903               	btfsc	3,2
  2476     0338  2B3A               	goto	u771
  2477     0339  2B3B               	goto	u770
  2478     033A                     u771:
  2479     033A  2B6A               	goto	l1360
  2480     033B                     u770:
  2481     033B                     l1344:
  2482     033B  01FB               	clrf	___lwmod@counter
  2483     033C  0AFB               	incf	___lwmod@counter,f
  2484     033D  2B49               	goto	l1350
  2485     033E                     l1346:
  2486     033E  3001               	movlw	1
  2487     033F                     u785:
  2488     033F  1003               	clrc
  2489     0340  0DF7               	rlf	___lwmod@divisor,f
  2490     0341  0DF8               	rlf	___lwmod@divisor+1,f
  2491     0342  3EFF               	addlw	-1
  2492     0343  1D03               	skipz
  2493     0344  2B3F               	goto	u785
  2494     0345                     l1348:
  2495     0345  3001               	movlw	1
  2496     0346  00FF               	movwf	btemp+1
  2497     0347  087F               	movf	btemp+1,w
  2498     0348  07FB               	addwf	___lwmod@counter,f
  2499     0349                     l1350:
  2500     0349  1FF8               	btfss	___lwmod@divisor+1,7
  2501     034A  2B4C               	goto	u791
  2502     034B  2B4D               	goto	u790
  2503     034C                     u791:
  2504     034C  2B3E               	goto	l1346
  2505     034D                     u790:
  2506     034D                     l1352:
  2507     034D  0878               	movf	___lwmod@divisor+1,w
  2508     034E  027A               	subwf	___lwmod@dividend+1,w
  2509     034F  1D03               	skipz
  2510     0350  2B53               	goto	u805
  2511     0351  0877               	movf	___lwmod@divisor,w
  2512     0352  0279               	subwf	___lwmod@dividend,w
  2513     0353                     u805:
  2514     0353  1C03               	skipc
  2515     0354  2B56               	goto	u801
  2516     0355  2B57               	goto	u800
  2517     0356                     u801:
  2518     0356  2B5D               	goto	l1356
  2519     0357                     u800:
  2520     0357                     l1354:
  2521     0357  0877               	movf	___lwmod@divisor,w
  2522     0358  02F9               	subwf	___lwmod@dividend,f
  2523     0359  0878               	movf	___lwmod@divisor+1,w
  2524     035A  1C03               	skipc
  2525     035B  03FA               	decf	___lwmod@dividend+1,f
  2526     035C  02FA               	subwf	___lwmod@dividend+1,f
  2527     035D                     l1356:
  2528     035D  3001               	movlw	1
  2529     035E                     u815:
  2530     035E  1003               	clrc
  2531     035F  0CF8               	rrf	___lwmod@divisor+1,f
  2532     0360  0CF7               	rrf	___lwmod@divisor,f
  2533     0361  3EFF               	addlw	-1
  2534     0362  1D03               	skipz
  2535     0363  2B5E               	goto	u815
  2536     0364                     l1358:
  2537     0364  3001               	movlw	1
  2538     0365  02FB               	subwf	___lwmod@counter,f
  2539     0366  1D03               	btfss	3,2
  2540     0367  2B69               	goto	u821
  2541     0368  2B6A               	goto	u820
  2542     0369                     u821:
  2543     0369  2B4D               	goto	l1352
  2544     036A                     u820:
  2545     036A                     l1360:
  2546     036A  087A               	movf	___lwmod@dividend+1,w
  2547     036B  00F8               	movwf	?___lwmod+1
  2548     036C  0879               	movf	___lwmod@dividend,w
  2549     036D  00F7               	movwf	?___lwmod
  2550     036E                     l518:
  2551     036E  0008               	return
  2552     036F                     __end_of___lwmod:
  2553                           
  2554                           	psect	text9
  2555     036F                     __ptext9:	
  2556 ;; *************** function ___lwdiv *****************
  2557 ;; Defined at:
  2558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  divisor         2    0[COMMON] unsigned int 
  2561 ;;  dividend        2    2[COMMON] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  quotient        2    4[COMMON] unsigned int 
  2564 ;;  counter         1    6[COMMON] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    0[COMMON] unsigned int 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, btemp+1
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2574 ;;      Params:         4       0       0       0
  2575 ;;      Locals:         3       0       0       0
  2576 ;;      Temps:          0       0       0       0
  2577 ;;      Totals:         7       0       0       0
  2578 ;;Total ram usage:        7 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_printf
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587     036F                     ___lwdiv:	
  2588                           ;psect for function ___lwdiv
  2589                           
  2590     036F                     l1316:	
  2591                           ;incstack = 0
  2592                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2593                           
  2594     036F  01F4               	clrf	___lwdiv@quotient
  2595     0370  01F5               	clrf	___lwdiv@quotient+1
  2596     0371                     l1318:
  2597     0371  0870               	movf	___lwdiv@divisor,w
  2598     0372  0471               	iorwf	___lwdiv@divisor+1,w
  2599     0373  1903               	btfsc	3,2
  2600     0374  2B76               	goto	u701
  2601     0375  2B77               	goto	u700
  2602     0376                     u701:
  2603     0376  2BAE               	goto	l1338
  2604     0377                     u700:
  2605     0377                     l1320:
  2606     0377  01F6               	clrf	___lwdiv@counter
  2607     0378  0AF6               	incf	___lwdiv@counter,f
  2608     0379  2B85               	goto	l1326
  2609     037A                     l1322:
  2610     037A  3001               	movlw	1
  2611     037B                     u715:
  2612     037B  1003               	clrc
  2613     037C  0DF0               	rlf	___lwdiv@divisor,f
  2614     037D  0DF1               	rlf	___lwdiv@divisor+1,f
  2615     037E  3EFF               	addlw	-1
  2616     037F  1D03               	skipz
  2617     0380  2B7B               	goto	u715
  2618     0381                     l1324:
  2619     0381  3001               	movlw	1
  2620     0382  00FF               	movwf	btemp+1
  2621     0383  087F               	movf	btemp+1,w
  2622     0384  07F6               	addwf	___lwdiv@counter,f
  2623     0385                     l1326:
  2624     0385  1FF1               	btfss	___lwdiv@divisor+1,7
  2625     0386  2B88               	goto	u721
  2626     0387  2B89               	goto	u720
  2627     0388                     u721:
  2628     0388  2B7A               	goto	l1322
  2629     0389                     u720:
  2630     0389                     l1328:
  2631     0389  3001               	movlw	1
  2632     038A                     u735:
  2633     038A  1003               	clrc
  2634     038B  0DF4               	rlf	___lwdiv@quotient,f
  2635     038C  0DF5               	rlf	___lwdiv@quotient+1,f
  2636     038D  3EFF               	addlw	-1
  2637     038E  1D03               	skipz
  2638     038F  2B8A               	goto	u735
  2639     0390  0871               	movf	___lwdiv@divisor+1,w
  2640     0391  0273               	subwf	___lwdiv@dividend+1,w
  2641     0392  1D03               	skipz
  2642     0393  2B96               	goto	u745
  2643     0394  0870               	movf	___lwdiv@divisor,w
  2644     0395  0272               	subwf	___lwdiv@dividend,w
  2645     0396                     u745:
  2646     0396  1C03               	skipc
  2647     0397  2B99               	goto	u741
  2648     0398  2B9A               	goto	u740
  2649     0399                     u741:
  2650     0399  2BA1               	goto	l1334
  2651     039A                     u740:
  2652     039A                     l1330:
  2653     039A  0870               	movf	___lwdiv@divisor,w
  2654     039B  02F2               	subwf	___lwdiv@dividend,f
  2655     039C  0871               	movf	___lwdiv@divisor+1,w
  2656     039D  1C03               	skipc
  2657     039E  03F3               	decf	___lwdiv@dividend+1,f
  2658     039F  02F3               	subwf	___lwdiv@dividend+1,f
  2659     03A0                     l1332:
  2660     03A0  1474               	bsf	___lwdiv@quotient,0
  2661     03A1                     l1334:
  2662     03A1  3001               	movlw	1
  2663     03A2                     u755:
  2664     03A2  1003               	clrc
  2665     03A3  0CF1               	rrf	___lwdiv@divisor+1,f
  2666     03A4  0CF0               	rrf	___lwdiv@divisor,f
  2667     03A5  3EFF               	addlw	-1
  2668     03A6  1D03               	skipz
  2669     03A7  2BA2               	goto	u755
  2670     03A8                     l1336:
  2671     03A8  3001               	movlw	1
  2672     03A9  02F6               	subwf	___lwdiv@counter,f
  2673     03AA  1D03               	btfss	3,2
  2674     03AB  2BAD               	goto	u761
  2675     03AC  2BAE               	goto	u760
  2676     03AD                     u761:
  2677     03AD  2B89               	goto	l1328
  2678     03AE                     u760:
  2679     03AE                     l1338:
  2680     03AE  0875               	movf	___lwdiv@quotient+1,w
  2681     03AF  00F1               	movwf	?___lwdiv+1
  2682     03B0  0874               	movf	___lwdiv@quotient,w
  2683     03B1  00F0               	movwf	?___lwdiv
  2684     03B2                     l508:
  2685     03B2  0008               	return
  2686     03B3                     __end_of___lwdiv:
  2687                           
  2688                           	psect	text10
  2689     0264                     __ptext10:	
  2690 ;; *************** function _initUART *****************
  2691 ;; Defined at:
  2692 ;;		line 6 in file "uart.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2706 ;;      Params:         0       0       0       0
  2707 ;;      Locals:         0       0       0       0
  2708 ;;      Temps:          0       0       0       0
  2709 ;;      Totals:         0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719     0264                     _initUART:	
  2720                           ;psect for function _initUART
  2721                           
  2722     0264                     l1442:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _initUART: [wreg]
  2725                           
  2726                           
  2727                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  2728     0264  3019               	movlw	25
  2729     0265  1683               	bsf	3,5	;RP0=1, select bank1
  2730     0266  1303               	bcf	3,6	;RP1=0, select bank1
  2731     0267  0099               	movwf	25	;volatile
  2732                           
  2733                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  2734     0268  3024               	movlw	36
  2735     0269  0098               	movwf	24	;volatile
  2736                           
  2737                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  2738     026A  3090               	movlw	144
  2739     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2740     026C  1303               	bcf	3,6	;RP1=0, select bank0
  2741     026D  0098               	movwf	24	;volatile
  2742     026E                     l100:
  2743     026E  0008               	return
  2744     026F                     __end_of_initUART:
  2745                           
  2746                           	psect	text11
  2747     0238                     __ptext11:	
  2748 ;; *************** function _gets *****************
  2749 ;; Defined at:
  2750 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  s               1    wreg     PTR unsigned char 
  2753 ;;		 -> main@tmp(20), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  s               1    8[COMMON] PTR unsigned char 
  2756 ;;		 -> main@tmp(20), 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      PTR unsigned char 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2766 ;;      Params:         0       0       0       0
  2767 ;;      Locals:         1       0       0       0
  2768 ;;      Temps:          0       0       0       0
  2769 ;;      Totals:         1       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 3
  2773 ;; This function calls:
  2774 ;;		_cgets
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780     0238                     _gets:	
  2781                           ;psect for function _gets
  2782                           
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2786                           ;gets@s stored from wreg
  2787     0238  00F8               	movwf	gets@s
  2788     0239                     l1444:
  2789                           
  2790                           ;	Return value of _gets is never used
  2791     0239  0878               	movf	gets@s,w
  2792     023A  118A  23F9  118A   	fcall	_cgets
  2793     023D                     l704:
  2794     023D  0008               	return
  2795     023E                     __end_of_gets:
  2796                           
  2797                           	psect	text12
  2798     03F9                     __ptext12:	
  2799 ;; *************** function _cgets *****************
  2800 ;; Defined at:
  2801 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  s               1    wreg     PTR unsigned char 
  2804 ;;		 -> main@tmp(20), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  s               1    6[COMMON] PTR unsigned char 
  2807 ;;		 -> main@tmp(20), 
  2808 ;;  c               2    4[COMMON] int 
  2809 ;;  s1              1    7[COMMON] PTR unsigned char 
  2810 ;;		 -> main@tmp(20), 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      PTR unsigned char 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2820 ;;      Params:         0       0       0       0
  2821 ;;      Locals:         4       0       0       0
  2822 ;;      Temps:          2       0       0       0
  2823 ;;      Totals:         6       0       0       0
  2824 ;;Total ram usage:        6 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		_getche
  2829 ;;		_putch
  2830 ;; This function is called by:
  2831 ;;		_gets
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835     03F9                     _cgets:	
  2836                           ;psect for function _cgets
  2837                           
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2841                           ;cgets@s stored from wreg
  2842     03F9  00F6               	movwf	cgets@s
  2843     03FA                     l1376:
  2844     03FA  0876               	movf	cgets@s,w
  2845     03FB  00F7               	movwf	cgets@s1
  2846     03FC  2C33               	goto	l1404
  2847     03FD                     l1378:
  2848     03FD  0876               	movf	cgets@s,w
  2849     03FE  0677               	xorwf	cgets@s1,w
  2850     03FF  1D03               	skipz
  2851     0400  2C02               	goto	u851
  2852     0401  2C03               	goto	u850
  2853     0402                     u851:
  2854     0402  2C04               	goto	l1382
  2855     0403                     u850:
  2856     0403  2C33               	goto	l1404
  2857     0404                     l1382:
  2858     0404  3020               	movlw	32
  2859     0405  118A  2246  118A   	fcall	_putch
  2860     0408  3008               	movlw	8
  2861     0409  118A  2246  118A   	fcall	_putch
  2862     040C                     l1384:
  2863     040C  3001               	movlw	1
  2864     040D  02F7               	subwf	cgets@s1,f
  2865     040E  2C33               	goto	l1404
  2866     040F                     l1386:
  2867     040F  3008               	movlw	8
  2868     0410  118A  2246  118A   	fcall	_putch
  2869     0413  3020               	movlw	32
  2870     0414  118A  2246  118A   	fcall	_putch
  2871     0417  3008               	movlw	8
  2872     0418  118A  2246  118A   	fcall	_putch
  2873     041B                     l1388:
  2874     041B  3001               	movlw	1
  2875     041C  02F7               	subwf	cgets@s1,f
  2876     041D                     l1390:
  2877     041D  0877               	movf	cgets@s1,w
  2878     041E  0276               	subwf	cgets@s,w
  2879     041F  1C03               	skipc
  2880     0420  2C22               	goto	u861
  2881     0421  2C23               	goto	u860
  2882     0422                     u861:
  2883     0422  2C0F               	goto	l1386
  2884     0423                     u860:
  2885     0423  2C33               	goto	l1404
  2886     0424                     l1392:
  2887     0424  0877               	movf	cgets@s1,w
  2888     0425  0084               	movwf	4
  2889     0426  1383               	bcf	3,7	;select IRP bank0
  2890     0427  0180               	clrf	0
  2891     0428                     l1394:
  2892     0428  0876               	movf	cgets@s,w
  2893     0429  2C4F               	goto	l722
  2894     042A                     l1398:
  2895     042A  0877               	movf	cgets@s1,w
  2896     042B  0084               	movwf	4
  2897     042C  0874               	movf	cgets@c,w
  2898     042D  1383               	bcf	3,7	;select IRP bank0
  2899     042E  0080               	movwf	0
  2900     042F                     l1400:
  2901     042F  3001               	movlw	1
  2902     0430  00FF               	movwf	btemp+1
  2903     0431  087F               	movf	btemp+1,w
  2904     0432  07F7               	addwf	cgets@s1,f
  2905     0433                     l1404:
  2906     0433  118A  2250  118A   	fcall	_getche
  2907     0436  00F2               	movwf	??_cgets
  2908     0437  01F3               	clrf	??_cgets+1
  2909     0438  0872               	movf	??_cgets,w
  2910     0439  00F4               	movwf	cgets@c
  2911     043A  0873               	movf	??_cgets+1,w
  2912     043B  00F5               	movwf	cgets@c+1
  2913                           
  2914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2915                           ; Switch size 1, requested type "simple"
  2916                           ; Number of cases is 1, Range of values is 0 to 0
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte            4     3 (average)
  2920                           ; direct_byte            9     7 (fixed)
  2921                           ; jumptable            260     6 (fixed)
  2922                           ;	Chosen strategy is simple_byte
  2923     043C  0875               	movf	cgets@c+1,w
  2924     043D  3A00               	xorlw	0	; case 0
  2925     043E  1903               	skipnz
  2926     043F  2C41               	goto	l1702
  2927     0440  2C2A               	goto	l1398
  2928     0441                     l1702:
  2929                           
  2930                           ; Switch size 1, requested type "simple"
  2931                           ; Number of cases is 4, Range of values is 8 to 21
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte           13     7 (average)
  2935                           ; direct_byte           38    10 (fixed)
  2936                           ; jumptable            263     9 (fixed)
  2937                           ;	Chosen strategy is simple_byte
  2938     0441  0874               	movf	cgets@c,w
  2939     0442  3A08               	xorlw	8	; case 8
  2940     0443  1903               	skipnz
  2941     0444  2BFD               	goto	l1378
  2942     0445  3A02               	xorlw	2	; case 10
  2943     0446  1903               	skipnz
  2944     0447  2C24               	goto	l1392
  2945     0448  3A07               	xorlw	7	; case 13
  2946     0449  1903               	skipnz
  2947     044A  2C24               	goto	l1392
  2948     044B  3A18               	xorlw	24	; case 21
  2949     044C  1903               	skipnz
  2950     044D  2C1D               	goto	l1390
  2951     044E  2C2A               	goto	l1398
  2952     044F                     l722:
  2953     044F  0008               	return
  2954     0450                     __end_of_cgets:
  2955                           
  2956                           	psect	text13
  2957     0250                     __ptext13:	
  2958 ;; *************** function _getche *****************
  2959 ;; Defined at:
  2960 ;;		line 28 in file "uart.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  c               1    1[COMMON] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      unsigned char 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, pclath, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2974 ;;      Params:         0       0       0       0
  2975 ;;      Locals:         1       0       0       0
  2976 ;;      Temps:          0       0       0       0
  2977 ;;      Totals:         1       0       0       0
  2978 ;;Total ram usage:        1 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 1
  2981 ;; This function calls:
  2982 ;;		_getch
  2983 ;;		_putch
  2984 ;; This function is called by:
  2985 ;;		_cgets
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989     0250                     _getche:	
  2990                           ;psect for function _getche
  2991                           
  2992     0250                     l1282:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  2995                           
  2996                           
  2997                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  2998     0250  118A  223E  118A   	fcall	_getch
  2999     0253  00F1               	movwf	getche@c
  3000     0254                     l1284:
  3001                           
  3002                           ;uart.c: 33: putch(c);
  3003     0254  0871               	movf	getche@c,w
  3004     0255  118A  2246  118A   	fcall	_putch
  3005     0258                     l1286:
  3006                           
  3007                           ;uart.c: 35: return c;
  3008     0258  0871               	movf	getche@c,w
  3009     0259                     l115:
  3010     0259  0008               	return
  3011     025A                     __end_of_getche:
  3012                           
  3013                           	psect	text14
  3014     0246                     __ptext14:	
  3015 ;; *************** function _putch *****************
  3016 ;; Defined at:
  3017 ;;		line 13 in file "uart.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  byte            1    wreg     unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  byte            1    0[COMMON] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3031 ;;      Params:         0       0       0       0
  3032 ;;      Locals:         1       0       0       0
  3033 ;;      Temps:          0       0       0       0
  3034 ;;      Totals:         1       0       0       0
  3035 ;;Total ram usage:        1 bytes
  3036 ;; Hardware stack levels used: 1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_getche
  3041 ;;		_printf
  3042 ;;		_cgets
  3043 ;;		_puts
  3044 ;;		_cputs
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048     0246                     _putch:	
  3049                           ;psect for function _putch
  3050                           
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in _putch: [wreg]
  3054                           ;putch@byte stored from wreg
  3055     0246  00F0               	movwf	putch@byte
  3056     0247                     l1272:
  3057     0247                     l103:	
  3058                           ;uart.c: 15: while(!TXIF){
  3059                           
  3060     0247  1283               	bcf	3,5	;RP0=0, select bank0
  3061     0248  1303               	bcf	3,6	;RP1=0, select bank0
  3062     0249  1E0C               	btfss	12,4	;volatile
  3063     024A  2A4C               	goto	u621
  3064     024B  2A4D               	goto	u620
  3065     024C                     u621:
  3066     024C  2A47               	goto	l103
  3067     024D                     u620:
  3068     024D                     l1274:
  3069                           
  3070                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  3071     024D  0870               	movf	putch@byte,w
  3072     024E  0099               	movwf	25	;volatile
  3073     024F                     l106:
  3074     024F  0008               	return
  3075     0250                     __end_of_putch:
  3076                           
  3077                           	psect	text15
  3078     023E                     __ptext15:	
  3079 ;; *************** function _getch *****************
  3080 ;; Defined at:
  3081 ;;		line 20 in file "uart.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      unsigned char 
  3088 ;; Registers used:
  3089 ;;		wreg
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3095 ;;      Params:         0       0       0       0
  3096 ;;      Locals:         0       0       0       0
  3097 ;;      Temps:          0       0       0       0
  3098 ;;      Totals:         0       0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_getche
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108     023E                     _getch:	
  3109                           ;psect for function _getch
  3110                           
  3111     023E                     l1276:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _getch: [wreg]
  3114                           
  3115     023E                     l109:	
  3116                           ;uart.c: 22: while(!RCIF){
  3117                           
  3118     023E  1283               	bcf	3,5	;RP0=0, select bank0
  3119     023F  1303               	bcf	3,6	;RP1=0, select bank0
  3120     0240  1E8C               	btfss	12,5	;volatile
  3121     0241  2A43               	goto	u631
  3122     0242  2A44               	goto	u630
  3123     0243                     u631:
  3124     0243  2A3E               	goto	l109
  3125     0244                     u630:
  3126     0244                     l1278:
  3127                           
  3128                           ;uart.c: 23: };uart.c: 25: return RCREG;
  3129     0244  081A               	movf	26,w	;volatile
  3130     0245                     l112:
  3131     0245  0008               	return
  3132     0246                     __end_of_getch:
  3133                           
  3134                           	psect	text16
  3135     0450                     __ptext16:	
  3136 ;; *************** function _atoi *****************
  3137 ;; Defined at:
  3138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  s               1    wreg     PTR const unsigned char 
  3141 ;;		 -> NULL(0), main@tmp(20), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  s               1   13[COMMON] PTR const unsigned char 
  3144 ;;		 -> NULL(0), main@tmp(20), 
  3145 ;;  a               2   11[COMMON] int 
  3146 ;;  sign            1   10[COMMON] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    6[COMMON] int 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3156 ;;      Params:         2       0       0       0
  3157 ;;      Locals:         4       0       0       0
  3158 ;;      Temps:          2       0       0       0
  3159 ;;      Totals:         8       0       0       0
  3160 ;;Total ram usage:        8 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		___wmul
  3165 ;;		_isdigit
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171     0450                     _atoi:	
  3172                           ;psect for function _atoi
  3173                           
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3177                           ;atoi@s stored from wreg
  3178     0450  00FD               	movwf	atoi@s
  3179     0451                     l1544:
  3180     0451  2C56               	goto	l1548
  3181     0452                     l1546:
  3182     0452  3001               	movlw	1
  3183     0453  00FF               	movwf	btemp+1
  3184     0454  087F               	movf	btemp+1,w
  3185     0455  07FD               	addwf	atoi@s,f
  3186     0456                     l1548:
  3187     0456  087D               	movf	atoi@s,w
  3188     0457  0084               	movwf	4
  3189     0458  3020               	movlw	32
  3190     0459  1383               	bcf	3,7	;select IRP bank0
  3191     045A  0600               	xorwf	0,w
  3192     045B  1903               	btfsc	3,2
  3193     045C  2C5E               	goto	u1051
  3194     045D  2C5F               	goto	u1050
  3195     045E                     u1051:
  3196     045E  2C52               	goto	l1546
  3197     045F                     u1050:
  3198     045F                     l1550:
  3199     045F  087D               	movf	atoi@s,w
  3200     0460  0084               	movwf	4
  3201     0461  3009               	movlw	9
  3202     0462  0600               	xorwf	0,w
  3203     0463  1903               	btfsc	3,2
  3204     0464  2C66               	goto	u1061
  3205     0465  2C67               	goto	u1060
  3206     0466                     u1061:
  3207     0466  2C52               	goto	l1546
  3208     0467                     u1060:
  3209     0467                     l1552:
  3210     0467  01FB               	clrf	atoi@a
  3211     0468  01FC               	clrf	atoi@a+1
  3212     0469  01FA               	clrf	atoi@sign
  3213     046A                     l1554:
  3214     046A  087D               	movf	atoi@s,w
  3215     046B  0084               	movwf	4
  3216     046C  302D               	movlw	45
  3217     046D  0600               	xorwf	0,w
  3218     046E  1D03               	btfss	3,2
  3219     046F  2C71               	goto	u1071
  3220     0470  2C72               	goto	u1070
  3221     0471                     u1071:
  3222     0471  2C7B               	goto	l1558
  3223     0472                     u1070:
  3224     0472                     l1556:
  3225     0472  3001               	movlw	1
  3226     0473  00FF               	movwf	btemp+1
  3227     0474  087F               	movf	btemp+1,w
  3228     0475  07FA               	addwf	atoi@sign,f
  3229     0476  3001               	movlw	1
  3230     0477  00FF               	movwf	btemp+1
  3231     0478  087F               	movf	btemp+1,w
  3232     0479  07FD               	addwf	atoi@s,f
  3233     047A  2CA7               	goto	l1566
  3234     047B                     l1558:
  3235     047B  087D               	movf	atoi@s,w
  3236     047C  0084               	movwf	4
  3237     047D  302B               	movlw	43
  3238     047E  0600               	xorwf	0,w
  3239     047F  1D03               	btfss	3,2
  3240     0480  2C82               	goto	u1081
  3241     0481  2C83               	goto	u1080
  3242     0482                     u1081:
  3243     0482  2CA7               	goto	l1566
  3244     0483                     u1080:
  3245     0483                     l1560:
  3246     0483  3001               	movlw	1
  3247     0484  00FF               	movwf	btemp+1
  3248     0485  087F               	movf	btemp+1,w
  3249     0486  07FD               	addwf	atoi@s,f
  3250     0487  2CA7               	goto	l1566
  3251     0488                     l1562:
  3252     0488  087D               	movf	atoi@s,w
  3253     0489  0084               	movwf	4
  3254     048A  087C               	movf	atoi@a+1,w
  3255     048B  00F1               	movwf	___wmul@multiplier+1
  3256     048C  087B               	movf	atoi@a,w
  3257     048D  00F0               	movwf	___wmul@multiplier
  3258     048E  300A               	movlw	10
  3259     048F  00F2               	movwf	___wmul@multiplicand
  3260     0490  3000               	movlw	0
  3261     0491  00F3               	movwf	___wmul@multiplicand+1
  3262     0492  118A  22B6  118A   	fcall	___wmul
  3263     0495  1383               	bcf	3,7	;select IRP bank0
  3264     0496  0800               	movf	0,w
  3265     0497  0770               	addwf	?___wmul,w
  3266     0498  00F8               	movwf	??_atoi
  3267     0499  3000               	movlw	0
  3268     049A  1803               	skipnc
  3269     049B  3001               	movlw	1
  3270     049C  0771               	addwf	?___wmul+1,w
  3271     049D  00F9               	movwf	??_atoi+1
  3272     049E  0878               	movf	??_atoi,w
  3273     049F  3ED0               	addlw	208
  3274     04A0  00FB               	movwf	atoi@a
  3275     04A1  0879               	movf	??_atoi+1,w
  3276     04A2  1803               	skipnc
  3277     04A3  3E01               	addlw	1
  3278     04A4  3EFF               	addlw	255
  3279     04A5  00FC               	movwf	atoi@a+1
  3280     04A6  2C83               	goto	l1560
  3281     04A7                     l1566:
  3282     04A7  087D               	movf	atoi@s,w
  3283     04A8  0084               	movwf	4
  3284     04A9  0800               	movf	0,w
  3285     04AA  118A  226F  118A   	fcall	_isdigit
  3286     04AD  1803               	btfsc	3,0
  3287     04AE  2CB0               	goto	u1091
  3288     04AF  2CB1               	goto	u1090
  3289     04B0                     u1091:
  3290     04B0  2C88               	goto	l1562
  3291     04B1                     u1090:
  3292     04B1                     l1568:
  3293     04B1  087A               	movf	atoi@sign,w
  3294     04B2  1903               	btfsc	3,2
  3295     04B3  2CB5               	goto	u1101
  3296     04B4  2CB6               	goto	u1100
  3297     04B5                     u1101:
  3298     04B5  2CC2               	goto	l1574
  3299     04B6                     u1100:
  3300     04B6                     l1570:
  3301     04B6  097B               	comf	atoi@a,w
  3302     04B7  00F8               	movwf	??_atoi
  3303     04B8  097C               	comf	atoi@a+1,w
  3304     04B9  00F9               	movwf	??_atoi+1
  3305     04BA  0AF8               	incf	??_atoi,f
  3306     04BB  1903               	skipnz
  3307     04BC  0AF9               	incf	??_atoi+1,f
  3308     04BD  0878               	movf	??_atoi,w
  3309     04BE  00F6               	movwf	?_atoi
  3310     04BF  0879               	movf	??_atoi+1,w
  3311     04C0  00F7               	movwf	?_atoi+1
  3312     04C1  2CC6               	goto	l699
  3313     04C2                     l1574:
  3314     04C2  087C               	movf	atoi@a+1,w
  3315     04C3  00F7               	movwf	?_atoi+1
  3316     04C4  087B               	movf	atoi@a,w
  3317     04C5  00F6               	movwf	?_atoi
  3318     04C6                     l699:
  3319     04C6  0008               	return
  3320     04C7                     __end_of_atoi:
  3321                           
  3322                           	psect	text17
  3323     026F                     __ptext17:	
  3324 ;; *************** function _isdigit *****************
  3325 ;; Defined at:
  3326 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  c               1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  c               1    1[COMMON] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3340 ;;      Params:         0       0       0       0
  3341 ;;      Locals:         2       0       0       0
  3342 ;;      Temps:          0       0       0       0
  3343 ;;      Totals:         2       0       0       0
  3344 ;;Total ram usage:        2 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_atoi
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353     026F                     _isdigit:	
  3354                           ;psect for function _isdigit
  3355                           
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3359                           ;isdigit@c stored from wreg
  3360     026F  00F1               	movwf	isdigit@c
  3361     0270                     l1364:
  3362     0270  01F0               	clrf	_isdigit$592
  3363     0271                     l1366:
  3364     0271  303A               	movlw	58
  3365     0272  0271               	subwf	isdigit@c,w
  3366     0273  1803               	skipnc
  3367     0274  2A76               	goto	u831
  3368     0275  2A77               	goto	u830
  3369     0276                     u831:
  3370     0276  2A7F               	goto	l1372
  3371     0277                     u830:
  3372     0277                     l1368:
  3373     0277  3030               	movlw	48
  3374     0278  0271               	subwf	isdigit@c,w
  3375     0279  1C03               	skipc
  3376     027A  2A7C               	goto	u841
  3377     027B  2A7D               	goto	u840
  3378     027C                     u841:
  3379     027C  2A7F               	goto	l1372
  3380     027D                     u840:
  3381     027D                     l1370:
  3382     027D  01F0               	clrf	_isdigit$592
  3383     027E  0AF0               	incf	_isdigit$592,f
  3384     027F                     l1372:
  3385     027F  0C70               	rrf	_isdigit$592,w
  3386     0280                     l729:
  3387     0280  0008               	return
  3388     0281                     __end_of_isdigit:
  3389                           
  3390                           	psect	text18
  3391     02B6                     __ptext18:	
  3392 ;; *************** function ___wmul *****************
  3393 ;; Defined at:
  3394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  multiplier      2    0[COMMON] unsigned int 
  3397 ;;  multiplicand    2    2[COMMON] unsigned int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  product         2    4[COMMON] unsigned int 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    0[COMMON] unsigned int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3409 ;;      Params:         4       0       0       0
  3410 ;;      Locals:         2       0       0       0
  3411 ;;      Temps:          0       0       0       0
  3412 ;;      Totals:         6       0       0       0
  3413 ;;Total ram usage:        6 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_atoi
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422     02B6                     ___wmul:	
  3423                           ;psect for function ___wmul
  3424                           
  3425     02B6                     l1302:	
  3426                           ;incstack = 0
  3427                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3428                           
  3429     02B6  01F4               	clrf	___wmul@product
  3430     02B7  01F5               	clrf	___wmul@product+1
  3431     02B8                     l1304:
  3432     02B8  1C70               	btfss	___wmul@multiplier,0
  3433     02B9  2ABB               	goto	u661
  3434     02BA  2ABC               	goto	u660
  3435     02BB                     u661:
  3436     02BB  2AC2               	goto	l236
  3437     02BC                     u660:
  3438     02BC                     l1306:
  3439     02BC  0872               	movf	___wmul@multiplicand,w
  3440     02BD  07F4               	addwf	___wmul@product,f
  3441     02BE  1803               	skipnc
  3442     02BF  0AF5               	incf	___wmul@product+1,f
  3443     02C0  0873               	movf	___wmul@multiplicand+1,w
  3444     02C1  07F5               	addwf	___wmul@product+1,f
  3445     02C2                     l236:
  3446     02C2  3001               	movlw	1
  3447     02C3                     u675:
  3448     02C3  1003               	clrc
  3449     02C4  0DF2               	rlf	___wmul@multiplicand,f
  3450     02C5  0DF3               	rlf	___wmul@multiplicand+1,f
  3451     02C6  3EFF               	addlw	-1
  3452     02C7  1D03               	skipz
  3453     02C8  2AC3               	goto	u675
  3454     02C9                     l1308:
  3455     02C9  3001               	movlw	1
  3456     02CA                     u685:
  3457     02CA  1003               	clrc
  3458     02CB  0CF1               	rrf	___wmul@multiplier+1,f
  3459     02CC  0CF0               	rrf	___wmul@multiplier,f
  3460     02CD  3EFF               	addlw	-1
  3461     02CE  1D03               	skipz
  3462     02CF  2ACA               	goto	u685
  3463     02D0                     l1310:
  3464     02D0  0870               	movf	___wmul@multiplier,w
  3465     02D1  0471               	iorwf	___wmul@multiplier+1,w
  3466     02D2  1D03               	btfss	3,2
  3467     02D3  2AD5               	goto	u691
  3468     02D4  2AD6               	goto	u690
  3469     02D5                     u691:
  3470     02D5  2AB8               	goto	l1304
  3471     02D6                     u690:
  3472     02D6                     l1312:
  3473     02D6  0875               	movf	___wmul@product+1,w
  3474     02D7  00F1               	movwf	?___wmul+1
  3475     02D8  0874               	movf	___wmul@product,w
  3476     02D9  00F0               	movwf	?___wmul
  3477     02DA                     l238:
  3478     02DA  0008               	return
  3479     02DB                     __end_of___wmul:
  3480     007E                     btemp	set	126	;btemp
  3481     007E                     wtemp0	set	126
  3482                           
  3483                           	psect	idloc
  3484                           
  3485                           ;Config register IDLOC0 @ 0x2000
  3486                           ;	unspecified, using default values
  3487     2000                     	org	8192
  3488     2000  3FFF               	dw	16383
  3489                           
  3490                           ;Config register IDLOC1 @ 0x2001
  3491                           ;	unspecified, using default values
  3492     2001                     	org	8193
  3493     2001  3FFF               	dw	16383
  3494                           
  3495                           ;Config register IDLOC2 @ 0x2002
  3496                           ;	unspecified, using default values
  3497     2002                     	org	8194
  3498     2002  3FFF               	dw	16383
  3499                           
  3500                           ;Config register IDLOC3 @ 0x2003
  3501                           ;	unspecified, using default values
  3502     2003                     	org	8195
  3503     2003  3FFF               	dw	16383
  3504                           
  3505                           	psect	config
  3506                           
  3507                           ;Config register CONFIG @ 0x2007
  3508                           ;	Oscillator Selection bits
  3509                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  3510                           ;	Watchdog Timer Enable bit
  3511                           ;	WDTE = OFF, WDT disabled
  3512                           ;	Power-up Timer Enable bit
  3513                           ;	PWRTE = OFF, PWRT disabled
  3514                           ;	RA5/MCLR/VPP Pin Function Select bit
  3515                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  3516                           ;	Brown-out Detect Enable bit
  3517                           ;	BOREN = ON, BOD enabled
  3518                           ;	Low-Voltage Programming Enable bit
  3519                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3520                           ;	Data EE Memory Code Protection bit
  3521                           ;	CPD = OFF, Data memory code protection off
  3522                           ;	Flash Program Memory Code Protection bit
  3523                           ;	CP = OFF, Code protection off
  3524     2007                     	org	8199
  3525     2007  3F78               	dw	16248

Data Sizes:
    Strings     95
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      44
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_6(CODE[2]), STR_4(CODE[2]), STR_1(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_6(CODE[2]), STR_4(CODE[2]), STR_1(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_6(CODE[2]), STR_4(CODE[2]), NULL(NULL[0]), STR_1(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_6(CODE[2]), STR_4(CODE[2]), STR_1(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_6(CODE[2]), STR_4(CODE[2]), STR_1(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    cputs@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_10(CODE[14]), STR_8(CODE[14]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_10(CODE[14]), STR_8(CODE[14]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    gets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_11(CODE[16]), STR_9(CODE[16]), STR_7(CODE[12]), STR_5(CODE[10]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_12(CODE[7]), ?_printf(COMMON[2]), NULL(NULL[0]), main@tmp(BANK0[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0    4801
                                             12 BANK0     31    31      0
                               _atoi
                               _gets
                           _initUART
                             _printf
                               _puts
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               2     1      1    1539
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     210
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1323
                                             12 COMMON     2     0      2
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     606
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     2B      2C       3       55.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      3A       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      3A      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 18 15:36:01 2023

                      pc 0002                       l40 060E                       l41 062E  
                     l50 06A5                       l42 06E3                       l43 063B  
                     l60 0701                       l52 06B3                       l44 0655  
                     l61 071B                       l53 06CD                       l70 0793  
                     l46 0663                       l63 0729                       l47 067D  
                     l64 0743                       l49 068B                       l66 0751  
                     l67 076B                       l59 07A9                       l69 0779  
                     fsr 0004      ___wmul@multiplicand 0072                      l100 026E  
                    l103 0247                      l112 0245                      l106 024F  
                    l115 0259                      l109 023E                      l232 05B2  
                    l236 02C2                      l238 02DA                      l508 03B2  
                    l518 036E                      l704 023D                      l722 044F  
                    l744 0299                      l736 0263                      l729 0280  
                    l771 029B                      l755 03F8                      l773 02B5  
                    l768 0307                      l784 0334                      l699 04C6  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u620 024D                      u700 0377  
                    u621 024C                      u701 0376                      u630 0244  
                    u631 0243                      u720 0389                      u800 0357  
                    u640 02A5                      u721 0388                      u801 0356  
                    u641 02A4                      u650 02B4                      u715 037B  
                    u651 02B3                      u660 02BC                      u740 039A  
                    u820 036A                      u900 02F1                      u661 02BB  
                    u741 0399                      u821 0369                      u805 0353  
                    u901 02F0                      u830 0277                      u910 0303  
                    u831 0276                      u735 038A                      u815 035E  
                    u911 0302                      u840 027D                      u760 03AE  
                    u920 03B9                      u841 027C                      u761 03AD  
                    u745 0396                      u921 03B8                      u690 02D6  
                    u850 0403                      u770 033B                      u930 03C2  
                    u691 02D5                      u675 02C3                      u851 0402  
                    u755 03A2                      u771 033A                      u931 03C1  
                    u860 0423                      u940 03D6                      u685 02CA  
                    u861 0422                      u941 03D5                      u790 034D  
                    u870 0299                      u950 03EE                      u791 034C  
                    u871 0298                      u951 03ED                      u960 04D3  
                    u880 031E                      u785 033F                      u961 04D2  
                    u881 031D                      u970 04EA                      u890 0330  
                    u971 04E9                      u891 032F                      u980 050D  
                    u981 050C                      u990 0533                      u991 0532  
                    fsr0 0004                      indf 0000                     l1310 02D0  
                   l1302 02B6                     l1312 02D6                     l1304 02B8  
                   l1400 042F                     l1320 0377                     l1306 02BC  
                   l1330 039A                     l1322 037A                     l1410 0282  
                   l1308 02C9                     l1404 0433                     l1332 03A0  
                   l1324 0381                     l1316 036F                     l1500 0501  
                   l1412 0283                     l1420 030C                     l1334 03A1  
                   l1326 0385                     l1318 0371                     l1350 0349  
                   l1342 0335                     l1510 052F                     l1414 028B  
                   l1430 02DC                     l1422 0316                     l1272 0247  
                   l1336 03A8                     l1328 0389                     l1352 034D  
                   l1344 033B                     l1360 036A                     l1512 0533  
                   l1504 050E                     l1416 028F                     l1432 02DF  
                   l1424 031E                     l1600 05CA                     l1370 027D  
                   l1274 024D                     l1282 0250                     l1442 0264  
                   l1338 03AE                     l1354 0357                     l1346 033E  
                   l1530 0560                     l1522 053E                     l1514 0537  
                   l1506 0524                     l1290 029B                     l1434 02E9  
                   l1426 0330                     l1418 0309                     l1450 03B9  
                   l1610 05F6                     l1602 05CE                     l1372 027F  
                   l1364 0270                     l1276 023E                     l1284 0254  
                   l1444 0239                     l1356 035D                     l1348 0345  
                   l1540 0597                     l1532 0566                     l1516 053C  
                   l1508 052B                     l1292 02A5                     l1436 02F1  
                   l1460 03CE                     l1452 03BD                     l1620 0636  
                   l1612 05FF                     l1604 05D7                     l1366 0271  
                   l1550 045F                     l1278 0244                     l1286 0258  
                   l1702 0441                     l1390 041D                     l1382 0404  
                   l1358 0364                     l1534 056A                     l1526 0556  
                   l1542 05A2                     l1438 0303                     l1470 03EE  
                   l1462 03D6                     l1454 03C2                     l1630 0691  
                   l1622 0641                     l1614 0604                     l1606 05DD  
                   l1368 0277                     l1560 0483                     l1552 0467  
                   l1544 0451                     l1392 0424                     l1384 040C  
                   l1376 03FA                     l1536 056F                     l1528 055A  
                   l1480 04CA                     l1296 02A7                     l1472 03F1  
                   l1448 03B4                     l1640 06F1                     l1632 0694  
                   l1624 0644                     l1616 061F                     l1608 05EE  
                   l1570 04B6                     l1562 0488                     l1554 046A  
                   l1546 0452                     l1394 0428                     l1386 040F  
                   l1378 03FD                     l1538 0593                     l1490 04E0  
                   l1482 04CD                     l1298 02B4                     l1474 03F6  
                   l1466 03DB                     l1458 03C4                     l1650 072F  
                   l1642 06FA                     l1634 06B9                     l1626 0669  
                   l1618 0624                     l1556 0472                     l1548 0456  
                   l1388 041B                     l1492 04E4                     l1484 04D3  
                   l1580 025F                     l1476 03F7                     l1468 03E6  
                   l1660 0782                     l1652 0732                     l1644 06FE  
                   l1636 06BC                     l1628 066C                     l1574 04C2  
                   l1566 04A7                     l1558 047B                     l1398 042A  
                   l1494 04EA                     l1486 04D8                     l1670 07CA  
                   l1662 07A1                     l1654 0757                     l1646 0707  
                   l1638 06DB                     l1590 05C1                     l1582 05B3  
                   l1568 04B1                     l1496 04EF                     l1488 04DA  
                   l1664 07B7                     l1656 075A                     l1648 070A  
                   l1680 07D9                     l1592 05C4                     l1584 05B7  
                   l1498 04F9                     l1578 025B                     l1674 07CF  
                   l1666 07C0                     l1658 077F                     l1594 05C4  
                   l1586 05BB                     l1676 07D4                     l1668 07C5  
                   l1596 05C4                     l1588 05BD                     l1598 05C4  
                   STR_1 0079                     STR_2 0075                     STR_3 0075  
                   STR_4 0079                     STR_5 0064                     STR_6 0079  
                   STR_7 0058                     STR_8 004A                     STR_9 002C  
                   u1000 0555                     u1001 0554                     u1010 0560  
                   u1011 055F                     u1100 04B6                     u1020 0566  
                   u1101 04B5                     u1021 0565                     u1005 0551  
                   u1030 05A2                     u1110 0604                     u1031 05A1  
                   u1111 0603                     u1040 05B2                     u1200 0779  
                   u1120 0624                     u1041 05B1                     u1201 0778  
                   u1121 0623                     u1050 045F                     u1210 07A1  
                   u1130 0663                     u1051 045E                     u1211 07A0  
                   u1131 0662                     u1060 0467                     u1220 07B7  
                   u1140 068B                     u1061 0466                     u1221 07B6  
                   u1205 0775                     u1141 068A                     u1070 0472  
                   u1150 06B3                     u1071 0471                     u1215 079D  
                   u1151 06B2                     u1135 065F                     u1080 0483  
                   u1160 06DB                     u1081 0482                     u1225 07B3  
                   u1161 06DA                     u1145 0687                     u1090 04B1  
                   u1170 06F1                     u1091 04B0                     u1307 0786  
                   u1171 06F0                     u1155 06AF                     u1180 0729  
                   u1181 0728                     u1165 06D7                     u1237 0648  
                   u1190 0751                     u1191 0750                     u1175 06ED  
                   u1247 0670                     u1185 0725                     u1257 0698  
                   u1195 074D                     u1267 06C0                     u1277 070E  
                   u1287 0736                     u1297 075E                     _RCIF 0065  
                   _TXIF 0064                     _atoi 0450                     _gets 0238  
                   _main 05B3                     btemp 007E                     _puts 025A  
                   start 0000                    ?_atoi 0076                    ?_gets 0070  
                  ?_main 0070                    STR_10 003C                    STR_11 001C  
                  STR_12 006E                    _CMCON 001F                    ?_puts 0070  
        __end_of___lwdiv 03B3          __end_of___lwmod 036F                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _TXSTA 0098                    _cgets 03F9  
                  _getch 023E          __end_of_dpowers 001C                    _cputs 0281  
        __end_of_isdigit 0281                    atoi@a 007B                    atoi@s 007D  
                  _putch 0246                    gets@s 0078                    main@j 0049  
                  main@k 0042                    pclath 000A                    puts@s 0072  
                  status 0003                    wtemp0 007E          __end_of_strcspn 0308  
        __initialization 07FA             __end_of_atoi 04C7             __end_of_gets 023E  
           __end_of_main 07FA             __end_of_puts 0264                   ??_atoi 0078  
                 ??_gets 0078                   ??_main 002C                   ??_puts 0072  
                 ?_cgets 0070                   ?_getch 0070                   ?_cputs 0070  
                 ?_putch 0070                   ___wmul 02B6         __end_of_initUART 026F  
              ??___lwdiv 0074                ??___lwmod 007B                   _getche 0250  
                 cgets@c 0074                   cgets@s 0076                   _printf 04C7  
                 _strchr 029A                   _strtok 03B3                   _strspn 0308  
                 cputs@s 0071                ??_isdigit 0070                ??_strcspn 0075  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_cgets 0450  
          __end_of_getch 0246            __end_of_cputs 029A            __end_of_putch 0250  
                ??_cgets 0072                  ??_getch 0070                  ??_cputs 0071  
                ??_putch 0070               __pbssBANK0 004B               __pmaintext 05B3  
                ?___wmul 0070                  ?_getche 0070                  ?_printf 007C  
                ?_strchr 0070                  ?_strtok 007A                  ?_strspn 0073  
             __stringtab 0002                ?_initUART 0070                  ___lwdiv 036F  
                ___lwmod 0335                  __ptext1 03B3                  __ptext2 0308  
                __ptext3 02DB                  __ptext4 029A                  __ptext5 025A  
                __ptext6 0281                  __ptext7 04C7                  __ptext8 0335  
                __ptext9 036F                  _dpowers 0012                  _isdigit 026F  
                cgets@s1 0077                  getche@c 0071                  main@cnt 0044  
                main@ptr 0046                  main@tmp 002E                  _strcspn 02DB  
   end_of_initialization 07FD               ??_initUART 0070                  printf@c 002B  
                printf@f 002A                  strspn@i 0077           __end_of___wmul 02DB  
         __end_of_getche 025A           __end_of_printf 05B3           __end_of_strchr 02B6  
         __end_of_strtok 03F9           __end_of_strspn 0335      start_initialization 07FA  
               ??___wmul 0074                 ??_getche 0071                 ??_printf 0020  
               ??_strchr 0072                 ??_strtok 007B                 ??_strspn 0075  
              ___latbits 0001            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0002  
               ?_isdigit 0070         ___lwdiv@quotient 0074                 ?_strcspn 0073  
         ___wmul@product 0074              __stringbase 0011        ___wmul@multiplier 0070  
             printf@flag 0023               printf@prec 0024                main@intvl 0047  
     __end_of__stringtab 0012              _isdigit$592 0070          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076                 __ptext10 0264                 __ptext11 0238  
               __ptext12 03F9                 __ptext13 0250                 __ptext14 0246  
               __ptext15 023E                 __ptext16 0450                 __ptext17 026F  
               __ptext18 02B6                 _initUART 0264                 atoi@sign 007A  
              printf@val 0028                putch@byte 0070                 isdigit@c 0071  
              strchr@chr 0070         ___lwmod@dividend 0079                strchr@ptr 0072  
              strcspn@s1 0079                strcspn@s2 0073                stringcode 000C  
               printf@ap 0025                 printf@cp 0026          ___lwmod@divisor 0077  
        ___lwmod@counter 007B                 strcspn@i 0077                 stringdir 000C  
               stringtab 0002                 strtok@s1 007B                 strtok@s2 007A  
               strspn@s1 0079                 strspn@s2 0073                 strtok@sp 004B  
