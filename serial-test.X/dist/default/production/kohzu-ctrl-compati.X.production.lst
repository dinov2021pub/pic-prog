

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 31 05:12:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 09/02/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F648A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     008C                     	;# 
    96     008E                     	;# 
    97     0092                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009A                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009F                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000E                     	;# 
   116     000E                     	;# 
   117     000F                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0015                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0017                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     001F                     	;# 
   129     0081                     	;# 
   130     0085                     	;# 
   131     0086                     	;# 
   132     008C                     	;# 
   133     008E                     	;# 
   134     0092                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009F                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     008C                     	;# 
   170     008E                     	;# 
   171     0092                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009A                     	;# 
   175     009B                     	;# 
   176     009C                     	;# 
   177     009D                     	;# 
   178     009F                     	;# 
   179                           
   180                           	psect	strings
   181     0002                     __pstrings:
   182     0002                     stringtab:
   183     0002                     __stringtab:
   184                           
   185                           ;	String table - string pointers are 1 byte each
   186     0002  1BFF               	btfsc	btemp+1,7
   187     0003  280C               	ljmp	stringcode
   188     0004  1383               	bcf	3,7
   189     0005  187F               	btfsc	btemp+1,0
   190     0006  1783               	bsf	3,7
   191     0007  0800               	movf	0,w
   192     0008  0A84               	incf	4,f
   193     0009  1903               	skipnz
   194     000A  0AFF               	incf	btemp+1,f
   195     000B  0008               	return
   196     000C                     stringcode:
   197     000C                     stringdir:
   198     000C  3000               	movlw	high stringdir
   199     000D  008A               	movwf	10
   200     000E  0804               	movf	4,w
   201     000F  0A84               	incf	4,f
   202     0010  0782               	addwf	2,f
   203     0011                     __stringbase:
   204     0011  3400               	retlw	0
   205     0012                     __end_of__stringtab:
   206     0012                     _dpowers:
   207     0012  3401               	retlw	1
   208     0013  3400               	retlw	0
   209     0014  340A               	retlw	10
   210     0015  3400               	retlw	0
   211     0016  3464               	retlw	100
   212     0017  3400               	retlw	0
   213     0018  34E8               	retlw	232
   214     0019  3403               	retlw	3
   215     001A  3410               	retlw	16
   216     001B  3427               	retlw	39
   217     001C                     __end_of_dpowers:
   218     001A                     _RCREG	set	26
   219     0019                     _TXREG	set	25
   220     0018                     _RCSTA	set	24
   221     001F                     _CMCON	set	31
   222     0006                     _PORTB	set	6
   223     0005                     _PORTA	set	5
   224     0065                     _RCIF	set	101
   225     0064                     _TXIF	set	100
   226     0030                     _RB0	set	48
   227     0029                     _RA1	set	41
   228     0028                     _RA0	set	40
   229     0098                     _TXSTA	set	152
   230     0099                     _SPBRG	set	153
   231     0086                     _TRISB	set	134
   232     0085                     _TRISA	set	133
   233     001C                     STR_12:
   234     001C  3464               	retlw	100	;'d'
   235     001D  3469               	retlw	105	;'i'
   236     001E  3473               	retlw	115	;'s'
   237     001F  3474               	retlw	116	;'t'
   238     0020  3420               	retlw	32	;' '
   239     0021  343D               	retlw	61	;'='
   240     0022  3420               	retlw	32	;' '
   241     0023  3425               	retlw	37	;'%'
   242     0024  3464               	retlw	100	;'d'
   243     0025  340A               	retlw	10
   244     0026  3400               	retlw	0
   245     0027                     STR_36:
   246     0027  3456               	retlw	86	;'V'
   247     0028  3445               	retlw	69	;'E'
   248     0029  3452               	retlw	82	;'R'
   249     002A  3453               	retlw	83	;'S'
   250     002B  3449               	retlw	73	;'I'
   251     002C  344F               	retlw	79	;'O'
   252     002D  344E               	retlw	78	;'N'
   253     002E  3420               	retlw	32	;' '
   254     002F  3431               	retlw	49	;'1'
   255     0030  3430               	retlw	48	;'0'
   256     0031  3400               	retlw	0
   257     0032                     STR_27:
   258     0032  3444               	retlw	68	;'D'
   259     0033  3465               	retlw	101	;'e'
   260     0034  3474               	retlw	116	;'t'
   261     0035  3465               	retlw	101	;'e'
   262     0036  3463               	retlw	99	;'c'
   263     0037  3474               	retlw	116	;'t'
   264     0038  3465               	retlw	101	;'e'
   265     0039  3464               	retlw	100	;'d'
   266     003A  340A               	retlw	10
   267     003B  3400               	retlw	0
   268     003C                     STR_33:
   269     003C  3444               	retlw	68	;'D'
   270     003D  3465               	retlw	101	;'e'
   271     003E  3474               	retlw	116	;'t'
   272     003F  3465               	retlw	101	;'e'
   273     0040  3463               	retlw	99	;'c'
   274     0041  3474               	retlw	116	;'t'
   275     0042  3465               	retlw	101	;'e'
   276     0043  3464               	retlw	100	;'d'
   277     0044  3400               	retlw	0
   278     0045                     STR_39:
   279     0045  3428               	retlw	40	;'('
   280     0046  346E               	retlw	110	;'n'
   281     0047  3475               	retlw	117	;'u'
   282     0048  346C               	retlw	108	;'l'
   283     0049  346C               	retlw	108	;'l'
   284     004A  3429               	retlw	41	;')'
   285     004B  3400               	retlw	0
   286     004C                     STR_37:
   287     004C  3453               	retlw	83	;'S'
   288     004D  3457               	retlw	87	;'W'
   289     004E  3420               	retlw	32	;' '
   290     004F  344F               	retlw	79	;'O'
   291     0050  3446               	retlw	70	;'F'
   292     0051  3446               	retlw	70	;'F'
   293     0052  3400               	retlw	0
   294     0053                     STR_38:
   295     0053  3453               	retlw	83	;'S'
   296     0054  3457               	retlw	87	;'W'
   297     0055  3420               	retlw	32	;' '
   298     0056  344F               	retlw	79	;'O'
   299     0057  344E               	retlw	78	;'N'
   300     0058  3400               	retlw	0
   301     0059                     STR_26:
   302     0059  344E               	retlw	78	;'N'
   303     005A  3454               	retlw	84	;'T'
   304     005B  3444               	retlw	68	;'D'
   305     005C  340A               	retlw	10
   306     005D  3400               	retlw	0
   307     005E                     STR_30:
   308     005E  344E               	retlw	78	;'N'
   309     005F  3444               	retlw	68	;'D'
   310     0060  344F               	retlw	79	;'O'
   311     0061  340A               	retlw	10
   312     0062  3400               	retlw	0
   313     0063                     STR_14:
   314     0063  3443               	retlw	67	;'C'
   315     0064  340D               	retlw	13
   316     0065  340A               	retlw	10
   317     0066  3400               	retlw	0
   318     0067                     STR_1:
   319     0067  3425               	retlw	37	;'%'
   320     0068  3473               	retlw	115	;'s'
   321     0069  340A               	retlw	10
   322     006A  3400               	retlw	0
   323     006B                     STR_3:
   324     006B  3457               	retlw	87	;'W'
   325     006C  3454               	retlw	84	;'T'
   326     006D  3442               	retlw	66	;'B'
   327     006E  3400               	retlw	0
   328     006F                     STR_4:
   329     006F  344F               	retlw	79	;'O'
   330     0070  3453               	retlw	83	;'S'
   331     0071  3443               	retlw	67	;'C'
   332     0072  3400               	retlw	0
   333     0073                     STR_5:
   334     0073  344E               	retlw	78	;'N'
   335     0074  3454               	retlw	84	;'T'
   336     0075  3444               	retlw	68	;'D'
   337     0076  3400               	retlw	0
   338     0077                     STR_6:
   339     0077  344E               	retlw	78	;'N'
   340     0078  3444               	retlw	68	;'D'
   341     0079  344F               	retlw	79	;'O'
   342     007A  3400               	retlw	0
   343     007B                     STR_2:
   344     007B  3452               	retlw	82	;'R'
   345     007C  3450               	retlw	80	;'P'
   346     007D  3453               	retlw	83	;'S'
   347     007E  3400               	retlw	0
   348     007F                     STR_7:
   349     007F  342F               	retlw	47	;'/'
   350     0080  3400               	retlw	0
   351     0063                     
   352                           	psect	cinit
   353     07FA                     start_initialization:	
   354                           ; #config settings
   355                           
   356     07FA                     __initialization:
   357                           
   358                           ; Clear objects allocated to BANK0
   359     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   360     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   361     07FC  01E7               	clrf	__pbssBANK0& (0+127)
   362     07FD                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365     07FD                     __end_of__initialization:
   366     07FD  0183               	clrf	3
   367     07FE  118A  2ACA         	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	bssBANK0
   370     0067                     __pbssBANK0:
   371     0067                     strtok@sp:
   372     0067                     	ds	1
   373                           
   374                           	psect	cstackCOMMON
   375     0070                     __pcstackCOMMON:
   376     0070                     ?_isdigit:
   377     0070                     ?_initUART:	
   378                           ; 1 bit 
   379                           
   380     0070                     ??_initUART:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_gets:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ??_isdigit:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_cgets:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_cputs:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_strchr:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_putch:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ??_putch:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_getch:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ??_getch:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_getche:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_strcmp:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?_puts:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     ?___wmul:	
   423                           ; 2 bytes @ 0x0
   424                           
   425     0070                     ?___awdiv:	
   426                           ; 2 bytes @ 0x0
   427                           
   428     0070                     ?___lwdiv:	
   429                           ; 2 bytes @ 0x0
   430                           
   431     0070                     putch@byte:	
   432                           ; 2 bytes @ 0x0
   433                           
   434     0070                     _isdigit$637:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     strcmp@s2:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ___wmul@multiplier:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ___awdiv@divisor:	
   444                           ; 2 bytes @ 0x0
   445                           
   446     0070                     ___lwdiv@divisor:	
   447                           ; 2 bytes @ 0x0
   448                           
   449     0070                     strchr@chr:	
   450                           ; 2 bytes @ 0x0
   451                           
   452                           
   453                           ; 2 bytes @ 0x0
   454     0070                     	ds	1
   455     0071                     ??_cputs:
   456     0071                     ??_getche:	
   457                           ; 1 bytes @ 0x1
   458                           
   459     0071                     getche@c:	
   460                           ; 1 bytes @ 0x1
   461                           
   462     0071                     isdigit@c:	
   463                           ; 1 bytes @ 0x1
   464                           
   465     0071                     cputs@s:	
   466                           ; 1 bytes @ 0x1
   467                           
   468                           
   469                           ; 1 bytes @ 0x1
   470     0071                     	ds	1
   471     0072                     ??_strcmp:
   472     0072                     ??_puts:	
   473                           ; 1 bytes @ 0x2
   474                           
   475     0072                     ??_cgets:	
   476                           ; 1 bytes @ 0x2
   477                           
   478     0072                     ??_strchr:	
   479                           ; 1 bytes @ 0x2
   480                           
   481     0072                     puts@s:	
   482                           ; 1 bytes @ 0x2
   483                           
   484     0072                     strchr@ptr:	
   485                           ; 1 bytes @ 0x2
   486                           
   487     0072                     ___wmul@multiplicand:	
   488                           ; 1 bytes @ 0x2
   489                           
   490     0072                     ___awdiv@dividend:	
   491                           ; 2 bytes @ 0x2
   492                           
   493     0072                     ___lwdiv@dividend:	
   494                           ; 2 bytes @ 0x2
   495                           
   496                           
   497                           ; 2 bytes @ 0x2
   498     0072                     	ds	1
   499     0073                     ?_strspn:
   500     0073                     ?_strcspn:	
   501                           ; 2 bytes @ 0x3
   502                           
   503     0073                     strcspn@s2:	
   504                           ; 2 bytes @ 0x3
   505                           
   506     0073                     strspn@s2:	
   507                           ; 1 bytes @ 0x3
   508                           
   509                           
   510                           ; 1 bytes @ 0x3
   511     0073                     	ds	1
   512     0074                     ??___wmul:
   513     0074                     ??___awdiv:	
   514                           ; 1 bytes @ 0x4
   515                           
   516     0074                     ??___lwdiv:	
   517                           ; 1 bytes @ 0x4
   518                           
   519     0074                     ___awdiv@counter:	
   520                           ; 1 bytes @ 0x4
   521                           
   522     0074                     strcmp@r:	
   523                           ; 1 bytes @ 0x4
   524                           
   525     0074                     ___wmul@product:	
   526                           ; 1 bytes @ 0x4
   527                           
   528     0074                     ___lwdiv@quotient:	
   529                           ; 2 bytes @ 0x4
   530                           
   531     0074                     cgets@c:	
   532                           ; 2 bytes @ 0x4
   533                           
   534                           
   535                           ; 2 bytes @ 0x4
   536     0074                     	ds	1
   537     0075                     ??_strspn:
   538     0075                     ??_strcspn:	
   539                           ; 1 bytes @ 0x5
   540                           
   541     0075                     ___awdiv@sign:	
   542                           ; 1 bytes @ 0x5
   543                           
   544     0075                     strcmp@s1:	
   545                           ; 1 bytes @ 0x5
   546                           
   547                           
   548                           ; 1 bytes @ 0x5
   549     0075                     	ds	1
   550     0076                     ?_atoi:
   551     0076                     ___lwdiv@counter:	
   552                           ; 2 bytes @ 0x6
   553                           
   554     0076                     cgets@s:	
   555                           ; 1 bytes @ 0x6
   556                           
   557     0076                     ___awdiv@quotient:	
   558                           ; 1 bytes @ 0x6
   559                           
   560                           
   561                           ; 2 bytes @ 0x6
   562     0076                     	ds	1
   563     0077                     ?___lwmod:
   564     0077                     cgets@s1:	
   565                           ; 2 bytes @ 0x7
   566                           
   567     0077                     ___lwmod@divisor:	
   568                           ; 1 bytes @ 0x7
   569                           
   570     0077                     strcspn@i:	
   571                           ; 2 bytes @ 0x7
   572                           
   573     0077                     strspn@i:	
   574                           ; 2 bytes @ 0x7
   575                           
   576                           
   577                           ; 2 bytes @ 0x7
   578     0077                     	ds	1
   579     0078                     ??_gets:
   580     0078                     ??_atoi:	
   581                           ; 1 bytes @ 0x8
   582                           
   583     0078                     gets@s:	
   584                           ; 1 bytes @ 0x8
   585                           
   586                           
   587                           ; 1 bytes @ 0x8
   588     0078                     	ds	1
   589     0079                     strcspn@s1:
   590     0079                     strspn@s1:	
   591                           ; 1 bytes @ 0x9
   592                           
   593     0079                     ___lwmod@dividend:	
   594                           ; 1 bytes @ 0x9
   595                           
   596                           
   597                           ; 2 bytes @ 0x9
   598     0079                     	ds	1
   599     007A                     ?_strtok:
   600     007A                     atoi@sign:	
   601                           ; 1 bytes @ 0xA
   602                           
   603     007A                     strtok@s2:	
   604                           ; 1 bytes @ 0xA
   605                           
   606                           
   607                           ; 1 bytes @ 0xA
   608     007A                     	ds	1
   609     007B                     ??_strtok:
   610     007B                     ??___lwmod:	
   611                           ; 1 bytes @ 0xB
   612                           
   613     007B                     ___lwmod@counter:	
   614                           ; 1 bytes @ 0xB
   615                           
   616     007B                     strtok@s1:	
   617                           ; 1 bytes @ 0xB
   618                           
   619     007B                     atoi@a:	
   620                           ; 1 bytes @ 0xB
   621                           
   622                           
   623                           ; 2 bytes @ 0xB
   624     007B                     	ds	1
   625     007C                     ?_printf:
   626                           
   627                           ; 2 bytes @ 0xC
   628     007C                     	ds	1
   629     007D                     atoi@s:
   630                           
   631                           ; 1 bytes @ 0xD
   632     007D                     	ds	1
   633                           
   634                           	psect	cstackBANK0
   635     0020                     __pcstackBANK0:
   636     0020                     ??_printf:
   637                           
   638                           ; 1 bytes @ 0x0
   639     0020                     	ds	3
   640     0023                     printf@flag:
   641                           
   642                           ; 1 bytes @ 0x3
   643     0023                     	ds	1
   644     0024                     printf@prec:
   645                           
   646                           ; 1 bytes @ 0x4
   647     0024                     	ds	1
   648     0025                     printf@ap:
   649                           
   650                           ; 1 bytes @ 0x5
   651     0025                     	ds	1
   652     0026                     printf@cp:
   653                           
   654                           ; 2 bytes @ 0x6
   655     0026                     	ds	2
   656     0028                     printf@val:
   657                           
   658                           ; 2 bytes @ 0x8
   659     0028                     	ds	2
   660     002A                     printf@f:
   661                           
   662                           ; 1 bytes @ 0xA
   663     002A                     	ds	1
   664     002B                     printf@c:
   665                           
   666                           ; 1 bytes @ 0xB
   667     002B                     	ds	1
   668     002C                     ??_main:
   669                           
   670                           ; 1 bytes @ 0xC
   671     002C                     	ds	1
   672     002D                     main@tmp:
   673                           
   674                           ; 40 bytes @ 0xD
   675     002D                     	ds	40
   676     0055                     main@mx_spd:
   677                           
   678                           ; 2 bytes @ 0x35
   679     0055                     	ds	2
   680     0057                     main@set_spd:
   681                           
   682                           ; 2 bytes @ 0x37
   683     0057                     	ds	2
   684     0059                     main@cmd:
   685                           
   686                           ; 1 bytes @ 0x39
   687     0059                     	ds	1
   688     005A                     main@rcmd:
   689                           
   690                           ; 4 bytes @ 0x3A
   691     005A                     	ds	4
   692     005E                     main@ptr:
   693                           
   694                           ; 1 bytes @ 0x3E
   695     005E                     	ds	1
   696     005F                     main@k:
   697                           
   698                           ; 2 bytes @ 0x3F
   699     005F                     	ds	2
   700     0061                     main@dist:
   701                           
   702                           ; 2 bytes @ 0x41
   703     0061                     	ds	2
   704     0063                     main@intvl:
   705                           
   706                           ; 2 bytes @ 0x43
   707     0063                     	ds	2
   708     0065                     main@j:
   709                           
   710                           ; 2 bytes @ 0x45
   711     0065                     	ds	2
   712                           
   713                           	psect	maintext
   714     02CA                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 53 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  cmd             1   57[BANK0 ] enum E765
   725 ;;  tmp            40   13[BANK0 ] unsigned char [40]
   726 ;;  rcmd            4   58[BANK0 ] unsigned char [4]
   727 ;;  ln              4    0        unsigned char [4]
   728 ;;  j               2   69[BANK0 ] int 
   729 ;;  intvl           2   67[BANK0 ] int 
   730 ;;  dist            2   65[BANK0 ] int 
   731 ;;  k               2   63[BANK0 ] int 
   732 ;;  set_spd         2   55[BANK0 ] int 
   733 ;;  mx_spd          2   53[BANK0 ] int 
   734 ;;  cnt             2    0        int 
   735 ;;  ptr             1   62[BANK0 ] PTR unsigned char 
   736 ;;		 -> NULL(0), main@tmp(40), 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : B00/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   746 ;;      Params:         0       0       0       0
   747 ;;      Locals:         0      58       0       0
   748 ;;      Temps:          0       1       0       0
   749 ;;      Totals:         0      59       0       0
   750 ;;Total ram usage:       59 bytes
   751 ;; Hardware stack levels required when called: 4
   752 ;; This function calls:
   753 ;;		___awdiv
   754 ;;		___wmul
   755 ;;		_atoi
   756 ;;		_gets
   757 ;;		_initUART
   758 ;;		_printf
   759 ;;		_puts
   760 ;;		_strcmp
   761 ;;		_strtok
   762 ;; This function is called by:
   763 ;;		Startup code after reset
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     02CA                     _main:	
   768                           ;psect for function _main
   769                           
   770     02CA                     l1926:	
   771                           ;incstack = 0
   772                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   773                           
   774                           
   775                           ;main.c: 55: PORTA = 0x00;
   776     02CA  1283               	bcf	3,5	;RP0=0, select bank0
   777     02CB  1303               	bcf	3,6	;RP1=0, select bank0
   778     02CC  0185               	clrf	5	;volatile
   779                           
   780                           ;main.c: 56: PORTB = 0x00;
   781     02CD  0186               	clrf	6	;volatile
   782                           
   783                           ;main.c: 57: TRISA = 0b00000000;
   784     02CE  1683               	bsf	3,5	;RP0=1, select bank1
   785     02CF  1303               	bcf	3,6	;RP1=0, select bank1
   786     02D0  0185               	clrf	5	;volatile
   787     02D1                     l1928:
   788                           
   789                           ;main.c: 58: TRISB = 0b00000011;
   790     02D1  3003               	movlw	3
   791     02D2  0086               	movwf	6	;volatile
   792     02D3                     l1930:
   793                           
   794                           ;main.c: 59: CMCON = 0b00000111;
   795     02D3  3007               	movlw	7
   796     02D4  1283               	bcf	3,5	;RP0=0, select bank0
   797     02D5  1303               	bcf	3,6	;RP1=0, select bank0
   798     02D6  009F               	movwf	31	;volatile
   799     02D7                     l1932:
   800                           
   801                           ;main.c: 61: initUART();
   802     02D7  158A  2666  118A   	fcall	_initUART
   803     02DA                     l1934:
   804     02DA                     l1936:
   805     02DA                     l1938:
   806     02DA                     l1940:
   807                           
   808                           ;main.c: 67: int dist = 10;
   809     02DA  300A               	movlw	10
   810     02DB  1283               	bcf	3,5	;RP0=0, select bank0
   811     02DC  1303               	bcf	3,6	;RP1=0, select bank0
   812     02DD  00E1               	movwf	main@dist
   813     02DE  3000               	movlw	0
   814     02DF  00E2               	movwf	main@dist+1
   815     02E0                     l1942:
   816                           
   817                           ;main.c: 68: int intvl = 50;
   818     02E0  3032               	movlw	50
   819     02E1  00E3               	movwf	main@intvl
   820     02E2  3000               	movlw	0
   821     02E3  00E4               	movwf	main@intvl+1
   822     02E4                     l1944:
   823                           
   824                           ;main.c: 69: char rcmd[4];;main.c: 70: int mx_spd = 20250;
   825     02E4  301A               	movlw	26
   826     02E5  00D5               	movwf	main@mx_spd
   827     02E6  304F               	movlw	79
   828     02E7  00D6               	movwf	main@mx_spd+1
   829     02E8                     l1946:
   830                           
   831                           ;main.c: 77: rcmd[0] = 'Q';
   832     02E8  3051               	movlw	81
   833     02E9  1283               	bcf	3,5	;RP0=0, select bank0
   834     02EA  1303               	bcf	3,6	;RP1=0, select bank0
   835     02EB  00DA               	movwf	main@rcmd
   836     02EC                     l1948:
   837                           
   838                           ;main.c: 78: rcmd[1] = 'Q';
   839     02EC  3051               	movlw	81
   840     02ED  00DB               	movwf	main@rcmd+1
   841     02EE                     l1950:
   842                           
   843                           ;main.c: 79: rcmd[2] = 'Q';
   844     02EE  3051               	movlw	81
   845     02EF  00DC               	movwf	main@rcmd+2
   846     02F0                     l1952:
   847                           
   848                           ;main.c: 80: rcmd[3] = '\0';
   849     02F0  01DD               	clrf	main@rcmd+3
   850     02F1                     l1954:
   851                           
   852                           ;main.c: 82: tmp[0] = 'Q';
   853     02F1  3051               	movlw	81
   854     02F2  00AD               	movwf	main@tmp
   855     02F3                     l1956:
   856                           
   857                           ;main.c: 83: tmp[1] = 'Q';
   858     02F3  3051               	movlw	81
   859     02F4  00AE               	movwf	main@tmp+1
   860     02F5                     l1958:
   861                           
   862                           ;main.c: 84: tmp[2] = 'Q';
   863     02F5  3051               	movlw	81
   864     02F6  00AF               	movwf	main@tmp+2
   865     02F7                     l1960:
   866                           
   867                           ;main.c: 85: tmp[3] = '\0';
   868     02F7  01B0               	clrf	main@tmp+3
   869     02F8                     l1962:
   870                           
   871                           ;main.c: 87: gets(tmp);
   872     02F8  302D               	movlw	(low (main@tmp| 0))& (0+255)
   873     02F9  158A  263A  118A   	fcall	_gets
   874     02FC                     l1964:
   875                           
   876                           ;main.c: 88: printf("%s\n", tmp);
   877     02FC  302D               	movlw	(low (main@tmp| 0))& (0+255)
   878     02FD  00FC               	movwf	?_printf
   879     02FE  3056               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   880     02FF  118A  21DE  118A   	fcall	_printf
   881     0302                     l1966:
   882                           
   883                           ;main.c: 90: rcmd[0] = tmp[1];
   884     0302  1283               	bcf	3,5	;RP0=0, select bank0
   885     0303  1303               	bcf	3,6	;RP1=0, select bank0
   886     0304  082E               	movf	main@tmp+1,w
   887     0305  00DA               	movwf	main@rcmd
   888     0306                     l1968:
   889                           
   890                           ;main.c: 91: rcmd[1] = tmp[2];
   891     0306  082F               	movf	main@tmp+2,w
   892     0307  00DB               	movwf	main@rcmd+1
   893     0308                     l1970:
   894                           
   895                           ;main.c: 92: rcmd[2] = tmp[3];
   896     0308  0830               	movf	main@tmp+3,w
   897     0309  00DC               	movwf	main@rcmd+2
   898     030A                     l1972:
   899                           
   900                           ;main.c: 93: rcmd[3] = '\0';
   901     030A  01DD               	clrf	main@rcmd+3
   902     030B                     l1974:
   903                           
   904                           ;main.c: 96: enum command cmd;;main.c: 98: cmd = VE;
   905     030B  3005               	movlw	5
   906     030C  00D9               	movwf	main@cmd
   907     030D                     l1976:
   908                           
   909                           ;main.c: 100: if(strcmp(rcmd,"RPS") == 0) {
   910     030D  306A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   911     030E  00F0               	movwf	strcmp@s2
   912     030F  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   913     0310  158A  26B8  118A   	fcall	_strcmp
   914     0313  0870               	movf	?_strcmp,w
   915     0314  0471               	iorwf	?_strcmp+1,w
   916     0315  1D03               	btfss	3,2
   917     0316  2B18               	goto	u1651
   918     0317  2B19               	goto	u1650
   919     0318                     u1651:
   920     0318  2B1D               	goto	l1980
   921     0319                     u1650:
   922     0319                     l1978:
   923                           
   924                           ;main.c: 101: cmd = RPS;
   925     0319  1283               	bcf	3,5	;RP0=0, select bank0
   926     031A  1303               	bcf	3,6	;RP1=0, select bank0
   927     031B  01D9               	clrf	main@cmd
   928                           
   929                           ;main.c: 102: }else if(strcmp(rcmd,"WTB") == 0){
   930     031C  2B61               	goto	l1996
   931     031D                     l1980:
   932     031D  305A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   933     031E  00F0               	movwf	strcmp@s2
   934     031F  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   935     0320  158A  26B8  118A   	fcall	_strcmp
   936     0323  0870               	movf	?_strcmp,w
   937     0324  0471               	iorwf	?_strcmp+1,w
   938     0325  1D03               	btfss	3,2
   939     0326  2B28               	goto	u1661
   940     0327  2B29               	goto	u1660
   941     0328                     u1661:
   942     0328  2B2E               	goto	l1984
   943     0329                     u1660:
   944     0329                     l1982:
   945                           
   946                           ;main.c: 103: cmd = WTB;
   947     0329  1283               	bcf	3,5	;RP0=0, select bank0
   948     032A  1303               	bcf	3,6	;RP1=0, select bank0
   949     032B  01D9               	clrf	main@cmd
   950     032C  0AD9               	incf	main@cmd,f
   951                           
   952                           ;main.c: 104: }else if(strcmp(rcmd,"OSC") == 0){
   953     032D  2B61               	goto	l1996
   954     032E                     l1984:
   955     032E  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   956     032F  00F0               	movwf	strcmp@s2
   957     0330  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   958     0331  158A  26B8  118A   	fcall	_strcmp
   959     0334  0870               	movf	?_strcmp,w
   960     0335  0471               	iorwf	?_strcmp+1,w
   961     0336  1D03               	btfss	3,2
   962     0337  2B39               	goto	u1671
   963     0338  2B3A               	goto	u1670
   964     0339                     u1671:
   965     0339  2B3F               	goto	l1988
   966     033A                     u1670:
   967     033A                     l1986:
   968                           
   969                           ;main.c: 105: cmd = OSC;
   970     033A  3002               	movlw	2
   971     033B  1283               	bcf	3,5	;RP0=0, select bank0
   972     033C  1303               	bcf	3,6	;RP1=0, select bank0
   973     033D  00D9               	movwf	main@cmd
   974                           
   975                           ;main.c: 106: }else if(strcmp(rcmd,"NTD") == 0){
   976     033E  2B61               	goto	l1996
   977     033F                     l1988:
   978     033F  3062               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   979     0340  00F0               	movwf	strcmp@s2
   980     0341  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   981     0342  158A  26B8  118A   	fcall	_strcmp
   982     0345  0870               	movf	?_strcmp,w
   983     0346  0471               	iorwf	?_strcmp+1,w
   984     0347  1D03               	btfss	3,2
   985     0348  2B4A               	goto	u1681
   986     0349  2B4B               	goto	u1680
   987     034A                     u1681:
   988     034A  2B50               	goto	l1992
   989     034B                     u1680:
   990     034B                     l1990:
   991                           
   992                           ;main.c: 107: cmd = NTD;
   993     034B  3003               	movlw	3
   994     034C  1283               	bcf	3,5	;RP0=0, select bank0
   995     034D  1303               	bcf	3,6	;RP1=0, select bank0
   996     034E  00D9               	movwf	main@cmd
   997                           
   998                           ;main.c: 108: }else if(strcmp(rcmd,"NDO") == 0){
   999     034F  2B61               	goto	l1996
  1000     0350                     l1992:
  1001     0350  3066               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1002     0351  00F0               	movwf	strcmp@s2
  1003     0352  305A               	movlw	(low (main@rcmd| 0))& (0+255)
  1004     0353  158A  26B8  118A   	fcall	_strcmp
  1005     0356  0870               	movf	?_strcmp,w
  1006     0357  0471               	iorwf	?_strcmp+1,w
  1007     0358  1D03               	btfss	3,2
  1008     0359  2B5B               	goto	u1691
  1009     035A  2B5C               	goto	u1690
  1010     035B                     u1691:
  1011     035B  2B61               	goto	l41
  1012     035C                     u1690:
  1013     035C                     l1994:
  1014                           
  1015                           ;main.c: 109: cmd = NDO;
  1016     035C  3004               	movlw	4
  1017     035D  1283               	bcf	3,5	;RP0=0, select bank0
  1018     035E  1303               	bcf	3,6	;RP1=0, select bank0
  1019     035F  00D9               	movwf	main@cmd
  1020     0360  2B61               	goto	l1996
  1021     0361                     l41:
  1022     0361                     l1996:
  1023                           
  1024                           ;main.c: 110: };main.c: 111: ptr = strtok(tmp, "/");
  1025     0361  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1026     0362  00FA               	movwf	strtok@s2
  1027     0363  302D               	movlw	(low (main@tmp| 0))& (0+255)
  1028     0364  158A  27BA  118A   	fcall	_strtok
  1029     0367  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0368  1303               	bcf	3,6	;RP1=0, select bank0
  1031     0369  00DE               	movwf	main@ptr
  1032                           
  1033                           ;main.c: 114: switch(cmd){
  1034     036A  2FD4               	goto	l2172
  1035     036B                     l1998:
  1036                           
  1037                           ;main.c: 117: ptr = strtok((0), "/");
  1038     036B  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1039     036C  00FA               	movwf	strtok@s2
  1040     036D  3000               	movlw	0
  1041     036E  158A  27BA  118A   	fcall	_strtok
  1042     0371  1283               	bcf	3,5	;RP0=0, select bank0
  1043     0372  1303               	bcf	3,6	;RP1=0, select bank0
  1044     0373  00DE               	movwf	main@ptr
  1045                           
  1046                           ;main.c: 118: ptr = strtok((0), "/");
  1047     0374  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1048     0375  00FA               	movwf	strtok@s2
  1049     0376  3000               	movlw	0
  1050     0377  158A  27BA  118A   	fcall	_strtok
  1051     037A  1283               	bcf	3,5	;RP0=0, select bank0
  1052     037B  1303               	bcf	3,6	;RP1=0, select bank0
  1053     037C  00DE               	movwf	main@ptr
  1054                           
  1055                           ;main.c: 119: ptr = strtok((0), "/");
  1056     037D  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1057     037E  00FA               	movwf	strtok@s2
  1058     037F  3000               	movlw	0
  1059     0380  158A  27BA  118A   	fcall	_strtok
  1060     0383  1283               	bcf	3,5	;RP0=0, select bank0
  1061     0384  1303               	bcf	3,6	;RP1=0, select bank0
  1062     0385  00DE               	movwf	main@ptr
  1063                           
  1064                           ;main.c: 120: ptr = strtok((0), "/");
  1065     0386  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1066     0387  00FA               	movwf	strtok@s2
  1067     0388  3000               	movlw	0
  1068     0389  158A  27BA  118A   	fcall	_strtok
  1069     038C  1283               	bcf	3,5	;RP0=0, select bank0
  1070     038D  1303               	bcf	3,6	;RP1=0, select bank0
  1071     038E  00DE               	movwf	main@ptr
  1072     038F                     l2000:
  1073                           
  1074                           ;main.c: 121: if(ptr != (0)) {
  1075     038F  085E               	movf	main@ptr,w
  1076     0390  1903               	btfsc	3,2
  1077     0391  2B93               	goto	u1701
  1078     0392  2B94               	goto	u1700
  1079     0393                     u1701:
  1080     0393  2B9E               	goto	l49
  1081     0394                     u1700:
  1082     0394                     l2002:
  1083                           
  1084                           ;main.c: 122: dist = atoi(ptr);
  1085     0394  085E               	movf	main@ptr,w
  1086     0395  118A  2167  118A   	fcall	_atoi
  1087     0398  0877               	movf	?_atoi+1,w
  1088     0399  1283               	bcf	3,5	;RP0=0, select bank0
  1089     039A  1303               	bcf	3,6	;RP1=0, select bank0
  1090     039B  00E2               	movwf	main@dist+1
  1091     039C  0876               	movf	?_atoi,w
  1092     039D  00E1               	movwf	main@dist
  1093     039E                     l49:
  1094                           
  1095                           ;main.c: 123: };main.c: 124: printf("dist = %d\n", dist);
  1096     039E  0862               	movf	main@dist+1,w
  1097     039F  00FD               	movwf	?_printf+1
  1098     03A0  0861               	movf	main@dist,w
  1099     03A1  00FC               	movwf	?_printf
  1100     03A2  300B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1101     03A3  118A  21DE  118A   	fcall	_printf
  1102     03A6                     l2004:
  1103                           
  1104                           ;main.c: 126: if (dist > 0){
  1105     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1106     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1107     03A8  0862               	movf	main@dist+1,w
  1108     03A9  3A80               	xorlw	128
  1109     03AA  00FF               	movwf	btemp+1
  1110     03AB  3080               	movlw	128
  1111     03AC  027F               	subwf	btemp+1,w
  1112     03AD  1D03               	skipz
  1113     03AE  2BB1               	goto	u1715
  1114     03AF  3001               	movlw	1
  1115     03B0  0261               	subwf	main@dist,w
  1116     03B1                     u1715:
  1117     03B1  1C03               	skipc
  1118     03B2  2BB4               	goto	u1711
  1119     03B3  2BB5               	goto	u1710
  1120     03B4                     u1711:
  1121     03B4  2C0B               	goto	l2018
  1122     03B5                     u1710:
  1123     03B5                     l2006:
  1124                           
  1125                           ;main.c: 127: for(k = 0 ; k < dist ; k++){
  1126     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1127     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1128     03B7  01DF               	clrf	main@k
  1129     03B8  01E0               	clrf	main@k+1
  1130     03B9  2BFC               	goto	l51
  1131     03BA                     l52:
  1132                           
  1133                           ;main.c: 128: RA0 = 1;
  1134     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1135     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1136     03BC  1405               	bsf	5,0	;volatile
  1137     03BD                     l2008:
  1138                           
  1139                           ;main.c: 129: for(j = 0 ; j < intvl ; j++){
  1140     03BD  01E5               	clrf	main@j
  1141     03BE  01E6               	clrf	main@j+1
  1142     03BF  2BC9               	goto	l53
  1143     03C0                     l54:
  1144                           
  1145                           ;main.c: 130: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1146     03C0  0000               	nop
  1147     03C1                     l2010:
  1148     03C1  3001               	movlw	1
  1149     03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1150     03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1151     03C4  07E5               	addwf	main@j,f
  1152     03C5  1803               	skipnc
  1153     03C6  0AE6               	incf	main@j+1,f
  1154     03C7  3000               	movlw	0
  1155     03C8  07E6               	addwf	main@j+1,f
  1156     03C9                     l53:
  1157     03C9  0866               	movf	main@j+1,w
  1158     03CA  3A80               	xorlw	128
  1159     03CB  00AC               	movwf	??_main
  1160     03CC  0864               	movf	main@intvl+1,w
  1161     03CD  3A80               	xorlw	128
  1162     03CE  022C               	subwf	??_main,w
  1163     03CF  1D03               	skipz
  1164     03D0  2BD3               	goto	u1725
  1165     03D1  0863               	movf	main@intvl,w
  1166     03D2  0265               	subwf	main@j,w
  1167     03D3                     u1725:
  1168     03D3  1C03               	skipc
  1169     03D4  2BD6               	goto	u1721
  1170     03D5  2BD7               	goto	u1720
  1171     03D6                     u1721:
  1172     03D6  2BC0               	goto	l54
  1173     03D7                     u1720:
  1174     03D7                     l55:
  1175                           
  1176                           ;main.c: 131: };main.c: 132: RA0 = 0;
  1177     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1178     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1179     03D9  1005               	bcf	5,0	;volatile
  1180     03DA                     l2012:
  1181                           
  1182                           ;main.c: 133: for(j = 0 ; j < intvl ; j++){
  1183     03DA  01E5               	clrf	main@j
  1184     03DB  01E6               	clrf	main@j+1
  1185     03DC  2BE6               	goto	l56
  1186     03DD                     l57:
  1187                           
  1188                           ;main.c: 134: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1189     03DD  0000               	nop
  1190     03DE                     l2014:
  1191     03DE  3001               	movlw	1
  1192     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1193     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1194     03E1  07E5               	addwf	main@j,f
  1195     03E2  1803               	skipnc
  1196     03E3  0AE6               	incf	main@j+1,f
  1197     03E4  3000               	movlw	0
  1198     03E5  07E6               	addwf	main@j+1,f
  1199     03E6                     l56:
  1200     03E6  0866               	movf	main@j+1,w
  1201     03E7  3A80               	xorlw	128
  1202     03E8  00AC               	movwf	??_main
  1203     03E9  0864               	movf	main@intvl+1,w
  1204     03EA  3A80               	xorlw	128
  1205     03EB  022C               	subwf	??_main,w
  1206     03EC  1D03               	skipz
  1207     03ED  2BF0               	goto	u1735
  1208     03EE  0863               	movf	main@intvl,w
  1209     03EF  0265               	subwf	main@j,w
  1210     03F0                     u1735:
  1211     03F0  1C03               	skipc
  1212     03F1  2BF3               	goto	u1731
  1213     03F2  2BF4               	goto	u1730
  1214     03F3                     u1731:
  1215     03F3  2BDD               	goto	l57
  1216     03F4                     u1730:
  1217     03F4                     l2016:
  1218     03F4  3001               	movlw	1
  1219     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1220     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1221     03F7  07DF               	addwf	main@k,f
  1222     03F8  1803               	skipnc
  1223     03F9  0AE0               	incf	main@k+1,f
  1224     03FA  3000               	movlw	0
  1225     03FB  07E0               	addwf	main@k+1,f
  1226     03FC                     l51:
  1227     03FC  0860               	movf	main@k+1,w
  1228     03FD  3A80               	xorlw	128
  1229     03FE  00AC               	movwf	??_main
  1230     03FF  0862               	movf	main@dist+1,w
  1231     0400  3A80               	xorlw	128
  1232     0401  022C               	subwf	??_main,w
  1233     0402  1D03               	skipz
  1234     0403  2C06               	goto	u1745
  1235     0404  0861               	movf	main@dist,w
  1236     0405  025F               	subwf	main@k,w
  1237     0406                     u1745:
  1238     0406  1C03               	skipc
  1239     0407  2C09               	goto	u1741
  1240     0408  2C0A               	goto	u1740
  1241     0409                     u1741:
  1242     0409  2BBA               	goto	l52
  1243     040A                     u1740:
  1244     040A  2C71               	goto	l2032
  1245     040B                     l2018:
  1246                           
  1247                           ;main.c: 138: dist *= -1;
  1248     040B  30FF               	movlw	255
  1249     040C  00F0               	movwf	___wmul@multiplier
  1250     040D  30FF               	movlw	255
  1251     040E  00F1               	movwf	___wmul@multiplier+1
  1252     040F  1283               	bcf	3,5	;RP0=0, select bank0
  1253     0410  1303               	bcf	3,6	;RP1=0, select bank0
  1254     0411  0862               	movf	main@dist+1,w
  1255     0412  00F3               	movwf	___wmul@multiplicand+1
  1256     0413  0861               	movf	main@dist,w
  1257     0414  00F2               	movwf	___wmul@multiplicand
  1258     0415  118A  2084  118A   	fcall	___wmul
  1259     0418  0871               	movf	?___wmul+1,w
  1260     0419  1283               	bcf	3,5	;RP0=0, select bank0
  1261     041A  1303               	bcf	3,6	;RP1=0, select bank0
  1262     041B  00E2               	movwf	main@dist+1
  1263     041C  0870               	movf	?___wmul,w
  1264     041D  00E1               	movwf	main@dist
  1265     041E                     l2020:
  1266                           
  1267                           ;main.c: 139: for(k = 0 ; k < dist ; k++){
  1268     041E  01DF               	clrf	main@k
  1269     041F  01E0               	clrf	main@k+1
  1270     0420  2C63               	goto	l61
  1271     0421                     l62:
  1272                           
  1273                           ;main.c: 140: RA1 = 1;
  1274     0421  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0422  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0423  1485               	bsf	5,1	;volatile
  1277     0424                     l2022:
  1278                           
  1279                           ;main.c: 141: for(j = 0 ; j < intvl ; j++){
  1280     0424  01E5               	clrf	main@j
  1281     0425  01E6               	clrf	main@j+1
  1282     0426  2C30               	goto	l63
  1283     0427                     l64:
  1284                           
  1285                           ;main.c: 142: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1286     0427  0000               	nop
  1287     0428                     l2024:
  1288     0428  3001               	movlw	1
  1289     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1290     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1291     042B  07E5               	addwf	main@j,f
  1292     042C  1803               	skipnc
  1293     042D  0AE6               	incf	main@j+1,f
  1294     042E  3000               	movlw	0
  1295     042F  07E6               	addwf	main@j+1,f
  1296     0430                     l63:
  1297     0430  0866               	movf	main@j+1,w
  1298     0431  3A80               	xorlw	128
  1299     0432  00AC               	movwf	??_main
  1300     0433  0864               	movf	main@intvl+1,w
  1301     0434  3A80               	xorlw	128
  1302     0435  022C               	subwf	??_main,w
  1303     0436  1D03               	skipz
  1304     0437  2C3A               	goto	u1755
  1305     0438  0863               	movf	main@intvl,w
  1306     0439  0265               	subwf	main@j,w
  1307     043A                     u1755:
  1308     043A  1C03               	skipc
  1309     043B  2C3D               	goto	u1751
  1310     043C  2C3E               	goto	u1750
  1311     043D                     u1751:
  1312     043D  2C27               	goto	l64
  1313     043E                     u1750:
  1314     043E                     l65:
  1315                           
  1316                           ;main.c: 143: };main.c: 144: RA1 = 0;
  1317     043E  1283               	bcf	3,5	;RP0=0, select bank0
  1318     043F  1303               	bcf	3,6	;RP1=0, select bank0
  1319     0440  1085               	bcf	5,1	;volatile
  1320     0441                     l2026:
  1321                           
  1322                           ;main.c: 145: for(j = 0 ; j < intvl ; j++){
  1323     0441  01E5               	clrf	main@j
  1324     0442  01E6               	clrf	main@j+1
  1325     0443  2C4D               	goto	l66
  1326     0444                     l67:
  1327                           
  1328                           ;main.c: 146: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1329     0444  0000               	nop
  1330     0445                     l2028:
  1331     0445  3001               	movlw	1
  1332     0446  1283               	bcf	3,5	;RP0=0, select bank0
  1333     0447  1303               	bcf	3,6	;RP1=0, select bank0
  1334     0448  07E5               	addwf	main@j,f
  1335     0449  1803               	skipnc
  1336     044A  0AE6               	incf	main@j+1,f
  1337     044B  3000               	movlw	0
  1338     044C  07E6               	addwf	main@j+1,f
  1339     044D                     l66:
  1340     044D  0866               	movf	main@j+1,w
  1341     044E  3A80               	xorlw	128
  1342     044F  00AC               	movwf	??_main
  1343     0450  0864               	movf	main@intvl+1,w
  1344     0451  3A80               	xorlw	128
  1345     0452  022C               	subwf	??_main,w
  1346     0453  1D03               	skipz
  1347     0454  2C57               	goto	u1765
  1348     0455  0863               	movf	main@intvl,w
  1349     0456  0265               	subwf	main@j,w
  1350     0457                     u1765:
  1351     0457  1C03               	skipc
  1352     0458  2C5A               	goto	u1761
  1353     0459  2C5B               	goto	u1760
  1354     045A                     u1761:
  1355     045A  2C44               	goto	l67
  1356     045B                     u1760:
  1357     045B                     l2030:
  1358     045B  3001               	movlw	1
  1359     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1360     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1361     045E  07DF               	addwf	main@k,f
  1362     045F  1803               	skipnc
  1363     0460  0AE0               	incf	main@k+1,f
  1364     0461  3000               	movlw	0
  1365     0462  07E0               	addwf	main@k+1,f
  1366     0463                     l61:
  1367     0463  0860               	movf	main@k+1,w
  1368     0464  3A80               	xorlw	128
  1369     0465  00AC               	movwf	??_main
  1370     0466  0862               	movf	main@dist+1,w
  1371     0467  3A80               	xorlw	128
  1372     0468  022C               	subwf	??_main,w
  1373     0469  1D03               	skipz
  1374     046A  2C6D               	goto	u1775
  1375     046B  0861               	movf	main@dist,w
  1376     046C  025F               	subwf	main@k,w
  1377     046D                     u1775:
  1378     046D  1C03               	skipc
  1379     046E  2C70               	goto	u1771
  1380     046F  2C71               	goto	u1770
  1381     0470                     u1771:
  1382     0470  2C21               	goto	l62
  1383     0471                     u1770:
  1384     0471                     l2032:
  1385                           
  1386                           ;main.c: 147: };main.c: 148: };main.c: 149: };main.c: 151: puts("C");
  1387     0471  3060               	movlw	(low (((STR_4+2)-__stringbase)| (0+32768)))& (0+255)
  1388     0472  158A  265C  118A   	fcall	_puts
  1389                           
  1390                           ;main.c: 152: printf("C\r\n");
  1391     0475  3052               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1392     0476  118A  21DE  118A   	fcall	_printf
  1393                           
  1394                           ;main.c: 153: break;
  1395     0479  2FE8               	goto	l70
  1396     047A                     l2034:
  1397                           
  1398                           ;main.c: 156: ptr = strtok((0), "/");
  1399     047A  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1400     047B  00FA               	movwf	strtok@s2
  1401     047C  3000               	movlw	0
  1402     047D  158A  27BA  118A   	fcall	_strtok
  1403     0480  1283               	bcf	3,5	;RP0=0, select bank0
  1404     0481  1303               	bcf	3,6	;RP1=0, select bank0
  1405     0482  00DE               	movwf	main@ptr
  1406                           
  1407                           ;main.c: 157: ptr = strtok((0), "/");
  1408     0483  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1409     0484  00FA               	movwf	strtok@s2
  1410     0485  3000               	movlw	0
  1411     0486  158A  27BA  118A   	fcall	_strtok
  1412     0489  1283               	bcf	3,5	;RP0=0, select bank0
  1413     048A  1303               	bcf	3,6	;RP1=0, select bank0
  1414     048B  00DE               	movwf	main@ptr
  1415                           
  1416                           ;main.c: 158: ptr = strtok((0), "/");
  1417     048C  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1418     048D  00FA               	movwf	strtok@s2
  1419     048E  3000               	movlw	0
  1420     048F  158A  27BA  118A   	fcall	_strtok
  1421     0492  1283               	bcf	3,5	;RP0=0, select bank0
  1422     0493  1303               	bcf	3,6	;RP1=0, select bank0
  1423     0494  00DE               	movwf	main@ptr
  1424     0495                     l2036:
  1425                           
  1426                           ;main.c: 159: if(ptr != (0)) {
  1427     0495  085E               	movf	main@ptr,w
  1428     0496  1903               	btfsc	3,2
  1429     0497  2C99               	goto	u1781
  1430     0498  2C9A               	goto	u1780
  1431     0499                     u1781:
  1432     0499  2CA4               	goto	l2040
  1433     049A                     u1780:
  1434     049A                     l2038:
  1435                           
  1436                           ;main.c: 160: set_spd = atoi(ptr);
  1437     049A  085E               	movf	main@ptr,w
  1438     049B  118A  2167  118A   	fcall	_atoi
  1439     049E  0877               	movf	?_atoi+1,w
  1440     049F  1283               	bcf	3,5	;RP0=0, select bank0
  1441     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1442     04A1  00D8               	movwf	main@set_spd+1
  1443     04A2  0876               	movf	?_atoi,w
  1444     04A3  00D7               	movwf	main@set_spd
  1445     04A4                     l2040:
  1446                           
  1447                           ;main.c: 161: };main.c: 162: intvl = mx_spd / set_spd;
  1448     04A4  0858               	movf	main@set_spd+1,w
  1449     04A5  00F1               	movwf	___awdiv@divisor+1
  1450     04A6  0857               	movf	main@set_spd,w
  1451     04A7  00F0               	movwf	___awdiv@divisor
  1452     04A8  0856               	movf	main@mx_spd+1,w
  1453     04A9  00F3               	movwf	___awdiv@dividend+1
  1454     04AA  0855               	movf	main@mx_spd,w
  1455     04AB  00F2               	movwf	___awdiv@dividend
  1456     04AC  118A  2100  118A   	fcall	___awdiv
  1457     04AF  0871               	movf	?___awdiv+1,w
  1458     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1459     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1460     04B2  00E4               	movwf	main@intvl+1
  1461     04B3  0870               	movf	?___awdiv,w
  1462     04B4  00E3               	movwf	main@intvl
  1463     04B5                     l2042:
  1464                           
  1465                           ;main.c: 163: if (intvl == 0){
  1466     04B5  0863               	movf	main@intvl,w
  1467     04B6  0464               	iorwf	main@intvl+1,w
  1468     04B7  1D03               	btfss	3,2
  1469     04B8  2CBA               	goto	u1791
  1470     04B9  2CBB               	goto	u1790
  1471     04BA                     u1791:
  1472     04BA  2FE8               	goto	l70
  1473     04BB                     u1790:
  1474     04BB                     l2044:
  1475                           
  1476                           ;main.c: 164: intvl = 1;
  1477     04BB  3001               	movlw	1
  1478     04BC  00E3               	movwf	main@intvl
  1479     04BD  3000               	movlw	0
  1480     04BE  00E4               	movwf	main@intvl+1
  1481     04BF  2FE8               	goto	l70
  1482     04C0                     l2046:
  1483                           
  1484                           ;main.c: 169: ptr = strtok((0), "/");
  1485     04C0  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1486     04C1  00FA               	movwf	strtok@s2
  1487     04C2  3000               	movlw	0
  1488     04C3  158A  27BA  118A   	fcall	_strtok
  1489     04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1490     04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1491     04C8  00DE               	movwf	main@ptr
  1492                           
  1493                           ;main.c: 170: ptr = strtok((0), "/");
  1494     04C9  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1495     04CA  00FA               	movwf	strtok@s2
  1496     04CB  3000               	movlw	0
  1497     04CC  158A  27BA  118A   	fcall	_strtok
  1498     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1499     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1500     04D1  00DE               	movwf	main@ptr
  1501                           
  1502                           ;main.c: 171: ptr = strtok((0), "/");
  1503     04D2  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1504     04D3  00FA               	movwf	strtok@s2
  1505     04D4  3000               	movlw	0
  1506     04D5  158A  27BA  118A   	fcall	_strtok
  1507     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1508     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1509     04DA  00DE               	movwf	main@ptr
  1510                           
  1511                           ;main.c: 172: ptr = strtok((0), "/");
  1512     04DB  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1513     04DC  00FA               	movwf	strtok@s2
  1514     04DD  3000               	movlw	0
  1515     04DE  158A  27BA  118A   	fcall	_strtok
  1516     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1517     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1518     04E3  00DE               	movwf	main@ptr
  1519                           
  1520                           ;main.c: 173: ptr = strtok((0), "/");
  1521     04E4  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1522     04E5  00FA               	movwf	strtok@s2
  1523     04E6  3000               	movlw	0
  1524     04E7  158A  27BA  118A   	fcall	_strtok
  1525     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1526     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1527     04EC  00DE               	movwf	main@ptr
  1528     04ED                     l2048:
  1529                           
  1530                           ;main.c: 174: if(ptr != (0)) {
  1531     04ED  085E               	movf	main@ptr,w
  1532     04EE  1903               	btfsc	3,2
  1533     04EF  2CF1               	goto	u1801
  1534     04F0  2CF2               	goto	u1800
  1535     04F1                     u1801:
  1536     04F1  2CFC               	goto	l75
  1537     04F2                     u1800:
  1538     04F2                     l2050:
  1539                           
  1540                           ;main.c: 175: dist = atoi(ptr);
  1541     04F2  085E               	movf	main@ptr,w
  1542     04F3  118A  2167  118A   	fcall	_atoi
  1543     04F6  0877               	movf	?_atoi+1,w
  1544     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1545     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1546     04F9  00E2               	movwf	main@dist+1
  1547     04FA  0876               	movf	?_atoi,w
  1548     04FB  00E1               	movwf	main@dist
  1549     04FC                     l75:
  1550                           
  1551                           ;main.c: 176: };main.c: 177: printf("dist = %d\n", dist);
  1552     04FC  0862               	movf	main@dist+1,w
  1553     04FD  00FD               	movwf	?_printf+1
  1554     04FE  0861               	movf	main@dist,w
  1555     04FF  00FC               	movwf	?_printf
  1556     0500  300B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1557     0501  118A  21DE  118A   	fcall	_printf
  1558     0504                     l2052:
  1559                           
  1560                           ;main.c: 179: if (dist > 0){
  1561     0504  1283               	bcf	3,5	;RP0=0, select bank0
  1562     0505  1303               	bcf	3,6	;RP1=0, select bank0
  1563     0506  0862               	movf	main@dist+1,w
  1564     0507  3A80               	xorlw	128
  1565     0508  00FF               	movwf	btemp+1
  1566     0509  3080               	movlw	128
  1567     050A  027F               	subwf	btemp+1,w
  1568     050B  1D03               	skipz
  1569     050C  2D0F               	goto	u1815
  1570     050D  3001               	movlw	1
  1571     050E  0261               	subwf	main@dist,w
  1572     050F                     u1815:
  1573     050F  1C03               	skipc
  1574     0510  2D12               	goto	u1811
  1575     0511  2D13               	goto	u1810
  1576     0512                     u1811:
  1577     0512  2DBE               	goto	l2078
  1578     0513                     u1810:
  1579     0513                     l2054:
  1580                           
  1581                           ;main.c: 180: for(k = 0 ; k < dist ; k++){
  1582     0513  1283               	bcf	3,5	;RP0=0, select bank0
  1583     0514  1303               	bcf	3,6	;RP1=0, select bank0
  1584     0515  01DF               	clrf	main@k
  1585     0516  01E0               	clrf	main@k+1
  1586     0517  2D5A               	goto	l77
  1587     0518                     l78:
  1588                           
  1589                           ;main.c: 181: RA0 = 1;
  1590     0518  1283               	bcf	3,5	;RP0=0, select bank0
  1591     0519  1303               	bcf	3,6	;RP1=0, select bank0
  1592     051A  1405               	bsf	5,0	;volatile
  1593     051B                     l2056:
  1594                           
  1595                           ;main.c: 182: for(j = 0 ; j < intvl ; j++){
  1596     051B  01E5               	clrf	main@j
  1597     051C  01E6               	clrf	main@j+1
  1598     051D  2D27               	goto	l79
  1599     051E                     l80:
  1600                           
  1601                           ;main.c: 183: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1602     051E  0000               	nop
  1603     051F                     l2058:
  1604     051F  3001               	movlw	1
  1605     0520  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0521  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0522  07E5               	addwf	main@j,f
  1608     0523  1803               	skipnc
  1609     0524  0AE6               	incf	main@j+1,f
  1610     0525  3000               	movlw	0
  1611     0526  07E6               	addwf	main@j+1,f
  1612     0527                     l79:
  1613     0527  0866               	movf	main@j+1,w
  1614     0528  3A80               	xorlw	128
  1615     0529  00AC               	movwf	??_main
  1616     052A  0864               	movf	main@intvl+1,w
  1617     052B  3A80               	xorlw	128
  1618     052C  022C               	subwf	??_main,w
  1619     052D  1D03               	skipz
  1620     052E  2D31               	goto	u1825
  1621     052F  0863               	movf	main@intvl,w
  1622     0530  0265               	subwf	main@j,w
  1623     0531                     u1825:
  1624     0531  1C03               	skipc
  1625     0532  2D34               	goto	u1821
  1626     0533  2D35               	goto	u1820
  1627     0534                     u1821:
  1628     0534  2D1E               	goto	l80
  1629     0535                     u1820:
  1630     0535                     l81:
  1631                           
  1632                           ;main.c: 184: };main.c: 185: RA0 = 0;
  1633     0535  1283               	bcf	3,5	;RP0=0, select bank0
  1634     0536  1303               	bcf	3,6	;RP1=0, select bank0
  1635     0537  1005               	bcf	5,0	;volatile
  1636     0538                     l2060:
  1637                           
  1638                           ;main.c: 186: for(j = 0 ; j < intvl ; j++){
  1639     0538  01E5               	clrf	main@j
  1640     0539  01E6               	clrf	main@j+1
  1641     053A  2D44               	goto	l82
  1642     053B                     l83:
  1643                           
  1644                           ;main.c: 187: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1645     053B  0000               	nop
  1646     053C                     l2062:
  1647     053C  3001               	movlw	1
  1648     053D  1283               	bcf	3,5	;RP0=0, select bank0
  1649     053E  1303               	bcf	3,6	;RP1=0, select bank0
  1650     053F  07E5               	addwf	main@j,f
  1651     0540  1803               	skipnc
  1652     0541  0AE6               	incf	main@j+1,f
  1653     0542  3000               	movlw	0
  1654     0543  07E6               	addwf	main@j+1,f
  1655     0544                     l82:
  1656     0544  0866               	movf	main@j+1,w
  1657     0545  3A80               	xorlw	128
  1658     0546  00AC               	movwf	??_main
  1659     0547  0864               	movf	main@intvl+1,w
  1660     0548  3A80               	xorlw	128
  1661     0549  022C               	subwf	??_main,w
  1662     054A  1D03               	skipz
  1663     054B  2D4E               	goto	u1835
  1664     054C  0863               	movf	main@intvl,w
  1665     054D  0265               	subwf	main@j,w
  1666     054E                     u1835:
  1667     054E  1C03               	skipc
  1668     054F  2D51               	goto	u1831
  1669     0550  2D52               	goto	u1830
  1670     0551                     u1831:
  1671     0551  2D3B               	goto	l83
  1672     0552                     u1830:
  1673     0552                     l2064:
  1674     0552  3001               	movlw	1
  1675     0553  1283               	bcf	3,5	;RP0=0, select bank0
  1676     0554  1303               	bcf	3,6	;RP1=0, select bank0
  1677     0555  07DF               	addwf	main@k,f
  1678     0556  1803               	skipnc
  1679     0557  0AE0               	incf	main@k+1,f
  1680     0558  3000               	movlw	0
  1681     0559  07E0               	addwf	main@k+1,f
  1682     055A                     l77:
  1683     055A  0860               	movf	main@k+1,w
  1684     055B  3A80               	xorlw	128
  1685     055C  00AC               	movwf	??_main
  1686     055D  0862               	movf	main@dist+1,w
  1687     055E  3A80               	xorlw	128
  1688     055F  022C               	subwf	??_main,w
  1689     0560  1D03               	skipz
  1690     0561  2D64               	goto	u1845
  1691     0562  0861               	movf	main@dist,w
  1692     0563  025F               	subwf	main@k,w
  1693     0564                     u1845:
  1694     0564  1C03               	skipc
  1695     0565  2D67               	goto	u1841
  1696     0566  2D68               	goto	u1840
  1697     0567                     u1841:
  1698     0567  2D18               	goto	l78
  1699     0568                     u1840:
  1700     0568                     l2066:
  1701                           
  1702                           ;main.c: 188: };main.c: 189: };main.c: 190: for(k = 0 ; k < dist ; k++){
  1703     0568  1283               	bcf	3,5	;RP0=0, select bank0
  1704     0569  1303               	bcf	3,6	;RP1=0, select bank0
  1705     056A  01DF               	clrf	main@k
  1706     056B  01E0               	clrf	main@k+1
  1707     056C  2DAF               	goto	l86
  1708     056D                     l87:
  1709                           
  1710                           ;main.c: 191: RA1 = 1;
  1711     056D  1283               	bcf	3,5	;RP0=0, select bank0
  1712     056E  1303               	bcf	3,6	;RP1=0, select bank0
  1713     056F  1485               	bsf	5,1	;volatile
  1714     0570                     l2068:
  1715                           
  1716                           ;main.c: 192: for(j = 0 ; j < intvl ; j++){
  1717     0570  01E5               	clrf	main@j
  1718     0571  01E6               	clrf	main@j+1
  1719     0572  2D7C               	goto	l88
  1720     0573                     l89:
  1721                           
  1722                           ;main.c: 193: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1723     0573  0000               	nop
  1724     0574                     l2070:
  1725     0574  3001               	movlw	1
  1726     0575  1283               	bcf	3,5	;RP0=0, select bank0
  1727     0576  1303               	bcf	3,6	;RP1=0, select bank0
  1728     0577  07E5               	addwf	main@j,f
  1729     0578  1803               	skipnc
  1730     0579  0AE6               	incf	main@j+1,f
  1731     057A  3000               	movlw	0
  1732     057B  07E6               	addwf	main@j+1,f
  1733     057C                     l88:
  1734     057C  0866               	movf	main@j+1,w
  1735     057D  3A80               	xorlw	128
  1736     057E  00AC               	movwf	??_main
  1737     057F  0864               	movf	main@intvl+1,w
  1738     0580  3A80               	xorlw	128
  1739     0581  022C               	subwf	??_main,w
  1740     0582  1D03               	skipz
  1741     0583  2D86               	goto	u1855
  1742     0584  0863               	movf	main@intvl,w
  1743     0585  0265               	subwf	main@j,w
  1744     0586                     u1855:
  1745     0586  1C03               	skipc
  1746     0587  2D89               	goto	u1851
  1747     0588  2D8A               	goto	u1850
  1748     0589                     u1851:
  1749     0589  2D73               	goto	l89
  1750     058A                     u1850:
  1751     058A                     l90:
  1752                           
  1753                           ;main.c: 194: };main.c: 195: RA1 = 0;
  1754     058A  1283               	bcf	3,5	;RP0=0, select bank0
  1755     058B  1303               	bcf	3,6	;RP1=0, select bank0
  1756     058C  1085               	bcf	5,1	;volatile
  1757     058D                     l2072:
  1758                           
  1759                           ;main.c: 196: for(j = 0 ; j < intvl ; j++){
  1760     058D  01E5               	clrf	main@j
  1761     058E  01E6               	clrf	main@j+1
  1762     058F  2D99               	goto	l91
  1763     0590                     l92:
  1764                           
  1765                           ;main.c: 197: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1766     0590  0000               	nop
  1767     0591                     l2074:
  1768     0591  3001               	movlw	1
  1769     0592  1283               	bcf	3,5	;RP0=0, select bank0
  1770     0593  1303               	bcf	3,6	;RP1=0, select bank0
  1771     0594  07E5               	addwf	main@j,f
  1772     0595  1803               	skipnc
  1773     0596  0AE6               	incf	main@j+1,f
  1774     0597  3000               	movlw	0
  1775     0598  07E6               	addwf	main@j+1,f
  1776     0599                     l91:
  1777     0599  0866               	movf	main@j+1,w
  1778     059A  3A80               	xorlw	128
  1779     059B  00AC               	movwf	??_main
  1780     059C  0864               	movf	main@intvl+1,w
  1781     059D  3A80               	xorlw	128
  1782     059E  022C               	subwf	??_main,w
  1783     059F  1D03               	skipz
  1784     05A0  2DA3               	goto	u1865
  1785     05A1  0863               	movf	main@intvl,w
  1786     05A2  0265               	subwf	main@j,w
  1787     05A3                     u1865:
  1788     05A3  1C03               	skipc
  1789     05A4  2DA6               	goto	u1861
  1790     05A5  2DA7               	goto	u1860
  1791     05A6                     u1861:
  1792     05A6  2D90               	goto	l92
  1793     05A7                     u1860:
  1794     05A7                     l2076:
  1795     05A7  3001               	movlw	1
  1796     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1797     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1798     05AA  07DF               	addwf	main@k,f
  1799     05AB  1803               	skipnc
  1800     05AC  0AE0               	incf	main@k+1,f
  1801     05AD  3000               	movlw	0
  1802     05AE  07E0               	addwf	main@k+1,f
  1803     05AF                     l86:
  1804     05AF  0860               	movf	main@k+1,w
  1805     05B0  3A80               	xorlw	128
  1806     05B1  00AC               	movwf	??_main
  1807     05B2  0862               	movf	main@dist+1,w
  1808     05B3  3A80               	xorlw	128
  1809     05B4  022C               	subwf	??_main,w
  1810     05B5  1D03               	skipz
  1811     05B6  2DB9               	goto	u1875
  1812     05B7  0861               	movf	main@dist,w
  1813     05B8  025F               	subwf	main@k,w
  1814     05B9                     u1875:
  1815     05B9  1C03               	skipc
  1816     05BA  2DBC               	goto	u1871
  1817     05BB  2DBD               	goto	u1870
  1818     05BC                     u1871:
  1819     05BC  2D6D               	goto	l87
  1820     05BD                     u1870:
  1821     05BD  2E79               	goto	l2104
  1822     05BE                     l2078:
  1823                           
  1824                           ;main.c: 201: dist *= -1;
  1825     05BE  30FF               	movlw	255
  1826     05BF  00F0               	movwf	___wmul@multiplier
  1827     05C0  30FF               	movlw	255
  1828     05C1  00F1               	movwf	___wmul@multiplier+1
  1829     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1830     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1831     05C4  0862               	movf	main@dist+1,w
  1832     05C5  00F3               	movwf	___wmul@multiplicand+1
  1833     05C6  0861               	movf	main@dist,w
  1834     05C7  00F2               	movwf	___wmul@multiplicand
  1835     05C8  118A  2084  118A   	fcall	___wmul
  1836     05CB  0871               	movf	?___wmul+1,w
  1837     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1838     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1839     05CE  00E2               	movwf	main@dist+1
  1840     05CF  0870               	movf	?___wmul,w
  1841     05D0  00E1               	movwf	main@dist
  1842     05D1                     l2080:
  1843                           
  1844                           ;main.c: 202: for(k = 0 ; k < dist ; k++){
  1845     05D1  01DF               	clrf	main@k
  1846     05D2  01E0               	clrf	main@k+1
  1847     05D3  2E16               	goto	l96
  1848     05D4                     l97:
  1849                           
  1850                           ;main.c: 203: RA1 = 1;
  1851     05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1852     05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1853     05D6  1485               	bsf	5,1	;volatile
  1854     05D7                     l2082:
  1855                           
  1856                           ;main.c: 204: for(j = 0 ; j < intvl ; j++){
  1857     05D7  01E5               	clrf	main@j
  1858     05D8  01E6               	clrf	main@j+1
  1859     05D9  2DE3               	goto	l98
  1860     05DA                     l99:
  1861                           
  1862                           ;main.c: 205: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1863     05DA  0000               	nop
  1864     05DB                     l2084:
  1865     05DB  3001               	movlw	1
  1866     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1867     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1868     05DE  07E5               	addwf	main@j,f
  1869     05DF  1803               	skipnc
  1870     05E0  0AE6               	incf	main@j+1,f
  1871     05E1  3000               	movlw	0
  1872     05E2  07E6               	addwf	main@j+1,f
  1873     05E3                     l98:
  1874     05E3  0866               	movf	main@j+1,w
  1875     05E4  3A80               	xorlw	128
  1876     05E5  00AC               	movwf	??_main
  1877     05E6  0864               	movf	main@intvl+1,w
  1878     05E7  3A80               	xorlw	128
  1879     05E8  022C               	subwf	??_main,w
  1880     05E9  1D03               	skipz
  1881     05EA  2DED               	goto	u1885
  1882     05EB  0863               	movf	main@intvl,w
  1883     05EC  0265               	subwf	main@j,w
  1884     05ED                     u1885:
  1885     05ED  1C03               	skipc
  1886     05EE  2DF0               	goto	u1881
  1887     05EF  2DF1               	goto	u1880
  1888     05F0                     u1881:
  1889     05F0  2DDA               	goto	l99
  1890     05F1                     u1880:
  1891     05F1                     l100:
  1892                           
  1893                           ;main.c: 206: };main.c: 207: RA1 = 0;
  1894     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1895     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1896     05F3  1085               	bcf	5,1	;volatile
  1897     05F4                     l2086:
  1898                           
  1899                           ;main.c: 208: for(j = 0 ; j < intvl ; j++){
  1900     05F4  01E5               	clrf	main@j
  1901     05F5  01E6               	clrf	main@j+1
  1902     05F6  2E00               	goto	l101
  1903     05F7                     l102:
  1904                           
  1905                           ;main.c: 209: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1906     05F7  0000               	nop
  1907     05F8                     l2088:
  1908     05F8  3001               	movlw	1
  1909     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1910     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1911     05FB  07E5               	addwf	main@j,f
  1912     05FC  1803               	skipnc
  1913     05FD  0AE6               	incf	main@j+1,f
  1914     05FE  3000               	movlw	0
  1915     05FF  07E6               	addwf	main@j+1,f
  1916     0600                     l101:
  1917     0600  0866               	movf	main@j+1,w
  1918     0601  3A80               	xorlw	128
  1919     0602  00AC               	movwf	??_main
  1920     0603  0864               	movf	main@intvl+1,w
  1921     0604  3A80               	xorlw	128
  1922     0605  022C               	subwf	??_main,w
  1923     0606  1D03               	skipz
  1924     0607  2E0A               	goto	u1895
  1925     0608  0863               	movf	main@intvl,w
  1926     0609  0265               	subwf	main@j,w
  1927     060A                     u1895:
  1928     060A  1C03               	skipc
  1929     060B  2E0D               	goto	u1891
  1930     060C  2E0E               	goto	u1890
  1931     060D                     u1891:
  1932     060D  2DF7               	goto	l102
  1933     060E                     u1890:
  1934     060E                     l2090:
  1935     060E  3001               	movlw	1
  1936     060F  1283               	bcf	3,5	;RP0=0, select bank0
  1937     0610  1303               	bcf	3,6	;RP1=0, select bank0
  1938     0611  07DF               	addwf	main@k,f
  1939     0612  1803               	skipnc
  1940     0613  0AE0               	incf	main@k+1,f
  1941     0614  3000               	movlw	0
  1942     0615  07E0               	addwf	main@k+1,f
  1943     0616                     l96:
  1944     0616  0860               	movf	main@k+1,w
  1945     0617  3A80               	xorlw	128
  1946     0618  00AC               	movwf	??_main
  1947     0619  0862               	movf	main@dist+1,w
  1948     061A  3A80               	xorlw	128
  1949     061B  022C               	subwf	??_main,w
  1950     061C  1D03               	skipz
  1951     061D  2E20               	goto	u1905
  1952     061E  0861               	movf	main@dist,w
  1953     061F  025F               	subwf	main@k,w
  1954     0620                     u1905:
  1955     0620  1C03               	skipc
  1956     0621  2E23               	goto	u1901
  1957     0622  2E24               	goto	u1900
  1958     0623                     u1901:
  1959     0623  2DD4               	goto	l97
  1960     0624                     u1900:
  1961     0624                     l2092:
  1962                           
  1963                           ;main.c: 210: };main.c: 211: };main.c: 212: for(k = 0 ; k < dist ; k++){
  1964     0624  1283               	bcf	3,5	;RP0=0, select bank0
  1965     0625  1303               	bcf	3,6	;RP1=0, select bank0
  1966     0626  01DF               	clrf	main@k
  1967     0627  01E0               	clrf	main@k+1
  1968     0628  2E6B               	goto	l105
  1969     0629                     l106:
  1970                           
  1971                           ;main.c: 213: RA0 = 1;
  1972     0629  1283               	bcf	3,5	;RP0=0, select bank0
  1973     062A  1303               	bcf	3,6	;RP1=0, select bank0
  1974     062B  1405               	bsf	5,0	;volatile
  1975     062C                     l2094:
  1976                           
  1977                           ;main.c: 214: for(j = 0 ; j < intvl ; j++){
  1978     062C  01E5               	clrf	main@j
  1979     062D  01E6               	clrf	main@j+1
  1980     062E  2E38               	goto	l107
  1981     062F                     l108:
  1982                           
  1983                           ;main.c: 215: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1984     062F  0000               	nop
  1985     0630                     l2096:
  1986     0630  3001               	movlw	1
  1987     0631  1283               	bcf	3,5	;RP0=0, select bank0
  1988     0632  1303               	bcf	3,6	;RP1=0, select bank0
  1989     0633  07E5               	addwf	main@j,f
  1990     0634  1803               	skipnc
  1991     0635  0AE6               	incf	main@j+1,f
  1992     0636  3000               	movlw	0
  1993     0637  07E6               	addwf	main@j+1,f
  1994     0638                     l107:
  1995     0638  0866               	movf	main@j+1,w
  1996     0639  3A80               	xorlw	128
  1997     063A  00AC               	movwf	??_main
  1998     063B  0864               	movf	main@intvl+1,w
  1999     063C  3A80               	xorlw	128
  2000     063D  022C               	subwf	??_main,w
  2001     063E  1D03               	skipz
  2002     063F  2E42               	goto	u1915
  2003     0640  0863               	movf	main@intvl,w
  2004     0641  0265               	subwf	main@j,w
  2005     0642                     u1915:
  2006     0642  1C03               	skipc
  2007     0643  2E45               	goto	u1911
  2008     0644  2E46               	goto	u1910
  2009     0645                     u1911:
  2010     0645  2E2F               	goto	l108
  2011     0646                     u1910:
  2012     0646                     l109:
  2013                           
  2014                           ;main.c: 216: };main.c: 217: RA0 = 0;
  2015     0646  1283               	bcf	3,5	;RP0=0, select bank0
  2016     0647  1303               	bcf	3,6	;RP1=0, select bank0
  2017     0648  1005               	bcf	5,0	;volatile
  2018     0649                     l2098:
  2019                           
  2020                           ;main.c: 218: for(j = 0 ; j < intvl ; j++){
  2021     0649  01E5               	clrf	main@j
  2022     064A  01E6               	clrf	main@j+1
  2023     064B  2E55               	goto	l110
  2024     064C                     l111:
  2025                           
  2026                           ;main.c: 219: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2027     064C  0000               	nop
  2028     064D                     l2100:
  2029     064D  3001               	movlw	1
  2030     064E  1283               	bcf	3,5	;RP0=0, select bank0
  2031     064F  1303               	bcf	3,6	;RP1=0, select bank0
  2032     0650  07E5               	addwf	main@j,f
  2033     0651  1803               	skipnc
  2034     0652  0AE6               	incf	main@j+1,f
  2035     0653  3000               	movlw	0
  2036     0654  07E6               	addwf	main@j+1,f
  2037     0655                     l110:
  2038     0655  0866               	movf	main@j+1,w
  2039     0656  3A80               	xorlw	128
  2040     0657  00AC               	movwf	??_main
  2041     0658  0864               	movf	main@intvl+1,w
  2042     0659  3A80               	xorlw	128
  2043     065A  022C               	subwf	??_main,w
  2044     065B  1D03               	skipz
  2045     065C  2E5F               	goto	u1925
  2046     065D  0863               	movf	main@intvl,w
  2047     065E  0265               	subwf	main@j,w
  2048     065F                     u1925:
  2049     065F  1C03               	skipc
  2050     0660  2E62               	goto	u1921
  2051     0661  2E63               	goto	u1920
  2052     0662                     u1921:
  2053     0662  2E4C               	goto	l111
  2054     0663                     u1920:
  2055     0663                     l2102:
  2056     0663  3001               	movlw	1
  2057     0664  1283               	bcf	3,5	;RP0=0, select bank0
  2058     0665  1303               	bcf	3,6	;RP1=0, select bank0
  2059     0666  07DF               	addwf	main@k,f
  2060     0667  1803               	skipnc
  2061     0668  0AE0               	incf	main@k+1,f
  2062     0669  3000               	movlw	0
  2063     066A  07E0               	addwf	main@k+1,f
  2064     066B                     l105:
  2065     066B  0860               	movf	main@k+1,w
  2066     066C  3A80               	xorlw	128
  2067     066D  00AC               	movwf	??_main
  2068     066E  0862               	movf	main@dist+1,w
  2069     066F  3A80               	xorlw	128
  2070     0670  022C               	subwf	??_main,w
  2071     0671  1D03               	skipz
  2072     0672  2E75               	goto	u1935
  2073     0673  0861               	movf	main@dist,w
  2074     0674  025F               	subwf	main@k,w
  2075     0675                     u1935:
  2076     0675  1C03               	skipc
  2077     0676  2E78               	goto	u1931
  2078     0677  2E79               	goto	u1930
  2079     0678                     u1931:
  2080     0678  2E29               	goto	l106
  2081     0679                     u1930:
  2082     0679                     l2104:
  2083                           
  2084                           ;main.c: 220: };main.c: 221: };main.c: 222: };main.c: 224: puts("C");
  2085     0679  3060               	movlw	(low (((STR_4+2)-__stringbase)| (0+32768)))& (0+255)
  2086     067A  158A  265C  118A   	fcall	_puts
  2087                           
  2088                           ;main.c: 225: printf("C\r\n");
  2089     067D  3052               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2090     067E  118A  21DE  118A   	fcall	_printf
  2091                           
  2092                           ;main.c: 226: break;
  2093     0681  2FE8               	goto	l70
  2094     0682                     l2106:
  2095                           
  2096                           ;main.c: 229: printf("NTD\n");
  2097     0682  3048               	movlw	(low ((STR_26-__stringbase)| (0+32768)))& (0+255)
  2098     0683  118A  21DE  118A   	fcall	_printf
  2099     0686                     l2108:
  2100                           
  2101                           ;main.c: 230: dist = 10000;
  2102     0686  3010               	movlw	16
  2103     0687  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0688  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0689  00E1               	movwf	main@dist
  2106     068A  3027               	movlw	39
  2107     068B  00E2               	movwf	main@dist+1
  2108     068C                     l2110:
  2109                           
  2110                           ;main.c: 231: for(k = 0 ; k < dist ; k++){
  2111     068C  01DF               	clrf	main@k
  2112     068D  01E0               	clrf	main@k+1
  2113     068E  2EDA               	goto	l115
  2114     068F                     l116:
  2115                           
  2116                           ;main.c: 232: RA0 = 1;
  2117     068F  1283               	bcf	3,5	;RP0=0, select bank0
  2118     0690  1303               	bcf	3,6	;RP1=0, select bank0
  2119     0691  1405               	bsf	5,0	;volatile
  2120     0692                     l2112:
  2121                           
  2122                           ;main.c: 233: for(j = 0 ; j < intvl ; j++){
  2123     0692  01E5               	clrf	main@j
  2124     0693  01E6               	clrf	main@j+1
  2125     0694  2E9E               	goto	l117
  2126     0695                     l118:
  2127                           
  2128                           ;main.c: 234: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2129     0695  0000               	nop
  2130     0696                     l2114:
  2131     0696  3001               	movlw	1
  2132     0697  1283               	bcf	3,5	;RP0=0, select bank0
  2133     0698  1303               	bcf	3,6	;RP1=0, select bank0
  2134     0699  07E5               	addwf	main@j,f
  2135     069A  1803               	skipnc
  2136     069B  0AE6               	incf	main@j+1,f
  2137     069C  3000               	movlw	0
  2138     069D  07E6               	addwf	main@j+1,f
  2139     069E                     l117:
  2140     069E  0866               	movf	main@j+1,w
  2141     069F  3A80               	xorlw	128
  2142     06A0  00AC               	movwf	??_main
  2143     06A1  0864               	movf	main@intvl+1,w
  2144     06A2  3A80               	xorlw	128
  2145     06A3  022C               	subwf	??_main,w
  2146     06A4  1D03               	skipz
  2147     06A5  2EA8               	goto	u1945
  2148     06A6  0863               	movf	main@intvl,w
  2149     06A7  0265               	subwf	main@j,w
  2150     06A8                     u1945:
  2151     06A8  1C03               	skipc
  2152     06A9  2EAB               	goto	u1941
  2153     06AA  2EAC               	goto	u1940
  2154     06AB                     u1941:
  2155     06AB  2E95               	goto	l118
  2156     06AC                     u1940:
  2157     06AC                     l119:
  2158                           
  2159                           ;main.c: 235: };main.c: 236: RA0 = 0;
  2160     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  2161     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  2162     06AE  1005               	bcf	5,0	;volatile
  2163     06AF                     l2116:
  2164                           
  2165                           ;main.c: 237: for(j = 0 ; j < intvl ; j++){
  2166     06AF  01E5               	clrf	main@j
  2167     06B0  01E6               	clrf	main@j+1
  2168     06B1  2EBB               	goto	l120
  2169     06B2                     l121:
  2170                           
  2171                           ;main.c: 238: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2172     06B2  0000               	nop
  2173     06B3                     l2118:
  2174     06B3  3001               	movlw	1
  2175     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2176     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2177     06B6  07E5               	addwf	main@j,f
  2178     06B7  1803               	skipnc
  2179     06B8  0AE6               	incf	main@j+1,f
  2180     06B9  3000               	movlw	0
  2181     06BA  07E6               	addwf	main@j+1,f
  2182     06BB                     l120:
  2183     06BB  0866               	movf	main@j+1,w
  2184     06BC  3A80               	xorlw	128
  2185     06BD  00AC               	movwf	??_main
  2186     06BE  0864               	movf	main@intvl+1,w
  2187     06BF  3A80               	xorlw	128
  2188     06C0  022C               	subwf	??_main,w
  2189     06C1  1D03               	skipz
  2190     06C2  2EC5               	goto	u1955
  2191     06C3  0863               	movf	main@intvl,w
  2192     06C4  0265               	subwf	main@j,w
  2193     06C5                     u1955:
  2194     06C5  1C03               	skipc
  2195     06C6  2EC8               	goto	u1951
  2196     06C7  2EC9               	goto	u1950
  2197     06C8                     u1951:
  2198     06C8  2EB2               	goto	l121
  2199     06C9                     u1950:
  2200     06C9                     l122:
  2201                           
  2202                           ;main.c: 239: };main.c: 241: if(RB0 == 0){
  2203     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2204     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2205     06CB  1806               	btfsc	6,0	;volatile
  2206     06CC  2ECE               	goto	u1961
  2207     06CD  2ECF               	goto	u1960
  2208     06CE                     u1961:
  2209     06CE  2ED4               	goto	l2122
  2210     06CF                     u1960:
  2211     06CF                     l2120:
  2212                           
  2213                           ;main.c: 242: printf("Detected\n");
  2214     06CF  3021               	movlw	(low ((STR_27-__stringbase)| (0+32768)))& (0+255)
  2215     06D0  118A  21DE  118A   	fcall	_printf
  2216                           
  2217                           ;main.c: 243: break;
  2218     06D3  2EE8               	goto	l2124
  2219     06D4                     l2122:
  2220     06D4  3001               	movlw	1
  2221     06D5  07DF               	addwf	main@k,f
  2222     06D6  1803               	skipnc
  2223     06D7  0AE0               	incf	main@k+1,f
  2224     06D8  3000               	movlw	0
  2225     06D9  07E0               	addwf	main@k+1,f
  2226     06DA                     l115:
  2227     06DA  0860               	movf	main@k+1,w
  2228     06DB  3A80               	xorlw	128
  2229     06DC  00AC               	movwf	??_main
  2230     06DD  0862               	movf	main@dist+1,w
  2231     06DE  3A80               	xorlw	128
  2232     06DF  022C               	subwf	??_main,w
  2233     06E0  1D03               	skipz
  2234     06E1  2EE4               	goto	u1975
  2235     06E2  0861               	movf	main@dist,w
  2236     06E3  025F               	subwf	main@k,w
  2237     06E4                     u1975:
  2238     06E4  1C03               	skipc
  2239     06E5  2EE7               	goto	u1971
  2240     06E6  2EE8               	goto	u1970
  2241     06E7                     u1971:
  2242     06E7  2E8F               	goto	l116
  2243     06E8                     u1970:
  2244     06E8                     l2124:
  2245                           
  2246                           ;main.c: 244: };main.c: 246: };main.c: 247: puts("C");
  2247     06E8  3060               	movlw	(low (((STR_4+2)-__stringbase)| (0+32768)))& (0+255)
  2248     06E9  158A  265C  118A   	fcall	_puts
  2249                           
  2250                           ;main.c: 248: printf("C\r\n");
  2251     06EC  3052               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2252     06ED  118A  21DE  118A   	fcall	_printf
  2253                           
  2254                           ;main.c: 249: break;
  2255     06F0  2FE8               	goto	l70
  2256     06F1                     l2126:
  2257                           
  2258                           ;main.c: 252: printf("NDO\n");
  2259     06F1  304D               	movlw	(low ((STR_30-__stringbase)| (0+32768)))& (0+255)
  2260     06F2  118A  21DE  118A   	fcall	_printf
  2261                           
  2262                           ;main.c: 253: ptr = strtok((0), "/");
  2263     06F5  306E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2264     06F6  00FA               	movwf	strtok@s2
  2265     06F7  3000               	movlw	0
  2266     06F8  158A  27BA  118A   	fcall	_strtok
  2267     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2268     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2269     06FD  00DE               	movwf	main@ptr
  2270     06FE                     l2128:
  2271                           
  2272                           ;main.c: 254: if(ptr != (0)) {
  2273     06FE  085E               	movf	main@ptr,w
  2274     06FF  1903               	btfsc	3,2
  2275     0700  2F02               	goto	u1981
  2276     0701  2F03               	goto	u1980
  2277     0702                     u1981:
  2278     0702  2F0D               	goto	l126
  2279     0703                     u1980:
  2280     0703                     l2130:
  2281                           
  2282                           ;main.c: 255: dist = atoi(ptr);
  2283     0703  085E               	movf	main@ptr,w
  2284     0704  118A  2167  118A   	fcall	_atoi
  2285     0707  0877               	movf	?_atoi+1,w
  2286     0708  1283               	bcf	3,5	;RP0=0, select bank0
  2287     0709  1303               	bcf	3,6	;RP1=0, select bank0
  2288     070A  00E2               	movwf	main@dist+1
  2289     070B  0876               	movf	?_atoi,w
  2290     070C  00E1               	movwf	main@dist
  2291     070D                     l126:
  2292                           
  2293                           ;main.c: 256: };main.c: 257: printf("dist = %d\n", dist);
  2294     070D  0862               	movf	main@dist+1,w
  2295     070E  00FD               	movwf	?_printf+1
  2296     070F  0861               	movf	main@dist,w
  2297     0710  00FC               	movwf	?_printf
  2298     0711  300B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2299     0712  118A  21DE  118A   	fcall	_printf
  2300     0715                     l2132:
  2301                           
  2302                           ;main.c: 259: for(k = 0 ; k < 10000 ; k++){
  2303     0715  1283               	bcf	3,5	;RP0=0, select bank0
  2304     0716  1303               	bcf	3,6	;RP1=0, select bank0
  2305     0717  01DF               	clrf	main@k
  2306     0718  01E0               	clrf	main@k+1
  2307     0719                     l127:
  2308                           
  2309                           ;main.c: 260: RA0 = 1;
  2310     0719  1283               	bcf	3,5	;RP0=0, select bank0
  2311     071A  1303               	bcf	3,6	;RP1=0, select bank0
  2312     071B  1405               	bsf	5,0	;volatile
  2313     071C                     l2138:
  2314                           
  2315                           ;main.c: 261: for(j = 0 ; j < intvl ; j++){
  2316     071C  01E5               	clrf	main@j
  2317     071D  01E6               	clrf	main@j+1
  2318     071E  2F28               	goto	l129
  2319     071F                     l130:
  2320                           
  2321                           ;main.c: 262: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2322     071F  0000               	nop
  2323     0720                     l2140:
  2324     0720  3001               	movlw	1
  2325     0721  1283               	bcf	3,5	;RP0=0, select bank0
  2326     0722  1303               	bcf	3,6	;RP1=0, select bank0
  2327     0723  07E5               	addwf	main@j,f
  2328     0724  1803               	skipnc
  2329     0725  0AE6               	incf	main@j+1,f
  2330     0726  3000               	movlw	0
  2331     0727  07E6               	addwf	main@j+1,f
  2332     0728                     l129:
  2333     0728  0866               	movf	main@j+1,w
  2334     0729  3A80               	xorlw	128
  2335     072A  00AC               	movwf	??_main
  2336     072B  0864               	movf	main@intvl+1,w
  2337     072C  3A80               	xorlw	128
  2338     072D  022C               	subwf	??_main,w
  2339     072E  1D03               	skipz
  2340     072F  2F32               	goto	u1995
  2341     0730  0863               	movf	main@intvl,w
  2342     0731  0265               	subwf	main@j,w
  2343     0732                     u1995:
  2344     0732  1C03               	skipc
  2345     0733  2F35               	goto	u1991
  2346     0734  2F36               	goto	u1990
  2347     0735                     u1991:
  2348     0735  2F1F               	goto	l130
  2349     0736                     u1990:
  2350     0736                     l131:
  2351                           
  2352                           ;main.c: 263: };main.c: 264: RA0 = 0;
  2353     0736  1283               	bcf	3,5	;RP0=0, select bank0
  2354     0737  1303               	bcf	3,6	;RP1=0, select bank0
  2355     0738  1005               	bcf	5,0	;volatile
  2356     0739                     l2142:
  2357                           
  2358                           ;main.c: 265: for(j = 0 ; j < intvl ; j++){
  2359     0739  01E5               	clrf	main@j
  2360     073A  01E6               	clrf	main@j+1
  2361     073B  2F45               	goto	l132
  2362     073C                     l133:
  2363                           
  2364                           ;main.c: 266: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2365     073C  0000               	nop
  2366     073D                     l2144:
  2367     073D  3001               	movlw	1
  2368     073E  1283               	bcf	3,5	;RP0=0, select bank0
  2369     073F  1303               	bcf	3,6	;RP1=0, select bank0
  2370     0740  07E5               	addwf	main@j,f
  2371     0741  1803               	skipnc
  2372     0742  0AE6               	incf	main@j+1,f
  2373     0743  3000               	movlw	0
  2374     0744  07E6               	addwf	main@j+1,f
  2375     0745                     l132:
  2376     0745  0866               	movf	main@j+1,w
  2377     0746  3A80               	xorlw	128
  2378     0747  00AC               	movwf	??_main
  2379     0748  0864               	movf	main@intvl+1,w
  2380     0749  3A80               	xorlw	128
  2381     074A  022C               	subwf	??_main,w
  2382     074B  1D03               	skipz
  2383     074C  2F4F               	goto	u2005
  2384     074D  0863               	movf	main@intvl,w
  2385     074E  0265               	subwf	main@j,w
  2386     074F                     u2005:
  2387     074F  1C03               	skipc
  2388     0750  2F52               	goto	u2001
  2389     0751  2F53               	goto	u2000
  2390     0752                     u2001:
  2391     0752  2F3C               	goto	l133
  2392     0753                     u2000:
  2393     0753                     l134:
  2394                           
  2395                           ;main.c: 267: };main.c: 269: if(RB0 == 0){
  2396     0753  1283               	bcf	3,5	;RP0=0, select bank0
  2397     0754  1303               	bcf	3,6	;RP1=0, select bank0
  2398     0755  1806               	btfsc	6,0	;volatile
  2399     0756  2F58               	goto	u2011
  2400     0757  2F59               	goto	u2010
  2401     0758                     u2011:
  2402     0758  2F5E               	goto	l2148
  2403     0759                     u2010:
  2404     0759                     l2146:
  2405                           
  2406                           ;main.c: 270: printf("Detected");
  2407     0759  302B               	movlw	(low ((STR_33-__stringbase)| (0+32768)))& (0+255)
  2408     075A  118A  21DE  118A   	fcall	_printf
  2409                           
  2410                           ;main.c: 271: break;
  2411     075D  2F71               	goto	l2152
  2412     075E                     l2148:
  2413     075E  3001               	movlw	1
  2414     075F  07DF               	addwf	main@k,f
  2415     0760  1803               	skipnc
  2416     0761  0AE0               	incf	main@k+1,f
  2417     0762  3000               	movlw	0
  2418     0763  07E0               	addwf	main@k+1,f
  2419     0764                     l2150:
  2420     0764  0860               	movf	main@k+1,w
  2421     0765  3A80               	xorlw	128
  2422     0766  00FF               	movwf	btemp+1
  2423     0767  30A7               	movlw	167
  2424     0768  027F               	subwf	btemp+1,w
  2425     0769  1D03               	skipz
  2426     076A  2F6D               	goto	u2025
  2427     076B  3010               	movlw	16
  2428     076C  025F               	subwf	main@k,w
  2429     076D                     u2025:
  2430     076D  1C03               	skipc
  2431     076E  2F70               	goto	u2021
  2432     076F  2F71               	goto	u2020
  2433     0770                     u2021:
  2434     0770  2F19               	goto	l127
  2435     0771                     u2020:
  2436     0771                     l2152:
  2437                           
  2438                           ;main.c: 272: };main.c: 274: };main.c: 276: for(k = 0 ; k < dist ; k++){
  2439     0771  1283               	bcf	3,5	;RP0=0, select bank0
  2440     0772  1303               	bcf	3,6	;RP1=0, select bank0
  2441     0773  01DF               	clrf	main@k
  2442     0774  01E0               	clrf	main@k+1
  2443     0775  2FB8               	goto	l136
  2444     0776                     l137:
  2445                           
  2446                           ;main.c: 277: RA1 = 1;
  2447     0776  1283               	bcf	3,5	;RP0=0, select bank0
  2448     0777  1303               	bcf	3,6	;RP1=0, select bank0
  2449     0778  1485               	bsf	5,1	;volatile
  2450     0779                     l2154:
  2451                           
  2452                           ;main.c: 278: for(j = 0 ; j < intvl ; j++){
  2453     0779  01E5               	clrf	main@j
  2454     077A  01E6               	clrf	main@j+1
  2455     077B  2F85               	goto	l138
  2456     077C                     l139:
  2457                           
  2458                           ;main.c: 279: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2459     077C  0000               	nop
  2460     077D                     l2156:
  2461     077D  3001               	movlw	1
  2462     077E  1283               	bcf	3,5	;RP0=0, select bank0
  2463     077F  1303               	bcf	3,6	;RP1=0, select bank0
  2464     0780  07E5               	addwf	main@j,f
  2465     0781  1803               	skipnc
  2466     0782  0AE6               	incf	main@j+1,f
  2467     0783  3000               	movlw	0
  2468     0784  07E6               	addwf	main@j+1,f
  2469     0785                     l138:
  2470     0785  0866               	movf	main@j+1,w
  2471     0786  3A80               	xorlw	128
  2472     0787  00AC               	movwf	??_main
  2473     0788  0864               	movf	main@intvl+1,w
  2474     0789  3A80               	xorlw	128
  2475     078A  022C               	subwf	??_main,w
  2476     078B  1D03               	skipz
  2477     078C  2F8F               	goto	u2035
  2478     078D  0863               	movf	main@intvl,w
  2479     078E  0265               	subwf	main@j,w
  2480     078F                     u2035:
  2481     078F  1C03               	skipc
  2482     0790  2F92               	goto	u2031
  2483     0791  2F93               	goto	u2030
  2484     0792                     u2031:
  2485     0792  2F7C               	goto	l139
  2486     0793                     u2030:
  2487     0793                     l140:
  2488                           
  2489                           ;main.c: 280: };main.c: 281: RA1 = 0;
  2490     0793  1283               	bcf	3,5	;RP0=0, select bank0
  2491     0794  1303               	bcf	3,6	;RP1=0, select bank0
  2492     0795  1085               	bcf	5,1	;volatile
  2493     0796                     l2158:
  2494                           
  2495                           ;main.c: 282: for(j = 0 ; j < intvl ; j++){
  2496     0796  01E5               	clrf	main@j
  2497     0797  01E6               	clrf	main@j+1
  2498     0798  2FA2               	goto	l141
  2499     0799                     l142:
  2500                           
  2501                           ;main.c: 283: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2502     0799  0000               	nop
  2503     079A                     l2160:
  2504     079A  3001               	movlw	1
  2505     079B  1283               	bcf	3,5	;RP0=0, select bank0
  2506     079C  1303               	bcf	3,6	;RP1=0, select bank0
  2507     079D  07E5               	addwf	main@j,f
  2508     079E  1803               	skipnc
  2509     079F  0AE6               	incf	main@j+1,f
  2510     07A0  3000               	movlw	0
  2511     07A1  07E6               	addwf	main@j+1,f
  2512     07A2                     l141:
  2513     07A2  0866               	movf	main@j+1,w
  2514     07A3  3A80               	xorlw	128
  2515     07A4  00AC               	movwf	??_main
  2516     07A5  0864               	movf	main@intvl+1,w
  2517     07A6  3A80               	xorlw	128
  2518     07A7  022C               	subwf	??_main,w
  2519     07A8  1D03               	skipz
  2520     07A9  2FAC               	goto	u2045
  2521     07AA  0863               	movf	main@intvl,w
  2522     07AB  0265               	subwf	main@j,w
  2523     07AC                     u2045:
  2524     07AC  1C03               	skipc
  2525     07AD  2FAF               	goto	u2041
  2526     07AE  2FB0               	goto	u2040
  2527     07AF                     u2041:
  2528     07AF  2F99               	goto	l142
  2529     07B0                     u2040:
  2530     07B0                     l2162:
  2531     07B0  3001               	movlw	1
  2532     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  2533     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  2534     07B3  07DF               	addwf	main@k,f
  2535     07B4  1803               	skipnc
  2536     07B5  0AE0               	incf	main@k+1,f
  2537     07B6  3000               	movlw	0
  2538     07B7  07E0               	addwf	main@k+1,f
  2539     07B8                     l136:
  2540     07B8  0860               	movf	main@k+1,w
  2541     07B9  3A80               	xorlw	128
  2542     07BA  00AC               	movwf	??_main
  2543     07BB  0862               	movf	main@dist+1,w
  2544     07BC  3A80               	xorlw	128
  2545     07BD  022C               	subwf	??_main,w
  2546     07BE  1D03               	skipz
  2547     07BF  2FC2               	goto	u2055
  2548     07C0  0861               	movf	main@dist,w
  2549     07C1  025F               	subwf	main@k,w
  2550     07C2                     u2055:
  2551     07C2  1C03               	skipc
  2552     07C3  2FC5               	goto	u2051
  2553     07C4  2FC6               	goto	u2050
  2554     07C5                     u2051:
  2555     07C5  2F76               	goto	l137
  2556     07C6                     u2050:
  2557     07C6                     l2164:
  2558                           
  2559                           ;main.c: 284: };main.c: 285: };main.c: 287: puts("C");
  2560     07C6  3060               	movlw	(low (((STR_4+2)-__stringbase)| (0+32768)))& (0+255)
  2561     07C7  158A  265C  118A   	fcall	_puts
  2562                           
  2563                           ;main.c: 288: printf("C\r\n");
  2564     07CA  3052               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2565     07CB  118A  21DE  118A   	fcall	_printf
  2566                           
  2567                           ;main.c: 289: break;
  2568     07CE  2FE8               	goto	l70
  2569     07CF                     l2166:
  2570     07CF                     l2168:
  2571                           
  2572                           ;main.c: 292: printf("VERSION 10");
  2573     07CF  3016               	movlw	(low ((STR_36-__stringbase)| (0+32768)))& (0+255)
  2574     07D0  118A  21DE  118A   	fcall	_printf
  2575                           
  2576                           ;main.c: 293: break;
  2577     07D3  2FE8               	goto	l70
  2578     07D4                     l2172:
  2579     07D4  0859               	movf	main@cmd,w
  2580                           
  2581                           ; Switch size 1, requested type "simple"
  2582                           ; Number of cases is 6, Range of values is 0 to 5
  2583                           ; switch strategies available:
  2584                           ; Name         Instructions Cycles
  2585                           ; direct_byte           19     7 (fixed)
  2586                           ; simple_byte           19    10 (average)
  2587                           ; jumptable            260     6 (fixed)
  2588                           ;	Chosen strategy is simple_byte
  2589     07D5  3A00               	xorlw	0	; case 0
  2590     07D6  1903               	skipnz
  2591     07D7  2B6B               	goto	l1998
  2592     07D8  3A01               	xorlw	1	; case 1
  2593     07D9  1903               	skipnz
  2594     07DA  2C7A               	goto	l2034
  2595     07DB  3A03               	xorlw	3	; case 2
  2596     07DC  1903               	skipnz
  2597     07DD  2CC0               	goto	l2046
  2598     07DE  3A01               	xorlw	1	; case 3
  2599     07DF  1903               	skipnz
  2600     07E0  2E82               	goto	l2106
  2601     07E1  3A07               	xorlw	7	; case 4
  2602     07E2  1903               	skipnz
  2603     07E3  2EF1               	goto	l2126
  2604     07E4  3A01               	xorlw	1	; case 5
  2605     07E5  1903               	skipnz
  2606     07E6  2FCF               	goto	l2166
  2607     07E7  2FE8               	goto	l70
  2608     07E8                     l70:
  2609                           
  2610                           ;main.c: 298: if(RB0 == 0){
  2611     07E8  1283               	bcf	3,5	;RP0=0, select bank0
  2612     07E9  1303               	bcf	3,6	;RP1=0, select bank0
  2613     07EA  1806               	btfsc	6,0	;volatile
  2614     07EB  2FED               	goto	u2061
  2615     07EC  2FEE               	goto	u2060
  2616     07ED                     u2061:
  2617     07ED  2FF3               	goto	l2176
  2618     07EE                     u2060:
  2619     07EE                     l2174:
  2620                           
  2621                           ;main.c: 299: printf("SW OFF");
  2622     07EE  303B               	movlw	(low ((STR_37-__stringbase)| (0+32768)))& (0+255)
  2623     07EF  118A  21DE  118A   	fcall	_printf
  2624                           
  2625                           ;main.c: 300: }else{
  2626     07F2  2AE8               	goto	l1946
  2627     07F3                     l2176:
  2628                           
  2629                           ;main.c: 301: printf("SW ON");
  2630     07F3  3042               	movlw	(low ((STR_38-__stringbase)| (0+32768)))& (0+255)
  2631     07F4  118A  21DE  118A   	fcall	_printf
  2632     07F7  2AE8               	goto	l1946
  2633     07F8  118A  2800         	ljmp	start
  2634     07FA                     __end_of_main:
  2635                           
  2636                           	psect	text1
  2637     0FBA                     __ptext1:	
  2638 ;; *************** function _strtok *****************
  2639 ;; Defined at:
  2640 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  s1              1    wreg     PTR unsigned char 
  2643 ;;		 -> NULL(0), main@tmp(40), 
  2644 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2645 ;;		 -> STR_31(2), STR_22(2), STR_21(2), STR_20(2), 
  2646 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2647 ;;		 -> STR_15(2), STR_11(2), STR_10(2), STR_9(2), 
  2648 ;;		 -> STR_8(2), STR_7(2), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  s1              1   11[COMMON] PTR unsigned char 
  2651 ;;		 -> NULL(0), main@tmp(40), 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      PTR unsigned char 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2661 ;;      Params:         1       0       0       0
  2662 ;;      Locals:         1       0       0       0
  2663 ;;      Temps:          0       0       0       0
  2664 ;;      Totals:         2       0       0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 3
  2668 ;; This function calls:
  2669 ;;		_strcspn
  2670 ;;		_strspn
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676     0FBA                     _strtok:	
  2677                           ;psect for function _strtok
  2678                           
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2682                           ;strtok@s1 stored from wreg
  2683     0FBA  00FB               	movwf	strtok@s1
  2684     0FBB                     l1812:
  2685     0FBB  087B               	movf	strtok@s1,w
  2686     0FBC  1D03               	btfss	3,2
  2687     0FBD  2FBF               	goto	u1451
  2688     0FBE  2FC0               	goto	u1450
  2689     0FBF                     u1451:
  2690     0FBF  2FC4               	goto	l1816
  2691     0FC0                     u1450:
  2692     0FC0                     l1814:
  2693     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2694     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  2695     0FC2  0867               	movf	strtok@sp,w
  2696     0FC3  00FB               	movwf	strtok@s1
  2697     0FC4                     l1816:
  2698     0FC4  087B               	movf	strtok@s1,w
  2699     0FC5  1D03               	btfss	3,2
  2700     0FC6  2FC8               	goto	u1461
  2701     0FC7  2FC9               	goto	u1460
  2702     0FC8                     u1461:
  2703     0FC8  2FCB               	goto	l1822
  2704     0FC9                     u1460:
  2705     0FC9                     l1818:
  2706     0FC9  3000               	movlw	0
  2707     0FCA  2FFF               	goto	l831
  2708     0FCB                     l1822:
  2709     0FCB  087A               	movf	strtok@s2,w
  2710     0FCC  00F3               	movwf	strspn@s2
  2711     0FCD  087B               	movf	strtok@s1,w
  2712     0FCE  158A  270F  158A   	fcall	_strspn
  2713     0FD1  0873               	movf	?_strspn,w
  2714     0FD2  00FF               	movwf	btemp+1
  2715     0FD3  087F               	movf	btemp+1,w
  2716     0FD4  07FB               	addwf	strtok@s1,f
  2717     0FD5                     l1824:
  2718     0FD5  087B               	movf	strtok@s1,w
  2719     0FD6  0084               	movwf	4
  2720     0FD7  1383               	bcf	3,7	;select IRP bank0
  2721     0FD8  0800               	movf	0,w
  2722     0FD9  1D03               	btfss	3,2
  2723     0FDA  2FDC               	goto	u1471
  2724     0FDB  2FDD               	goto	u1470
  2725     0FDC                     u1471:
  2726     0FDC  2FE2               	goto	l1830
  2727     0FDD                     u1470:
  2728     0FDD                     l1826:
  2729     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  2730     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  2731     0FDF  01E7               	clrf	strtok@sp
  2732     0FE0  3000               	movlw	0
  2733     0FE1  2FFF               	goto	l831
  2734     0FE2                     l1830:
  2735     0FE2  087A               	movf	strtok@s2,w
  2736     0FE3  00F3               	movwf	strcspn@s2
  2737     0FE4  087B               	movf	strtok@s1,w
  2738     0FE5  158A  26E2  158A   	fcall	_strcspn
  2739     0FE8  0873               	movf	?_strcspn,w
  2740     0FE9  077B               	addwf	strtok@s1,w
  2741     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  2742     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  2743     0FEC  00E7               	movwf	strtok@sp
  2744     0FED                     l1832:
  2745     0FED  0867               	movf	strtok@sp,w
  2746     0FEE  0084               	movwf	4
  2747     0FEF  1383               	bcf	3,7	;select IRP bank0
  2748     0FF0  0800               	movf	0,w
  2749     0FF1  1903               	btfsc	3,2
  2750     0FF2  2FF4               	goto	u1481
  2751     0FF3  2FF5               	goto	u1480
  2752     0FF4                     u1481:
  2753     0FF4  2FFD               	goto	l1838
  2754     0FF5                     u1480:
  2755     0FF5                     l1834:
  2756     0FF5  0867               	movf	strtok@sp,w
  2757     0FF6  0084               	movwf	4
  2758     0FF7  0180               	clrf	0
  2759     0FF8                     l1836:
  2760     0FF8  3001               	movlw	1
  2761     0FF9  00FF               	movwf	btemp+1
  2762     0FFA  087F               	movf	btemp+1,w
  2763     0FFB  07E7               	addwf	strtok@sp,f
  2764     0FFC  2FFE               	goto	l1840
  2765     0FFD                     l1838:
  2766     0FFD  01E7               	clrf	strtok@sp
  2767     0FFE                     l1840:
  2768     0FFE  087B               	movf	strtok@s1,w
  2769     0FFF                     l831:
  2770     0FFF  0008               	return
  2771     1000                     __end_of_strtok:
  2772                           
  2773                           	psect	text2
  2774     0F0F                     __ptext2:	
  2775 ;; *************** function _strspn *****************
  2776 ;; Defined at:
  2777 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  s1              1    wreg     PTR const unsigned char 
  2780 ;;		 -> NULL(0), main@tmp(40), 
  2781 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2782 ;;		 -> STR_31(2), STR_22(2), STR_21(2), STR_20(2), 
  2783 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2784 ;;		 -> STR_15(2), STR_11(2), STR_10(2), STR_9(2), 
  2785 ;;		 -> STR_8(2), STR_7(2), 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2788 ;;		 -> NULL(0), main@tmp(40), 
  2789 ;;  i               2    7[COMMON] unsigned int 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  2    3[COMMON] unsigned int 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2799 ;;      Params:         2       0       0       0
  2800 ;;      Locals:         3       0       0       0
  2801 ;;      Temps:          2       0       0       0
  2802 ;;      Totals:         7       0       0       0
  2803 ;;Total ram usage:        7 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 2
  2806 ;; This function calls:
  2807 ;;		_strchr
  2808 ;; This function is called by:
  2809 ;;		_strtok
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813     0F0F                     _strspn:	
  2814                           ;psect for function _strspn
  2815                           
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2819                           ;strspn@s1 stored from wreg
  2820     0F0F  00F9               	movwf	strspn@s1
  2821     0F10                     l1704:
  2822     0F10  01F7               	clrf	strspn@i
  2823     0F11  01F8               	clrf	strspn@i+1
  2824     0F12  2F1D               	goto	l1708
  2825     0F13                     l1706:
  2826     0F13  3001               	movlw	1
  2827     0F14  00FF               	movwf	btemp+1
  2828     0F15  087F               	movf	btemp+1,w
  2829     0F16  07F9               	addwf	strspn@s1,f
  2830     0F17  3001               	movlw	1
  2831     0F18  07F7               	addwf	strspn@i,f
  2832     0F19  1803               	skipnc
  2833     0F1A  0AF8               	incf	strspn@i+1,f
  2834     0F1B  3000               	movlw	0
  2835     0F1C  07F8               	addwf	strspn@i+1,f
  2836     0F1D                     l1708:
  2837     0F1D  0879               	movf	strspn@s1,w
  2838     0F1E  0084               	movwf	4
  2839     0F1F  1383               	bcf	3,7	;select IRP bank0
  2840     0F20  0800               	movf	0,w
  2841     0F21  1903               	btfsc	3,2
  2842     0F22  2F24               	goto	u1301
  2843     0F23  2F25               	goto	u1300
  2844     0F24                     u1301:
  2845     0F24  2F37               	goto	l1712
  2846     0F25                     u1300:
  2847     0F25                     l1710:
  2848     0F25  0879               	movf	strspn@s1,w
  2849     0F26  0084               	movwf	4
  2850     0F27  0800               	movf	0,w
  2851     0F28  00F5               	movwf	??_strspn
  2852     0F29  01F6               	clrf	??_strspn+1
  2853     0F2A  0875               	movf	??_strspn,w
  2854     0F2B  00F0               	movwf	strchr@chr
  2855     0F2C  0876               	movf	??_strspn+1,w
  2856     0F2D  00F1               	movwf	strchr@chr+1
  2857     0F2E  0873               	movf	strspn@s2,w
  2858     0F2F  158A  269C  158A   	fcall	_strchr
  2859     0F32  3A00               	xorlw	0
  2860     0F33  1D03               	skipz
  2861     0F34  2F36               	goto	u1311
  2862     0F35  2F37               	goto	u1310
  2863     0F36                     u1311:
  2864     0F36  2F13               	goto	l1706
  2865     0F37                     u1310:
  2866     0F37                     l1712:
  2867     0F37  0878               	movf	strspn@i+1,w
  2868     0F38  00F4               	movwf	?_strspn+1
  2869     0F39  0877               	movf	strspn@i,w
  2870     0F3A  00F3               	movwf	?_strspn
  2871     0F3B                     l860:
  2872     0F3B  0008               	return
  2873     0F3C                     __end_of_strspn:
  2874                           
  2875                           	psect	text3
  2876     0EE2                     __ptext3:	
  2877 ;; *************** function _strcspn *****************
  2878 ;; Defined at:
  2879 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  s1              1    wreg     PTR const unsigned char 
  2882 ;;		 -> NULL(0), main@tmp(40), 
  2883 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2884 ;;		 -> STR_31(2), STR_22(2), STR_21(2), STR_20(2), 
  2885 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2886 ;;		 -> STR_15(2), STR_11(2), STR_10(2), STR_9(2), 
  2887 ;;		 -> STR_8(2), STR_7(2), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2890 ;;		 -> NULL(0), main@tmp(40), 
  2891 ;;  i               2    7[COMMON] unsigned int 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    3[COMMON] unsigned int 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2901 ;;      Params:         2       0       0       0
  2902 ;;      Locals:         3       0       0       0
  2903 ;;      Temps:          2       0       0       0
  2904 ;;      Totals:         7       0       0       0
  2905 ;;Total ram usage:        7 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 2
  2908 ;; This function calls:
  2909 ;;		_strchr
  2910 ;; This function is called by:
  2911 ;;		_strtok
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915     0EE2                     _strcspn:	
  2916                           ;psect for function _strcspn
  2917                           
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2921                           ;strcspn@s1 stored from wreg
  2922     0EE2  00F9               	movwf	strcspn@s1
  2923     0EE3                     l1716:
  2924     0EE3  01F7               	clrf	strcspn@i
  2925     0EE4  01F8               	clrf	strcspn@i+1
  2926     0EE5  2EF0               	goto	l1720
  2927     0EE6                     l1718:
  2928     0EE6  3001               	movlw	1
  2929     0EE7  00FF               	movwf	btemp+1
  2930     0EE8  087F               	movf	btemp+1,w
  2931     0EE9  07F9               	addwf	strcspn@s1,f
  2932     0EEA  3001               	movlw	1
  2933     0EEB  07F7               	addwf	strcspn@i,f
  2934     0EEC  1803               	skipnc
  2935     0EED  0AF8               	incf	strcspn@i+1,f
  2936     0EEE  3000               	movlw	0
  2937     0EEF  07F8               	addwf	strcspn@i+1,f
  2938     0EF0                     l1720:
  2939     0EF0  0879               	movf	strcspn@s1,w
  2940     0EF1  0084               	movwf	4
  2941     0EF2  1383               	bcf	3,7	;select IRP bank0
  2942     0EF3  0800               	movf	0,w
  2943     0EF4  1903               	btfsc	3,2
  2944     0EF5  2EF7               	goto	u1321
  2945     0EF6  2EF8               	goto	u1320
  2946     0EF7                     u1321:
  2947     0EF7  2F0A               	goto	l1724
  2948     0EF8                     u1320:
  2949     0EF8                     l1722:
  2950     0EF8  0879               	movf	strcspn@s1,w
  2951     0EF9  0084               	movwf	4
  2952     0EFA  0800               	movf	0,w
  2953     0EFB  00F5               	movwf	??_strcspn
  2954     0EFC  01F6               	clrf	??_strcspn+1
  2955     0EFD  0875               	movf	??_strcspn,w
  2956     0EFE  00F0               	movwf	strchr@chr
  2957     0EFF  0876               	movf	??_strcspn+1,w
  2958     0F00  00F1               	movwf	strchr@chr+1
  2959     0F01  0873               	movf	strcspn@s2,w
  2960     0F02  158A  269C  158A   	fcall	_strchr
  2961     0F05  3A00               	xorlw	0
  2962     0F06  1903               	skipnz
  2963     0F07  2F09               	goto	u1331
  2964     0F08  2F0A               	goto	u1330
  2965     0F09                     u1331:
  2966     0F09  2EE6               	goto	l1718
  2967     0F0A                     u1330:
  2968     0F0A                     l1724:
  2969     0F0A  0878               	movf	strcspn@i+1,w
  2970     0F0B  00F4               	movwf	?_strcspn+1
  2971     0F0C  0877               	movf	strcspn@i,w
  2972     0F0D  00F3               	movwf	?_strcspn
  2973     0F0E                     l844:
  2974     0F0E  0008               	return
  2975     0F0F                     __end_of_strcspn:
  2976                           
  2977                           	psect	text4
  2978     0E9C                     __ptext4:	
  2979 ;; *************** function _strchr *****************
  2980 ;; Defined at:
  2981 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  ptr             1    wreg     PTR const unsigned char 
  2984 ;;		 -> STR_31(2), STR_22(2), STR_21(2), STR_20(2), 
  2985 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2986 ;;		 -> STR_15(2), STR_11(2), STR_10(2), STR_9(2), 
  2987 ;;		 -> STR_8(2), STR_7(2), 
  2988 ;;  chr             2    0[COMMON] int 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2991 ;;		 -> STR_31(2), STR_22(2), STR_21(2), STR_20(2), 
  2992 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  2993 ;;		 -> STR_15(2), STR_11(2), STR_10(2), STR_9(2), 
  2994 ;;		 -> STR_8(2), STR_7(2), 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      PTR unsigned char 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, pclath
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3004 ;;      Params:         2       0       0       0
  3005 ;;      Locals:         1       0       0       0
  3006 ;;      Temps:          0       0       0       0
  3007 ;;      Totals:         3       0       0       0
  3008 ;;Total ram usage:        3 bytes
  3009 ;; Hardware stack levels used: 2
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_strcspn
  3014 ;;		_strspn
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018     0E9C                     _strchr:	
  3019                           ;psect for function _strchr
  3020                           
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  3024                           ;strchr@ptr stored from wreg
  3025     0E9C  00F2               	movwf	strchr@ptr
  3026     0E9D                     l847:
  3027     0E9D                     l1576:
  3028     0E9D  0872               	movf	strchr@ptr,w
  3029     0E9E  0084               	movwf	4
  3030     0E9F  118A  200C  158A   	fcall	stringdir
  3031     0EA2  0670               	xorwf	strchr@chr,w
  3032     0EA3  1D03               	skipz
  3033     0EA4  2EA6               	goto	u1061
  3034     0EA5  2EA7               	goto	u1060
  3035     0EA6                     u1061:
  3036     0EA6  2EA9               	goto	l1582
  3037     0EA7                     u1060:
  3038     0EA7                     l1578:
  3039     0EA7  0872               	movf	strchr@ptr,w
  3040     0EA8  2EB7               	goto	l849
  3041     0EA9                     l1582:
  3042     0EA9  3001               	movlw	1
  3043     0EAA  07F2               	addwf	strchr@ptr,f
  3044     0EAB  30FF               	movlw	-1
  3045     0EAC  0772               	addwf	strchr@ptr,w
  3046     0EAD  0084               	movwf	4
  3047     0EAE  118A  200C  158A   	fcall	stringdir
  3048     0EB1  3A00               	xorlw	0
  3049     0EB2  1D03               	skipz
  3050     0EB3  2EB5               	goto	u1071
  3051     0EB4  2EB6               	goto	u1070
  3052     0EB5                     u1071:
  3053     0EB5  2E9D               	goto	l847
  3054     0EB6                     u1070:
  3055     0EB6                     l1584:
  3056     0EB6  3000               	movlw	0
  3057     0EB7                     l849:
  3058     0EB7  0008               	return
  3059     0EB8                     __end_of_strchr:
  3060                           
  3061                           	psect	text5
  3062     0EB8                     __ptext5:	
  3063 ;; *************** function _strcmp *****************
  3064 ;; Defined at:
  3065 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  s1              1    wreg     PTR const unsigned char 
  3068 ;;		 -> main@rcmd(4), 
  3069 ;;  s2              1    0[COMMON] PTR const unsigned char 
  3070 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  3071 ;;		 -> STR_2(4), 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  s1              1    5[COMMON] PTR const unsigned char 
  3074 ;;		 -> main@rcmd(4), 
  3075 ;;  r               1    4[COMMON] char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2    0[COMMON] int 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3085 ;;      Params:         2       0       0       0
  3086 ;;      Locals:         2       0       0       0
  3087 ;;      Temps:          2       0       0       0
  3088 ;;      Totals:         6       0       0       0
  3089 ;;Total ram usage:        6 bytes
  3090 ;; Hardware stack levels used: 2
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098     0EB8                     _strcmp:	
  3099                           ;psect for function _strcmp
  3100                           
  3101                           
  3102                           ;incstack = 0
  3103                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3104                           ;strcmp@s1 stored from wreg
  3105     0EB8  00F5               	movwf	strcmp@s1
  3106     0EB9                     l1798:
  3107     0EB9  2EC2               	goto	l1804
  3108     0EBA                     l1800:
  3109     0EBA  3001               	movlw	1
  3110     0EBB  00FF               	movwf	btemp+1
  3111     0EBC  087F               	movf	btemp+1,w
  3112     0EBD  07F5               	addwf	strcmp@s1,f
  3113     0EBE                     l1802:
  3114     0EBE  3001               	movlw	1
  3115     0EBF  00FF               	movwf	btemp+1
  3116     0EC0  087F               	movf	btemp+1,w
  3117     0EC1  07F0               	addwf	strcmp@s2,f
  3118     0EC2                     l1804:
  3119     0EC2  0870               	movf	strcmp@s2,w
  3120     0EC3  0084               	movwf	4
  3121     0EC4  118A  200C  158A   	fcall	stringdir
  3122     0EC7  00F2               	movwf	??_strcmp
  3123     0EC8  0875               	movf	strcmp@s1,w
  3124     0EC9  0084               	movwf	4
  3125     0ECA  1383               	bcf	3,7	;select IRP bank0
  3126     0ECB  0800               	movf	0,w
  3127     0ECC  00F3               	movwf	??_strcmp+1
  3128     0ECD  0872               	movf	??_strcmp,w
  3129     0ECE  0273               	subwf	??_strcmp+1,w
  3130     0ECF  00F4               	movwf	strcmp@r
  3131     0ED0  0874               	movf	strcmp@r,w
  3132     0ED1  1D03               	btfss	3,2
  3133     0ED2  2ED4               	goto	u1431
  3134     0ED3  2ED5               	goto	u1430
  3135     0ED4                     u1431:
  3136     0ED4  2EDC               	goto	l1808
  3137     0ED5                     u1430:
  3138     0ED5                     l1806:
  3139     0ED5  0875               	movf	strcmp@s1,w
  3140     0ED6  0084               	movwf	4
  3141     0ED7  0800               	movf	0,w
  3142     0ED8  1D03               	btfss	3,2
  3143     0ED9  2EDB               	goto	u1441
  3144     0EDA  2EDC               	goto	u1440
  3145     0EDB                     u1441:
  3146     0EDB  2EBA               	goto	l1800
  3147     0EDC                     u1440:
  3148     0EDC                     l1808:
  3149     0EDC  0874               	movf	strcmp@r,w
  3150     0EDD  00F0               	movwf	?_strcmp
  3151     0EDE  01F1               	clrf	?_strcmp+1
  3152     0EDF  1BF0               	btfsc	?_strcmp,7
  3153     0EE0  03F1               	decf	?_strcmp+1,f
  3154     0EE1                     l820:
  3155     0EE1  0008               	return
  3156     0EE2                     __end_of_strcmp:
  3157                           
  3158                           	psect	text6
  3159     0E5C                     __ptext6:	
  3160 ;; *************** function _puts *****************
  3161 ;; Defined at:
  3162 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  s               1    wreg     PTR const unsigned char 
  3165 ;;		 -> STR_34(2), STR_28(2), STR_24(2), STR_13(2), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  s               1    2[COMMON] PTR const unsigned char 
  3168 ;;		 -> STR_34(2), STR_28(2), STR_24(2), STR_13(2), 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2   30[None  ] int 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3178 ;;      Params:         0       0       0       0
  3179 ;;      Locals:         1       0       0       0
  3180 ;;      Temps:          0       0       0       0
  3181 ;;      Totals:         1       0       0       0
  3182 ;;Total ram usage:        1 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 2
  3185 ;; This function calls:
  3186 ;;		_cputs
  3187 ;;		_putch
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193     0E5C                     _puts:	
  3194                           ;psect for function _puts
  3195                           
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3199                           ;puts@s stored from wreg
  3200     0E5C  00F2               	movwf	puts@s
  3201     0E5D                     l1878:
  3202     0E5D  0872               	movf	puts@s,w
  3203     0E5E  158A  2683  158A   	fcall	_cputs
  3204     0E61                     l1880:
  3205     0E61  300A               	movlw	10
  3206     0E62  158A  2648  158A   	fcall	_putch
  3207     0E65                     l804:
  3208     0E65  0008               	return
  3209     0E66                     __end_of_puts:
  3210                           
  3211                           	psect	text7
  3212     0E83                     __ptext7:	
  3213 ;; *************** function _cputs *****************
  3214 ;; Defined at:
  3215 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  s               1    wreg     PTR const unsigned char 
  3218 ;;		 -> STR_34(2), STR_28(2), STR_24(2), STR_13(2), 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  s               1    1[COMMON] PTR const unsigned char 
  3221 ;;		 -> STR_34(2), STR_28(2), STR_24(2), STR_13(2), 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3231 ;;      Params:         0       0       0       0
  3232 ;;      Locals:         1       0       0       0
  3233 ;;      Temps:          0       0       0       0
  3234 ;;      Totals:         1       0       0       0
  3235 ;;Total ram usage:        1 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 1
  3238 ;; This function calls:
  3239 ;;		_putch
  3240 ;; This function is called by:
  3241 ;;		_puts
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245     0E83                     _cputs:	
  3246                           ;psect for function _cputs
  3247                           
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3251                           ;cputs@s stored from wreg
  3252     0E83  00F1               	movwf	cputs@s
  3253     0E84                     l1696:
  3254     0E84  2E91               	goto	l1702
  3255     0E85                     l1698:
  3256     0E85  0871               	movf	cputs@s,w
  3257     0E86  0084               	movwf	4
  3258     0E87  118A  200C  158A   	fcall	stringdir
  3259     0E8A  158A  2648  158A   	fcall	_putch
  3260     0E8D                     l1700:
  3261     0E8D  3001               	movlw	1
  3262     0E8E  00FF               	movwf	btemp+1
  3263     0E8F  087F               	movf	btemp+1,w
  3264     0E90  07F1               	addwf	cputs@s,f
  3265     0E91                     l1702:
  3266     0E91  0871               	movf	cputs@s,w
  3267     0E92  0084               	movwf	4
  3268     0E93  118A  200C  158A   	fcall	stringdir
  3269     0E96  3A00               	xorlw	0
  3270     0E97  1D03               	skipz
  3271     0E98  2E9A               	goto	u1291
  3272     0E99  2E9B               	goto	u1290
  3273     0E9A                     u1291:
  3274     0E9A  2E85               	goto	l1698
  3275     0E9B                     u1290:
  3276     0E9B                     l812:
  3277     0E9B  0008               	return
  3278     0E9C                     __end_of_cputs:
  3279                           
  3280                           	psect	text8
  3281     01DE                     __ptext8:	
  3282 ;; *************** function _printf *****************
  3283 ;; Defined at:
  3284 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  f               1    wreg     PTR const unsigned char 
  3287 ;;		 -> STR_38(6), STR_37(7), STR_36(11), STR_35(4), 
  3288 ;;		 -> STR_33(9), STR_32(11), STR_30(5), STR_29(4), 
  3289 ;;		 -> STR_27(10), STR_26(5), STR_25(4), STR_23(11), 
  3290 ;;		 -> STR_14(4), STR_12(11), STR_1(4), 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  3293 ;;		 -> STR_38(6), STR_37(7), STR_36(11), STR_35(4), 
  3294 ;;		 -> STR_33(9), STR_32(11), STR_30(5), STR_29(4), 
  3295 ;;		 -> STR_27(10), STR_26(5), STR_25(4), STR_23(11), 
  3296 ;;		 -> STR_14(4), STR_12(11), STR_1(4), 
  3297 ;;  tmpval          4    0        struct .
  3298 ;;  val             2    8[BANK0 ] unsigned int 
  3299 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  3300 ;;		 -> STR_39(7), ?_printf(2), main@tmp(40), 
  3301 ;;  len             2    0        unsigned int 
  3302 ;;  c               1   11[BANK0 ] unsigned char 
  3303 ;;  ap              1    5[BANK0 ] PTR void [1]
  3304 ;;		 -> ?_printf(2), 
  3305 ;;  prec            1    4[BANK0 ] char 
  3306 ;;  flag            1    3[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2   12[COMMON] int 
  3309 ;; Registers used:
  3310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3316 ;;      Params:         2       0       0       0
  3317 ;;      Locals:         0       9       0       0
  3318 ;;      Temps:          0       3       0       0
  3319 ;;      Totals:         2      12       0       0
  3320 ;;Total ram usage:       14 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 1
  3323 ;; This function calls:
  3324 ;;		___lwdiv
  3325 ;;		___lwmod
  3326 ;;		_putch
  3327 ;; This function is called by:
  3328 ;;		_main
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332     01DE                     _printf:	
  3333                           ;psect for function _printf
  3334                           
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3338                           ;printf@f stored from wreg
  3339     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  3340     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  3341     01E0  00AA               	movwf	printf@f
  3342     01E1                     l1734:
  3343                           
  3344                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3345     01E1  307C               	movlw	(low (?_printf| 0))& (0+255)
  3346     01E2  00A5               	movwf	printf@ap
  3347                           
  3348                           ;doprnt.c: 553: while((c = *f++)) {
  3349     01E3  2AB9               	goto	l1796
  3350     01E4                     l1736:
  3351                           
  3352                           ;doprnt.c: 555: if(c != '%')
  3353     01E4  3025               	movlw	37
  3354     01E5  062B               	xorwf	printf@c,w
  3355     01E6  1903               	btfsc	3,2
  3356     01E7  29E9               	goto	u1341
  3357     01E8  29EA               	goto	u1340
  3358     01E9                     u1341:
  3359     01E9  29EF               	goto	l1740
  3360     01EA                     u1340:
  3361     01EA                     l1738:
  3362                           
  3363                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3364     01EA  082B               	movf	printf@c,w
  3365     01EB  158A  2648  118A   	fcall	_putch
  3366                           
  3367                           ;doprnt.c: 559: continue;
  3368     01EE  2AB9               	goto	l1796
  3369     01EF                     l1740:
  3370                           
  3371                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3372     01EF  01A3               	clrf	printf@flag
  3373                           
  3374                           ;doprnt.c: 661: switch(c = *f++) {
  3375     01F0  2A25               	goto	l1758
  3376     01F1                     l1742:
  3377                           
  3378                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3379     01F1  0825               	movf	printf@ap,w
  3380     01F2  0084               	movwf	4
  3381     01F3  0800               	movf	0,w
  3382     01F4  00A6               	movwf	printf@cp
  3383     01F5  3000               	movlw	0
  3384     01F6  00A7               	movwf	printf@cp+1
  3385     01F7                     l1744:
  3386     01F7  3001               	movlw	1
  3387     01F8  00FF               	movwf	btemp+1
  3388     01F9  087F               	movf	btemp+1,w
  3389     01FA  07A5               	addwf	printf@ap,f
  3390     01FB                     l1746:
  3391                           
  3392                           ;doprnt.c: 766: if(!cp)
  3393     01FB  0826               	movf	printf@cp,w
  3394     01FC  0427               	iorwf	printf@cp+1,w
  3395     01FD  1D03               	btfss	3,2
  3396     01FE  2A00               	goto	u1351
  3397     01FF  2A01               	goto	u1350
  3398     0200                     u1351:
  3399     0200  2A18               	goto	l1754
  3400     0201                     u1350:
  3401     0201                     l1748:
  3402                           
  3403                           ;doprnt.c: 767: cp = "(null)";
  3404     0201  3034               	movlw	(low ((STR_39-__stringbase)| (0+32768)))& (0+255)
  3405     0202  00A6               	movwf	printf@cp
  3406     0203  3080               	movlw	128
  3407     0204  00A7               	movwf	printf@cp+1
  3408     0205  2A18               	goto	l1754
  3409     0206                     l1750:
  3410                           
  3411                           ;doprnt.c: 804: (putch(*cp++) );
  3412     0206  0827               	movf	printf@cp+1,w
  3413     0207  00FF               	movwf	btemp+1
  3414     0208  0826               	movf	printf@cp,w
  3415     0209  0084               	movwf	4
  3416     020A  118A  2002  118A   	fcall	stringtab
  3417     020D  158A  2648  118A   	fcall	_putch
  3418     0210                     l1752:
  3419     0210  3001               	movlw	1
  3420     0211  1283               	bcf	3,5	;RP0=0, select bank0
  3421     0212  1303               	bcf	3,6	;RP1=0, select bank0
  3422     0213  07A6               	addwf	printf@cp,f
  3423     0214  1803               	skipnc
  3424     0215  0AA7               	incf	printf@cp+1,f
  3425     0216  3000               	movlw	0
  3426     0217  07A7               	addwf	printf@cp+1,f
  3427     0218                     l1754:
  3428     0218  0827               	movf	printf@cp+1,w
  3429     0219  00FF               	movwf	btemp+1
  3430     021A  0826               	movf	printf@cp,w
  3431     021B  0084               	movwf	4
  3432     021C  118A  2002  118A   	fcall	stringtab
  3433     021F  3A00               	xorlw	0
  3434     0220  1D03               	skipz
  3435     0221  2A23               	goto	u1361
  3436     0222  2A24               	goto	u1360
  3437     0223                     u1361:
  3438     0223  2A06               	goto	l1750
  3439     0224                     u1360:
  3440     0224  2AB9               	goto	l1796
  3441     0225                     l1758:
  3442     0225  3001               	movlw	1
  3443     0226  07AA               	addwf	printf@f,f
  3444     0227  30FF               	movlw	-1
  3445     0228  072A               	addwf	printf@f,w
  3446     0229  0084               	movwf	4
  3447     022A  118A  200C  118A   	fcall	stringdir
  3448     022D  00AB               	movwf	printf@c
  3449                           
  3450                           ; Switch size 1, requested type "simple"
  3451                           ; Number of cases is 4, Range of values is 0 to 115
  3452                           ; switch strategies available:
  3453                           ; Name         Instructions Cycles
  3454                           ; simple_byte           13     7 (average)
  3455                           ; direct_byte          239     7 (fixed)
  3456                           ; jumptable            260     6 (fixed)
  3457                           ;	Chosen strategy is simple_byte
  3458     022E  3A00               	xorlw	0	; case 0
  3459     022F  1903               	skipnz
  3460     0230  2AC9               	goto	l300
  3461     0231  3A64               	xorlw	100	; case 100
  3462     0232  1903               	skipnz
  3463     0233  2A3B               	goto	l1760
  3464     0234  3A0D               	xorlw	13	; case 105
  3465     0235  1903               	skipnz
  3466     0236  2A3B               	goto	l1760
  3467     0237  3A1A               	xorlw	26	; case 115
  3468     0238  1903               	skipnz
  3469     0239  29F1               	goto	l1742
  3470     023A  2AB9               	goto	l1796
  3471     023B                     l1760:
  3472                           
  3473                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3474     023B  0825               	movf	printf@ap,w
  3475     023C  0084               	movwf	4
  3476     023D  0800               	movf	0,w
  3477     023E  00A8               	movwf	printf@val
  3478     023F  0A84               	incf	4,f
  3479     0240  0800               	movf	0,w
  3480     0241  00A9               	movwf	printf@val+1
  3481     0242                     l1762:
  3482     0242  3002               	movlw	2
  3483     0243  00FF               	movwf	btemp+1
  3484     0244  087F               	movf	btemp+1,w
  3485     0245  07A5               	addwf	printf@ap,f
  3486     0246                     l1764:
  3487                           
  3488                           ;doprnt.c: 1287: if((int)val < 0) {
  3489     0246  1FA9               	btfss	printf@val+1,7
  3490     0247  2A49               	goto	u1371
  3491     0248  2A4A               	goto	u1370
  3492     0249                     u1371:
  3493     0249  2A53               	goto	l1770
  3494     024A                     u1370:
  3495     024A                     l1766:
  3496                           
  3497                           ;doprnt.c: 1288: flag |= 0x03;
  3498     024A  3003               	movlw	3
  3499     024B  00FF               	movwf	btemp+1
  3500     024C  087F               	movf	btemp+1,w
  3501     024D  04A3               	iorwf	printf@flag,f
  3502     024E                     l1768:
  3503                           
  3504                           ;doprnt.c: 1289: val = -val;
  3505     024E  09A8               	comf	printf@val,f
  3506     024F  09A9               	comf	printf@val+1,f
  3507     0250  0AA8               	incf	printf@val,f
  3508     0251  1903               	skipnz
  3509     0252  0AA9               	incf	printf@val+1,f
  3510     0253                     l1770:
  3511                           
  3512                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3513     0253  01AB               	clrf	printf@c
  3514     0254  0AAB               	incf	printf@c,f
  3515     0255                     l1776:
  3516                           
  3517                           ;doprnt.c: 1332: if(val < dpowers[c])
  3518     0255  082B               	movf	printf@c,w
  3519     0256  00A0               	movwf	??_printf
  3520     0257  0720               	addwf	??_printf,w
  3521     0258  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3522     0259  0084               	movwf	4
  3523     025A  118A  200C  118A   	fcall	stringdir
  3524     025D  00A1               	movwf	??_printf+1
  3525     025E  118A  200C  118A   	fcall	stringdir
  3526     0261  00A2               	movwf	??_printf+2
  3527     0262  0822               	movf	??_printf+2,w
  3528     0263  0229               	subwf	printf@val+1,w
  3529     0264  1D03               	skipz
  3530     0265  2A68               	goto	u1385
  3531     0266  0821               	movf	??_printf+1,w
  3532     0267  0228               	subwf	printf@val,w
  3533     0268                     u1385:
  3534     0268  1803               	skipnc
  3535     0269  2A6B               	goto	u1381
  3536     026A  2A6C               	goto	u1380
  3537     026B                     u1381:
  3538     026B  2A6D               	goto	l1780
  3539     026C                     u1380:
  3540     026C  2A77               	goto	l1784
  3541     026D                     l1780:
  3542     026D  3001               	movlw	1
  3543     026E  00FF               	movwf	btemp+1
  3544     026F  087F               	movf	btemp+1,w
  3545     0270  07AB               	addwf	printf@c,f
  3546     0271                     l1782:
  3547     0271  3005               	movlw	5
  3548     0272  062B               	xorwf	printf@c,w
  3549     0273  1D03               	btfss	3,2
  3550     0274  2A76               	goto	u1391
  3551     0275  2A77               	goto	u1390
  3552     0276                     u1391:
  3553     0276  2A55               	goto	l1776
  3554     0277                     u1390:
  3555     0277                     l1784:
  3556                           
  3557                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3558     0277  0823               	movf	printf@flag,w
  3559     0278  3903               	andlw	3
  3560     0279  1903               	btfsc	3,2
  3561     027A  2A7C               	goto	u1401
  3562     027B  2A7D               	goto	u1400
  3563     027C                     u1401:
  3564     027C  2A81               	goto	l1788
  3565     027D                     u1400:
  3566     027D                     l1786:
  3567                           
  3568                           ;doprnt.c: 1465: (putch('-') );
  3569     027D  302D               	movlw	45
  3570     027E  158A  2648  118A   	fcall	_putch
  3571     0281                     l1788:
  3572                           
  3573                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3574     0281  1283               	bcf	3,5	;RP0=0, select bank0
  3575     0282  1303               	bcf	3,6	;RP1=0, select bank0
  3576     0283  082B               	movf	printf@c,w
  3577     0284  00A4               	movwf	printf@prec
  3578                           
  3579                           ;doprnt.c: 1500: while(prec--) {
  3580     0285  2AAE               	goto	l1794
  3581     0286                     l1790:
  3582                           
  3583                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3584     0286  300A               	movlw	10
  3585     0287  00F7               	movwf	___lwmod@divisor
  3586     0288  3000               	movlw	0
  3587     0289  00F8               	movwf	___lwmod@divisor+1
  3588     028A  0824               	movf	printf@prec,w
  3589     028B  00A0               	movwf	??_printf
  3590     028C  0720               	addwf	??_printf,w
  3591     028D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3592     028E  0084               	movwf	4
  3593     028F  118A  200C  118A   	fcall	stringdir
  3594     0292  00F0               	movwf	___lwdiv@divisor
  3595     0293  118A  200C  118A   	fcall	stringdir
  3596     0296  00F1               	movwf	___lwdiv@divisor+1
  3597     0297  0829               	movf	printf@val+1,w
  3598     0298  00F3               	movwf	___lwdiv@dividend+1
  3599     0299  0828               	movf	printf@val,w
  3600     029A  00F2               	movwf	___lwdiv@dividend
  3601     029B  158A  2776  118A   	fcall	___lwdiv
  3602     029E  0871               	movf	?___lwdiv+1,w
  3603     029F  00FA               	movwf	___lwmod@dividend+1
  3604     02A0  0870               	movf	?___lwdiv,w
  3605     02A1  00F9               	movwf	___lwmod@dividend
  3606     02A2  158A  273C  118A   	fcall	___lwmod
  3607     02A5  0877               	movf	?___lwmod,w
  3608     02A6  3E30               	addlw	48
  3609     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3610     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3611     02A9  00AB               	movwf	printf@c
  3612     02AA                     l1792:
  3613                           
  3614                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  3615     02AA  082B               	movf	printf@c,w
  3616     02AB  158A  2648  118A   	fcall	_putch
  3617     02AE                     l1794:
  3618     02AE  30FF               	movlw	255
  3619     02AF  00FF               	movwf	btemp+1
  3620     02B0  087F               	movf	btemp+1,w
  3621     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3622     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3623     02B3  07A4               	addwf	printf@prec,f
  3624     02B4  0A24               	incf	printf@prec,w
  3625     02B5  1D03               	btfss	3,2
  3626     02B6  2AB8               	goto	u1411
  3627     02B7  2AB9               	goto	u1410
  3628     02B8                     u1411:
  3629     02B8  2A86               	goto	l1790
  3630     02B9                     u1410:
  3631     02B9                     l1796:
  3632     02B9  3001               	movlw	1
  3633     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3634     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3635     02BC  07AA               	addwf	printf@f,f
  3636     02BD  30FF               	movlw	-1
  3637     02BE  072A               	addwf	printf@f,w
  3638     02BF  0084               	movwf	4
  3639     02C0  118A  200C  118A   	fcall	stringdir
  3640     02C3  00AB               	movwf	printf@c
  3641     02C4  082B               	movf	printf@c,w
  3642     02C5  1D03               	btfss	3,2
  3643     02C6  2AC8               	goto	u1421
  3644     02C7  2AC9               	goto	u1420
  3645     02C8                     u1421:
  3646     02C8  29E4               	goto	l1736
  3647     02C9                     u1420:
  3648     02C9                     l300:
  3649     02C9  0008               	return
  3650     02CA                     __end_of_printf:
  3651                           
  3652                           	psect	text9
  3653     0F3C                     __ptext9:	
  3654 ;; *************** function ___lwmod *****************
  3655 ;; Defined at:
  3656 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  divisor         2    7[COMMON] unsigned int 
  3659 ;;  dividend        2    9[COMMON] unsigned int 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  counter         1   11[COMMON] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  2    7[COMMON] unsigned int 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, btemp+1
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3671 ;;      Params:         4       0       0       0
  3672 ;;      Locals:         1       0       0       0
  3673 ;;      Temps:          0       0       0       0
  3674 ;;      Totals:         5       0       0       0
  3675 ;;Total ram usage:        5 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_printf
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684     0F3C                     ___lwmod:	
  3685                           ;psect for function ___lwmod
  3686                           
  3687     0F3C                     l1628:	
  3688                           ;incstack = 0
  3689                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3690                           
  3691     0F3C  0877               	movf	___lwmod@divisor,w
  3692     0F3D  0478               	iorwf	___lwmod@divisor+1,w
  3693     0F3E  1903               	btfsc	3,2
  3694     0F3F  2F41               	goto	u1191
  3695     0F40  2F42               	goto	u1190
  3696     0F41                     u1191:
  3697     0F41  2F71               	goto	l1646
  3698     0F42                     u1190:
  3699     0F42                     l1630:
  3700     0F42  01FB               	clrf	___lwmod@counter
  3701     0F43  0AFB               	incf	___lwmod@counter,f
  3702     0F44  2F50               	goto	l1636
  3703     0F45                     l1632:
  3704     0F45  3001               	movlw	1
  3705     0F46                     u1205:
  3706     0F46  1003               	clrc
  3707     0F47  0DF7               	rlf	___lwmod@divisor,f
  3708     0F48  0DF8               	rlf	___lwmod@divisor+1,f
  3709     0F49  3EFF               	addlw	-1
  3710     0F4A  1D03               	skipz
  3711     0F4B  2F46               	goto	u1205
  3712     0F4C                     l1634:
  3713     0F4C  3001               	movlw	1
  3714     0F4D  00FF               	movwf	btemp+1
  3715     0F4E  087F               	movf	btemp+1,w
  3716     0F4F  07FB               	addwf	___lwmod@counter,f
  3717     0F50                     l1636:
  3718     0F50  1FF8               	btfss	___lwmod@divisor+1,7
  3719     0F51  2F53               	goto	u1211
  3720     0F52  2F54               	goto	u1210
  3721     0F53                     u1211:
  3722     0F53  2F45               	goto	l1632
  3723     0F54                     u1210:
  3724     0F54                     l1638:
  3725     0F54  0878               	movf	___lwmod@divisor+1,w
  3726     0F55  027A               	subwf	___lwmod@dividend+1,w
  3727     0F56  1D03               	skipz
  3728     0F57  2F5A               	goto	u1225
  3729     0F58  0877               	movf	___lwmod@divisor,w
  3730     0F59  0279               	subwf	___lwmod@dividend,w
  3731     0F5A                     u1225:
  3732     0F5A  1C03               	skipc
  3733     0F5B  2F5D               	goto	u1221
  3734     0F5C  2F5E               	goto	u1220
  3735     0F5D                     u1221:
  3736     0F5D  2F64               	goto	l1642
  3737     0F5E                     u1220:
  3738     0F5E                     l1640:
  3739     0F5E  0877               	movf	___lwmod@divisor,w
  3740     0F5F  02F9               	subwf	___lwmod@dividend,f
  3741     0F60  0878               	movf	___lwmod@divisor+1,w
  3742     0F61  1C03               	skipc
  3743     0F62  03FA               	decf	___lwmod@dividend+1,f
  3744     0F63  02FA               	subwf	___lwmod@dividend+1,f
  3745     0F64                     l1642:
  3746     0F64  3001               	movlw	1
  3747     0F65                     u1235:
  3748     0F65  1003               	clrc
  3749     0F66  0CF8               	rrf	___lwmod@divisor+1,f
  3750     0F67  0CF7               	rrf	___lwmod@divisor,f
  3751     0F68  3EFF               	addlw	-1
  3752     0F69  1D03               	skipz
  3753     0F6A  2F65               	goto	u1235
  3754     0F6B                     l1644:
  3755     0F6B  3001               	movlw	1
  3756     0F6C  02FB               	subwf	___lwmod@counter,f
  3757     0F6D  1D03               	btfss	3,2
  3758     0F6E  2F70               	goto	u1241
  3759     0F6F  2F71               	goto	u1240
  3760     0F70                     u1241:
  3761     0F70  2F54               	goto	l1638
  3762     0F71                     u1240:
  3763     0F71                     l1646:
  3764     0F71  087A               	movf	___lwmod@dividend+1,w
  3765     0F72  00F8               	movwf	?___lwmod+1
  3766     0F73  0879               	movf	___lwmod@dividend,w
  3767     0F74  00F7               	movwf	?___lwmod
  3768     0F75                     l586:
  3769     0F75  0008               	return
  3770     0F76                     __end_of___lwmod:
  3771                           
  3772                           	psect	text10
  3773     0F76                     __ptext10:	
  3774 ;; *************** function ___lwdiv *****************
  3775 ;; Defined at:
  3776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  divisor         2    0[COMMON] unsigned int 
  3779 ;;  dividend        2    2[COMMON] unsigned int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  quotient        2    4[COMMON] unsigned int 
  3782 ;;  counter         1    6[COMMON] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2    0[COMMON] unsigned int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, btemp+1
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3792 ;;      Params:         4       0       0       0
  3793 ;;      Locals:         3       0       0       0
  3794 ;;      Temps:          0       0       0       0
  3795 ;;      Totals:         7       0       0       0
  3796 ;;Total ram usage:        7 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_printf
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     0F76                     ___lwdiv:	
  3806                           ;psect for function ___lwdiv
  3807                           
  3808     0F76                     l1602:	
  3809                           ;incstack = 0
  3810                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3811                           
  3812     0F76  01F4               	clrf	___lwdiv@quotient
  3813     0F77  01F5               	clrf	___lwdiv@quotient+1
  3814     0F78                     l1604:
  3815     0F78  0870               	movf	___lwdiv@divisor,w
  3816     0F79  0471               	iorwf	___lwdiv@divisor+1,w
  3817     0F7A  1903               	btfsc	3,2
  3818     0F7B  2F7D               	goto	u1121
  3819     0F7C  2F7E               	goto	u1120
  3820     0F7D                     u1121:
  3821     0F7D  2FB5               	goto	l1624
  3822     0F7E                     u1120:
  3823     0F7E                     l1606:
  3824     0F7E  01F6               	clrf	___lwdiv@counter
  3825     0F7F  0AF6               	incf	___lwdiv@counter,f
  3826     0F80  2F8C               	goto	l1612
  3827     0F81                     l1608:
  3828     0F81  3001               	movlw	1
  3829     0F82                     u1135:
  3830     0F82  1003               	clrc
  3831     0F83  0DF0               	rlf	___lwdiv@divisor,f
  3832     0F84  0DF1               	rlf	___lwdiv@divisor+1,f
  3833     0F85  3EFF               	addlw	-1
  3834     0F86  1D03               	skipz
  3835     0F87  2F82               	goto	u1135
  3836     0F88                     l1610:
  3837     0F88  3001               	movlw	1
  3838     0F89  00FF               	movwf	btemp+1
  3839     0F8A  087F               	movf	btemp+1,w
  3840     0F8B  07F6               	addwf	___lwdiv@counter,f
  3841     0F8C                     l1612:
  3842     0F8C  1FF1               	btfss	___lwdiv@divisor+1,7
  3843     0F8D  2F8F               	goto	u1141
  3844     0F8E  2F90               	goto	u1140
  3845     0F8F                     u1141:
  3846     0F8F  2F81               	goto	l1608
  3847     0F90                     u1140:
  3848     0F90                     l1614:
  3849     0F90  3001               	movlw	1
  3850     0F91                     u1155:
  3851     0F91  1003               	clrc
  3852     0F92  0DF4               	rlf	___lwdiv@quotient,f
  3853     0F93  0DF5               	rlf	___lwdiv@quotient+1,f
  3854     0F94  3EFF               	addlw	-1
  3855     0F95  1D03               	skipz
  3856     0F96  2F91               	goto	u1155
  3857     0F97  0871               	movf	___lwdiv@divisor+1,w
  3858     0F98  0273               	subwf	___lwdiv@dividend+1,w
  3859     0F99  1D03               	skipz
  3860     0F9A  2F9D               	goto	u1165
  3861     0F9B  0870               	movf	___lwdiv@divisor,w
  3862     0F9C  0272               	subwf	___lwdiv@dividend,w
  3863     0F9D                     u1165:
  3864     0F9D  1C03               	skipc
  3865     0F9E  2FA0               	goto	u1161
  3866     0F9F  2FA1               	goto	u1160
  3867     0FA0                     u1161:
  3868     0FA0  2FA8               	goto	l1620
  3869     0FA1                     u1160:
  3870     0FA1                     l1616:
  3871     0FA1  0870               	movf	___lwdiv@divisor,w
  3872     0FA2  02F2               	subwf	___lwdiv@dividend,f
  3873     0FA3  0871               	movf	___lwdiv@divisor+1,w
  3874     0FA4  1C03               	skipc
  3875     0FA5  03F3               	decf	___lwdiv@dividend+1,f
  3876     0FA6  02F3               	subwf	___lwdiv@dividend+1,f
  3877     0FA7                     l1618:
  3878     0FA7  1474               	bsf	___lwdiv@quotient,0
  3879     0FA8                     l1620:
  3880     0FA8  3001               	movlw	1
  3881     0FA9                     u1175:
  3882     0FA9  1003               	clrc
  3883     0FAA  0CF1               	rrf	___lwdiv@divisor+1,f
  3884     0FAB  0CF0               	rrf	___lwdiv@divisor,f
  3885     0FAC  3EFF               	addlw	-1
  3886     0FAD  1D03               	skipz
  3887     0FAE  2FA9               	goto	u1175
  3888     0FAF                     l1622:
  3889     0FAF  3001               	movlw	1
  3890     0FB0  02F6               	subwf	___lwdiv@counter,f
  3891     0FB1  1D03               	btfss	3,2
  3892     0FB2  2FB4               	goto	u1181
  3893     0FB3  2FB5               	goto	u1180
  3894     0FB4                     u1181:
  3895     0FB4  2F90               	goto	l1614
  3896     0FB5                     u1180:
  3897     0FB5                     l1624:
  3898     0FB5  0875               	movf	___lwdiv@quotient+1,w
  3899     0FB6  00F1               	movwf	?___lwdiv+1
  3900     0FB7  0874               	movf	___lwdiv@quotient,w
  3901     0FB8  00F0               	movwf	?___lwdiv
  3902     0FB9                     l576:
  3903     0FB9  0008               	return
  3904     0FBA                     __end_of___lwdiv:
  3905                           
  3906                           	psect	text11
  3907     0E66                     __ptext11:	
  3908 ;; *************** function _initUART *****************
  3909 ;; Defined at:
  3910 ;;		line 6 in file "uart.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3924 ;;      Params:         0       0       0       0
  3925 ;;      Locals:         0       0       0       0
  3926 ;;      Temps:          0       0       0       0
  3927 ;;      Totals:         0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937     0E66                     _initUART:	
  3938                           ;psect for function _initUART
  3939                           
  3940     0E66                     l1728:	
  3941                           ;incstack = 0
  3942                           ; Regs used in _initUART: [wreg]
  3943                           
  3944                           
  3945                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  3946     0E66  3019               	movlw	25
  3947     0E67  1683               	bsf	3,5	;RP0=1, select bank1
  3948     0E68  1303               	bcf	3,6	;RP1=0, select bank1
  3949     0E69  0099               	movwf	25	;volatile
  3950                           
  3951                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  3952     0E6A  3024               	movlw	36
  3953     0E6B  0098               	movwf	24	;volatile
  3954                           
  3955                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  3956     0E6C  3090               	movlw	144
  3957     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3958     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3959     0E6F  0098               	movwf	24	;volatile
  3960     0E70                     l168:
  3961     0E70  0008               	return
  3962     0E71                     __end_of_initUART:
  3963                           
  3964                           	psect	text12
  3965     0E3A                     __ptext12:	
  3966 ;; *************** function _gets *****************
  3967 ;; Defined at:
  3968 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  s               1    wreg     PTR unsigned char 
  3971 ;;		 -> main@tmp(40), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  s               1    8[COMMON] PTR unsigned char 
  3974 ;;		 -> main@tmp(40), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      PTR unsigned char 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3984 ;;      Params:         0       0       0       0
  3985 ;;      Locals:         1       0       0       0
  3986 ;;      Temps:          0       0       0       0
  3987 ;;      Totals:         1       0       0       0
  3988 ;;Total ram usage:        1 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 3
  3991 ;; This function calls:
  3992 ;;		_cgets
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998     0E3A                     _gets:	
  3999                           ;psect for function _gets
  4000                           
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4004                           ;gets@s stored from wreg
  4005     0E3A  00F8               	movwf	gets@s
  4006     0E3B                     l1730:
  4007                           
  4008                           ;	Return value of _gets is never used
  4009     0E3B  0878               	movf	gets@s,w
  4010     0E3C  118A  20A9  158A   	fcall	_cgets
  4011     0E3F                     l772:
  4012     0E3F  0008               	return
  4013     0E40                     __end_of_gets:
  4014                           
  4015                           	psect	text13
  4016     00A9                     __ptext13:	
  4017 ;; *************** function _cgets *****************
  4018 ;; Defined at:
  4019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  s               1    wreg     PTR unsigned char 
  4022 ;;		 -> main@tmp(40), 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  s               1    6[COMMON] PTR unsigned char 
  4025 ;;		 -> main@tmp(40), 
  4026 ;;  c               2    4[COMMON] int 
  4027 ;;  s1              1    7[COMMON] PTR unsigned char 
  4028 ;;		 -> main@tmp(40), 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      PTR unsigned char 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4038 ;;      Params:         0       0       0       0
  4039 ;;      Locals:         4       0       0       0
  4040 ;;      Temps:          2       0       0       0
  4041 ;;      Totals:         6       0       0       0
  4042 ;;Total ram usage:        6 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 2
  4045 ;; This function calls:
  4046 ;;		_getche
  4047 ;;		_putch
  4048 ;; This function is called by:
  4049 ;;		_gets
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053     00A9                     _cgets:	
  4054                           ;psect for function _cgets
  4055                           
  4056                           
  4057                           ;incstack = 0
  4058                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4059                           ;cgets@s stored from wreg
  4060     00A9  00F6               	movwf	cgets@s
  4061     00AA                     l1662:
  4062     00AA  0876               	movf	cgets@s,w
  4063     00AB  00F7               	movwf	cgets@s1
  4064     00AC  28E3               	goto	l1690
  4065     00AD                     l1664:
  4066     00AD  0876               	movf	cgets@s,w
  4067     00AE  0677               	xorwf	cgets@s1,w
  4068     00AF  1D03               	skipz
  4069     00B0  28B2               	goto	u1271
  4070     00B1  28B3               	goto	u1270
  4071     00B2                     u1271:
  4072     00B2  28B4               	goto	l1668
  4073     00B3                     u1270:
  4074     00B3  28E3               	goto	l1690
  4075     00B4                     l1668:
  4076     00B4  3020               	movlw	32
  4077     00B5  158A  2648  118A   	fcall	_putch
  4078     00B8  3008               	movlw	8
  4079     00B9  158A  2648  118A   	fcall	_putch
  4080     00BC                     l1670:
  4081     00BC  3001               	movlw	1
  4082     00BD  02F7               	subwf	cgets@s1,f
  4083     00BE  28E3               	goto	l1690
  4084     00BF                     l1672:
  4085     00BF  3008               	movlw	8
  4086     00C0  158A  2648  118A   	fcall	_putch
  4087     00C3  3020               	movlw	32
  4088     00C4  158A  2648  118A   	fcall	_putch
  4089     00C7  3008               	movlw	8
  4090     00C8  158A  2648  118A   	fcall	_putch
  4091     00CB                     l1674:
  4092     00CB  3001               	movlw	1
  4093     00CC  02F7               	subwf	cgets@s1,f
  4094     00CD                     l1676:
  4095     00CD  0877               	movf	cgets@s1,w
  4096     00CE  0276               	subwf	cgets@s,w
  4097     00CF  1C03               	skipc
  4098     00D0  28D2               	goto	u1281
  4099     00D1  28D3               	goto	u1280
  4100     00D2                     u1281:
  4101     00D2  28BF               	goto	l1672
  4102     00D3                     u1280:
  4103     00D3  28E3               	goto	l1690
  4104     00D4                     l1678:
  4105     00D4  0877               	movf	cgets@s1,w
  4106     00D5  0084               	movwf	4
  4107     00D6  1383               	bcf	3,7	;select IRP bank0
  4108     00D7  0180               	clrf	0
  4109     00D8                     l1680:
  4110     00D8  0876               	movf	cgets@s,w
  4111     00D9  28FF               	goto	l790
  4112     00DA                     l1684:
  4113     00DA  0877               	movf	cgets@s1,w
  4114     00DB  0084               	movwf	4
  4115     00DC  0874               	movf	cgets@c,w
  4116     00DD  1383               	bcf	3,7	;select IRP bank0
  4117     00DE  0080               	movwf	0
  4118     00DF                     l1686:
  4119     00DF  3001               	movlw	1
  4120     00E0  00FF               	movwf	btemp+1
  4121     00E1  087F               	movf	btemp+1,w
  4122     00E2  07F7               	addwf	cgets@s1,f
  4123     00E3                     l1690:
  4124     00E3  158A  2652  118A   	fcall	_getche
  4125     00E6  00F2               	movwf	??_cgets
  4126     00E7  01F3               	clrf	??_cgets+1
  4127     00E8  0872               	movf	??_cgets,w
  4128     00E9  00F4               	movwf	cgets@c
  4129     00EA  0873               	movf	??_cgets+1,w
  4130     00EB  00F5               	movwf	cgets@c+1
  4131                           
  4132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4133                           ; Switch size 1, requested type "simple"
  4134                           ; Number of cases is 1, Range of values is 0 to 0
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte            4     3 (average)
  4138                           ; direct_byte            9     7 (fixed)
  4139                           ; jumptable            260     6 (fixed)
  4140                           ;	Chosen strategy is simple_byte
  4141     00EC  0875               	movf	cgets@c+1,w
  4142     00ED  3A00               	xorlw	0	; case 0
  4143     00EE  1903               	skipnz
  4144     00EF  28F1               	goto	l2198
  4145     00F0  28DA               	goto	l1684
  4146     00F1                     l2198:
  4147                           
  4148                           ; Switch size 1, requested type "simple"
  4149                           ; Number of cases is 4, Range of values is 8 to 21
  4150                           ; switch strategies available:
  4151                           ; Name         Instructions Cycles
  4152                           ; simple_byte           13     7 (average)
  4153                           ; direct_byte           38    10 (fixed)
  4154                           ; jumptable            263     9 (fixed)
  4155                           ;	Chosen strategy is simple_byte
  4156     00F1  0874               	movf	cgets@c,w
  4157     00F2  3A08               	xorlw	8	; case 8
  4158     00F3  1903               	skipnz
  4159     00F4  28AD               	goto	l1664
  4160     00F5  3A02               	xorlw	2	; case 10
  4161     00F6  1903               	skipnz
  4162     00F7  28D4               	goto	l1678
  4163     00F8  3A07               	xorlw	7	; case 13
  4164     00F9  1903               	skipnz
  4165     00FA  28D4               	goto	l1678
  4166     00FB  3A18               	xorlw	24	; case 21
  4167     00FC  1903               	skipnz
  4168     00FD  28CD               	goto	l1676
  4169     00FE  28DA               	goto	l1684
  4170     00FF                     l790:
  4171     00FF  0008               	return
  4172     0100                     __end_of_cgets:
  4173                           
  4174                           	psect	text14
  4175     0E52                     __ptext14:	
  4176 ;; *************** function _getche *****************
  4177 ;; Defined at:
  4178 ;;		line 28 in file "uart.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  c               1    1[COMMON] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      unsigned char 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4192 ;;      Params:         0       0       0       0
  4193 ;;      Locals:         1       0       0       0
  4194 ;;      Temps:          0       0       0       0
  4195 ;;      Totals:         1       0       0       0
  4196 ;;Total ram usage:        1 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 1
  4199 ;; This function calls:
  4200 ;;		_getch
  4201 ;;		_putch
  4202 ;; This function is called by:
  4203 ;;		_cgets
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207     0E52                     _getche:	
  4208                           ;psect for function _getche
  4209                           
  4210     0E52                     l1568:	
  4211                           ;incstack = 0
  4212                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  4213                           
  4214                           
  4215                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  4216     0E52  158A  2640  158A   	fcall	_getch
  4217     0E55  00F1               	movwf	getche@c
  4218     0E56                     l1570:
  4219                           
  4220                           ;uart.c: 33: putch(c);
  4221     0E56  0871               	movf	getche@c,w
  4222     0E57  158A  2648  158A   	fcall	_putch
  4223     0E5A                     l1572:
  4224                           
  4225                           ;uart.c: 35: return c;
  4226     0E5A  0871               	movf	getche@c,w
  4227     0E5B                     l183:
  4228     0E5B  0008               	return
  4229     0E5C                     __end_of_getche:
  4230                           
  4231                           	psect	text15
  4232     0E48                     __ptext15:	
  4233 ;; *************** function _putch *****************
  4234 ;; Defined at:
  4235 ;;		line 13 in file "uart.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  byte            1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  byte            1    0[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4249 ;;      Params:         0       0       0       0
  4250 ;;      Locals:         1       0       0       0
  4251 ;;      Temps:          0       0       0       0
  4252 ;;      Totals:         1       0       0       0
  4253 ;;Total ram usage:        1 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_getche
  4259 ;;		_printf
  4260 ;;		_cgets
  4261 ;;		_puts
  4262 ;;		_cputs
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266     0E48                     _putch:	
  4267                           ;psect for function _putch
  4268                           
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _putch: [wreg]
  4272                           ;putch@byte stored from wreg
  4273     0E48  00F0               	movwf	putch@byte
  4274     0E49                     l1558:
  4275     0E49                     l171:	
  4276                           ;uart.c: 15: while(!TXIF){
  4277                           
  4278     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  4279     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4280     0E4B  1E0C               	btfss	12,4	;volatile
  4281     0E4C  2E4E               	goto	u1041
  4282     0E4D  2E4F               	goto	u1040
  4283     0E4E                     u1041:
  4284     0E4E  2E49               	goto	l171
  4285     0E4F                     u1040:
  4286     0E4F                     l1560:
  4287                           
  4288                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  4289     0E4F  0870               	movf	putch@byte,w
  4290     0E50  0099               	movwf	25	;volatile
  4291     0E51                     l174:
  4292     0E51  0008               	return
  4293     0E52                     __end_of_putch:
  4294                           
  4295                           	psect	text16
  4296     0E40                     __ptext16:	
  4297 ;; *************** function _getch *****************
  4298 ;; Defined at:
  4299 ;;		line 20 in file "uart.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      unsigned char 
  4306 ;; Registers used:
  4307 ;;		wreg
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4313 ;;      Params:         0       0       0       0
  4314 ;;      Locals:         0       0       0       0
  4315 ;;      Temps:          0       0       0       0
  4316 ;;      Totals:         0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_getche
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326     0E40                     _getch:	
  4327                           ;psect for function _getch
  4328                           
  4329     0E40                     l1562:	
  4330                           ;incstack = 0
  4331                           ; Regs used in _getch: [wreg]
  4332                           
  4333     0E40                     l177:	
  4334                           ;uart.c: 22: while(!RCIF){
  4335                           
  4336     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4337     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4338     0E42  1E8C               	btfss	12,5	;volatile
  4339     0E43  2E45               	goto	u1051
  4340     0E44  2E46               	goto	u1050
  4341     0E45                     u1051:
  4342     0E45  2E40               	goto	l177
  4343     0E46                     u1050:
  4344     0E46                     l1564:
  4345                           
  4346                           ;uart.c: 23: };uart.c: 25: return RCREG;
  4347     0E46  081A               	movf	26,w	;volatile
  4348     0E47                     l180:
  4349     0E47  0008               	return
  4350     0E48                     __end_of_getch:
  4351                           
  4352                           	psect	text17
  4353     0167                     __ptext17:	
  4354 ;; *************** function _atoi *****************
  4355 ;; Defined at:
  4356 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  s               1    wreg     PTR const unsigned char 
  4359 ;;		 -> NULL(0), main@tmp(40), 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  s               1   13[COMMON] PTR const unsigned char 
  4362 ;;		 -> NULL(0), main@tmp(40), 
  4363 ;;  a               2   11[COMMON] int 
  4364 ;;  sign            1   10[COMMON] unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  2    6[COMMON] int 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4374 ;;      Params:         2       0       0       0
  4375 ;;      Locals:         4       0       0       0
  4376 ;;      Temps:          2       0       0       0
  4377 ;;      Totals:         8       0       0       0
  4378 ;;Total ram usage:        8 bytes
  4379 ;; Hardware stack levels used: 1
  4380 ;; Hardware stack levels required when called: 1
  4381 ;; This function calls:
  4382 ;;		___wmul
  4383 ;;		_isdigit
  4384 ;; This function is called by:
  4385 ;;		_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389     0167                     _atoi:	
  4390                           ;psect for function _atoi
  4391                           
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4395                           ;atoi@s stored from wreg
  4396     0167  00FD               	movwf	atoi@s
  4397     0168                     l1844:
  4398     0168  296D               	goto	l1848
  4399     0169                     l1846:
  4400     0169  3001               	movlw	1
  4401     016A  00FF               	movwf	btemp+1
  4402     016B  087F               	movf	btemp+1,w
  4403     016C  07FD               	addwf	atoi@s,f
  4404     016D                     l1848:
  4405     016D  087D               	movf	atoi@s,w
  4406     016E  0084               	movwf	4
  4407     016F  3020               	movlw	32
  4408     0170  1383               	bcf	3,7	;select IRP bank0
  4409     0171  0600               	xorwf	0,w
  4410     0172  1903               	btfsc	3,2
  4411     0173  2975               	goto	u1491
  4412     0174  2976               	goto	u1490
  4413     0175                     u1491:
  4414     0175  2969               	goto	l1846
  4415     0176                     u1490:
  4416     0176                     l1850:
  4417     0176  087D               	movf	atoi@s,w
  4418     0177  0084               	movwf	4
  4419     0178  3009               	movlw	9
  4420     0179  0600               	xorwf	0,w
  4421     017A  1903               	btfsc	3,2
  4422     017B  297D               	goto	u1501
  4423     017C  297E               	goto	u1500
  4424     017D                     u1501:
  4425     017D  2969               	goto	l1846
  4426     017E                     u1500:
  4427     017E                     l1852:
  4428     017E  01FB               	clrf	atoi@a
  4429     017F  01FC               	clrf	atoi@a+1
  4430     0180  01FA               	clrf	atoi@sign
  4431     0181                     l1854:
  4432     0181  087D               	movf	atoi@s,w
  4433     0182  0084               	movwf	4
  4434     0183  302D               	movlw	45
  4435     0184  0600               	xorwf	0,w
  4436     0185  1D03               	btfss	3,2
  4437     0186  2988               	goto	u1511
  4438     0187  2989               	goto	u1510
  4439     0188                     u1511:
  4440     0188  2992               	goto	l1858
  4441     0189                     u1510:
  4442     0189                     l1856:
  4443     0189  3001               	movlw	1
  4444     018A  00FF               	movwf	btemp+1
  4445     018B  087F               	movf	btemp+1,w
  4446     018C  07FA               	addwf	atoi@sign,f
  4447     018D  3001               	movlw	1
  4448     018E  00FF               	movwf	btemp+1
  4449     018F  087F               	movf	btemp+1,w
  4450     0190  07FD               	addwf	atoi@s,f
  4451     0191  29BE               	goto	l1866
  4452     0192                     l1858:
  4453     0192  087D               	movf	atoi@s,w
  4454     0193  0084               	movwf	4
  4455     0194  302B               	movlw	43
  4456     0195  0600               	xorwf	0,w
  4457     0196  1D03               	btfss	3,2
  4458     0197  2999               	goto	u1521
  4459     0198  299A               	goto	u1520
  4460     0199                     u1521:
  4461     0199  29BE               	goto	l1866
  4462     019A                     u1520:
  4463     019A                     l1860:
  4464     019A  3001               	movlw	1
  4465     019B  00FF               	movwf	btemp+1
  4466     019C  087F               	movf	btemp+1,w
  4467     019D  07FD               	addwf	atoi@s,f
  4468     019E  29BE               	goto	l1866
  4469     019F                     l1862:
  4470     019F  087D               	movf	atoi@s,w
  4471     01A0  0084               	movwf	4
  4472     01A1  087C               	movf	atoi@a+1,w
  4473     01A2  00F1               	movwf	___wmul@multiplier+1
  4474     01A3  087B               	movf	atoi@a,w
  4475     01A4  00F0               	movwf	___wmul@multiplier
  4476     01A5  300A               	movlw	10
  4477     01A6  00F2               	movwf	___wmul@multiplicand
  4478     01A7  3000               	movlw	0
  4479     01A8  00F3               	movwf	___wmul@multiplicand+1
  4480     01A9  118A  2084  118A   	fcall	___wmul
  4481     01AC  1383               	bcf	3,7	;select IRP bank0
  4482     01AD  0800               	movf	0,w
  4483     01AE  0770               	addwf	?___wmul,w
  4484     01AF  00F8               	movwf	??_atoi
  4485     01B0  3000               	movlw	0
  4486     01B1  1803               	skipnc
  4487     01B2  3001               	movlw	1
  4488     01B3  0771               	addwf	?___wmul+1,w
  4489     01B4  00F9               	movwf	??_atoi+1
  4490     01B5  0878               	movf	??_atoi,w
  4491     01B6  3ED0               	addlw	208
  4492     01B7  00FB               	movwf	atoi@a
  4493     01B8  0879               	movf	??_atoi+1,w
  4494     01B9  1803               	skipnc
  4495     01BA  3E01               	addlw	1
  4496     01BB  3EFF               	addlw	255
  4497     01BC  00FC               	movwf	atoi@a+1
  4498     01BD  299A               	goto	l1860
  4499     01BE                     l1866:
  4500     01BE  087D               	movf	atoi@s,w
  4501     01BF  0084               	movwf	4
  4502     01C0  0800               	movf	0,w
  4503     01C1  158A  2671  118A   	fcall	_isdigit
  4504     01C4  1803               	btfsc	3,0
  4505     01C5  29C7               	goto	u1531
  4506     01C6  29C8               	goto	u1530
  4507     01C7                     u1531:
  4508     01C7  299F               	goto	l1862
  4509     01C8                     u1530:
  4510     01C8                     l1868:
  4511     01C8  087A               	movf	atoi@sign,w
  4512     01C9  1903               	btfsc	3,2
  4513     01CA  29CC               	goto	u1541
  4514     01CB  29CD               	goto	u1540
  4515     01CC                     u1541:
  4516     01CC  29D9               	goto	l1874
  4517     01CD                     u1540:
  4518     01CD                     l1870:
  4519     01CD  097B               	comf	atoi@a,w
  4520     01CE  00F8               	movwf	??_atoi
  4521     01CF  097C               	comf	atoi@a+1,w
  4522     01D0  00F9               	movwf	??_atoi+1
  4523     01D1  0AF8               	incf	??_atoi,f
  4524     01D2  1903               	skipnz
  4525     01D3  0AF9               	incf	??_atoi+1,f
  4526     01D4  0878               	movf	??_atoi,w
  4527     01D5  00F6               	movwf	?_atoi
  4528     01D6  0879               	movf	??_atoi+1,w
  4529     01D7  00F7               	movwf	?_atoi+1
  4530     01D8  29DD               	goto	l767
  4531     01D9                     l1874:
  4532     01D9  087C               	movf	atoi@a+1,w
  4533     01DA  00F7               	movwf	?_atoi+1
  4534     01DB  087B               	movf	atoi@a,w
  4535     01DC  00F6               	movwf	?_atoi
  4536     01DD                     l767:
  4537     01DD  0008               	return
  4538     01DE                     __end_of_atoi:
  4539                           
  4540                           	psect	text18
  4541     0E71                     __ptext18:	
  4542 ;; *************** function _isdigit *****************
  4543 ;; Defined at:
  4544 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  c               1    wreg     unsigned char 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  c               1    1[COMMON] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;		None               void
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4558 ;;      Params:         0       0       0       0
  4559 ;;      Locals:         2       0       0       0
  4560 ;;      Temps:          0       0       0       0
  4561 ;;      Totals:         2       0       0       0
  4562 ;;Total ram usage:        2 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_atoi
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571     0E71                     _isdigit:	
  4572                           ;psect for function _isdigit
  4573                           
  4574                           
  4575                           ;incstack = 0
  4576                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4577                           ;isdigit@c stored from wreg
  4578     0E71  00F1               	movwf	isdigit@c
  4579     0E72                     l1650:
  4580     0E72  01F0               	clrf	_isdigit$637
  4581     0E73                     l1652:
  4582     0E73  303A               	movlw	58
  4583     0E74  0271               	subwf	isdigit@c,w
  4584     0E75  1803               	skipnc
  4585     0E76  2E78               	goto	u1251
  4586     0E77  2E79               	goto	u1250
  4587     0E78                     u1251:
  4588     0E78  2E81               	goto	l1658
  4589     0E79                     u1250:
  4590     0E79                     l1654:
  4591     0E79  3030               	movlw	48
  4592     0E7A  0271               	subwf	isdigit@c,w
  4593     0E7B  1C03               	skipc
  4594     0E7C  2E7E               	goto	u1261
  4595     0E7D  2E7F               	goto	u1260
  4596     0E7E                     u1261:
  4597     0E7E  2E81               	goto	l1658
  4598     0E7F                     u1260:
  4599     0E7F                     l1656:
  4600     0E7F  01F0               	clrf	_isdigit$637
  4601     0E80  0AF0               	incf	_isdigit$637,f
  4602     0E81                     l1658:
  4603     0E81  0C70               	rrf	_isdigit$637,w
  4604     0E82                     l797:
  4605     0E82  0008               	return
  4606     0E83                     __end_of_isdigit:
  4607                           
  4608                           	psect	text19
  4609     0084                     __ptext19:	
  4610 ;; *************** function ___wmul *****************
  4611 ;; Defined at:
  4612 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  multiplier      2    0[COMMON] unsigned int 
  4615 ;;  multiplicand    2    2[COMMON] unsigned int 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  product         2    4[COMMON] unsigned int 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  2    0[COMMON] unsigned int 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4627 ;;      Params:         4       0       0       0
  4628 ;;      Locals:         2       0       0       0
  4629 ;;      Temps:          0       0       0       0
  4630 ;;      Totals:         6       0       0       0
  4631 ;;Total ram usage:        6 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;;		_atoi
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641     0084                     ___wmul:	
  4642                           ;psect for function ___wmul
  4643                           
  4644     0084                     l1588:	
  4645                           ;incstack = 0
  4646                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4647                           
  4648     0084  01F4               	clrf	___wmul@product
  4649     0085  01F5               	clrf	___wmul@product+1
  4650     0086                     l1590:
  4651     0086  1C70               	btfss	___wmul@multiplier,0
  4652     0087  2889               	goto	u1081
  4653     0088  288A               	goto	u1080
  4654     0089                     u1081:
  4655     0089  2890               	goto	l304
  4656     008A                     u1080:
  4657     008A                     l1592:
  4658     008A  0872               	movf	___wmul@multiplicand,w
  4659     008B  07F4               	addwf	___wmul@product,f
  4660     008C  1803               	skipnc
  4661     008D  0AF5               	incf	___wmul@product+1,f
  4662     008E  0873               	movf	___wmul@multiplicand+1,w
  4663     008F  07F5               	addwf	___wmul@product+1,f
  4664     0090                     l304:
  4665     0090  3001               	movlw	1
  4666     0091                     u1095:
  4667     0091  1003               	clrc
  4668     0092  0DF2               	rlf	___wmul@multiplicand,f
  4669     0093  0DF3               	rlf	___wmul@multiplicand+1,f
  4670     0094  3EFF               	addlw	-1
  4671     0095  1D03               	skipz
  4672     0096  2891               	goto	u1095
  4673     0097                     l1594:
  4674     0097  3001               	movlw	1
  4675     0098                     u1105:
  4676     0098  1003               	clrc
  4677     0099  0CF1               	rrf	___wmul@multiplier+1,f
  4678     009A  0CF0               	rrf	___wmul@multiplier,f
  4679     009B  3EFF               	addlw	-1
  4680     009C  1D03               	skipz
  4681     009D  2898               	goto	u1105
  4682     009E                     l1596:
  4683     009E  0870               	movf	___wmul@multiplier,w
  4684     009F  0471               	iorwf	___wmul@multiplier+1,w
  4685     00A0  1D03               	btfss	3,2
  4686     00A1  28A3               	goto	u1111
  4687     00A2  28A4               	goto	u1110
  4688     00A3                     u1111:
  4689     00A3  2886               	goto	l1590
  4690     00A4                     u1110:
  4691     00A4                     l1598:
  4692     00A4  0875               	movf	___wmul@product+1,w
  4693     00A5  00F1               	movwf	?___wmul+1
  4694     00A6  0874               	movf	___wmul@product,w
  4695     00A7  00F0               	movwf	?___wmul
  4696     00A8                     l306:
  4697     00A8  0008               	return
  4698     00A9                     __end_of___wmul:
  4699                           
  4700                           	psect	text20
  4701     0100                     __ptext20:	
  4702 ;; *************** function ___awdiv *****************
  4703 ;; Defined at:
  4704 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  divisor         2    0[COMMON] int 
  4707 ;;  dividend        2    2[COMMON] int 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  quotient        2    6[COMMON] int 
  4710 ;;  sign            1    5[COMMON] unsigned char 
  4711 ;;  counter         1    4[COMMON] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  2    0[COMMON] int 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0, btemp+1
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4721 ;;      Params:         4       0       0       0
  4722 ;;      Locals:         4       0       0       0
  4723 ;;      Temps:          0       0       0       0
  4724 ;;      Totals:         8       0       0       0
  4725 ;;Total ram usage:        8 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_main
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734     0100                     ___awdiv:	
  4735                           ;psect for function ___awdiv
  4736                           
  4737     0100                     l1882:	
  4738                           ;incstack = 0
  4739                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4740                           
  4741     0100  01F5               	clrf	___awdiv@sign
  4742     0101                     l1884:
  4743     0101  1FF1               	btfss	___awdiv@divisor+1,7
  4744     0102  2904               	goto	u1551
  4745     0103  2905               	goto	u1550
  4746     0104                     u1551:
  4747     0104  290C               	goto	l1890
  4748     0105                     u1550:
  4749     0105                     l1886:
  4750     0105  09F0               	comf	___awdiv@divisor,f
  4751     0106  09F1               	comf	___awdiv@divisor+1,f
  4752     0107  0AF0               	incf	___awdiv@divisor,f
  4753     0108  1903               	skipnz
  4754     0109  0AF1               	incf	___awdiv@divisor+1,f
  4755     010A                     l1888:
  4756     010A  01F5               	clrf	___awdiv@sign
  4757     010B  0AF5               	incf	___awdiv@sign,f
  4758     010C                     l1890:
  4759     010C  1FF3               	btfss	___awdiv@dividend+1,7
  4760     010D  290F               	goto	u1561
  4761     010E  2910               	goto	u1560
  4762     010F                     u1561:
  4763     010F  2919               	goto	l1896
  4764     0110                     u1560:
  4765     0110                     l1892:
  4766     0110  09F2               	comf	___awdiv@dividend,f
  4767     0111  09F3               	comf	___awdiv@dividend+1,f
  4768     0112  0AF2               	incf	___awdiv@dividend,f
  4769     0113  1903               	skipnz
  4770     0114  0AF3               	incf	___awdiv@dividend+1,f
  4771     0115                     l1894:
  4772     0115  3001               	movlw	1
  4773     0116  00FF               	movwf	btemp+1
  4774     0117  087F               	movf	btemp+1,w
  4775     0118  06F5               	xorwf	___awdiv@sign,f
  4776     0119                     l1896:
  4777     0119  01F6               	clrf	___awdiv@quotient
  4778     011A  01F7               	clrf	___awdiv@quotient+1
  4779     011B                     l1898:
  4780     011B  0870               	movf	___awdiv@divisor,w
  4781     011C  0471               	iorwf	___awdiv@divisor+1,w
  4782     011D  1903               	btfsc	3,2
  4783     011E  2920               	goto	u1571
  4784     011F  2921               	goto	u1570
  4785     0120                     u1571:
  4786     0120  2958               	goto	l1918
  4787     0121                     u1570:
  4788     0121                     l1900:
  4789     0121  01F4               	clrf	___awdiv@counter
  4790     0122  0AF4               	incf	___awdiv@counter,f
  4791     0123  292F               	goto	l1906
  4792     0124                     l1902:
  4793     0124  3001               	movlw	1
  4794     0125                     u1585:
  4795     0125  1003               	clrc
  4796     0126  0DF0               	rlf	___awdiv@divisor,f
  4797     0127  0DF1               	rlf	___awdiv@divisor+1,f
  4798     0128  3EFF               	addlw	-1
  4799     0129  1D03               	skipz
  4800     012A  2925               	goto	u1585
  4801     012B                     l1904:
  4802     012B  3001               	movlw	1
  4803     012C  00FF               	movwf	btemp+1
  4804     012D  087F               	movf	btemp+1,w
  4805     012E  07F4               	addwf	___awdiv@counter,f
  4806     012F                     l1906:
  4807     012F  1FF1               	btfss	___awdiv@divisor+1,7
  4808     0130  2932               	goto	u1591
  4809     0131  2933               	goto	u1590
  4810     0132                     u1591:
  4811     0132  2924               	goto	l1902
  4812     0133                     u1590:
  4813     0133                     l1908:
  4814     0133  3001               	movlw	1
  4815     0134                     u1605:
  4816     0134  1003               	clrc
  4817     0135  0DF6               	rlf	___awdiv@quotient,f
  4818     0136  0DF7               	rlf	___awdiv@quotient+1,f
  4819     0137  3EFF               	addlw	-1
  4820     0138  1D03               	skipz
  4821     0139  2934               	goto	u1605
  4822     013A  0871               	movf	___awdiv@divisor+1,w
  4823     013B  0273               	subwf	___awdiv@dividend+1,w
  4824     013C  1D03               	skipz
  4825     013D  2940               	goto	u1615
  4826     013E  0870               	movf	___awdiv@divisor,w
  4827     013F  0272               	subwf	___awdiv@dividend,w
  4828     0140                     u1615:
  4829     0140  1C03               	skipc
  4830     0141  2943               	goto	u1611
  4831     0142  2944               	goto	u1610
  4832     0143                     u1611:
  4833     0143  294B               	goto	l1914
  4834     0144                     u1610:
  4835     0144                     l1910:
  4836     0144  0870               	movf	___awdiv@divisor,w
  4837     0145  02F2               	subwf	___awdiv@dividend,f
  4838     0146  0871               	movf	___awdiv@divisor+1,w
  4839     0147  1C03               	skipc
  4840     0148  03F3               	decf	___awdiv@dividend+1,f
  4841     0149  02F3               	subwf	___awdiv@dividend+1,f
  4842     014A                     l1912:
  4843     014A  1476               	bsf	___awdiv@quotient,0
  4844     014B                     l1914:
  4845     014B  3001               	movlw	1
  4846     014C                     u1625:
  4847     014C  1003               	clrc
  4848     014D  0CF1               	rrf	___awdiv@divisor+1,f
  4849     014E  0CF0               	rrf	___awdiv@divisor,f
  4850     014F  3EFF               	addlw	-1
  4851     0150  1D03               	skipz
  4852     0151  294C               	goto	u1625
  4853     0152                     l1916:
  4854     0152  3001               	movlw	1
  4855     0153  02F4               	subwf	___awdiv@counter,f
  4856     0154  1D03               	btfss	3,2
  4857     0155  2957               	goto	u1631
  4858     0156  2958               	goto	u1630
  4859     0157                     u1631:
  4860     0157  2933               	goto	l1908
  4861     0158                     u1630:
  4862     0158                     l1918:
  4863     0158  0875               	movf	___awdiv@sign,w
  4864     0159  1903               	btfsc	3,2
  4865     015A  295C               	goto	u1641
  4866     015B  295D               	goto	u1640
  4867     015C                     u1641:
  4868     015C  2962               	goto	l1922
  4869     015D                     u1640:
  4870     015D                     l1920:
  4871     015D  09F6               	comf	___awdiv@quotient,f
  4872     015E  09F7               	comf	___awdiv@quotient+1,f
  4873     015F  0AF6               	incf	___awdiv@quotient,f
  4874     0160  1903               	skipnz
  4875     0161  0AF7               	incf	___awdiv@quotient+1,f
  4876     0162                     l1922:
  4877     0162  0877               	movf	___awdiv@quotient+1,w
  4878     0163  00F1               	movwf	?___awdiv+1
  4879     0164  0876               	movf	___awdiv@quotient,w
  4880     0165  00F0               	movwf	?___awdiv
  4881     0166                     l457:
  4882     0166  0008               	return
  4883     0167                     __end_of___awdiv:
  4884     007E                     btemp	set	126	;btemp
  4885     007E                     wtemp0	set	126
  4886                           
  4887                           	psect	idloc
  4888                           
  4889                           ;Config register IDLOC0 @ 0x2000
  4890                           ;	unspecified, using default values
  4891     2000                     	org	8192
  4892     2000  3FFF               	dw	16383
  4893                           
  4894                           ;Config register IDLOC1 @ 0x2001
  4895                           ;	unspecified, using default values
  4896     2001                     	org	8193
  4897     2001  3FFF               	dw	16383
  4898                           
  4899                           ;Config register IDLOC2 @ 0x2002
  4900                           ;	unspecified, using default values
  4901     2002                     	org	8194
  4902     2002  3FFF               	dw	16383
  4903                           
  4904                           ;Config register IDLOC3 @ 0x2003
  4905                           ;	unspecified, using default values
  4906     2003                     	org	8195
  4907     2003  3FFF               	dw	16383
  4908                           
  4909                           	psect	config
  4910                           
  4911                           ;Config register CONFIG @ 0x2007
  4912                           ;	Oscillator Selection bits
  4913                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  4914                           ;	Watchdog Timer Enable bit
  4915                           ;	WDTE = OFF, WDT disabled
  4916                           ;	Power-up Timer Enable bit
  4917                           ;	PWRTE = OFF, PWRT disabled
  4918                           ;	RA5/MCLR/VPP Pin Function Select bit
  4919                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  4920                           ;	Brown-out Detect Enable bit
  4921                           ;	BOREN = ON, BOD enabled
  4922                           ;	Low-Voltage Programming Enable bit
  4923                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  4924                           ;	Data EE Memory Code Protection bit
  4925                           ;	CPD = OFF, Data memory code protection off
  4926                           ;	Flash Program Memory Code Protection bit
  4927                           ;	CP = OFF, Code protection off
  4928     2007                     	org	8199
  4929     2007  3F78               	dw	16248

Data Sizes:
    Strings     101
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      72
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_31(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_31(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_31(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), NULL(NULL[0]), STR_7(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_31(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_31(CODE[2]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 4
		 -> main@rcmd(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_34(CODE[2]), STR_28(CODE[2]), STR_24(CODE[2]), STR_13(CODE[2]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_34(CODE[2]), STR_28(CODE[2]), STR_24(CODE[2]), STR_13(CODE[2]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    gets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_38(CODE[6]), STR_37(CODE[7]), STR_36(CODE[11]), STR_35(CODE[4]), 
		 -> STR_33(CODE[9]), STR_32(CODE[11]), STR_30(CODE[5]), STR_29(CODE[4]), 
		 -> STR_27(CODE[10]), STR_26(CODE[5]), STR_25(CODE[4]), STR_23(CODE[11]), 
		 -> STR_14(CODE[4]), STR_12(CODE[11]), STR_1(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_39(CODE[7]), ?_printf(COMMON[2]), main@tmp(BANK0[40]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0    9808
                                             12 BANK0     59    59      0
                            ___awdiv
                             ___wmul
                               _atoi
                               _gets
                           _initUART
                             _printf
                               _puts
                             _strcmp
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               2     1      1    2738
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     4      2     636
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     276
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1620
                                             12 COMMON     2     0      2
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     976
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     47      48       3       90.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      56       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      56      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 31 05:12:51 2023

                      pc 0002                       l41 0361                       l51 03FC  
                     l52 03BA                       l61 0463                       l53 03C9  
                     l70 07E8                       l62 0421                       l54 03C0  
                     l63 0430                       l55 03D7                       l80 051E  
                     l64 0427                       l56 03E6                       l81 0535  
                     l65 043E                       l57 03DD                       l49 039E  
                     l90 058A                       l82 0544                       l66 044D  
                     l91 0599                       l83 053B                       l75 04FC  
                     l67 0444                       l92 0590                       l77 055A  
                     l86 05AF                       l78 0518                       l87 056D  
                     l79 0527                       l96 0616                       l88 057C  
                     l97 05D4                       l89 0573                       l98 05E3  
                     l99 05DA             ___awdiv@sign 0075                       fsr 0004  
    ___wmul@multiplicand 0072                      l100 05F1                      l101 0600  
                    l110 0655                      l102 05F7                      l111 064C  
                    l120 06BB                      l121 06B2                      l105 066B  
                    l130 071F                      l122 06C9                      l106 0629  
                    l131 0736                      l115 06DA                      l107 0638  
                    l300 02C9                      l140 0793                      l132 0745  
                    l116 068F                      l108 062F                      l141 07A2  
                    l133 073C                      l117 069E                      l109 0646  
                    l142 0799                      l134 0753                      l126 070D  
                    l118 0695                      l127 0719                      l119 06AC  
                    l304 0090                      l136 07B8                      l137 0776  
                    l129 0728                      l306 00A8                      l138 0785  
                    l171 0E49                      l139 077C                      l180 0E47  
                    l174 0E51                      l183 0E5B                      l168 0E70  
                    l177 0E40                      l457 0166                      l812 0E9B  
                    l804 0E65                      l820 0EE1                      l831 0FFF  
                    l576 0FB9                      l586 0F75                      l772 0E3F  
                    l844 0F0E                      l860 0F3B                      l790 00FF  
                    l767 01DD                      l847 0E9D                      l849 0EB7  
                    l797 0E82                      _RA0 0028                      _RA1 0029  
                    _RB0 0030                      fsr0 0004                      indf 0000  
                   l2000 038F                     l2010 03C1                     l2002 0394  
                   l2100 064D                     l2020 041E                     l2012 03DA  
                   l2004 03A6                     l2110 068C                     l2102 0663  
                   l2030 045B                     l2022 0424                     l2014 03DE  
                   l2006 03B5                     l2120 06CF                     l2112 0692  
                   l2104 0679                     l2040 04A4                     l2024 0428  
                   l2032 0471                     l2016 03F4                     l2008 03BD  
                   l2130 0703                     l2122 06D4                     l2114 0696  
                   l2106 0682                     l2050 04F2                     l2042 04B5  
                   l2034 047A                     l2026 0441                     l2018 040B  
                   l2140 0720                     l2132 0715                     l2124 06E8  
                   l2116 06AF                     l2108 0686                     l2060 0538  
                   l2052 0504                     l2044 04BB                     l2036 0495  
                   l2028 0445                     l2150 0764                     l2142 0739  
                   l2126 06F1                     l2118 06B3                     l2070 0574  
                   l2062 053C                     l2054 0513                     l2046 04C0  
                   l2038 049A                     l2160 079A                     l2152 0771  
                   l2144 073D                     l2128 06FE                     l2080 05D1  
                   l2072 058D                     l2064 0552                     l2056 051B  
                   l2048 04ED                     l1610 0F88                     l1602 0F76  
                   l2162 07B0                     l2154 0779                     l2146 0759  
                   l2138 071C                     l2090 060E                     l2082 05D7  
                   l2074 0591                     l2066 0568                     l2058 051F  
                   l1620 0FA8                     l1612 0F8C                     l1604 0F78  
                   l1700 0E8D                     l2164 07C6                     l2156 077D  
                   l2148 075E                     l2092 0624                     l2084 05DB  
                   l2076 05A7                     l2068 0570                     l2172 07D4  
                   l1622 0FAF                     l1614 0F90                     l1606 0F7E  
                   l1630 0F42                     l1702 0E91                     l1710 0F25  
                   l2174 07EE                     l2166 07CF                     l2158 0796  
                   l2094 062C                     l2086 05F4                     l2078 05BE  
                   l1560 0E4F                     l1616 0FA1                     l1608 0F81  
                   l1624 0FB5                     l1640 0F5E                     l1632 0F45  
                   l1800 0EBA                     l1720 0EF0                     l1712 0F37  
                   l1704 0F10                     l2176 07F3                     l2168 07CF  
                   l2096 0630                     l2088 05F8                     l1650 0E72  
                   l1562 0E40                     l1570 0E56                     l1730 0E3B  
                   l1618 0FA7                     l1642 0F64                     l1634 0F4C  
                   l1802 0EBE                     l1722 0EF8                     l1706 0F13  
                   l2098 0649                     l1900 0121                     l1652 0E73  
                   l1564 0E46                     l1572 0E5A                     l1644 0F6B  
                   l1636 0F50                     l1628 0F3C                     l1740 01EF  
                   l1804 0EC2                     l1724 0F0A                     l1716 0EE3  
                   l1708 0F1D                     l1812 0FBB                     l1910 0144  
                   l1902 0124                     l1590 0086                     l1654 0E79  
                   l1558 0E49                     l2198 00F1                     l1670 00BC  
                   l1662 00AA                     l1638 0F54                     l1646 0F71  
                   l1750 0206                     l1742 01F1                     l1734 01E1  
                   l1806 0ED5                     l1582 0EA9                     l1718 0EE6  
                   l1830 0FE2                     l1822 0FCB                     l1814 0FC0  
                   l1920 015D                     l1912 014A                     l1904 012B  
                   l1592 008A                     l1656 0E7F                     l1568 0E52  
                   l1680 00D8                     l1672 00BF                     l1664 00AD  
                   l1728 0E66                     l1760 023B                     l1752 0210  
                   l1744 01F7                     l1736 01E4                     l1808 0EDC  
                   l1584 0EB6                     l1576 0E9D                     l1840 0FFE  
                   l1832 0FED                     l1824 0FD5                     l1816 0FC4  
                   l1922 0162                     l1914 014B                     l1906 012F  
                   l1594 0097                     l1658 0E81                     l1850 0176  
                   l1674 00CB                     l1690 00E3                     l1770 0253  
                   l1762 0242                     l1754 0218                     l1746 01FB  
                   l1738 01EA                     l1578 0EA7                     l1834 0FF5  
                   l1826 0FDD                     l1818 0FC9                     l1930 02D3  
                   l1916 0152                     l1908 0133                     l1596 009E  
                   l1588 0084                     l1860 019A                     l1852 017E  
                   l1844 0168                     l1684 00DA                     l1676 00CD  
                   l1668 00B4                     l1780 026D                     l1764 0246  
                   l1748 0201                     l1836 0FF8                     l1940 02DA  
                   l1932 02D7                     l1918 0158                     l1598 00A4  
                   l1870 01CD                     l1862 019F                     l1854 0181  
                   l1846 0169                     l1686 00DF                     l1678 00D4  
                   l1790 0286                     l1782 0271                     l1766 024A  
                   l1758 0225                     l1838 0FFD                     l1950 02EE  
                   l1942 02E0                     l1934 02DA                     l1926 02CA  
                   l1856 0189                     l1848 016D                     l1792 02AA  
                   l1784 0277                     l1776 0255                     l1768 024E  
                   l1696 0E84                     l1880 0E61                     l1960 02F7  
                   l1952 02F0                     l1944 02E4                     l1936 02DA  
                   l1928 02D1                     l1890 010C                     l1882 0100  
                   l1874 01D9                     l1866 01BE                     l1858 0192  
                   l1794 02AE                     l1786 027D                     l1698 0E85  
                   l1970 0308                     l1962 02F8                     l1954 02F1  
                   l1946 02E8                     l1938 02DA                     l1892 0110  
                   l1884 0101                     l1868 01C8                     l1788 0281  
                   l1796 02B9                     l1980 031D                     l1972 030A  
                   l1964 02FC                     l1956 02F3                     l1948 02EC  
                   l1894 0115                     l1886 0105                     l1878 0E5D  
                   l1798 0EB9                     l1990 034B                     l1982 0329  
                   l1974 030B                     l1966 0302                     l1958 02F5  
                   l1896 0119                     l1888 010A                     l1992 0350  
                   l1984 032E                     l1976 030D                     l1968 0306  
                   l1898 011B                     l1994 035C                     l1986 033A  
                   l1978 0319                     l1988 033F                     l1996 0361  
                   l1998 036B                     STR_1 0067                     STR_2 007B  
                   STR_3 006B                     STR_4 006F                     STR_5 0073  
                   STR_6 0077                     STR_7 007F                     STR_8 007F  
                   STR_9 007F                     u1110 00A4                     u1111 00A3  
                   u1040 0E4F                     u1120 0F7E                     u2000 0753  
                   u1105 0098                     u1041 0E4E                     u1121 0F7D  
                   u2001 0752                     u1050 0E46                     u1210 0F54  
                   u2010 0759                     u1051 0E45                     u1211 0F53  
                   u2011 0758                     u1140 0F90                     u1220 0F5E  
                   u1060 0EA7                     u1300 0F25                     u2020 0771  
                   u1141 0F8F                     u1221 0F5D                     u1205 0F46  
                   u1061 0EA6                     u1301 0F24                     u2021 0770  
                   u2005 074F                     u1070 0EB6                     u1310 0F37  
                   u2030 0793                     u1135 0F82                     u1071 0EB5  
                   u1311 0F36                     u2031 0792                     u1080 008A  
                   u1160 0FA1                     u1240 0F71                     u1400 027D  
                   u1320 0EF8                     u2040 07B0                     u1081 0089  
                   u1161 0FA0                     u1241 0F70                     u1225 0F5A  
                   u1401 027C                     u1321 0EF7                     u2041 07AF  
                   u2025 076D                     u1250 0E79                     u1410 02B9  
                   u1330 0F0A                     u2050 07C6                     u1251 0E78  
                   u1155 0F91                     u1235 0F65                     u1411 02B8  
                   u1331 0F09                     u2051 07C5                     u2035 078F  
                   u1260 0E7F                     u1500 017E                     u1180 0FB5  
                   u1420 02C9                     u1340 01EA                     u2060 07EE  
                   u1261 0E7E                     u1501 017D                     u1181 0FB4  
                   u1165 0F9D                     u1421 02C8                     u1341 01E9  
                   u2061 07ED                     u2045 07AC                     u1510 0189  
                   u1270 00B3                     u1190 0F42                     u1350 0201  
                   u1430 0ED5                     u1095 0091                     u1511 0188  
                   u1271 00B2                     u1175 0FA9                     u1191 0F41  
                   u1351 0200                     u1431 0ED4                     u2055 07C2  
                   u1520 019A                     u1280 00D3                     u1360 0224  
                   u1440 0EDC                     u1521 0199                     u1281 00D2  
                   u1361 0223                     u1441 0EDB                     u1610 0144  
                   u1530 01C8                     u1370 024A                     u1290 0E9B  
                   u1450 0FC0                     u1611 0143                     u1531 01C7  
                   u1371 0249                     u1291 0E9A                     u1451 0FBF  
                   u1540 01CD                     u1380 026C                     u1460 0FC9  
                   u1700 0394                     u1605 0134                     u1541 01CC  
                   u1381 026B                     u1461 0FC8                     u1701 0393  
                   u1630 0158                     u1550 0105                     u1390 0277  
                   u1470 0FDD                     u1710 03B5                     u1631 0157  
                   u1615 0140                     u1551 0104                     u1391 0276  
                   u1471 0FDC                     u1711 03B4                     u1640 015D  
                   u1560 0110                     u1480 0FF5                     u1800 04F2  
                   u1720 03D7                     u1641 015C                     u1625 014C  
                   u1561 010F                     u1385 0268                     u1481 0FF4  
                   u1801 04F1                     u1721 03D6                     u1570 0121  
                   u1490 0176                     u1810 0513                     u1730 03F4  
                   u1650 0319                     u1571 0120                     u1491 0175  
                   u1811 0512                     u1731 03F3                     u1715 03B1  
                   u1651 0318                     u1900 0624                     u1820 0535  
                   u1740 040A                     u1660 0329                     u1901 0623  
                   u1821 0534                     u1741 0409                     u1725 03D3  
                   u1661 0328                     u1590 0133                     u1910 0646  
                   u1830 0552                     u1750 043E                     u1670 033A  
                   u1591 0132                     u1911 0645                     u1831 0551  
                   u1815 050F                     u1751 043D                     u1735 03F0  
                   u1671 0339                     u1920 0663                     u1840 0568  
                   u1760 045B                     u1680 034B                     u1585 0125  
                   u1921 0662                     u1905 0620                     u1841 0567  
                   u1825 0531                     u1761 045A                     u1745 0406  
                   u1681 034A                     u1930 0679                     u1850 058A  
                   u1770 0471                     u1690 035C                     u1931 0678  
                   u1915 0642                     u1851 0589                     u1835 054E  
                   u1771 0470                     u1755 043A                     u1691 035B  
                   u1940 06AC                     u1860 05A7                     u1780 049A  
                   u1941 06AB                     u1925 065F                     u1861 05A6  
                   u1845 0564                     u1781 0499                     u1765 0457  
                   u1950 06C9                     u1870 05BD                     u1790 04BB  
                   u1951 06C8                     u1935 0675                     u1871 05BC  
                   u1855 0586                     u1791 04BA                     u1775 046D  
                   u1960 06CF                     u1880 05F1                     u1961 06CE  
                   u1945 06A8                     u1881 05F0                     u1865 05A3  
                   u1970 06E8                     u1890 060E                     u1971 06E7  
                   u1955 06C5                     u1891 060D                     u1875 05B9  
                   u1980 0703                     u1981 0702                     u1885 05ED  
                   u1990 0736                     u1991 0735                     u1975 06E4  
                   u1895 060A                     u1995 0732                     _RCIF 0065  
                   _TXIF 0064                     _atoi 0167                     _gets 0E3A  
                   _main 02CA              main@set_spd 0057                     btemp 007E  
                   _puts 0E5C                     start 0000                    ?_atoi 0076  
                  ?_gets 0070                    ?_main 0070          __end_of___awdiv 0167  
                  STR_10 007F                    STR_11 007F                    STR_20 007F  
                  STR_12 001C                    STR_21 007F                    STR_13 0071  
                  STR_22 007F                    STR_14 0063                    STR_30 005E  
                  STR_23 001C                    STR_31 007F                    STR_15 007F  
                  STR_32 001C                    STR_16 007F                    STR_24 0071  
                  STR_25 0063                    STR_17 007F                    STR_33 003C  
                  STR_18 007F                    STR_34 0071                    STR_26 0059  
                  STR_35 0063                    STR_19 007F                    STR_27 0032  
                  STR_28 0071                    STR_36 0027                    STR_29 0063  
                  STR_37 004C                    STR_38 0053                    STR_39 0045  
                  _CMCON 001F                    ?_puts 0070          ___awdiv@divisor 0070  
        __end_of___lwdiv 0FBA          __end_of___lwmod 0F76          ___awdiv@counter 0074  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _TXSTA 0098  
                  _cgets 00A9                    _getch 0E40          __end_of_dpowers 001C  
                  _cputs 0E83          __end_of_isdigit 0E83                    atoi@a 007B  
                  atoi@s 007D                    _putch 0E48                    gets@s 0078  
                  main@j 0065                    main@k 005F                    pclath 000A  
                  puts@s 0072                    status 0003                    wtemp0 007E  
        __end_of_strcspn 0F0F          __initialization 07FA             __end_of_atoi 01DE  
           __end_of_gets 0E40             __end_of_main 07FA             __end_of_puts 0E66  
                 ??_atoi 0078                   ??_gets 0078                   ??_main 002C  
                 ??_puts 0072                   ?_cgets 0070                   ?_getch 0070  
                 ?_cputs 0070         ___awdiv@dividend 0072                   ?_putch 0070  
                 ___wmul 0084                ??___awdiv 0074         __end_of_initUART 0E71  
              ??___lwdiv 0074                ??___lwmod 007B                   _getche 0E52  
                 cgets@c 0074                   cgets@s 0076         ___awdiv@quotient 0076  
                 _printf 01DE                   _strchr 0E9C                   _strcmp 0EB8  
                 _strtok 0FBA                   _strspn 0F0F                   cputs@s 0071  
              ??_isdigit 0070                ??_strcspn 0075  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_cgets 0100            __end_of_getch 0E48  
          __end_of_cputs 0E9C            __end_of_putch 0E52                  ??_cgets 0072  
                ??_getch 0070                  ??_cputs 0071                  ??_putch 0070  
             __pbssBANK0 0067               __pmaintext 02CA                  ?___wmul 0070  
                ?_getche 0070                  ?_printf 007C                  ?_strchr 0070  
                ?_strcmp 0070                  ?_strtok 007A                  ?_strspn 0073  
             __stringtab 0002                ?_initUART 0070                  ___awdiv 0100  
                ___lwdiv 0F76                  ___lwmod 0F3C                  __ptext1 0FBA  
                __ptext2 0F0F                  __ptext3 0EE2                  __ptext4 0E9C  
                __ptext5 0EB8                  __ptext6 0E5C                  __ptext7 0E83  
                __ptext8 01DE                  __ptext9 0F3C                  _dpowers 0012  
                _isdigit 0E71                  cgets@s1 0077                  getche@c 0071  
                main@cmd 0059                  main@ptr 005E                  main@tmp 002D  
                _strcspn 0EE2     end_of_initialization 07FD               ??_initUART 0070  
                printf@c 002B                  printf@f 002A                  strcmp@r 0074  
                strspn@i 0077               main@mx_spd 0055           __end_of___wmul 00A9  
         __end_of_getche 0E5C           __end_of_printf 02CA           __end_of_strchr 0EB8  
         __end_of_strcmp 0EE2           __end_of_strtok 1000           __end_of_strspn 0F3C  
    start_initialization 07FA                 ??___wmul 0074                 ??_getche 0071  
               ??_printf 0020                 ??_strchr 0072                 ??_strcmp 0072  
               ??_strtok 007B                 ??_strspn 0075                ___latbits 0001  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___awdiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0002  
               ?_isdigit 0070         ___lwdiv@quotient 0074                 ?_strcspn 0073  
         ___wmul@product 0074              __stringbase 0011        ___wmul@multiplier 0070  
             printf@flag 0023               printf@prec 0024                main@intvl 0063  
     __end_of__stringtab 0012              _isdigit$637 0070          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076                 __ptext10 0F76                 __ptext11 0E66  
               __ptext20 0100                 __ptext12 0E3A                 __ptext13 00A9  
               __ptext14 0E52                 __ptext15 0E48                 __ptext16 0E40  
               __ptext17 0167                 __ptext18 0E71                 __ptext19 0084  
               _initUART 0E66                 atoi@sign 007A                printf@val 0028  
               main@dist 0061                 main@rcmd 005A                putch@byte 0070  
               isdigit@c 0071                strchr@chr 0070         ___lwmod@dividend 0079  
              strchr@ptr 0072                strcspn@s1 0079                strcspn@s2 0073  
              stringcode 000C                 printf@ap 0025                 printf@cp 0026  
               strcmp@s1 0075                 strcmp@s2 0070          ___lwmod@divisor 0077  
        ___lwmod@counter 007B                 strcspn@i 0077                 stringdir 000C  
               stringtab 0002                 strtok@s1 007B                 strtok@s2 007A  
               strspn@s1 0079                 strspn@s2 0073                 strtok@sp 0067  
