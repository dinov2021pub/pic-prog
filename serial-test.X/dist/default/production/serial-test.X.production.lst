

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 14:56:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    30                           	psect	cinit,global,class=CODE,merge=1,delta=2
    31                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text6,local,class=CODE,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text13,local,class=CODE,merge=1,delta=2
    50                           	psect	text14,local,class=CODE,merge=1,delta=2
    51                           	psect	text15,local,class=CODE,merge=1,delta=2
    52                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text19,local,class=CODE,merge=1,delta=2
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	dabs	1,0x620,48
    59                           	dabs	1,0x5A0,80
    60                           	dabs	1,0x520,80
    61                           	dabs	1,0x4A0,80
    62                           	dabs	1,0x420,80
    63                           	dabs	1,0x3A0,80
    64                           	dabs	1,0x320,80
    65                           	dabs	1,0x2A0,80
    66                           	dabs	1,0x220,80
    67                           	dabs	1,0x1A0,80
    68                           	dabs	1,0x150,32
    69                           	dabs	1,0x20D0,0,_ap1_dat
    70                           	dabs	1,0x7E,2
    71     0000                     
    72                           ; Version 2.40
    73                           ; Generated 17/11/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F1705 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000E                     	;# 
   121     0011                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0015                     	;# 
   125     0016                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001C                     	;# 
   133     008C                     	;# 
   134     008E                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009B                     	;# 
   146     009C                     	;# 
   147     009D                     	;# 
   148     009E                     	;# 
   149     009F                     	;# 
   150     010C                     	;# 
   151     010E                     	;# 
   152     0111                     	;# 
   153     0112                     	;# 
   154     0113                     	;# 
   155     0114                     	;# 
   156     0115                     	;# 
   157     0116                     	;# 
   158     0117                     	;# 
   159     0118                     	;# 
   160     0119                     	;# 
   161     011C                     	;# 
   162     018C                     	;# 
   163     018E                     	;# 
   164     0191                     	;# 
   165     0191                     	;# 
   166     0192                     	;# 
   167     0193                     	;# 
   168     0193                     	;# 
   169     0194                     	;# 
   170     0195                     	;# 
   171     0196                     	;# 
   172     0197                     	;# 
   173     0199                     	;# 
   174     0199                     	;# 
   175     0199                     	;# 
   176     019A                     	;# 
   177     019A                     	;# 
   178     019A                     	;# 
   179     019B                     	;# 
   180     019B                     	;# 
   181     019B                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019C                     	;# 
   185     019C                     	;# 
   186     019C                     	;# 
   187     019D                     	;# 
   188     019D                     	;# 
   189     019D                     	;# 
   190     019E                     	;# 
   191     019E                     	;# 
   192     019E                     	;# 
   193     019F                     	;# 
   194     019F                     	;# 
   195     019F                     	;# 
   196     019F                     	;# 
   197     019F                     	;# 
   198     020C                     	;# 
   199     020E                     	;# 
   200     0211                     	;# 
   201     0211                     	;# 
   202     0212                     	;# 
   203     0212                     	;# 
   204     0213                     	;# 
   205     0213                     	;# 
   206     0214                     	;# 
   207     0214                     	;# 
   208     0215                     	;# 
   209     0215                     	;# 
   210     0215                     	;# 
   211     0215                     	;# 
   212     0216                     	;# 
   213     0216                     	;# 
   214     0217                     	;# 
   215     0217                     	;# 
   216     028C                     	;# 
   217     028E                     	;# 
   218     0291                     	;# 
   219     0291                     	;# 
   220     0292                     	;# 
   221     0293                     	;# 
   222     0293                     	;# 
   223     0298                     	;# 
   224     0298                     	;# 
   225     0299                     	;# 
   226     029A                     	;# 
   227     029A                     	;# 
   228     029E                     	;# 
   229     030C                     	;# 
   230     030E                     	;# 
   231     038C                     	;# 
   232     038E                     	;# 
   233     0391                     	;# 
   234     0392                     	;# 
   235     0393                     	;# 
   236     0397                     	;# 
   237     0398                     	;# 
   238     0399                     	;# 
   239     0415                     	;# 
   240     0416                     	;# 
   241     0417                     	;# 
   242     041C                     	;# 
   243     041D                     	;# 
   244     041E                     	;# 
   245     0511                     	;# 
   246     0515                     	;# 
   247     0617                     	;# 
   248     0618                     	;# 
   249     0619                     	;# 
   250     0619                     	;# 
   251     061A                     	;# 
   252     061B                     	;# 
   253     061C                     	;# 
   254     061C                     	;# 
   255     0691                     	;# 
   256     0692                     	;# 
   257     0693                     	;# 
   258     0694                     	;# 
   259     0695                     	;# 
   260     0696                     	;# 
   261     0697                     	;# 
   262     0698                     	;# 
   263     0699                     	;# 
   264     069A                     	;# 
   265     069B                     	;# 
   266     069C                     	;# 
   267     069D                     	;# 
   268     069E                     	;# 
   269     069F                     	;# 
   270     0E0F                     	;# 
   271     0E10                     	;# 
   272     0E11                     	;# 
   273     0E12                     	;# 
   274     0E13                     	;# 
   275     0E14                     	;# 
   276     0E15                     	;# 
   277     0E17                     	;# 
   278     0E20                     	;# 
   279     0E21                     	;# 
   280     0E22                     	;# 
   281     0E24                     	;# 
   282     0E25                     	;# 
   283     0E28                     	;# 
   284     0E29                     	;# 
   285     0E2A                     	;# 
   286     0E2B                     	;# 
   287     0E90                     	;# 
   288     0E91                     	;# 
   289     0E92                     	;# 
   290     0E94                     	;# 
   291     0E95                     	;# 
   292     0EA0                     	;# 
   293     0EA1                     	;# 
   294     0EA2                     	;# 
   295     0EA3                     	;# 
   296     0EA4                     	;# 
   297     0EA5                     	;# 
   298     0F0F                     	;# 
   299     0F10                     	;# 
   300     0F11                     	;# 
   301     0F12                     	;# 
   302     0F13                     	;# 
   303     0F14                     	;# 
   304     0F15                     	;# 
   305     0F16                     	;# 
   306     0F17                     	;# 
   307     0F18                     	;# 
   308     0F19                     	;# 
   309     0F1A                     	;# 
   310     0F1B                     	;# 
   311     0F1C                     	;# 
   312     0F1D                     	;# 
   313     0F1E                     	;# 
   314     0F1F                     	;# 
   315     0F20                     	;# 
   316     0F21                     	;# 
   317     0F22                     	;# 
   318     0F23                     	;# 
   319     0F24                     	;# 
   320     0F25                     	;# 
   321     0F26                     	;# 
   322     0F27                     	;# 
   323     0F28                     	;# 
   324     0F29                     	;# 
   325     0F2A                     	;# 
   326     0F2B                     	;# 
   327     0F2C                     	;# 
   328     0F2D                     	;# 
   329     0F9E                     	;# 
   330     0FE4                     	;# 
   331     0FE5                     	;# 
   332     0FE6                     	;# 
   333     0FE7                     	;# 
   334     0FE8                     	;# 
   335     0FE9                     	;# 
   336     0FEA                     	;# 
   337     0FEB                     	;# 
   338     0FED                     	;# 
   339     0FEE                     	;# 
   340     0FEF                     	;# 
   341     0000                     	;# 
   342     0001                     	;# 
   343     0002                     	;# 
   344     0003                     	;# 
   345     0004                     	;# 
   346     0005                     	;# 
   347     0006                     	;# 
   348     0007                     	;# 
   349     0008                     	;# 
   350     0009                     	;# 
   351     000A                     	;# 
   352     000B                     	;# 
   353     000C                     	;# 
   354     000E                     	;# 
   355     0011                     	;# 
   356     0012                     	;# 
   357     0013                     	;# 
   358     0015                     	;# 
   359     0016                     	;# 
   360     0016                     	;# 
   361     0017                     	;# 
   362     0018                     	;# 
   363     0019                     	;# 
   364     001A                     	;# 
   365     001B                     	;# 
   366     001C                     	;# 
   367     008C                     	;# 
   368     008E                     	;# 
   369     0091                     	;# 
   370     0092                     	;# 
   371     0093                     	;# 
   372     0095                     	;# 
   373     0096                     	;# 
   374     0097                     	;# 
   375     0098                     	;# 
   376     0099                     	;# 
   377     009A                     	;# 
   378     009B                     	;# 
   379     009B                     	;# 
   380     009C                     	;# 
   381     009D                     	;# 
   382     009E                     	;# 
   383     009F                     	;# 
   384     010C                     	;# 
   385     010E                     	;# 
   386     0111                     	;# 
   387     0112                     	;# 
   388     0113                     	;# 
   389     0114                     	;# 
   390     0115                     	;# 
   391     0116                     	;# 
   392     0117                     	;# 
   393     0118                     	;# 
   394     0119                     	;# 
   395     011C                     	;# 
   396     018C                     	;# 
   397     018E                     	;# 
   398     0191                     	;# 
   399     0191                     	;# 
   400     0192                     	;# 
   401     0193                     	;# 
   402     0193                     	;# 
   403     0194                     	;# 
   404     0195                     	;# 
   405     0196                     	;# 
   406     0197                     	;# 
   407     0199                     	;# 
   408     0199                     	;# 
   409     0199                     	;# 
   410     019A                     	;# 
   411     019A                     	;# 
   412     019A                     	;# 
   413     019B                     	;# 
   414     019B                     	;# 
   415     019B                     	;# 
   416     019B                     	;# 
   417     019B                     	;# 
   418     019C                     	;# 
   419     019C                     	;# 
   420     019C                     	;# 
   421     019D                     	;# 
   422     019D                     	;# 
   423     019D                     	;# 
   424     019E                     	;# 
   425     019E                     	;# 
   426     019E                     	;# 
   427     019F                     	;# 
   428     019F                     	;# 
   429     019F                     	;# 
   430     019F                     	;# 
   431     019F                     	;# 
   432     020C                     	;# 
   433     020E                     	;# 
   434     0211                     	;# 
   435     0211                     	;# 
   436     0212                     	;# 
   437     0212                     	;# 
   438     0213                     	;# 
   439     0213                     	;# 
   440     0214                     	;# 
   441     0214                     	;# 
   442     0215                     	;# 
   443     0215                     	;# 
   444     0215                     	;# 
   445     0215                     	;# 
   446     0216                     	;# 
   447     0216                     	;# 
   448     0217                     	;# 
   449     0217                     	;# 
   450     028C                     	;# 
   451     028E                     	;# 
   452     0291                     	;# 
   453     0291                     	;# 
   454     0292                     	;# 
   455     0293                     	;# 
   456     0293                     	;# 
   457     0298                     	;# 
   458     0298                     	;# 
   459     0299                     	;# 
   460     029A                     	;# 
   461     029A                     	;# 
   462     029E                     	;# 
   463     030C                     	;# 
   464     030E                     	;# 
   465     038C                     	;# 
   466     038E                     	;# 
   467     0391                     	;# 
   468     0392                     	;# 
   469     0393                     	;# 
   470     0397                     	;# 
   471     0398                     	;# 
   472     0399                     	;# 
   473     0415                     	;# 
   474     0416                     	;# 
   475     0417                     	;# 
   476     041C                     	;# 
   477     041D                     	;# 
   478     041E                     	;# 
   479     0511                     	;# 
   480     0515                     	;# 
   481     0617                     	;# 
   482     0618                     	;# 
   483     0619                     	;# 
   484     0619                     	;# 
   485     061A                     	;# 
   486     061B                     	;# 
   487     061C                     	;# 
   488     061C                     	;# 
   489     0691                     	;# 
   490     0692                     	;# 
   491     0693                     	;# 
   492     0694                     	;# 
   493     0695                     	;# 
   494     0696                     	;# 
   495     0697                     	;# 
   496     0698                     	;# 
   497     0699                     	;# 
   498     069A                     	;# 
   499     069B                     	;# 
   500     069C                     	;# 
   501     069D                     	;# 
   502     069E                     	;# 
   503     069F                     	;# 
   504     0E0F                     	;# 
   505     0E10                     	;# 
   506     0E11                     	;# 
   507     0E12                     	;# 
   508     0E13                     	;# 
   509     0E14                     	;# 
   510     0E15                     	;# 
   511     0E17                     	;# 
   512     0E20                     	;# 
   513     0E21                     	;# 
   514     0E22                     	;# 
   515     0E24                     	;# 
   516     0E25                     	;# 
   517     0E28                     	;# 
   518     0E29                     	;# 
   519     0E2A                     	;# 
   520     0E2B                     	;# 
   521     0E90                     	;# 
   522     0E91                     	;# 
   523     0E92                     	;# 
   524     0E94                     	;# 
   525     0E95                     	;# 
   526     0EA0                     	;# 
   527     0EA1                     	;# 
   528     0EA2                     	;# 
   529     0EA3                     	;# 
   530     0EA4                     	;# 
   531     0EA5                     	;# 
   532     0F0F                     	;# 
   533     0F10                     	;# 
   534     0F11                     	;# 
   535     0F12                     	;# 
   536     0F13                     	;# 
   537     0F14                     	;# 
   538     0F15                     	;# 
   539     0F16                     	;# 
   540     0F17                     	;# 
   541     0F18                     	;# 
   542     0F19                     	;# 
   543     0F1A                     	;# 
   544     0F1B                     	;# 
   545     0F1C                     	;# 
   546     0F1D                     	;# 
   547     0F1E                     	;# 
   548     0F1F                     	;# 
   549     0F20                     	;# 
   550     0F21                     	;# 
   551     0F22                     	;# 
   552     0F23                     	;# 
   553     0F24                     	;# 
   554     0F25                     	;# 
   555     0F26                     	;# 
   556     0F27                     	;# 
   557     0F28                     	;# 
   558     0F29                     	;# 
   559     0F2A                     	;# 
   560     0F2B                     	;# 
   561     0F2C                     	;# 
   562     0F2D                     	;# 
   563     0F9E                     	;# 
   564     0FE4                     	;# 
   565     0FE5                     	;# 
   566     0FE6                     	;# 
   567     0FE7                     	;# 
   568     0FE8                     	;# 
   569     0FE9                     	;# 
   570     0FEA                     	;# 
   571     0FEB                     	;# 
   572     0FED                     	;# 
   573     0FEE                     	;# 
   574     0FEF                     	;_ap1_dat
   575                           
   576                           	psect	stringtext1
   577     1000                     __pstringtext1:
   578     1000                     _dpowers:
   579     1000  3401               	retlw	1
   580     1001  3400               	retlw	0
   581     1002  340A               	retlw	10
   582     1003  3400               	retlw	0
   583     1004  3464               	retlw	100
   584     1005  3400               	retlw	0
   585     1006  34E8               	retlw	232
   586     1007  3403               	retlw	3
   587     1008  3410               	retlw	16
   588     1009  3427               	retlw	39
   589     100A                     __end_of_dpowers:
   590     000E                     _PORTC	set	14
   591     000C                     _PORTA	set	12
   592     008D                     _RCIF	set	141
   593     008C                     _TXIF	set	140
   594     008E                     _TRISC	set	142
   595     008C                     _TRISA	set	140
   596     0099                     _OSCCON	set	153
   597     0119                     _DAC1CON1	set	281
   598     0118                     _DAC1CON0	set	280
   599     0199                     _RCREG	set	409
   600     019A                     _TXREG	set	410
   601     019D                     _RCSTA	set	413
   602     019E                     _TXSTA	set	414
   603     019B                     _SPBRG	set	411
   604     018E                     _ANSELC	set	398
   605     018C                     _ANSELA	set	396
   606     019B                     _SP1BRGL	set	411
   607     019C                     _SP1BRGH	set	412
   608     019D                     _RC1STA	set	413
   609     019E                     _TX1STA	set	414
   610     0CFB                     _BRG16	set	3323
   611     0E24                     _RXPPS	set	3620
   612     0E90                     _RA0PPS	set	3728
   613     100A                     STR_41:
   614     100A  3456               	retlw	86	;'V'
   615     100B  3445               	retlw	69	;'E'
   616     100C  3452               	retlw	82	;'R'
   617     100D  3453               	retlw	83	;'S'
   618     100E  3449               	retlw	73	;'I'
   619     100F  344F               	retlw	79	;'O'
   620     1010  344E               	retlw	78	;'N'
   621     1011  3420               	retlw	32	;' '
   622     1012  3431               	retlw	49	;'1'
   623     1013  3430               	retlw	48	;'0'
   624     1014  3400               	retlw	0
   625                           
   626                           	psect	stringtext2
   627     1015                     __pstringtext2:
   628     1015                     STR_40:
   629     1015  345F               	retlw	95	;'_'
   630     1016  345F               	retlw	95	;'_'
   631     1017  345F               	retlw	95	;'_'
   632     1018  3450               	retlw	80	;'P'
   633     1019  345F               	retlw	95	;'_'
   634     101A  344F               	retlw	79	;'O'
   635     101B  344B               	retlw	75	;'K'
   636     101C  340A               	retlw	10
   637     101D  3400               	retlw	0
   638                           
   639                           	psect	stringtext3
   640     101E                     __pstringtext3:
   641     101E                     STR_17:
   642     101E  3453               	retlw	83	;'S'
   643     101F  3441               	retlw	65	;'A'
   644     1020  3431               	retlw	49	;'1'
   645     1021  3420               	retlw	32	;' '
   646     1022  344F               	retlw	79	;'O'
   647     1023  344B               	retlw	75	;'K'
   648     1024  340A               	retlw	10
   649     1025  3400               	retlw	0
   650                           
   651                           	psect	stringtext4
   652     1026                     __pstringtext4:
   653     1026                     STR_23:
   654     1026  3453               	retlw	83	;'S'
   655     1027  3446               	retlw	70	;'F'
   656     1028  3431               	retlw	49	;'1'
   657     1029  3420               	retlw	32	;' '
   658     102A  344F               	retlw	79	;'O'
   659     102B  344B               	retlw	75	;'K'
   660     102C  340A               	retlw	10
   661     102D  3400               	retlw	0
   662                           
   663                           	psect	stringtext5
   664     102E                     __pstringtext5:
   665     102E                     STR_19:
   666     102E  3453               	retlw	83	;'S'
   667     102F  3441               	retlw	65	;'A'
   668     1030  3432               	retlw	50	;'2'
   669     1031  3420               	retlw	32	;' '
   670     1032  344F               	retlw	79	;'O'
   671     1033  344B               	retlw	75	;'K'
   672     1034  340A               	retlw	10
   673     1035  3400               	retlw	0
   674                           
   675                           	psect	stringtext6
   676     1036                     __pstringtext6:
   677     1036                     STR_26:
   678     1036  3453               	retlw	83	;'S'
   679     1037  3446               	retlw	70	;'F'
   680     1038  3432               	retlw	50	;'2'
   681     1039  3420               	retlw	32	;' '
   682     103A  344F               	retlw	79	;'O'
   683     103B  344B               	retlw	75	;'K'
   684     103C  340A               	retlw	10
   685     103D  3400               	retlw	0
   686                           
   687                           	psect	stringtext7
   688     103E                     __pstringtext7:
   689     103E                     STR_20:
   690     103E  3453               	retlw	83	;'S'
   691     103F  3441               	retlw	65	;'A'
   692     1040  3433               	retlw	51	;'3'
   693     1041  3420               	retlw	32	;' '
   694     1042  344F               	retlw	79	;'O'
   695     1043  344B               	retlw	75	;'K'
   696     1044  340A               	retlw	10
   697     1045  3400               	retlw	0
   698                           
   699                           	psect	stringtext8
   700     1046                     __pstringtext8:
   701     1046                     STR_29:
   702     1046  3453               	retlw	83	;'S'
   703     1047  3446               	retlw	70	;'F'
   704     1048  3433               	retlw	51	;'3'
   705     1049  3420               	retlw	32	;' '
   706     104A  344F               	retlw	79	;'O'
   707     104B  344B               	retlw	75	;'K'
   708     104C  340A               	retlw	10
   709     104D  3400               	retlw	0
   710                           
   711                           	psect	stringtext9
   712     104E                     __pstringtext9:
   713     104E                     STR_32:
   714     104E  3453               	retlw	83	;'S'
   715     104F  3446               	retlw	70	;'F'
   716     1050  3434               	retlw	52	;'4'
   717     1051  3420               	retlw	32	;' '
   718     1052  344F               	retlw	79	;'O'
   719     1053  344B               	retlw	75	;'K'
   720     1054  340A               	retlw	10
   721     1055  3400               	retlw	0
   722                           
   723                           	psect	stringtext10
   724     1056                     __pstringtext10:
   725     1056                     STR_42:
   726     1056  3428               	retlw	40	;'('
   727     1057  346E               	retlw	110	;'n'
   728     1058  3475               	retlw	117	;'u'
   729     1059  346C               	retlw	108	;'l'
   730     105A  346C               	retlw	108	;'l'
   731     105B  3429               	retlw	41	;')'
   732     105C  3400               	retlw	0
   733                           
   734                           	psect	stringtext11
   735     105D                     __pstringtext11:
   736     105D                     STR_16:
   737     105D  3425               	retlw	37	;'%'
   738     105E  3464               	retlw	100	;'d'
   739     105F  340A               	retlw	10
   740     1060  3400               	retlw	0
   741                           
   742                           	psect	stringtext12
   743     1061                     __pstringtext12:
   744     1061                     STR_1:
   745     1061  3425               	retlw	37	;'%'
   746     1062  3473               	retlw	115	;'s'
   747     1063  340A               	retlw	10
   748     1064  3400               	retlw	0
   749                           
   750                           	psect	stringtext13
   751     1065                     __pstringtext13:
   752     1065                     STR_3:
   753     1065  3453               	retlw	83	;'S'
   754     1066  3441               	retlw	65	;'A'
   755     1067  3431               	retlw	49	;'1'
   756     1068  3400               	retlw	0
   757                           
   758                           	psect	stringtext14
   759     1069                     __pstringtext14:
   760     1069                     STR_6:
   761     1069  3453               	retlw	83	;'S'
   762     106A  3446               	retlw	70	;'F'
   763     106B  3431               	retlw	49	;'1'
   764     106C  3400               	retlw	0
   765                           
   766                           	psect	stringtext15
   767     106D                     __pstringtext15:
   768     106D                     STR_4:
   769     106D  3453               	retlw	83	;'S'
   770     106E  3441               	retlw	65	;'A'
   771     106F  3432               	retlw	50	;'2'
   772     1070  3400               	retlw	0
   773                           
   774                           	psect	stringtext16
   775     1071                     __pstringtext16:
   776     1071                     STR_7:
   777     1071  3453               	retlw	83	;'S'
   778     1072  3446               	retlw	70	;'F'
   779     1073  3432               	retlw	50	;'2'
   780     1074  3400               	retlw	0
   781                           
   782                           	psect	stringtext17
   783     1075                     __pstringtext17:
   784     1075                     STR_5:
   785     1075  3453               	retlw	83	;'S'
   786     1076  3441               	retlw	65	;'A'
   787     1077  3433               	retlw	51	;'3'
   788     1078  3400               	retlw	0
   789                           
   790                           	psect	stringtext18
   791     1079                     __pstringtext18:
   792     1079                     STR_8:
   793     1079  3453               	retlw	83	;'S'
   794     107A  3446               	retlw	70	;'F'
   795     107B  3433               	retlw	51	;'3'
   796     107C  3400               	retlw	0
   797                           
   798                           	psect	stringtext19
   799     107D                     __pstringtext19:
   800     107D                     STR_9:
   801     107D  3453               	retlw	83	;'S'
   802     107E  3446               	retlw	70	;'F'
   803     107F  3434               	retlw	52	;'4'
   804     1080  3400               	retlw	0
   805                           
   806                           	psect	stringtext20
   807     1081                     __pstringtext20:
   808     1081                     STR_11:
   809     1081  344C               	retlw	76	;'L'
   810     1082  3450               	retlw	80	;'P'
   811     1083  3445               	retlw	69	;'E'
   812     1084  3400               	retlw	0
   813                           
   814                           	psect	stringtext21
   815     1085                     __pstringtext21:
   816     1085                     STR_10:
   817     1085  344C               	retlw	76	;'L'
   818     1086  3445               	retlw	69	;'E'
   819     1087  3450               	retlw	80	;'P'
   820     1088  3400               	retlw	0
   821                           
   822                           	psect	stringtext22
   823     1089                     __pstringtext22:
   824     1089                     STR_12:
   825     1089  344C               	retlw	76	;'L'
   826     108A  3444               	retlw	68	;'D'
   827     108B  3452               	retlw	82	;'R'
   828     108C  3400               	retlw	0
   829                           
   830                           	psect	stringtext23
   831     108D                     __pstringtext23:
   832     108D                     STR_13:
   833     108D  3456               	retlw	86	;'V'
   834     108E  3445               	retlw	69	;'E'
   835     108F  3452               	retlw	82	;'R'
   836     1090  3400               	retlw	0
   837                           
   838                           	psect	stringtext24
   839     1091                     __pstringtext24:
   840     1091                     STR_2:
   841     1091  344C               	retlw	76	;'L'
   842     1092  3444               	retlw	68	;'D'
   843     1093  3453               	retlw	83	;'S'
   844     1094  3400               	retlw	0
   845                           
   846                           	psect	stringtext25
   847     1095                     __pstringtext25:
   848     1095                     STR_14:
   849     1095  342F               	retlw	47	;'/'
   850     1096  3400               	retlw	0
   851                           
   852                           	psect	stringtext26
   853     0000                     __pstringtext26:
   854     1095                     
   855                           	psect	cinit
   856     07E7                     start_initialization:	
   857                           ; #config settings
   858                           
   859     07E7                     __initialization:	;BIGRAM
   860                           
   861                           ; Clear objects allocated to BIGRAM
   862     07E7  30D0               	movlw	low (0+8400)
   863     07E8  0084               	movwf	4
   864     07E9  3020               	movlw	high (0+8400)
   865     07EA  0085               	movwf	5
   866     07EB  3020               	movlw	32
   867     07EC  00FE               	movwf	btemp
   868     07ED  3003               	movlw	3
   869     07EE  00FF               	movwf	btemp+1
   870     07EF  318F  271E  3187   	fcall	clear_ram0
   871                           
   872                           ; Clear objects allocated to BANK0
   873     07F2  3020               	movlw	low __pbssBANK0
   874     07F3  0084               	movwf	4
   875     07F4  3000               	movlw	high __pbssBANK0
   876     07F5  0085               	movwf	5
   877     07F6  3029               	movlw	41
   878     07F7  00FE               	movwf	btemp
   879     07F8  3000               	movlw	0
   880     07F9  00FF               	movwf	btemp+1
   881     07FA  318F  271E  3187   	fcall	clear_ram0
   882     07FD                     end_of_initialization:	
   883                           ;End of C runtime variable initialization code
   884                           
   885     07FD                     __end_of__initialization:
   886     07FD  0020               	movlb	0
   887     07FE  3183  2B25         	ljmp	_main	;jump to C main() function
   888                           
   889                           	psect	bssBANK0
   890     0020                     __pbssBANK0:
   891     0020                     _ap2_dat:
   892     0020                     	ds	40
   893     0048                     strtok@sp:
   894     0048                     	ds	1
   895                           
   896                           	psect	clrtext
   897     0F1E                     clear_ram0:	
   898                           ;	Called with FSR0 containing the base address, and
   899                           ;	btemp/btemp+1 has the size to clear
   900                           
   901     0F1E  0064               	clrwdt	;clear the watchdog before getting into this loop
   902     0F1F                     clrloop0:
   903     0F1F  0180               	clrf	0	;clear RAM location pointed to by FSR
   904     0F20  3101               	addfsr 0,1
   905     0F21  3001               	movlw	1
   906     0F22  02FE               	subwf	btemp,f
   907     0F23  3000               	movlw	0
   908     0F24  3BFF               	subwfb	btemp+1,f
   909     0F25  087F               	movf	btemp+1,w
   910     0F26  047E               	iorwf	btemp,w
   911     0F27  1D03               	skipz
   912     0F28  2F1F               	goto	clrloop0	;have we reached the end yet?
   913     0F29  3400               	retlw	0	;all done for this memory range, return
   914                           
   915                           	psect	cstackBANK1
   916     00A0                     __pcstackBANK1:
   917     00A0                     main@tmp:
   918                           
   919                           ; 14 bytes @ 0x0
   920     00A0                     	ds	14
   921     00AE                     main@fp1_time:
   922                           
   923                           ; 2 bytes @ 0xE
   924     00AE                     	ds	2
   925     00B0                     main@fp1_amp:
   926                           
   927                           ; 2 bytes @ 0x10
   928     00B0                     	ds	2
   929     00B2                     main@fp2_time:
   930                           
   931                           ; 2 bytes @ 0x12
   932     00B2                     	ds	2
   933     00B4                     main@fp2_amp:
   934                           
   935                           ; 2 bytes @ 0x14
   936     00B4                     	ds	2
   937     00B6                     main@fp3_time:
   938                           
   939                           ; 2 bytes @ 0x16
   940     00B6                     	ds	2
   941     00B8                     main@fp3_amp:
   942                           
   943                           ; 2 bytes @ 0x18
   944     00B8                     	ds	2
   945     00BA                     main@fp4_time:
   946                           
   947                           ; 2 bytes @ 0x1A
   948     00BA                     	ds	2
   949     00BC                     main@fp4_amp:
   950                           
   951                           ; 2 bytes @ 0x1C
   952     00BC                     	ds	2
   953     00BE                     main@i_155:
   954                           
   955                           ; 2 bytes @ 0x1E
   956     00BE                     	ds	2
   957     00C0                     main@i_157:
   958                           
   959                           ; 2 bytes @ 0x20
   960     00C0                     	ds	2
   961     00C2                     main@i_159:
   962                           
   963                           ; 2 bytes @ 0x22
   964     00C2                     	ds	2
   965     00C4                     main@i_161:
   966                           
   967                           ; 2 bytes @ 0x24
   968     00C4                     	ds	2
   969     00C6                     main@i:
   970                           
   971                           ; 2 bytes @ 0x26
   972     00C6                     	ds	2
   973     00C8                     main@i_131:
   974                           
   975                           ; 2 bytes @ 0x28
   976     00C8                     	ds	2
   977     00CA                     main@i_132:
   978                           
   979                           ; 2 bytes @ 0x2A
   980     00CA                     	ds	2
   981     00CC                     main@k:
   982                           
   983                           ; 2 bytes @ 0x2C
   984     00CC                     	ds	2
   985     00CE                     main@i_151:
   986                           
   987                           ; 2 bytes @ 0x2E
   988     00CE                     	ds	2
   989     00D0                     main@i_153:
   990                           
   991                           ; 2 bytes @ 0x30
   992     00D0                     	ds	2
   993     00D2                     main@num_ap1:
   994                           
   995                           ; 2 bytes @ 0x32
   996     00D2                     	ds	2
   997     00D4                     main@num_ap2:
   998                           
   999                           ; 2 bytes @ 0x34
  1000     00D4                     	ds	2
  1001     00D6                     main@i_126:
  1002                           
  1003                           ; 2 bytes @ 0x36
  1004     00D6                     	ds	2
  1005     00D8                     main@cmd:
  1006                           
  1007                           ; 1 bytes @ 0x38
  1008     00D8                     	ds	1
  1009     00D9                     main@rcmd:
  1010                           
  1011                           ; 4 bytes @ 0x39
  1012     00D9                     	ds	4
  1013     00DD                     main@ptr:
  1014                           
  1015                           ; 1 bytes @ 0x3D
  1016     00DD                     	ds	1
  1017                           
  1018                           	psect	cstackCOMMON
  1019     0070                     __pcstackCOMMON:
  1020     0070                     ?_isdigit:
  1021     0070                     ?_gets:	
  1022                           ; 1 bit 
  1023                           
  1024     0070                     ??_isdigit:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ?_PICinit:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     ??_PICinit:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ?_main:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ?_putch:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0070                     ??_putch:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042     0070                     ?_getch:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ??_getch:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ?_getche:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ?_strcmp:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ?_strchr:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057     0070                     ?___wmul:	
  1058                           ; 2 bytes @ 0x0
  1059                           
  1060     0070                     ?___lwdiv:	
  1061                           ; 2 bytes @ 0x0
  1062                           
  1063     0070                     ?___lldiv:	
  1064                           ; 2 bytes @ 0x0
  1065                           
  1066     0070                     putch@byte:	
  1067                           ; 4 bytes @ 0x0
  1068                           
  1069     0070                     _isdigit$543:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ___wmul@multiplier:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ___lwdiv@divisor:	
  1076                           ; 2 bytes @ 0x0
  1077                           
  1078     0070                     strcmp@s2:	
  1079                           ; 2 bytes @ 0x0
  1080                           
  1081     0070                     strchr@ptr:	
  1082                           ; 2 bytes @ 0x0
  1083                           
  1084     0070                     ___lldiv@divisor:	
  1085                           ; 2 bytes @ 0x0
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x0
  1089     0070                     	ds	1
  1090     0071                     ??_getche:
  1091     0071                     getche@c:	
  1092                           ; 1 bytes @ 0x1
  1093                           
  1094     0071                     isdigit@c:	
  1095                           ; 1 bytes @ 0x1
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x1
  1099     0071                     	ds	1
  1100     0072                     ??_strcmp:
  1101     0072                     ?_cgets:	
  1102                           ; 1 bytes @ 0x2
  1103                           
  1104     0072                     ___wmul@multiplicand:	
  1105                           ; 1 bytes @ 0x2
  1106                           
  1107     0072                     ___lwdiv@dividend:	
  1108                           ; 2 bytes @ 0x2
  1109                           
  1110     0072                     strchr@chr:	
  1111                           ; 2 bytes @ 0x2
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x2
  1115     0072                     	ds	1
  1116     0073                     strcmp@r:
  1117                           
  1118                           ; 1 bytes @ 0x3
  1119     0073                     	ds	1
  1120     0074                     ??_cgets:
  1121     0074                     ??_strchr:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124     0074                     ??___wmul:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127     0074                     ??___lwdiv:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130     0074                     strcmp@s1:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133     0074                     ___wmul@product:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136     0074                     ___lldiv@dividend:	
  1137                           ; 2 bytes @ 0x4
  1138                           
  1139                           
  1140                           ; 4 bytes @ 0x4
  1141     0074                     	ds	1
  1142     0075                     ___lwdiv@quotient:
  1143                           
  1144                           ; 2 bytes @ 0x5
  1145     0075                     	ds	1
  1146     0076                     ?_atoi:
  1147     0076                     cgets@c:	
  1148                           ; 2 bytes @ 0x6
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x6
  1152     0076                     	ds	1
  1153     0077                     ?_strspn:
  1154     0077                     ?_strcspn:	
  1155                           ; 2 bytes @ 0x7
  1156                           
  1157     0077                     ___lwdiv@counter:	
  1158                           ; 2 bytes @ 0x7
  1159                           
  1160     0077                     strcspn@s2:	
  1161                           ; 1 bytes @ 0x7
  1162                           
  1163     0077                     strspn@s2:	
  1164                           ; 2 bytes @ 0x7
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x7
  1168     0077                     	ds	1
  1169     0078                     ??_atoi:
  1170     0078                     ??___lldiv:	
  1171                           ; 1 bytes @ 0x8
  1172                           
  1173     0078                     ?___lwmod:	
  1174                           ; 1 bytes @ 0x8
  1175                           
  1176     0078                     cgets@s:	
  1177                           ; 2 bytes @ 0x8
  1178                           
  1179     0078                     ___lwmod@divisor:	
  1180                           ; 1 bytes @ 0x8
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0x8
  1184     0078                     	ds	1
  1185     0079                     ??_strspn:
  1186     0079                     ??_strcspn:	
  1187                           ; 1 bytes @ 0x9
  1188                           
  1189     0079                     cgets@s1:	
  1190                           ; 1 bytes @ 0x9
  1191                           
  1192     0079                     ___lldiv@quotient:	
  1193                           ; 1 bytes @ 0x9
  1194                           
  1195                           
  1196                           ; 4 bytes @ 0x9
  1197     0079                     	ds	1
  1198     007A                     ??_gets:
  1199     007A                     gets@s:	
  1200                           ; 1 bytes @ 0xA
  1201                           
  1202     007A                     ___lwmod@dividend:	
  1203                           ; 1 bytes @ 0xA
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0xA
  1207     007A                     	ds	1
  1208     007B                     strcspn@i:
  1209     007B                     strspn@i:	
  1210                           ; 2 bytes @ 0xB
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0xB
  1214     007B                     	ds	1
  1215     007C                     ??___lwmod:
  1216                           
  1217                           ; 1 bytes @ 0xC
  1218     007C                     	ds	1
  1219     007D                     ___lldiv@counter:
  1220     007D                     ___lwmod@counter:	
  1221                           ; 1 bytes @ 0xD
  1222                           
  1223     007D                     strcspn@s1:	
  1224                           ; 1 bytes @ 0xD
  1225                           
  1226     007D                     strspn@s1:	
  1227                           ; 1 bytes @ 0xD
  1228                           
  1229                           
  1230                           ; 1 bytes @ 0xD
  1231     007D                     	ds	1
  1232                           
  1233                           	psect	cstackBANK0
  1234     0049                     __pcstackBANK0:
  1235     0049                     ?_strtok:
  1236     0049                     ?_serial_init:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239     0049                     ?_printf:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242     0049                     atoi@sign:	
  1243                           ; 2 bytes @ 0x0
  1244                           
  1245     0049                     printf@f:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248     0049                     strtok@s2:	
  1249                           ; 2 bytes @ 0x0
  1250                           
  1251     0049                     serial_init@BR:	
  1252                           ; 2 bytes @ 0x0
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x0
  1256     0049                     	ds	1
  1257     004A                     atoi@a:
  1258                           
  1259                           ; 2 bytes @ 0x1
  1260     004A                     	ds	1
  1261     004B                     ??_strtok:
  1262                           
  1263                           ; 1 bytes @ 0x2
  1264     004B                     	ds	1
  1265     004C                     atoi@s:
  1266                           
  1267                           ; 1 bytes @ 0x3
  1268     004C                     	ds	1
  1269     004D                     ??_printf:
  1270     004D                     ??_serial_init:	
  1271                           ; 1 bytes @ 0x4
  1272                           
  1273     004D                     strtok@s1:	
  1274                           ; 1 bytes @ 0x4
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x4
  1278     004D                     	ds	4
  1279     0051                     printf@flag:
  1280     0051                     serial_init@X:	
  1281                           ; 1 bytes @ 0x8
  1282                           
  1283                           
  1284                           ; 2 bytes @ 0x8
  1285     0051                     	ds	1
  1286     0052                     printf@prec:
  1287                           
  1288                           ; 1 bytes @ 0x9
  1289     0052                     	ds	1
  1290     0053                     printf@ap:
  1291                           
  1292                           ; 1 bytes @ 0xA
  1293     0053                     	ds	1
  1294     0054                     printf@cp:
  1295                           
  1296                           ; 2 bytes @ 0xB
  1297     0054                     	ds	2
  1298     0056                     printf@val:
  1299                           
  1300                           ; 2 bytes @ 0xD
  1301     0056                     	ds	2
  1302     0058                     printf@c:
  1303                           
  1304                           ; 1 bytes @ 0xF
  1305     0058                     	ds	1
  1306     0059                     ??_main:
  1307                           
  1308                           ; 1 bytes @ 0x10
  1309     0059                     	ds	4
  1310                           
  1311                           	psect	maintext
  1312     0325                     __pmaintext:	
  1313 ;;
  1314 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 82 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  i               2   36[BANK1 ] int 
  1323 ;;  i               2   34[BANK1 ] int 
  1324 ;;  i               2   32[BANK1 ] int 
  1325 ;;  i               2   30[BANK1 ] int 
  1326 ;;  i               2   48[BANK1 ] int 
  1327 ;;  i               2   46[BANK1 ] int 
  1328 ;;  k               2   44[BANK1 ] int 
  1329 ;;  i               2   42[BANK1 ] int 
  1330 ;;  i               2   40[BANK1 ] int 
  1331 ;;  i               2   54[BANK1 ] int 
  1332 ;;  i               2   38[BANK1 ] int 
  1333 ;;  cmd             1   56[BANK1 ] enum E4261
  1334 ;;  tmp            14    0[BANK1 ] unsigned char [14]
  1335 ;;  rcmd            4   57[BANK1 ] unsigned char [4]
  1336 ;;  num_ap2         2   52[BANK1 ] int 
  1337 ;;  num_ap1         2   50[BANK1 ] int 
  1338 ;;  fp4_amp         2   28[BANK1 ] int 
  1339 ;;  fp4_time        2   26[BANK1 ] int 
  1340 ;;  fp3_amp         2   24[BANK1 ] int 
  1341 ;;  fp3_time        2   22[BANK1 ] int 
  1342 ;;  fp2_amp         2   20[BANK1 ] int 
  1343 ;;  fp2_time        2   18[BANK1 ] int 
  1344 ;;  fp1_amp         2   16[BANK1 ] int 
  1345 ;;  fp1_time        2   14[BANK1 ] int 
  1346 ;;  ptr             1   61[BANK1 ] PTR unsigned char 
  1347 ;;		 -> NULL(0), main@tmp(14), 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : B1F/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1358 ;;      Locals:         0       0      62       0       0       0       0       0       0       0       0       0       
      +0       0
  1359 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1360 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
      +0       0
  1361 ;;Total ram usage:       66 bytes
  1362 ;; Hardware stack levels required when called: 4
  1363 ;; This function calls:
  1364 ;;		_PICinit
  1365 ;;		_atoi
  1366 ;;		_gets
  1367 ;;		_printf
  1368 ;;		_serial_init
  1369 ;;		_strcmp
  1370 ;;		_strtok
  1371 ;; This function is called by:
  1372 ;;		Startup code after reset
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     0325                     _main:	
  1377                           ;psect for function _main
  1378                           
  1379     0325                     l1878:	
  1380                           ;incstack = 0
  1381                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1382                           
  1383                           
  1384                           ;main.c: 83: char tmp[14];;main.c: 84: char rcmd[4];;main.c: 85: int fp1_time;;main.c: 8
      +                          6: int fp1_amp;;main.c: 87: int fp2_time;;main.c: 88: int fp2_amp;;main.c: 89: int fp3_t
      +                          ime;;main.c: 90: int fp3_amp;;main.c: 91: int fp4_time;;main.c: 92: int fp4_amp;;main.c:
      +                           94: int num_ap1 = 800;
  1385     0325  3020               	movlw	32
  1386     0326  0021               	movlb	1	; select bank1
  1387     0327  00D2               	movwf	main@num_ap1^(0+128)
  1388     0328  3003               	movlw	3
  1389     0329  00D3               	movwf	(main@num_ap1^(0+128)+1)
  1390                           
  1391                           ;main.c: 95: int num_ap2 = 20;
  1392     032A  3014               	movlw	20
  1393     032B  00D4               	movwf	main@num_ap2^(0+128)
  1394     032C  3000               	movlw	0
  1395     032D  00D5               	movwf	(main@num_ap2^(0+128)+1)
  1396     032E                     l1880:
  1397                           
  1398                           ;main.c: 97: char *ptr;;main.c: 99: PICinit();
  1399     032E  318F  272A  3183   	fcall	_PICinit
  1400     0331                     l1882:
  1401                           
  1402                           ;main.c: 102: RA0PPS = 0x14;
  1403     0331  3014               	movlw	20
  1404     0332  003D               	movlb	29	; select bank29
  1405     0333  0090               	movwf	16	;volatile
  1406     0334                     l1884:
  1407                           
  1408                           ;main.c: 103: RXPPS = 0x01;
  1409     0334  3001               	movlw	1
  1410     0335  003C               	movlb	28	; select bank28
  1411     0336  00A4               	movwf	36	;volatile
  1412     0337                     l1886:
  1413                           
  1414                           ;main.c: 105: serial_init(9600);
  1415     0337  3000               	movlw	0
  1416     0338  0020               	movlb	0	; select bank0
  1417     0339  00CC               	movwf	serial_init@BR+3
  1418     033A  3000               	movlw	0
  1419     033B  00CB               	movwf	serial_init@BR+2
  1420     033C  3025               	movlw	37
  1421     033D  00CA               	movwf	serial_init@BR+1
  1422     033E  3080               	movlw	128
  1423     033F  00C9               	movwf	serial_init@BR
  1424     0340  3180  204A  3183   	fcall	_serial_init
  1425     0343                     l59:	
  1426                           ;main.c: 107: while(1){
  1427                           
  1428                           
  1429                           ;main.c: 109: rcmd[0] = 'Q';
  1430     0343  3051               	movlw	81
  1431     0344  0021               	movlb	1	; select bank1
  1432     0345  00D9               	movwf	main@rcmd^(0+128)
  1433                           
  1434                           ;main.c: 110: rcmd[1] = 'Q';
  1435     0346  3051               	movlw	81
  1436     0347  00DA               	movwf	(main@rcmd^(0+128)+1)
  1437                           
  1438                           ;main.c: 111: rcmd[2] = 'Q';
  1439     0348  3051               	movlw	81
  1440     0349  00DB               	movwf	(main@rcmd^(0+128)+2)
  1441     034A                     l1888:
  1442                           
  1443                           ;main.c: 112: rcmd[3] = '\0';
  1444     034A  01DC               	clrf	(main@rcmd^(0+128)+3)
  1445     034B                     l1890:
  1446                           
  1447                           ;main.c: 114: tmp[0] = 'Q';
  1448     034B  3051               	movlw	81
  1449     034C  00A0               	movwf	main@tmp^(0+128)
  1450     034D                     l1892:
  1451                           
  1452                           ;main.c: 115: tmp[1] = 'Q';
  1453     034D  3051               	movlw	81
  1454     034E  00A1               	movwf	(main@tmp^(0+128)+1)
  1455     034F                     l1894:
  1456                           
  1457                           ;main.c: 116: tmp[2] = 'Q';
  1458     034F  3051               	movlw	81
  1459     0350  00A2               	movwf	(main@tmp^(0+128)+2)
  1460                           
  1461                           ;main.c: 117: tmp[3] = '\0';
  1462     0351  01A3               	clrf	(main@tmp^(0+128)+3)
  1463     0352                     l1896:
  1464                           
  1465                           ;main.c: 119: gets(tmp);
  1466     0352  30A0               	movlw	(low (main@tmp| 0))& (0+255)
  1467     0353  318E  26FC  3183   	fcall	_gets
  1468     0356                     l1898:
  1469                           
  1470                           ;main.c: 120: printf("%s\n", tmp);
  1471     0356  3061               	movlw	low (STR_1| (0+32768))
  1472     0357  0020               	movlb	0	; select bank0
  1473     0358  00C9               	movwf	printf@f
  1474     0359  3090               	movlw	high (STR_1| (0+32768))
  1475     035A  00CA               	movwf	printf@f+1
  1476     035B  30A0               	movlw	(low (main@tmp| 0))& (0+255)
  1477     035C  00CB               	movwf	low ((?_printf| 0+2))
  1478     035D  3182  2239  3183   	fcall	_printf
  1479     0360                     l1900:
  1480                           
  1481                           ;main.c: 122: rcmd[0] = tmp[1];
  1482     0360  0021               	movlb	1	; select bank1
  1483     0361  0821               	movf	(main@tmp^(0+128)+1),w
  1484     0362  00D9               	movwf	main@rcmd^(0+128)
  1485     0363                     l1902:
  1486                           
  1487                           ;main.c: 123: rcmd[1] = tmp[2];
  1488     0363  0822               	movf	(main@tmp^(0+128)+2),w
  1489     0364  00DA               	movwf	(main@rcmd^(0+128)+1)
  1490     0365                     l1904:
  1491                           
  1492                           ;main.c: 124: rcmd[2] = tmp[3];
  1493     0365  0823               	movf	(main@tmp^(0+128)+3),w
  1494     0366  00DB               	movwf	(main@rcmd^(0+128)+2)
  1495     0367                     l1906:
  1496                           
  1497                           ;main.c: 125: rcmd[3] = '\0';
  1498     0367  01DC               	clrf	(main@rcmd^(0+128)+3)
  1499                           
  1500                           ;main.c: 128: enum command cmd;;main.c: 130: cmd = VER;
  1501     0368  300B               	movlw	11
  1502     0369  00D8               	movwf	main@cmd^(0+128)
  1503     036A                     l1908:
  1504                           
  1505                           ;main.c: 132: if(strcmp(rcmd,"LDS") == 0) {
  1506     036A  3091               	movlw	low (STR_2| (0+32768))
  1507     036B  00F0               	movwf	strcmp@s2
  1508     036C  3090               	movlw	high (STR_2| (0+32768))
  1509     036D  00F1               	movwf	strcmp@s2+1
  1510     036E  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1511     036F  318F  2779  3183   	fcall	_strcmp
  1512     0372  0870               	movf	?_strcmp,w
  1513     0373  0471               	iorwf	?_strcmp+1,w
  1514     0374  1D03               	btfss	3,2
  1515     0375  2B77               	goto	u1561
  1516     0376  2B78               	goto	u1560
  1517     0377                     u1561:
  1518     0377  2B7C               	goto	l1912
  1519     0378                     u1560:
  1520     0378                     l1910:
  1521                           
  1522                           ;main.c: 133: cmd = LDS;
  1523     0378  3008               	movlw	8
  1524     0379  0021               	movlb	1	; select bank1
  1525     037A  00D8               	movwf	main@cmd^(0+128)
  1526                           
  1527                           ;main.c: 134: }else if(strcmp(rcmd,"SA1") == 0){
  1528     037B  2C41               	goto	l1956
  1529     037C                     l1912:
  1530     037C  3065               	movlw	low (STR_3| (0+32768))
  1531     037D  00F0               	movwf	strcmp@s2
  1532     037E  3090               	movlw	high (STR_3| (0+32768))
  1533     037F  00F1               	movwf	strcmp@s2+1
  1534     0380  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1535     0381  318F  2779  3183   	fcall	_strcmp
  1536     0384  0870               	movf	?_strcmp,w
  1537     0385  0471               	iorwf	?_strcmp+1,w
  1538     0386  1D03               	btfss	3,2
  1539     0387  2B89               	goto	u1571
  1540     0388  2B8A               	goto	u1570
  1541     0389                     u1571:
  1542     0389  2B8D               	goto	l1916
  1543     038A                     u1570:
  1544     038A                     l1914:
  1545                           
  1546                           ;main.c: 135: cmd = SA1;
  1547     038A  0021               	movlb	1	; select bank1
  1548     038B  01D8               	clrf	main@cmd^(0+128)
  1549                           
  1550                           ;main.c: 136: }else if(strcmp(rcmd,"SA2") == 0){
  1551     038C  2C41               	goto	l1956
  1552     038D                     l1916:
  1553     038D  306D               	movlw	low (STR_4| (0+32768))
  1554     038E  00F0               	movwf	strcmp@s2
  1555     038F  3090               	movlw	high (STR_4| (0+32768))
  1556     0390  00F1               	movwf	strcmp@s2+1
  1557     0391  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1558     0392  318F  2779  3183   	fcall	_strcmp
  1559     0395  0870               	movf	?_strcmp,w
  1560     0396  0471               	iorwf	?_strcmp+1,w
  1561     0397  1D03               	btfss	3,2
  1562     0398  2B9A               	goto	u1581
  1563     0399  2B9B               	goto	u1580
  1564     039A                     u1581:
  1565     039A  2B9F               	goto	l1920
  1566     039B                     u1580:
  1567     039B                     l1918:
  1568                           
  1569                           ;main.c: 137: cmd = SA2;
  1570     039B  0021               	movlb	1	; select bank1
  1571     039C  01D8               	clrf	main@cmd^(0+128)
  1572     039D  0AD8               	incf	main@cmd^(0+128),f
  1573                           
  1574                           ;main.c: 138: }else if(strcmp(rcmd,"SA3") == 0){
  1575     039E  2C41               	goto	l1956
  1576     039F                     l1920:
  1577     039F  3075               	movlw	low (STR_5| (0+32768))
  1578     03A0  00F0               	movwf	strcmp@s2
  1579     03A1  3090               	movlw	high (STR_5| (0+32768))
  1580     03A2  00F1               	movwf	strcmp@s2+1
  1581     03A3  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1582     03A4  318F  2779  3183   	fcall	_strcmp
  1583     03A7  0870               	movf	?_strcmp,w
  1584     03A8  0471               	iorwf	?_strcmp+1,w
  1585     03A9  1D03               	btfss	3,2
  1586     03AA  2BAC               	goto	u1591
  1587     03AB  2BAD               	goto	u1590
  1588     03AC                     u1591:
  1589     03AC  2BB1               	goto	l1924
  1590     03AD                     u1590:
  1591     03AD                     l1922:
  1592                           
  1593                           ;main.c: 139: cmd = SA3;
  1594     03AD  3002               	movlw	2
  1595     03AE  0021               	movlb	1	; select bank1
  1596     03AF  00D8               	movwf	main@cmd^(0+128)
  1597                           
  1598                           ;main.c: 140: }else if(strcmp(rcmd,"SF1") == 0){
  1599     03B0  2C41               	goto	l1956
  1600     03B1                     l1924:
  1601     03B1  3069               	movlw	low (STR_6| (0+32768))
  1602     03B2  00F0               	movwf	strcmp@s2
  1603     03B3  3090               	movlw	high (STR_6| (0+32768))
  1604     03B4  00F1               	movwf	strcmp@s2+1
  1605     03B5  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1606     03B6  318F  2779  3183   	fcall	_strcmp
  1607     03B9  0870               	movf	?_strcmp,w
  1608     03BA  0471               	iorwf	?_strcmp+1,w
  1609     03BB  1D03               	btfss	3,2
  1610     03BC  2BBE               	goto	u1601
  1611     03BD  2BBF               	goto	u1600
  1612     03BE                     u1601:
  1613     03BE  2BC3               	goto	l1928
  1614     03BF                     u1600:
  1615     03BF                     l1926:
  1616                           
  1617                           ;main.c: 141: cmd = SF1;
  1618     03BF  3003               	movlw	3
  1619     03C0  0021               	movlb	1	; select bank1
  1620     03C1  00D8               	movwf	main@cmd^(0+128)
  1621                           
  1622                           ;main.c: 142: }else if(strcmp(rcmd,"SF2") == 0){
  1623     03C2  2C41               	goto	l1956
  1624     03C3                     l1928:
  1625     03C3  3071               	movlw	low (STR_7| (0+32768))
  1626     03C4  00F0               	movwf	strcmp@s2
  1627     03C5  3090               	movlw	high (STR_7| (0+32768))
  1628     03C6  00F1               	movwf	strcmp@s2+1
  1629     03C7  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1630     03C8  318F  2779  3183   	fcall	_strcmp
  1631     03CB  0870               	movf	?_strcmp,w
  1632     03CC  0471               	iorwf	?_strcmp+1,w
  1633     03CD  1D03               	btfss	3,2
  1634     03CE  2BD0               	goto	u1611
  1635     03CF  2BD1               	goto	u1610
  1636     03D0                     u1611:
  1637     03D0  2BD5               	goto	l1932
  1638     03D1                     u1610:
  1639     03D1                     l1930:
  1640                           
  1641                           ;main.c: 143: cmd = SF2;
  1642     03D1  3004               	movlw	4
  1643     03D2  0021               	movlb	1	; select bank1
  1644     03D3  00D8               	movwf	main@cmd^(0+128)
  1645                           
  1646                           ;main.c: 144: }else if(strcmp(rcmd,"SF3") == 0){
  1647     03D4  2C41               	goto	l1956
  1648     03D5                     l1932:
  1649     03D5  3079               	movlw	low (STR_8| (0+32768))
  1650     03D6  00F0               	movwf	strcmp@s2
  1651     03D7  3090               	movlw	high (STR_8| (0+32768))
  1652     03D8  00F1               	movwf	strcmp@s2+1
  1653     03D9  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1654     03DA  318F  2779  3183   	fcall	_strcmp
  1655     03DD  0870               	movf	?_strcmp,w
  1656     03DE  0471               	iorwf	?_strcmp+1,w
  1657     03DF  1D03               	btfss	3,2
  1658     03E0  2BE2               	goto	u1621
  1659     03E1  2BE3               	goto	u1620
  1660     03E2                     u1621:
  1661     03E2  2BE7               	goto	l1936
  1662     03E3                     u1620:
  1663     03E3                     l1934:
  1664                           
  1665                           ;main.c: 145: cmd = SF3;
  1666     03E3  3005               	movlw	5
  1667     03E4  0021               	movlb	1	; select bank1
  1668     03E5  00D8               	movwf	main@cmd^(0+128)
  1669                           
  1670                           ;main.c: 146: }else if(strcmp(rcmd,"SF4") == 0){
  1671     03E6  2C41               	goto	l1956
  1672     03E7                     l1936:
  1673     03E7  307D               	movlw	low (STR_9| (0+32768))
  1674     03E8  00F0               	movwf	strcmp@s2
  1675     03E9  3090               	movlw	high (STR_9| (0+32768))
  1676     03EA  00F1               	movwf	strcmp@s2+1
  1677     03EB  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1678     03EC  318F  2779  3183   	fcall	_strcmp
  1679     03EF  0870               	movf	?_strcmp,w
  1680     03F0  0471               	iorwf	?_strcmp+1,w
  1681     03F1  1D03               	btfss	3,2
  1682     03F2  2BF4               	goto	u1631
  1683     03F3  2BF5               	goto	u1630
  1684     03F4                     u1631:
  1685     03F4  2BF9               	goto	l1940
  1686     03F5                     u1630:
  1687     03F5                     l1938:
  1688                           
  1689                           ;main.c: 147: cmd = SF4;
  1690     03F5  3006               	movlw	6
  1691     03F6  0021               	movlb	1	; select bank1
  1692     03F7  00D8               	movwf	main@cmd^(0+128)
  1693                           
  1694                           ;main.c: 148: }else if(strcmp(rcmd,"LEP") == 0){
  1695     03F8  2C41               	goto	l1956
  1696     03F9                     l1940:
  1697     03F9  3085               	movlw	low (STR_10| (0+32768))
  1698     03FA  00F0               	movwf	strcmp@s2
  1699     03FB  3090               	movlw	high (STR_10| (0+32768))
  1700     03FC  00F1               	movwf	strcmp@s2+1
  1701     03FD  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1702     03FE  318F  2779  3183   	fcall	_strcmp
  1703     0401  0870               	movf	?_strcmp,w
  1704     0402  0471               	iorwf	?_strcmp+1,w
  1705     0403  1D03               	btfss	3,2
  1706     0404  2C06               	goto	u1641
  1707     0405  2C07               	goto	u1640
  1708     0406                     u1641:
  1709     0406  2C0B               	goto	l1944
  1710     0407                     u1640:
  1711     0407                     l1942:
  1712                           
  1713                           ;main.c: 149: cmd = LEP;
  1714     0407  3007               	movlw	7
  1715     0408  0021               	movlb	1	; select bank1
  1716     0409  00D8               	movwf	main@cmd^(0+128)
  1717                           
  1718                           ;main.c: 150: }else if(strcmp(rcmd,"LPE") == 0){
  1719     040A  2C41               	goto	l1956
  1720     040B                     l1944:
  1721     040B  3081               	movlw	low (STR_11| (0+32768))
  1722     040C  00F0               	movwf	strcmp@s2
  1723     040D  3090               	movlw	high (STR_11| (0+32768))
  1724     040E  00F1               	movwf	strcmp@s2+1
  1725     040F  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1726     0410  318F  2779  3183   	fcall	_strcmp
  1727     0413  0870               	movf	?_strcmp,w
  1728     0414  0471               	iorwf	?_strcmp+1,w
  1729     0415  1D03               	btfss	3,2
  1730     0416  2C18               	goto	u1651
  1731     0417  2C19               	goto	u1650
  1732     0418                     u1651:
  1733     0418  2C1D               	goto	l1948
  1734     0419                     u1650:
  1735     0419                     l1946:
  1736                           
  1737                           ;main.c: 151: cmd = LPE;
  1738     0419  3009               	movlw	9
  1739     041A  0021               	movlb	1	; select bank1
  1740     041B  00D8               	movwf	main@cmd^(0+128)
  1741                           
  1742                           ;main.c: 152: }else if(strcmp(rcmd,"LDR") == 0){
  1743     041C  2C41               	goto	l1956
  1744     041D                     l1948:
  1745     041D  3089               	movlw	low (STR_12| (0+32768))
  1746     041E  00F0               	movwf	strcmp@s2
  1747     041F  3090               	movlw	high (STR_12| (0+32768))
  1748     0420  00F1               	movwf	strcmp@s2+1
  1749     0421  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1750     0422  318F  2779  3183   	fcall	_strcmp
  1751     0425  0870               	movf	?_strcmp,w
  1752     0426  0471               	iorwf	?_strcmp+1,w
  1753     0427  1D03               	btfss	3,2
  1754     0428  2C2A               	goto	u1661
  1755     0429  2C2B               	goto	u1660
  1756     042A                     u1661:
  1757     042A  2C2F               	goto	l1952
  1758     042B                     u1660:
  1759     042B                     l1950:
  1760                           
  1761                           ;main.c: 153: cmd = LDR;
  1762     042B  300A               	movlw	10
  1763     042C  0021               	movlb	1	; select bank1
  1764     042D  00D8               	movwf	main@cmd^(0+128)
  1765                           
  1766                           ;main.c: 154: }else if(strcmp(rcmd,"VER") == 0){
  1767     042E  2C41               	goto	l1956
  1768     042F                     l1952:
  1769     042F  308D               	movlw	low (STR_13| (0+32768))
  1770     0430  00F0               	movwf	strcmp@s2
  1771     0431  3090               	movlw	high (STR_13| (0+32768))
  1772     0432  00F1               	movwf	strcmp@s2+1
  1773     0433  30D9               	movlw	(low (main@rcmd| 0))& (0+255)
  1774     0434  318F  2779  3183   	fcall	_strcmp
  1775     0437  0870               	movf	?_strcmp,w
  1776     0438  0471               	iorwf	?_strcmp+1,w
  1777     0439  1D03               	btfss	3,2
  1778     043A  2C3C               	goto	u1671
  1779     043B  2C3D               	goto	u1670
  1780     043C                     u1671:
  1781     043C  2C41               	goto	l77
  1782     043D                     u1670:
  1783     043D                     l1954:
  1784                           
  1785                           ;main.c: 155: cmd = VER;
  1786     043D  300B               	movlw	11
  1787     043E  0021               	movlb	1	; select bank1
  1788     043F  00D8               	movwf	main@cmd^(0+128)
  1789     0440  2C41               	goto	l1956
  1790     0441                     l77:
  1791     0441                     l1956:
  1792     0441  3095               	movlw	low (STR_14| (0+32768))
  1793     0442  0020               	movlb	0	; select bank0
  1794     0443  00C9               	movwf	strtok@s2
  1795     0444  3090               	movlw	high (STR_14| (0+32768))
  1796     0445  00CA               	movwf	strtok@s2+1
  1797     0446  30A0               	movlw	(low (main@tmp| 0))& (0+255)
  1798     0447  3180  20BE  3183   	fcall	_strtok
  1799                           
  1800                           ;main.c: 160: switch(cmd){
  1801     044A  2FC1               	goto	l2142
  1802     044B                     l1958:
  1803                           
  1804                           ;main.c: 163: for (int i=0 ; i < num_ap1 ; i++){
  1805     044B  01C6               	clrf	main@i^(0+128)
  1806     044C  01C7               	clrf	(main@i+1)^(0+128)
  1807     044D  2C6A               	goto	l1964
  1808     044E                     l1960:
  1809                           
  1810                           ;main.c: 164: ap1_dat[i] = 0;
  1811     044E  0021               	movlb	1	; select bank1
  1812     044F  0847               	movf	(main@i+1)^(0+128),w
  1813     0450  0020               	movlb	0	; select bank0
  1814     0451  00DA               	movwf	??_main+1
  1815     0452  0021               	movlb	1	; select bank1
  1816     0453  0846               	movf	main@i^(0+128),w
  1817     0454  0020               	movlb	0	; select bank0
  1818     0455  00D9               	movwf	??_main
  1819     0456  35D9               	lslf	??_main,f
  1820     0457  0DDA               	rlf	??_main+1,f
  1821     0458  30D0               	movlw	208
  1822     0459  00DB               	movwf	??_main+2
  1823     045A  3020               	movlw	32
  1824     045B  00DC               	movwf	??_main+3
  1825     045C  0859               	movf	??_main,w
  1826     045D  075B               	addwf	??_main+2,w
  1827     045E  0086               	movwf	6
  1828     045F  085A               	movf	??_main+1,w
  1829     0460  3D5C               	addwfc	??_main+3,w
  1830     0461  0087               	movwf	7
  1831     0462  3000               	movlw	0
  1832     0463  3FC0               	movwi [0]fsr1
  1833     0464  3FC1               	movwi [1]fsr1
  1834     0465                     l1962:
  1835     0465  3001               	movlw	1
  1836     0466  0021               	movlb	1	; select bank1
  1837     0467  07C6               	addwf	main@i^(0+128),f
  1838     0468  3000               	movlw	0
  1839     0469  3DC7               	addwfc	(main@i+1)^(0+128),f
  1840     046A                     l1964:
  1841     046A  0847               	movf	(main@i+1)^(0+128),w
  1842     046B  3A80               	xorlw	128
  1843     046C  0020               	movlb	0	; select bank0
  1844     046D  00D9               	movwf	??_main
  1845     046E  0021               	movlb	1	; select bank1
  1846     046F  0853               	movf	(main@num_ap1+1)^(0+128),w
  1847     0470  3A80               	xorlw	128
  1848     0471  0020               	movlb	0	; select bank0
  1849     0472  0259               	subwf	??_main,w
  1850     0473  1D03               	skipz
  1851     0474  2C78               	goto	u1685
  1852     0475  0021               	movlb	1	; select bank1
  1853     0476  0852               	movf	main@num_ap1^(0+128),w
  1854     0477  0246               	subwf	main@i^(0+128),w
  1855     0478                     u1685:
  1856     0478  1C03               	skipc
  1857     0479  2C7B               	goto	u1681
  1858     047A  2C7C               	goto	u1680
  1859     047B                     u1681:
  1860     047B  2C4E               	goto	l1960
  1861     047C                     u1680:
  1862     047C                     l1966:
  1863                           
  1864                           ;main.c: 165: };main.c: 166: for (int i=0 ; i < num_ap1 ; i++){
  1865     047C  0021               	movlb	1	; select bank1
  1866     047D  01D6               	clrf	main@i_126^(0+128)
  1867     047E  01D7               	clrf	(main@i_126+1)^(0+128)
  1868     047F  2CD0               	goto	l1978
  1869     0480                     l1968:
  1870                           
  1871                           ;main.c: 167: ptr = strtok((0), "/");
  1872     0480  3095               	movlw	low (STR_14| (0+32768))
  1873     0481  0020               	movlb	0	; select bank0
  1874     0482  00C9               	movwf	strtok@s2
  1875     0483  3090               	movlw	high (STR_14| (0+32768))
  1876     0484  00CA               	movwf	strtok@s2+1
  1877     0485  0103               	clrw
  1878     0486  3180  20BE  3183   	fcall	_strtok
  1879     0489  0021               	movlb	1	; select bank1
  1880     048A  00DD               	movwf	main@ptr^(0+128)
  1881     048B                     l1970:
  1882                           
  1883                           ;main.c: 168: if(ptr != (0)) {
  1884     048B  085D               	movf	main@ptr^(0+128),w
  1885     048C  1903               	btfsc	3,2
  1886     048D  2C8F               	goto	u1691
  1887     048E  2C90               	goto	u1690
  1888     048F                     u1691:
  1889     048F  2CCB               	goto	l1976
  1890     0490                     u1690:
  1891     0490                     l1972:
  1892                           
  1893                           ;main.c: 169: ap1_dat[i] = atoi(ptr);
  1894     0490  085D               	movf	main@ptr^(0+128),w
  1895     0491  3181  21BB  3183   	fcall	_atoi
  1896     0494  0021               	movlb	1	; select bank1
  1897     0495  0857               	movf	(main@i_126+1)^(0+128),w
  1898     0496  0020               	movlb	0	; select bank0
  1899     0497  00DA               	movwf	??_main+1
  1900     0498  0021               	movlb	1	; select bank1
  1901     0499  0856               	movf	main@i_126^(0+128),w
  1902     049A  0020               	movlb	0	; select bank0
  1903     049B  00D9               	movwf	??_main
  1904     049C  35D9               	lslf	??_main,f
  1905     049D  0DDA               	rlf	??_main+1,f
  1906     049E  30D0               	movlw	208
  1907     049F  00DB               	movwf	??_main+2
  1908     04A0  3020               	movlw	32
  1909     04A1  00DC               	movwf	??_main+3
  1910     04A2  0859               	movf	??_main,w
  1911     04A3  075B               	addwf	??_main+2,w
  1912     04A4  0086               	movwf	6
  1913     04A5  085A               	movf	??_main+1,w
  1914     04A6  3D5C               	addwfc	??_main+3,w
  1915     04A7  0087               	movwf	7
  1916     04A8  0876               	movf	?_atoi,w
  1917     04A9  3FC0               	movwi [0]fsr1
  1918     04AA  0877               	movf	?_atoi+1,w
  1919     04AB  3FC1               	movwi [1]fsr1
  1920     04AC                     l1974:
  1921                           
  1922                           ;main.c: 170: printf("%d\n", ap1_dat[i]);
  1923     04AC  305D               	movlw	low (STR_16| (0+32768))
  1924     04AD  00C9               	movwf	printf@f
  1925     04AE  3090               	movlw	high (STR_16| (0+32768))
  1926     04AF  00CA               	movwf	printf@f+1
  1927     04B0  0021               	movlb	1	; select bank1
  1928     04B1  0857               	movf	(main@i_126+1)^(0+128),w
  1929     04B2  0020               	movlb	0	; select bank0
  1930     04B3  00DA               	movwf	??_main+1
  1931     04B4  0021               	movlb	1	; select bank1
  1932     04B5  0856               	movf	main@i_126^(0+128),w
  1933     04B6  0020               	movlb	0	; select bank0
  1934     04B7  00D9               	movwf	??_main
  1935     04B8  35D9               	lslf	??_main,f
  1936     04B9  0DDA               	rlf	??_main+1,f
  1937     04BA  30D0               	movlw	208
  1938     04BB  00DB               	movwf	??_main+2
  1939     04BC  3020               	movlw	32
  1940     04BD  00DC               	movwf	??_main+3
  1941     04BE  0859               	movf	??_main,w
  1942     04BF  075B               	addwf	??_main+2,w
  1943     04C0  0086               	movwf	6
  1944     04C1  085A               	movf	??_main+1,w
  1945     04C2  3D5C               	addwfc	??_main+3,w
  1946     04C3  0087               	movwf	7
  1947     04C4  3F40               	moviw [0]fsr1
  1948     04C5  00CB               	movwf	?_printf+2
  1949     04C6  3F41               	moviw [1]fsr1
  1950     04C7  00CC               	movwf	?_printf+3
  1951     04C8  3182  2239  3183   	fcall	_printf
  1952     04CB                     l1976:
  1953     04CB  3001               	movlw	1
  1954     04CC  0021               	movlb	1	; select bank1
  1955     04CD  07D6               	addwf	main@i_126^(0+128),f
  1956     04CE  3000               	movlw	0
  1957     04CF  3DD7               	addwfc	(main@i_126+1)^(0+128),f
  1958     04D0                     l1978:
  1959     04D0  0857               	movf	(main@i_126+1)^(0+128),w
  1960     04D1  3A80               	xorlw	128
  1961     04D2  0020               	movlb	0	; select bank0
  1962     04D3  00D9               	movwf	??_main
  1963     04D4  0021               	movlb	1	; select bank1
  1964     04D5  0853               	movf	(main@num_ap1+1)^(0+128),w
  1965     04D6  3A80               	xorlw	128
  1966     04D7  0020               	movlb	0	; select bank0
  1967     04D8  0259               	subwf	??_main,w
  1968     04D9  1D03               	skipz
  1969     04DA  2CDE               	goto	u1705
  1970     04DB  0021               	movlb	1	; select bank1
  1971     04DC  0852               	movf	main@num_ap1^(0+128),w
  1972     04DD  0256               	subwf	main@i_126^(0+128),w
  1973     04DE                     u1705:
  1974     04DE  1C03               	skipc
  1975     04DF  2CE1               	goto	u1701
  1976     04E0  2CE2               	goto	u1700
  1977     04E1                     u1701:
  1978     04E1  2C80               	goto	l1968
  1979     04E2                     u1700:
  1980     04E2                     l1980:
  1981                           
  1982                           ;main.c: 171: };main.c: 172: };main.c: 173: printf("SA1 OK\n");
  1983     04E2  301E               	movlw	low (STR_17| (0+32768))
  1984     04E3  0020               	movlb	0	; select bank0
  1985     04E4  00C9               	movwf	printf@f
  1986     04E5  3090               	movlw	high (STR_17| (0+32768))
  1987     04E6  00CA               	movwf	printf@f+1
  1988     04E7  3182  2239  3183   	fcall	_printf
  1989                           
  1990                           ;main.c: 174: break;
  1991     04EA  2B43               	goto	l59
  1992     04EB                     l1982:
  1993                           
  1994                           ;main.c: 177: for (int i=0 ; i < num_ap2 ; i++){
  1995     04EB  01C8               	clrf	main@i_131^(0+128)
  1996     04EC  01C9               	clrf	(main@i_131+1)^(0+128)
  1997     04ED  2CFA               	goto	l1988
  1998     04EE                     l1984:
  1999                           
  2000                           ;main.c: 178: ap2_dat[i] = 0;
  2001     04EE  0021               	movlb	1	; select bank1
  2002     04EF  3548               	lslf	main@i_131^(0+128),w
  2003     04F0  3E20               	addlw	(low (_ap2_dat| 0))& (0+255)
  2004     04F1  0086               	movwf	6
  2005     04F2  0187               	clrf	7
  2006     04F3  3000               	movlw	0
  2007     04F4  3FC0               	movwi [0]fsr1
  2008     04F5  3FC1               	movwi [1]fsr1
  2009     04F6                     l1986:
  2010     04F6  3001               	movlw	1
  2011     04F7  07C8               	addwf	main@i_131^(0+128),f
  2012     04F8  3000               	movlw	0
  2013     04F9  3DC9               	addwfc	(main@i_131+1)^(0+128),f
  2014     04FA                     l1988:
  2015     04FA  0849               	movf	(main@i_131+1)^(0+128),w
  2016     04FB  3A80               	xorlw	128
  2017     04FC  0020               	movlb	0	; select bank0
  2018     04FD  00D9               	movwf	??_main
  2019     04FE  0021               	movlb	1	; select bank1
  2020     04FF  0855               	movf	(main@num_ap2+1)^(0+128),w
  2021     0500  3A80               	xorlw	128
  2022     0501  0020               	movlb	0	; select bank0
  2023     0502  0259               	subwf	??_main,w
  2024     0503  1D03               	skipz
  2025     0504  2D08               	goto	u1715
  2026     0505  0021               	movlb	1	; select bank1
  2027     0506  0854               	movf	main@num_ap2^(0+128),w
  2028     0507  0248               	subwf	main@i_131^(0+128),w
  2029     0508                     u1715:
  2030     0508  1C03               	skipc
  2031     0509  2D0B               	goto	u1711
  2032     050A  2D0C               	goto	u1710
  2033     050B                     u1711:
  2034     050B  2CEE               	goto	l1984
  2035     050C                     u1710:
  2036     050C                     l1990:
  2037                           
  2038                           ;main.c: 179: };main.c: 180: for (int i=0 ; i < num_ap2 ; i++){
  2039     050C  0021               	movlb	1	; select bank1
  2040     050D  01CA               	clrf	main@i_132^(0+128)
  2041     050E  01CB               	clrf	(main@i_132+1)^(0+128)
  2042     050F  2D31               	goto	l2000
  2043     0510                     l1992:
  2044                           
  2045                           ;main.c: 181: ptr = strtok((0), "/");
  2046     0510  3095               	movlw	low (STR_14| (0+32768))
  2047     0511  0020               	movlb	0	; select bank0
  2048     0512  00C9               	movwf	strtok@s2
  2049     0513  3090               	movlw	high (STR_14| (0+32768))
  2050     0514  00CA               	movwf	strtok@s2+1
  2051     0515  0103               	clrw
  2052     0516  3180  20BE  3183   	fcall	_strtok
  2053     0519  0021               	movlb	1	; select bank1
  2054     051A  00DD               	movwf	main@ptr^(0+128)
  2055     051B                     l1994:
  2056                           
  2057                           ;main.c: 182: if(ptr != (0)) {
  2058     051B  085D               	movf	main@ptr^(0+128),w
  2059     051C  1903               	btfsc	3,2
  2060     051D  2D1F               	goto	u1721
  2061     051E  2D20               	goto	u1720
  2062     051F                     u1721:
  2063     051F  2D2D               	goto	l1998
  2064     0520                     u1720:
  2065     0520                     l1996:
  2066                           
  2067                           ;main.c: 183: ap2_dat[i] = atoi(ptr);
  2068     0520  085D               	movf	main@ptr^(0+128),w
  2069     0521  3181  21BB  3183   	fcall	_atoi
  2070     0524  0021               	movlb	1	; select bank1
  2071     0525  354A               	lslf	main@i_132^(0+128),w
  2072     0526  3E20               	addlw	(low (_ap2_dat| 0))& (0+255)
  2073     0527  0086               	movwf	6
  2074     0528  0187               	clrf	7
  2075     0529  0876               	movf	?_atoi,w
  2076     052A  3FC0               	movwi [0]fsr1
  2077     052B  0877               	movf	?_atoi+1,w
  2078     052C  3FC1               	movwi [1]fsr1
  2079     052D                     l1998:
  2080     052D  3001               	movlw	1
  2081     052E  07CA               	addwf	main@i_132^(0+128),f
  2082     052F  3000               	movlw	0
  2083     0530  3DCB               	addwfc	(main@i_132+1)^(0+128),f
  2084     0531                     l2000:
  2085     0531  084B               	movf	(main@i_132+1)^(0+128),w
  2086     0532  3A80               	xorlw	128
  2087     0533  0020               	movlb	0	; select bank0
  2088     0534  00D9               	movwf	??_main
  2089     0535  0021               	movlb	1	; select bank1
  2090     0536  0855               	movf	(main@num_ap2+1)^(0+128),w
  2091     0537  3A80               	xorlw	128
  2092     0538  0020               	movlb	0	; select bank0
  2093     0539  0259               	subwf	??_main,w
  2094     053A  1D03               	skipz
  2095     053B  2D3F               	goto	u1735
  2096     053C  0021               	movlb	1	; select bank1
  2097     053D  0854               	movf	main@num_ap2^(0+128),w
  2098     053E  024A               	subwf	main@i_132^(0+128),w
  2099     053F                     u1735:
  2100     053F  1C03               	skipc
  2101     0540  2D42               	goto	u1731
  2102     0541  2D43               	goto	u1730
  2103     0542                     u1731:
  2104     0542  2D10               	goto	l1992
  2105     0543                     u1730:
  2106     0543                     l2002:
  2107                           
  2108                           ;main.c: 184: };main.c: 185: };main.c: 186: printf("SA2 OK\n");
  2109     0543  302E               	movlw	low (STR_19| (0+32768))
  2110     0544  0020               	movlb	0	; select bank0
  2111     0545  00C9               	movwf	printf@f
  2112     0546  3090               	movlw	high (STR_19| (0+32768))
  2113     0547  00CA               	movwf	printf@f+1
  2114     0548  3182  2239  3183   	fcall	_printf
  2115                           
  2116                           ;main.c: 187: break;
  2117     054B  2B43               	goto	l59
  2118     054C                     l2004:
  2119                           
  2120                           ;main.c: 196: printf("SA3 OK\n");
  2121     054C  303E               	movlw	low (STR_20| (0+32768))
  2122     054D  0020               	movlb	0	; select bank0
  2123     054E  00C9               	movwf	printf@f
  2124     054F  3090               	movlw	high (STR_20| (0+32768))
  2125     0550  00CA               	movwf	printf@f+1
  2126     0551  3182  2239  3183   	fcall	_printf
  2127                           
  2128                           ;main.c: 197: break;
  2129     0554  2B43               	goto	l59
  2130     0555                     l2006:
  2131                           
  2132                           ;main.c: 200: ptr = strtok((0), "/");
  2133     0555  3095               	movlw	low (STR_14| (0+32768))
  2134     0556  0020               	movlb	0	; select bank0
  2135     0557  00C9               	movwf	strtok@s2
  2136     0558  3090               	movlw	high (STR_14| (0+32768))
  2137     0559  00CA               	movwf	strtok@s2+1
  2138     055A  0103               	clrw
  2139     055B  3180  20BE  3183   	fcall	_strtok
  2140     055E  0021               	movlb	1	; select bank1
  2141     055F  00DD               	movwf	main@ptr^(0+128)
  2142     0560                     l2008:
  2143                           
  2144                           ;main.c: 201: if(ptr != (0)) {
  2145     0560  085D               	movf	main@ptr^(0+128),w
  2146     0561  1903               	btfsc	3,2
  2147     0562  2D64               	goto	u1741
  2148     0563  2D65               	goto	u1740
  2149     0564                     u1741:
  2150     0564  2D6E               	goto	l2012
  2151     0565                     u1740:
  2152     0565                     l2010:
  2153                           
  2154                           ;main.c: 202: fp1_time = atoi(ptr);
  2155     0565  085D               	movf	main@ptr^(0+128),w
  2156     0566  3181  21BB  3183   	fcall	_atoi
  2157     0569  0877               	movf	?_atoi+1,w
  2158     056A  0021               	movlb	1	; select bank1
  2159     056B  00AF               	movwf	(main@fp1_time+1)^(0+128)
  2160     056C  0876               	movf	?_atoi,w
  2161     056D  00AE               	movwf	main@fp1_time^(0+128)
  2162     056E                     l2012:
  2163                           
  2164                           ;main.c: 203: };main.c: 204: ptr = strtok((0), "/");
  2165     056E  3095               	movlw	low (STR_14| (0+32768))
  2166     056F  0020               	movlb	0	; select bank0
  2167     0570  00C9               	movwf	strtok@s2
  2168     0571  3090               	movlw	high (STR_14| (0+32768))
  2169     0572  00CA               	movwf	strtok@s2+1
  2170     0573  0103               	clrw
  2171     0574  3180  20BE  3183   	fcall	_strtok
  2172     0577  0021               	movlb	1	; select bank1
  2173     0578  00DD               	movwf	main@ptr^(0+128)
  2174     0579                     l2014:
  2175                           
  2176                           ;main.c: 205: if(ptr != (0)) {
  2177     0579  085D               	movf	main@ptr^(0+128),w
  2178     057A  1903               	btfsc	3,2
  2179     057B  2D7D               	goto	u1751
  2180     057C  2D7E               	goto	u1750
  2181     057D                     u1751:
  2182     057D  2D87               	goto	l2018
  2183     057E                     u1750:
  2184     057E                     l2016:
  2185                           
  2186                           ;main.c: 206: fp1_amp = atoi(ptr);
  2187     057E  085D               	movf	main@ptr^(0+128),w
  2188     057F  3181  21BB  3183   	fcall	_atoi
  2189     0582  0877               	movf	?_atoi+1,w
  2190     0583  0021               	movlb	1	; select bank1
  2191     0584  00B1               	movwf	(main@fp1_amp+1)^(0+128)
  2192     0585  0876               	movf	?_atoi,w
  2193     0586  00B0               	movwf	main@fp1_amp^(0+128)
  2194     0587                     l2018:
  2195                           
  2196                           ;main.c: 207: };main.c: 208: printf("SF1 OK\n");
  2197     0587  3026               	movlw	low (STR_23| (0+32768))
  2198     0588  0020               	movlb	0	; select bank0
  2199     0589  00C9               	movwf	printf@f
  2200     058A  3090               	movlw	high (STR_23| (0+32768))
  2201     058B  00CA               	movwf	printf@f+1
  2202     058C  3182  2239  3183   	fcall	_printf
  2203                           
  2204                           ;main.c: 209: break;
  2205     058F  2B43               	goto	l59
  2206     0590                     l2020:
  2207                           
  2208                           ;main.c: 212: ptr = strtok((0), "/");
  2209     0590  3095               	movlw	low (STR_14| (0+32768))
  2210     0591  0020               	movlb	0	; select bank0
  2211     0592  00C9               	movwf	strtok@s2
  2212     0593  3090               	movlw	high (STR_14| (0+32768))
  2213     0594  00CA               	movwf	strtok@s2+1
  2214     0595  0103               	clrw
  2215     0596  3180  20BE  3183   	fcall	_strtok
  2216     0599  0021               	movlb	1	; select bank1
  2217     059A  00DD               	movwf	main@ptr^(0+128)
  2218     059B                     l2022:
  2219                           
  2220                           ;main.c: 213: if(ptr != (0)) {
  2221     059B  085D               	movf	main@ptr^(0+128),w
  2222     059C  1903               	btfsc	3,2
  2223     059D  2D9F               	goto	u1761
  2224     059E  2DA0               	goto	u1760
  2225     059F                     u1761:
  2226     059F  2DA9               	goto	l2026
  2227     05A0                     u1760:
  2228     05A0                     l2024:
  2229                           
  2230                           ;main.c: 214: fp2_time = atoi(ptr);
  2231     05A0  085D               	movf	main@ptr^(0+128),w
  2232     05A1  3181  21BB  3183   	fcall	_atoi
  2233     05A4  0877               	movf	?_atoi+1,w
  2234     05A5  0021               	movlb	1	; select bank1
  2235     05A6  00B3               	movwf	(main@fp2_time+1)^(0+128)
  2236     05A7  0876               	movf	?_atoi,w
  2237     05A8  00B2               	movwf	main@fp2_time^(0+128)
  2238     05A9                     l2026:
  2239                           
  2240                           ;main.c: 215: };main.c: 216: ptr = strtok((0), "/");
  2241     05A9  3095               	movlw	low (STR_14| (0+32768))
  2242     05AA  0020               	movlb	0	; select bank0
  2243     05AB  00C9               	movwf	strtok@s2
  2244     05AC  3090               	movlw	high (STR_14| (0+32768))
  2245     05AD  00CA               	movwf	strtok@s2+1
  2246     05AE  0103               	clrw
  2247     05AF  3180  20BE  3183   	fcall	_strtok
  2248     05B2  0021               	movlb	1	; select bank1
  2249     05B3  00DD               	movwf	main@ptr^(0+128)
  2250     05B4                     l2028:
  2251                           
  2252                           ;main.c: 217: if(ptr != (0)) {
  2253     05B4  085D               	movf	main@ptr^(0+128),w
  2254     05B5  1903               	btfsc	3,2
  2255     05B6  2DB8               	goto	u1771
  2256     05B7  2DB9               	goto	u1770
  2257     05B8                     u1771:
  2258     05B8  2DC2               	goto	l2032
  2259     05B9                     u1770:
  2260     05B9                     l2030:
  2261                           
  2262                           ;main.c: 218: fp2_amp = atoi(ptr);
  2263     05B9  085D               	movf	main@ptr^(0+128),w
  2264     05BA  3181  21BB  3183   	fcall	_atoi
  2265     05BD  0877               	movf	?_atoi+1,w
  2266     05BE  0021               	movlb	1	; select bank1
  2267     05BF  00B5               	movwf	(main@fp2_amp+1)^(0+128)
  2268     05C0  0876               	movf	?_atoi,w
  2269     05C1  00B4               	movwf	main@fp2_amp^(0+128)
  2270     05C2                     l2032:
  2271                           
  2272                           ;main.c: 219: };main.c: 220: printf("SF2 OK\n");
  2273     05C2  3036               	movlw	low (STR_26| (0+32768))
  2274     05C3  0020               	movlb	0	; select bank0
  2275     05C4  00C9               	movwf	printf@f
  2276     05C5  3090               	movlw	high (STR_26| (0+32768))
  2277     05C6  00CA               	movwf	printf@f+1
  2278     05C7  3182  2239  3183   	fcall	_printf
  2279                           
  2280                           ;main.c: 221: break;
  2281     05CA  2B43               	goto	l59
  2282     05CB                     l2034:
  2283                           
  2284                           ;main.c: 224: ptr = strtok((0), "/");
  2285     05CB  3095               	movlw	low (STR_14| (0+32768))
  2286     05CC  0020               	movlb	0	; select bank0
  2287     05CD  00C9               	movwf	strtok@s2
  2288     05CE  3090               	movlw	high (STR_14| (0+32768))
  2289     05CF  00CA               	movwf	strtok@s2+1
  2290     05D0  0103               	clrw
  2291     05D1  3180  20BE  3183   	fcall	_strtok
  2292     05D4  0021               	movlb	1	; select bank1
  2293     05D5  00DD               	movwf	main@ptr^(0+128)
  2294     05D6                     l2036:
  2295                           
  2296                           ;main.c: 225: if(ptr != (0)) {
  2297     05D6  085D               	movf	main@ptr^(0+128),w
  2298     05D7  1903               	btfsc	3,2
  2299     05D8  2DDA               	goto	u1781
  2300     05D9  2DDB               	goto	u1780
  2301     05DA                     u1781:
  2302     05DA  2DE4               	goto	l2040
  2303     05DB                     u1780:
  2304     05DB                     l2038:
  2305                           
  2306                           ;main.c: 226: fp3_time = atoi(ptr);
  2307     05DB  085D               	movf	main@ptr^(0+128),w
  2308     05DC  3181  21BB  3183   	fcall	_atoi
  2309     05DF  0877               	movf	?_atoi+1,w
  2310     05E0  0021               	movlb	1	; select bank1
  2311     05E1  00B7               	movwf	(main@fp3_time+1)^(0+128)
  2312     05E2  0876               	movf	?_atoi,w
  2313     05E3  00B6               	movwf	main@fp3_time^(0+128)
  2314     05E4                     l2040:
  2315                           
  2316                           ;main.c: 227: };main.c: 228: ptr = strtok((0), "/");
  2317     05E4  3095               	movlw	low (STR_14| (0+32768))
  2318     05E5  0020               	movlb	0	; select bank0
  2319     05E6  00C9               	movwf	strtok@s2
  2320     05E7  3090               	movlw	high (STR_14| (0+32768))
  2321     05E8  00CA               	movwf	strtok@s2+1
  2322     05E9  0103               	clrw
  2323     05EA  3180  20BE  3183   	fcall	_strtok
  2324     05ED  0021               	movlb	1	; select bank1
  2325     05EE  00DD               	movwf	main@ptr^(0+128)
  2326     05EF                     l2042:
  2327                           
  2328                           ;main.c: 229: if(ptr != (0)) {
  2329     05EF  085D               	movf	main@ptr^(0+128),w
  2330     05F0  1903               	btfsc	3,2
  2331     05F1  2DF3               	goto	u1791
  2332     05F2  2DF4               	goto	u1790
  2333     05F3                     u1791:
  2334     05F3  2DFD               	goto	l2046
  2335     05F4                     u1790:
  2336     05F4                     l2044:
  2337                           
  2338                           ;main.c: 230: fp3_amp = atoi(ptr);
  2339     05F4  085D               	movf	main@ptr^(0+128),w
  2340     05F5  3181  21BB  3183   	fcall	_atoi
  2341     05F8  0877               	movf	?_atoi+1,w
  2342     05F9  0021               	movlb	1	; select bank1
  2343     05FA  00B9               	movwf	(main@fp3_amp+1)^(0+128)
  2344     05FB  0876               	movf	?_atoi,w
  2345     05FC  00B8               	movwf	main@fp3_amp^(0+128)
  2346     05FD                     l2046:
  2347                           
  2348                           ;main.c: 231: };main.c: 232: printf("SF3 OK\n");
  2349     05FD  3046               	movlw	low (STR_29| (0+32768))
  2350     05FE  0020               	movlb	0	; select bank0
  2351     05FF  00C9               	movwf	printf@f
  2352     0600  3090               	movlw	high (STR_29| (0+32768))
  2353     0601  00CA               	movwf	printf@f+1
  2354     0602  3182  2239  3183   	fcall	_printf
  2355                           
  2356                           ;main.c: 233: break;
  2357     0605  2B43               	goto	l59
  2358     0606                     l2048:
  2359                           
  2360                           ;main.c: 236: ptr = strtok((0), "/");
  2361     0606  3095               	movlw	low (STR_14| (0+32768))
  2362     0607  0020               	movlb	0	; select bank0
  2363     0608  00C9               	movwf	strtok@s2
  2364     0609  3090               	movlw	high (STR_14| (0+32768))
  2365     060A  00CA               	movwf	strtok@s2+1
  2366     060B  0103               	clrw
  2367     060C  3180  20BE  3183   	fcall	_strtok
  2368     060F  0021               	movlb	1	; select bank1
  2369     0610  00DD               	movwf	main@ptr^(0+128)
  2370     0611                     l2050:
  2371                           
  2372                           ;main.c: 237: if(ptr != (0)) {
  2373     0611  085D               	movf	main@ptr^(0+128),w
  2374     0612  1903               	btfsc	3,2
  2375     0613  2E15               	goto	u1801
  2376     0614  2E16               	goto	u1800
  2377     0615                     u1801:
  2378     0615  2E1F               	goto	l2054
  2379     0616                     u1800:
  2380     0616                     l2052:
  2381                           
  2382                           ;main.c: 238: fp4_time = atoi(ptr);
  2383     0616  085D               	movf	main@ptr^(0+128),w
  2384     0617  3181  21BB  3183   	fcall	_atoi
  2385     061A  0877               	movf	?_atoi+1,w
  2386     061B  0021               	movlb	1	; select bank1
  2387     061C  00BB               	movwf	(main@fp4_time+1)^(0+128)
  2388     061D  0876               	movf	?_atoi,w
  2389     061E  00BA               	movwf	main@fp4_time^(0+128)
  2390     061F                     l2054:
  2391                           
  2392                           ;main.c: 239: };main.c: 240: ptr = strtok((0), "/");
  2393     061F  3095               	movlw	low (STR_14| (0+32768))
  2394     0620  0020               	movlb	0	; select bank0
  2395     0621  00C9               	movwf	strtok@s2
  2396     0622  3090               	movlw	high (STR_14| (0+32768))
  2397     0623  00CA               	movwf	strtok@s2+1
  2398     0624  0103               	clrw
  2399     0625  3180  20BE  3183   	fcall	_strtok
  2400     0628  0021               	movlb	1	; select bank1
  2401     0629  00DD               	movwf	main@ptr^(0+128)
  2402     062A                     l2056:
  2403                           
  2404                           ;main.c: 241: if(ptr != (0)) {
  2405     062A  085D               	movf	main@ptr^(0+128),w
  2406     062B  1903               	btfsc	3,2
  2407     062C  2E2E               	goto	u1811
  2408     062D  2E2F               	goto	u1810
  2409     062E                     u1811:
  2410     062E  2E38               	goto	l2060
  2411     062F                     u1810:
  2412     062F                     l2058:
  2413                           
  2414                           ;main.c: 242: fp4_amp = atoi(ptr);
  2415     062F  085D               	movf	main@ptr^(0+128),w
  2416     0630  3181  21BB  3183   	fcall	_atoi
  2417     0633  0877               	movf	?_atoi+1,w
  2418     0634  0021               	movlb	1	; select bank1
  2419     0635  00BD               	movwf	(main@fp4_amp+1)^(0+128)
  2420     0636  0876               	movf	?_atoi,w
  2421     0637  00BC               	movwf	main@fp4_amp^(0+128)
  2422     0638                     l2060:
  2423                           
  2424                           ;main.c: 243: };main.c: 244: printf("SF4 OK\n");
  2425     0638  304E               	movlw	low (STR_32| (0+32768))
  2426     0639  0020               	movlb	0	; select bank0
  2427     063A  00C9               	movwf	printf@f
  2428     063B  3090               	movlw	high (STR_32| (0+32768))
  2429     063C  00CA               	movwf	printf@f+1
  2430     063D  3182  2239  3183   	fcall	_printf
  2431                           
  2432                           ;main.c: 245: break;
  2433     0640  2B43               	goto	l59
  2434     0641                     l2062:
  2435                           
  2436                           ;main.c: 249: for (int k=0 ; k < 6 ; k++){
  2437     0641  01CC               	clrf	main@k^(0+128)
  2438     0642  01CD               	clrf	(main@k+1)^(0+128)
  2439     0643                     l2064:
  2440     0643  084D               	movf	(main@k+1)^(0+128),w
  2441     0644  3A80               	xorlw	128
  2442     0645  0020               	movlb	0	; select bank0
  2443     0646  00D9               	movwf	??_main
  2444     0647  3080               	movlw	128
  2445     0648  0259               	subwf	??_main,w
  2446     0649  1D03               	skipz
  2447     064A  2E4E               	goto	u1825
  2448     064B  3006               	movlw	6
  2449     064C  0021               	movlb	1	; select bank1
  2450     064D  024C               	subwf	main@k^(0+128),w
  2451     064E                     u1825:
  2452     064E  1C03               	skipc
  2453     064F  2E51               	goto	u1821
  2454     0650  2E52               	goto	u1820
  2455     0651                     u1821:
  2456     0651  2E53               	goto	l2068
  2457     0652                     u1820:
  2458     0652  2FAF               	goto	l2136
  2459     0653                     l2068:
  2460                           
  2461                           ;main.c: 250: ptr = strtok((0), "/");
  2462     0653  3095               	movlw	low (STR_14| (0+32768))
  2463     0654  0020               	movlb	0	; select bank0
  2464     0655  00C9               	movwf	strtok@s2
  2465     0656  3090               	movlw	high (STR_14| (0+32768))
  2466     0657  00CA               	movwf	strtok@s2+1
  2467     0658  0103               	clrw
  2468     0659  3180  20BE  3183   	fcall	_strtok
  2469     065C  0021               	movlb	1	; select bank1
  2470     065D  00DD               	movwf	main@ptr^(0+128)
  2471                           
  2472                           ;main.c: 251: if(strcmp(ptr,"A1") == 0) {
  2473     065E  3066               	movlw	low ((STR_3+1)| (0+32768))
  2474     065F  00F0               	movwf	strcmp@s2
  2475     0660  3090               	movlw	high ((STR_3+1)| (0+32768))
  2476     0661  00F1               	movwf	strcmp@s2+1
  2477     0662  085D               	movf	main@ptr^(0+128),w
  2478     0663  318F  2779  3183   	fcall	_strcmp
  2479     0666  0870               	movf	?_strcmp,w
  2480     0667  0471               	iorwf	?_strcmp+1,w
  2481     0668  1D03               	btfss	3,2
  2482     0669  2E6B               	goto	u1831
  2483     066A  2E6C               	goto	u1830
  2484     066B                     u1831:
  2485     066B  2EA3               	goto	l2080
  2486     066C                     u1830:
  2487     066C                     l2070:
  2488                           
  2489                           ;main.c: 252: for (int i=0 ; i < num_ap1 ; i++){
  2490     066C  0021               	movlb	1	; select bank1
  2491     066D  01CE               	clrf	main@i_151^(0+128)
  2492     066E  01CF               	clrf	(main@i_151+1)^(0+128)
  2493     066F  2E90               	goto	l2078
  2494     0670                     l2072:
  2495                           
  2496                           ;main.c: 253: DAC1CON1 = ap1_dat[i] ;
  2497     0670  0021               	movlb	1	; select bank1
  2498     0671  084F               	movf	(main@i_151+1)^(0+128),w
  2499     0672  0020               	movlb	0	; select bank0
  2500     0673  00DA               	movwf	??_main+1
  2501     0674  0021               	movlb	1	; select bank1
  2502     0675  084E               	movf	main@i_151^(0+128),w
  2503     0676  0020               	movlb	0	; select bank0
  2504     0677  00D9               	movwf	??_main
  2505     0678  35D9               	lslf	??_main,f
  2506     0679  0DDA               	rlf	??_main+1,f
  2507     067A  30D0               	movlw	208
  2508     067B  00DB               	movwf	??_main+2
  2509     067C  3020               	movlw	32
  2510     067D  00DC               	movwf	??_main+3
  2511     067E  0859               	movf	??_main,w
  2512     067F  075B               	addwf	??_main+2,w
  2513     0680  0086               	movwf	6
  2514     0681  085A               	movf	??_main+1,w
  2515     0682  3D5C               	addwfc	??_main+3,w
  2516     0683  0087               	movwf	7
  2517     0684  0801               	movf	1,w
  2518     0685  0022               	movlb	2	; select bank2
  2519     0686  0099               	movwf	25	;volatile
  2520     0687                     l2074:
  2521                           
  2522                           ;main.c: 254: _delay((unsigned long)((23)*(32000000/4000000.0))) ;
  2523     0687  303D               	movlw	61
  2524     0688                     u1957:
  2525     0688  0B89               	decfsz	9,f
  2526     0689  2E88               	goto	u1957
  2527     068A  0000               	nop
  2528     068B                     l2076:
  2529     068B  3001               	movlw	1
  2530     068C  0021               	movlb	1	; select bank1
  2531     068D  07CE               	addwf	main@i_151^(0+128),f
  2532     068E  3000               	movlw	0
  2533     068F  3DCF               	addwfc	(main@i_151+1)^(0+128),f
  2534     0690                     l2078:
  2535     0690  084F               	movf	(main@i_151+1)^(0+128),w
  2536     0691  3A80               	xorlw	128
  2537     0692  0020               	movlb	0	; select bank0
  2538     0693  00D9               	movwf	??_main
  2539     0694  0021               	movlb	1	; select bank1
  2540     0695  0853               	movf	(main@num_ap1+1)^(0+128),w
  2541     0696  3A80               	xorlw	128
  2542     0697  0020               	movlb	0	; select bank0
  2543     0698  0259               	subwf	??_main,w
  2544     0699  1D03               	skipz
  2545     069A  2E9E               	goto	u1845
  2546     069B  0021               	movlb	1	; select bank1
  2547     069C  0852               	movf	main@num_ap1^(0+128),w
  2548     069D  024E               	subwf	main@i_151^(0+128),w
  2549     069E                     u1845:
  2550     069E  1C03               	skipc
  2551     069F  2EA1               	goto	u1841
  2552     06A0  2EA2               	goto	u1840
  2553     06A1                     u1841:
  2554     06A1  2E70               	goto	l2072
  2555     06A2                     u1840:
  2556     06A2  2FA9               	goto	l2132
  2557     06A3                     l2080:
  2558     06A3  306E               	movlw	low ((STR_4+1)| (0+32768))
  2559     06A4  00F0               	movwf	strcmp@s2
  2560     06A5  3090               	movlw	high ((STR_4+1)| (0+32768))
  2561     06A6  00F1               	movwf	strcmp@s2+1
  2562     06A7  0021               	movlb	1	; select bank1
  2563     06A8  085D               	movf	main@ptr^(0+128),w
  2564     06A9  318F  2779  3183   	fcall	_strcmp
  2565     06AC  0870               	movf	?_strcmp,w
  2566     06AD  0471               	iorwf	?_strcmp+1,w
  2567     06AE  1D03               	btfss	3,2
  2568     06AF  2EB1               	goto	u1851
  2569     06B0  2EB2               	goto	u1850
  2570     06B1                     u1851:
  2571     06B1  2EDB               	goto	l2092
  2572     06B2                     u1850:
  2573     06B2                     l2082:
  2574                           
  2575                           ;main.c: 257: for (int i=0 ; i < num_ap2 ; i++){
  2576     06B2  0021               	movlb	1	; select bank1
  2577     06B3  01D0               	clrf	main@i_153^(0+128)
  2578     06B4  01D1               	clrf	(main@i_153+1)^(0+128)
  2579     06B5  2EC7               	goto	l2090
  2580     06B6                     l2084:
  2581                           
  2582                           ;main.c: 258: DAC1CON1 = ap2_dat[i] ;
  2583     06B6  0021               	movlb	1	; select bank1
  2584     06B7  3550               	lslf	main@i_153^(0+128),w
  2585     06B8  3E20               	addlw	(low (_ap2_dat| 0))& (0+255)
  2586     06B9  0086               	movwf	6
  2587     06BA  0187               	clrf	7
  2588     06BB  0801               	movf	1,w
  2589     06BC  0022               	movlb	2	; select bank2
  2590     06BD  0099               	movwf	25	;volatile
  2591     06BE                     l2086:
  2592                           
  2593                           ;main.c: 259: _delay((unsigned long)((23)*(32000000/4000000.0))) ;
  2594     06BE  303D               	movlw	61
  2595     06BF                     u1967:
  2596     06BF  0B89               	decfsz	9,f
  2597     06C0  2EBF               	goto	u1967
  2598     06C1  0000               	nop
  2599     06C2                     l2088:
  2600     06C2  3001               	movlw	1
  2601     06C3  0021               	movlb	1	; select bank1
  2602     06C4  07D0               	addwf	main@i_153^(0+128),f
  2603     06C5  3000               	movlw	0
  2604     06C6  3DD1               	addwfc	(main@i_153+1)^(0+128),f
  2605     06C7                     l2090:
  2606     06C7  0851               	movf	(main@i_153+1)^(0+128),w
  2607     06C8  3A80               	xorlw	128
  2608     06C9  0020               	movlb	0	; select bank0
  2609     06CA  00D9               	movwf	??_main
  2610     06CB  0021               	movlb	1	; select bank1
  2611     06CC  0855               	movf	(main@num_ap2+1)^(0+128),w
  2612     06CD  3A80               	xorlw	128
  2613     06CE  0020               	movlb	0	; select bank0
  2614     06CF  0259               	subwf	??_main,w
  2615     06D0  1D03               	skipz
  2616     06D1  2ED5               	goto	u1865
  2617     06D2  0021               	movlb	1	; select bank1
  2618     06D3  0854               	movf	main@num_ap2^(0+128),w
  2619     06D4  0250               	subwf	main@i_153^(0+128),w
  2620     06D5                     u1865:
  2621     06D5  1C03               	skipc
  2622     06D6  2ED8               	goto	u1861
  2623     06D7  2ED9               	goto	u1860
  2624     06D8                     u1861:
  2625     06D8  2EB6               	goto	l2084
  2626     06D9                     u1860:
  2627     06D9  2FA9               	goto	l2132
  2628     06DA                     l125:
  2629                           
  2630                           ;main.c: 260: };main.c: 266: }else if(strcmp(ptr,"F1") == 0) {
  2631     06DA  2FA9               	goto	l2132
  2632     06DB                     l2092:
  2633     06DB  306A               	movlw	low ((STR_6+1)| (0+32768))
  2634     06DC  00F0               	movwf	strcmp@s2
  2635     06DD  3090               	movlw	high ((STR_6+1)| (0+32768))
  2636     06DE  00F1               	movwf	strcmp@s2+1
  2637     06DF  0021               	movlb	1	; select bank1
  2638     06E0  085D               	movf	main@ptr^(0+128),w
  2639     06E1  318F  2779  3183   	fcall	_strcmp
  2640     06E4  0870               	movf	?_strcmp,w
  2641     06E5  0471               	iorwf	?_strcmp+1,w
  2642     06E6  1D03               	btfss	3,2
  2643     06E7  2EE9               	goto	u1871
  2644     06E8  2EEA               	goto	u1870
  2645     06E9                     u1871:
  2646     06E9  2F10               	goto	l2102
  2647     06EA                     u1870:
  2648     06EA                     l2094:
  2649                           
  2650                           ;main.c: 267: DAC1CON1 = fp1_amp ;
  2651     06EA  0021               	movlb	1	; select bank1
  2652     06EB  0830               	movf	main@fp1_amp^(0+128),w
  2653     06EC  0022               	movlb	2	; select bank2
  2654     06ED  0099               	movwf	25	;volatile
  2655     06EE                     l2096:
  2656                           
  2657                           ;main.c: 268: for (int i=0 ; i < fp1_time ; i++){
  2658     06EE  0021               	movlb	1	; select bank1
  2659     06EF  01BE               	clrf	main@i_155^(0+128)
  2660     06F0  01BF               	clrf	(main@i_155+1)^(0+128)
  2661     06F1  2EFB               	goto	l128
  2662     06F2                     l2098:
  2663                           
  2664                           ;main.c: 269: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2665     06F2  3035               	movlw	53
  2666     06F3                     u1977:
  2667     06F3  0B89               	decfsz	9,f
  2668     06F4  2EF3               	goto	u1977
  2669     06F5  0000               	nop
  2670     06F6  3001               	movlw	1
  2671     06F7  0021               	movlb	1	; select bank1
  2672     06F8  07BE               	addwf	main@i_155^(0+128),f
  2673     06F9  3000               	movlw	0
  2674     06FA  3DBF               	addwfc	(main@i_155+1)^(0+128),f
  2675     06FB                     l128:
  2676     06FB  083F               	movf	(main@i_155+1)^(0+128),w
  2677     06FC  3A80               	xorlw	128
  2678     06FD  0020               	movlb	0	; select bank0
  2679     06FE  00D9               	movwf	??_main
  2680     06FF  0021               	movlb	1	; select bank1
  2681     0700  082F               	movf	(main@fp1_time+1)^(0+128),w
  2682     0701  3A80               	xorlw	128
  2683     0702  0020               	movlb	0	; select bank0
  2684     0703  0259               	subwf	??_main,w
  2685     0704  1D03               	skipz
  2686     0705  2F09               	goto	u1885
  2687     0706  0021               	movlb	1	; select bank1
  2688     0707  082E               	movf	main@fp1_time^(0+128),w
  2689     0708  023E               	subwf	main@i_155^(0+128),w
  2690     0709                     u1885:
  2691     0709  1C03               	skipc
  2692     070A  2F0C               	goto	u1881
  2693     070B  2F0D               	goto	u1880
  2694     070C                     u1881:
  2695     070C  2EF2               	goto	l2098
  2696     070D                     u1880:
  2697     070D                     l2100:
  2698                           
  2699                           ;main.c: 270: };main.c: 271: DAC1CON1 = 0 ;
  2700     070D  0022               	movlb	2	; select bank2
  2701     070E  0199               	clrf	25	;volatile
  2702                           
  2703                           ;main.c: 272: }else if(strcmp(ptr,"F2") == 0) {
  2704     070F  2FA9               	goto	l2132
  2705     0710                     l2102:
  2706     0710  3072               	movlw	low ((STR_7+1)| (0+32768))
  2707     0711  00F0               	movwf	strcmp@s2
  2708     0712  3090               	movlw	high ((STR_7+1)| (0+32768))
  2709     0713  00F1               	movwf	strcmp@s2+1
  2710     0714  0021               	movlb	1	; select bank1
  2711     0715  085D               	movf	main@ptr^(0+128),w
  2712     0716  318F  2779  3183   	fcall	_strcmp
  2713     0719  0870               	movf	?_strcmp,w
  2714     071A  0471               	iorwf	?_strcmp+1,w
  2715     071B  1D03               	btfss	3,2
  2716     071C  2F1E               	goto	u1891
  2717     071D  2F1F               	goto	u1890
  2718     071E                     u1891:
  2719     071E  2F43               	goto	l2112
  2720     071F                     u1890:
  2721     071F                     l2104:
  2722                           
  2723                           ;main.c: 273: DAC1CON1 = fp2_amp ;
  2724     071F  0021               	movlb	1	; select bank1
  2725     0720  0834               	movf	main@fp2_amp^(0+128),w
  2726     0721  0022               	movlb	2	; select bank2
  2727     0722  0099               	movwf	25	;volatile
  2728     0723                     l2106:
  2729                           
  2730                           ;main.c: 274: for (int i=0 ; i < fp2_time ; i++){
  2731     0723  0021               	movlb	1	; select bank1
  2732     0724  01C0               	clrf	main@i_157^(0+128)
  2733     0725  01C1               	clrf	(main@i_157+1)^(0+128)
  2734     0726  2F30               	goto	l133
  2735     0727                     l2108:
  2736                           
  2737                           ;main.c: 275: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2738     0727  3035               	movlw	53
  2739     0728                     u1987:
  2740     0728  0B89               	decfsz	9,f
  2741     0729  2F28               	goto	u1987
  2742     072A  0000               	nop
  2743     072B  3001               	movlw	1
  2744     072C  0021               	movlb	1	; select bank1
  2745     072D  07C0               	addwf	main@i_157^(0+128),f
  2746     072E  3000               	movlw	0
  2747     072F  3DC1               	addwfc	(main@i_157+1)^(0+128),f
  2748     0730                     l133:
  2749     0730  0841               	movf	(main@i_157+1)^(0+128),w
  2750     0731  3A80               	xorlw	128
  2751     0732  0020               	movlb	0	; select bank0
  2752     0733  00D9               	movwf	??_main
  2753     0734  0021               	movlb	1	; select bank1
  2754     0735  0833               	movf	(main@fp2_time+1)^(0+128),w
  2755     0736  3A80               	xorlw	128
  2756     0737  0020               	movlb	0	; select bank0
  2757     0738  0259               	subwf	??_main,w
  2758     0739  1D03               	skipz
  2759     073A  2F3E               	goto	u1905
  2760     073B  0021               	movlb	1	; select bank1
  2761     073C  0832               	movf	main@fp2_time^(0+128),w
  2762     073D  0240               	subwf	main@i_157^(0+128),w
  2763     073E                     u1905:
  2764     073E  1C03               	skipc
  2765     073F  2F41               	goto	u1901
  2766     0740  2F42               	goto	u1900
  2767     0741                     u1901:
  2768     0741  2F27               	goto	l2108
  2769     0742                     u1900:
  2770     0742  2F0D               	goto	l2100
  2771     0743                     l2112:
  2772     0743  307A               	movlw	low ((STR_8+1)| (0+32768))
  2773     0744  00F0               	movwf	strcmp@s2
  2774     0745  3090               	movlw	high ((STR_8+1)| (0+32768))
  2775     0746  00F1               	movwf	strcmp@s2+1
  2776     0747  0021               	movlb	1	; select bank1
  2777     0748  085D               	movf	main@ptr^(0+128),w
  2778     0749  318F  2779  3183   	fcall	_strcmp
  2779     074C  0870               	movf	?_strcmp,w
  2780     074D  0471               	iorwf	?_strcmp+1,w
  2781     074E  1D03               	btfss	3,2
  2782     074F  2F51               	goto	u1911
  2783     0750  2F52               	goto	u1910
  2784     0751                     u1911:
  2785     0751  2F76               	goto	l2122
  2786     0752                     u1910:
  2787     0752                     l2114:
  2788                           
  2789                           ;main.c: 279: DAC1CON1 = fp3_amp ;
  2790     0752  0021               	movlb	1	; select bank1
  2791     0753  0838               	movf	main@fp3_amp^(0+128),w
  2792     0754  0022               	movlb	2	; select bank2
  2793     0755  0099               	movwf	25	;volatile
  2794     0756                     l2116:
  2795                           
  2796                           ;main.c: 280: for (int i=0 ; i < fp3_time ; i++){
  2797     0756  0021               	movlb	1	; select bank1
  2798     0757  01C2               	clrf	main@i_159^(0+128)
  2799     0758  01C3               	clrf	(main@i_159+1)^(0+128)
  2800     0759  2F63               	goto	l138
  2801     075A                     l2118:
  2802                           
  2803                           ;main.c: 281: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2804     075A  3035               	movlw	53
  2805     075B                     u1997:
  2806     075B  0B89               	decfsz	9,f
  2807     075C  2F5B               	goto	u1997
  2808     075D  0000               	nop
  2809     075E  3001               	movlw	1
  2810     075F  0021               	movlb	1	; select bank1
  2811     0760  07C2               	addwf	main@i_159^(0+128),f
  2812     0761  3000               	movlw	0
  2813     0762  3DC3               	addwfc	(main@i_159+1)^(0+128),f
  2814     0763                     l138:
  2815     0763  0843               	movf	(main@i_159+1)^(0+128),w
  2816     0764  3A80               	xorlw	128
  2817     0765  0020               	movlb	0	; select bank0
  2818     0766  00D9               	movwf	??_main
  2819     0767  0021               	movlb	1	; select bank1
  2820     0768  0837               	movf	(main@fp3_time+1)^(0+128),w
  2821     0769  3A80               	xorlw	128
  2822     076A  0020               	movlb	0	; select bank0
  2823     076B  0259               	subwf	??_main,w
  2824     076C  1D03               	skipz
  2825     076D  2F71               	goto	u1925
  2826     076E  0021               	movlb	1	; select bank1
  2827     076F  0836               	movf	main@fp3_time^(0+128),w
  2828     0770  0242               	subwf	main@i_159^(0+128),w
  2829     0771                     u1925:
  2830     0771  1C03               	skipc
  2831     0772  2F74               	goto	u1921
  2832     0773  2F75               	goto	u1920
  2833     0774                     u1921:
  2834     0774  2F5A               	goto	l2118
  2835     0775                     u1920:
  2836     0775  2F0D               	goto	l2100
  2837     0776                     l2122:
  2838     0776  307E               	movlw	low ((STR_9+1)| (0+32768))
  2839     0777  00F0               	movwf	strcmp@s2
  2840     0778  3090               	movlw	high ((STR_9+1)| (0+32768))
  2841     0779  00F1               	movwf	strcmp@s2+1
  2842     077A  0021               	movlb	1	; select bank1
  2843     077B  085D               	movf	main@ptr^(0+128),w
  2844     077C  318F  2779  3183   	fcall	_strcmp
  2845     077F  0870               	movf	?_strcmp,w
  2846     0780  0471               	iorwf	?_strcmp+1,w
  2847     0781  1D03               	btfss	3,2
  2848     0782  2F84               	goto	u1931
  2849     0783  2F85               	goto	u1930
  2850     0784                     u1931:
  2851     0784  2EDA               	goto	l125
  2852     0785                     u1930:
  2853     0785                     l2124:
  2854                           
  2855                           ;main.c: 285: DAC1CON1 = fp4_amp ;
  2856     0785  0021               	movlb	1	; select bank1
  2857     0786  083C               	movf	main@fp4_amp^(0+128),w
  2858     0787  0022               	movlb	2	; select bank2
  2859     0788  0099               	movwf	25	;volatile
  2860     0789                     l2126:
  2861                           
  2862                           ;main.c: 286: for (int i=0 ; i < fp4_time ; i++){
  2863     0789  0021               	movlb	1	; select bank1
  2864     078A  01C4               	clrf	main@i_161^(0+128)
  2865     078B  01C5               	clrf	(main@i_161+1)^(0+128)
  2866     078C  2F96               	goto	l143
  2867     078D                     l2128:
  2868                           
  2869                           ;main.c: 287: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2870     078D  3035               	movlw	53
  2871     078E                     u2007:
  2872     078E  0B89               	decfsz	9,f
  2873     078F  2F8E               	goto	u2007
  2874     0790  0000               	nop
  2875     0791  3001               	movlw	1
  2876     0792  0021               	movlb	1	; select bank1
  2877     0793  07C4               	addwf	main@i_161^(0+128),f
  2878     0794  3000               	movlw	0
  2879     0795  3DC5               	addwfc	(main@i_161+1)^(0+128),f
  2880     0796                     l143:
  2881     0796  0845               	movf	(main@i_161+1)^(0+128),w
  2882     0797  3A80               	xorlw	128
  2883     0798  0020               	movlb	0	; select bank0
  2884     0799  00D9               	movwf	??_main
  2885     079A  0021               	movlb	1	; select bank1
  2886     079B  083B               	movf	(main@fp4_time+1)^(0+128),w
  2887     079C  3A80               	xorlw	128
  2888     079D  0020               	movlb	0	; select bank0
  2889     079E  0259               	subwf	??_main,w
  2890     079F  1D03               	skipz
  2891     07A0  2FA4               	goto	u1945
  2892     07A1  0021               	movlb	1	; select bank1
  2893     07A2  083A               	movf	main@fp4_time^(0+128),w
  2894     07A3  0244               	subwf	main@i_161^(0+128),w
  2895     07A4                     u1945:
  2896     07A4  1C03               	skipc
  2897     07A5  2FA7               	goto	u1941
  2898     07A6  2FA8               	goto	u1940
  2899     07A7                     u1941:
  2900     07A7  2F8D               	goto	l2128
  2901     07A8                     u1940:
  2902     07A8  2F0D               	goto	l2100
  2903     07A9                     l2132:
  2904     07A9  3001               	movlw	1
  2905     07AA  0021               	movlb	1	; select bank1
  2906     07AB  07CC               	addwf	main@k^(0+128),f
  2907     07AC  3000               	movlw	0
  2908     07AD  3DCD               	addwfc	(main@k+1)^(0+128),f
  2909     07AE  2E43               	goto	l2064
  2910     07AF                     l2136:
  2911                           
  2912                           ;main.c: 290: };main.c: 291: };main.c: 294: printf("___P_OK\n");
  2913     07AF  3015               	movlw	low (STR_40| (0+32768))
  2914     07B0  0020               	movlb	0	; select bank0
  2915     07B1  00C9               	movwf	printf@f
  2916     07B2  3090               	movlw	high (STR_40| (0+32768))
  2917     07B3  00CA               	movwf	printf@f+1
  2918     07B4  3182  2239  3183   	fcall	_printf
  2919                           
  2920                           ;main.c: 295: break;
  2921     07B7  2B43               	goto	l59
  2922     07B8                     l2138:
  2923                           
  2924                           ;main.c: 304: printf("VERSION 10");
  2925     07B8  300A               	movlw	low (STR_41| (0+32768))
  2926     07B9  0020               	movlb	0	; select bank0
  2927     07BA  00C9               	movwf	printf@f
  2928     07BB  3090               	movlw	high (STR_41| (0+32768))
  2929     07BC  00CA               	movwf	printf@f+1
  2930     07BD  3182  2239  3183   	fcall	_printf
  2931                           
  2932                           ;main.c: 305: break;
  2933     07C0  2B43               	goto	l59
  2934     07C1                     l2142:
  2935     07C1  0021               	movlb	1	; select bank1
  2936     07C2  0858               	movf	main@cmd^(0+128),w
  2937                           
  2938                           ; Switch size 1, requested type "simple"
  2939                           ; Number of cases is 11, Range of values is 0 to 11
  2940                           ; switch strategies available:
  2941                           ; Name         Instructions Cycles
  2942                           ; direct_byte           30     6 (fixed)
  2943                           ; simple_byte           34    18 (average)
  2944                           ; jumptable            260     6 (fixed)
  2945                           ;	Chosen strategy is simple_byte
  2946     07C3  3A00               	xorlw	0	; case 0
  2947     07C4  1903               	skipnz
  2948     07C5  2C4B               	goto	l1958
  2949     07C6  3A01               	xorlw	1	; case 1
  2950     07C7  1903               	skipnz
  2951     07C8  2CEB               	goto	l1982
  2952     07C9  3A03               	xorlw	3	; case 2
  2953     07CA  1903               	skipnz
  2954     07CB  2D4C               	goto	l2004
  2955     07CC  3A01               	xorlw	1	; case 3
  2956     07CD  1903               	skipnz
  2957     07CE  2D55               	goto	l2006
  2958     07CF  3A07               	xorlw	7	; case 4
  2959     07D0  1903               	skipnz
  2960     07D1  2D90               	goto	l2020
  2961     07D2  3A01               	xorlw	1	; case 5
  2962     07D3  1903               	skipnz
  2963     07D4  2DCB               	goto	l2034
  2964     07D5  3A03               	xorlw	3	; case 6
  2965     07D6  1903               	skipnz
  2966     07D7  2E06               	goto	l2048
  2967     07D8  3A01               	xorlw	1	; case 7
  2968     07D9  1903               	skipnz
  2969     07DA  2E41               	goto	l2062
  2970     07DB  3A0F               	xorlw	15	; case 8
  2971     07DC  1903               	skipnz
  2972     07DD  2B43               	goto	l59
  2973     07DE  3A01               	xorlw	1	; case 9
  2974     07DF  1903               	skipnz
  2975     07E0  2B43               	goto	l59
  2976     07E1  3A02               	xorlw	2	; case 11
  2977     07E2  1903               	skipnz
  2978     07E3  2FB8               	goto	l2138
  2979     07E4  2B43               	goto	l59
  2980     07E5  3180  2802         	ljmp	start
  2981     07E7                     __end_of_main:
  2982                           
  2983                           	psect	text1
  2984     00BE                     __ptext1:	
  2985 ;; *************** function _strtok *****************
  2986 ;; Defined at:
  2987 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  s1              1    wreg     PTR unsigned char 
  2990 ;;		 -> NULL(0), main@tmp(14), 
  2991 ;;  s2              2    0[BANK0 ] PTR const unsigned char 
  2992 ;;		 -> STR_33(2), STR_31(2), STR_30(2), STR_28(2), 
  2993 ;;		 -> STR_27(2), STR_25(2), STR_24(2), STR_22(2), 
  2994 ;;		 -> STR_21(2), STR_18(2), STR_15(2), STR_14(2), 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  s1              1    4[BANK0 ] PTR unsigned char 
  2997 ;;		 -> NULL(0), main@tmp(14), 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      PTR unsigned char 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;Total ram usage:        5 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 2
  3014 ;; This function calls:
  3015 ;;		_strcspn
  3016 ;;		_strspn
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022     00BE                     _strtok:	
  3023                           ;psect for function _strtok
  3024                           
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3028                           ;strtok@s1 stored from wreg
  3029     00BE  0020               	movlb	0	; select bank0
  3030     00BF  00CD               	movwf	strtok@s1
  3031     00C0                     l1812:
  3032     00C0  084D               	movf	strtok@s1,w
  3033     00C1  1D03               	btfss	3,2
  3034     00C2  28C4               	goto	u1461
  3035     00C3  28C5               	goto	u1460
  3036     00C4                     u1461:
  3037     00C4  28C7               	goto	l1816
  3038     00C5                     u1460:
  3039     00C5                     l1814:
  3040     00C5  0848               	movf	strtok@sp,w
  3041     00C6  00CD               	movwf	strtok@s1
  3042     00C7                     l1816:
  3043     00C7  084D               	movf	strtok@s1,w
  3044     00C8  1D03               	btfss	3,2
  3045     00C9  28CB               	goto	u1471
  3046     00CA  28CC               	goto	u1470
  3047     00CB                     u1471:
  3048     00CB  28CE               	goto	l1822
  3049     00CC                     u1470:
  3050     00CC                     l1818:
  3051     00CC  3000               	movlw	0
  3052     00CD  2909               	goto	l799
  3053     00CE                     l1822:
  3054     00CE  084A               	movf	strtok@s2+1,w
  3055     00CF  00F8               	movwf	strspn@s2+1
  3056     00D0  0849               	movf	strtok@s2,w
  3057     00D1  00F7               	movwf	strspn@s2
  3058     00D2  084D               	movf	strtok@s1,w
  3059     00D3  318F  27D0  3180   	fcall	_strspn
  3060     00D6  0877               	movf	?_strspn,w
  3061     00D7  0020               	movlb	0	; select bank0
  3062     00D8  00CB               	movwf	??_strtok
  3063     00D9  084B               	movf	??_strtok,w
  3064     00DA  07CD               	addwf	strtok@s1,f
  3065     00DB                     l1824:
  3066     00DB  084D               	movf	strtok@s1,w
  3067     00DC  0086               	movwf	6
  3068     00DD  0187               	clrf	7
  3069     00DE  0801               	movf	1,w
  3070     00DF  1D03               	btfss	3,2
  3071     00E0  28E2               	goto	u1481
  3072     00E1  28E3               	goto	u1480
  3073     00E2                     u1481:
  3074     00E2  28E6               	goto	l1830
  3075     00E3                     u1480:
  3076     00E3                     l1826:
  3077     00E3  01C8               	clrf	strtok@sp
  3078     00E4  3000               	movlw	0
  3079     00E5  2909               	goto	l799
  3080     00E6                     l1830:
  3081     00E6  084A               	movf	strtok@s2+1,w
  3082     00E7  00F8               	movwf	strcspn@s2+1
  3083     00E8  0849               	movf	strtok@s2,w
  3084     00E9  00F7               	movwf	strcspn@s2
  3085     00EA  084D               	movf	strtok@s1,w
  3086     00EB  318F  27A0  3180   	fcall	_strcspn
  3087     00EE  0877               	movf	?_strcspn,w
  3088     00EF  0020               	movlb	0	; select bank0
  3089     00F0  00CB               	movwf	??_strtok
  3090     00F1  0878               	movf	?_strcspn+1,w
  3091     00F2  00CC               	movwf	??_strtok+1
  3092     00F3  084D               	movf	strtok@s1,w
  3093     00F4  074B               	addwf	??_strtok,w
  3094     00F5  00C8               	movwf	strtok@sp
  3095     00F6                     l1832:
  3096     00F6  0848               	movf	strtok@sp,w
  3097     00F7  0086               	movwf	6
  3098     00F8  0187               	clrf	7
  3099     00F9  0801               	movf	1,w
  3100     00FA  1903               	btfsc	3,2
  3101     00FB  28FD               	goto	u1491
  3102     00FC  28FE               	goto	u1490
  3103     00FD                     u1491:
  3104     00FD  2907               	goto	l1838
  3105     00FE                     u1490:
  3106     00FE                     l1834:
  3107     00FE  0848               	movf	strtok@sp,w
  3108     00FF  0086               	movwf	6
  3109     0100  0187               	clrf	7
  3110     0101  0181               	clrf	1
  3111     0102                     l1836:
  3112     0102  3001               	movlw	1
  3113     0103  00CB               	movwf	??_strtok
  3114     0104  084B               	movf	??_strtok,w
  3115     0105  07C8               	addwf	strtok@sp,f
  3116     0106  2908               	goto	l1840
  3117     0107                     l1838:
  3118     0107  01C8               	clrf	strtok@sp
  3119     0108                     l1840:
  3120     0108  084D               	movf	strtok@s1,w
  3121     0109                     l799:
  3122     0109  0008               	return
  3123     010A                     __end_of_strtok:
  3124                           
  3125                           	psect	text2
  3126     0FD0                     __ptext2:	
  3127 ;; *************** function _strspn *****************
  3128 ;; Defined at:
  3129 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  s1              1    wreg     PTR const unsigned char 
  3132 ;;		 -> NULL(0), main@tmp(14), 
  3133 ;;  s2              2    7[COMMON] PTR const unsigned char 
  3134 ;;		 -> STR_33(2), STR_31(2), STR_30(2), STR_28(2), 
  3135 ;;		 -> STR_27(2), STR_25(2), STR_24(2), STR_22(2), 
  3136 ;;		 -> STR_21(2), STR_18(2), STR_15(2), STR_14(2), 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  s1              1   13[COMMON] PTR const unsigned char 
  3139 ;;		 -> NULL(0), main@tmp(14), 
  3140 ;;  i               2   11[COMMON] unsigned int 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2    7[COMMON] unsigned int 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;Total ram usage:        7 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 1
  3157 ;; This function calls:
  3158 ;;		_strchr
  3159 ;; This function is called by:
  3160 ;;		_strtok
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164     0FD0                     _strspn:	
  3165                           ;psect for function _strspn
  3166                           
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3170                           ;strspn@s1 stored from wreg
  3171     0FD0  00FD               	movwf	strspn@s1
  3172     0FD1                     l1686:
  3173     0FD1  01FB               	clrf	strspn@i
  3174     0FD2  01FC               	clrf	strspn@i+1
  3175     0FD3  2FDC               	goto	l1690
  3176     0FD4                     l1688:
  3177     0FD4  3001               	movlw	1
  3178     0FD5  00F9               	movwf	??_strspn
  3179     0FD6  0879               	movf	??_strspn,w
  3180     0FD7  07FD               	addwf	strspn@s1,f
  3181     0FD8  3001               	movlw	1
  3182     0FD9  07FB               	addwf	strspn@i,f
  3183     0FDA  3000               	movlw	0
  3184     0FDB  3DFC               	addwfc	strspn@i+1,f
  3185     0FDC                     l1690:
  3186     0FDC  087D               	movf	strspn@s1,w
  3187     0FDD  0086               	movwf	6
  3188     0FDE  0187               	clrf	7
  3189     0FDF  0801               	movf	1,w
  3190     0FE0  1903               	btfsc	3,2
  3191     0FE1  2FE3               	goto	u1301
  3192     0FE2  2FE4               	goto	u1300
  3193     0FE3                     u1301:
  3194     0FE3  2FFB               	goto	l1694
  3195     0FE4                     u1300:
  3196     0FE4                     l1692:
  3197     0FE4  0878               	movf	strspn@s2+1,w
  3198     0FE5  00F1               	movwf	strchr@ptr+1
  3199     0FE6  0877               	movf	strspn@s2,w
  3200     0FE7  00F0               	movwf	strchr@ptr
  3201     0FE8  087D               	movf	strspn@s1,w
  3202     0FE9  0086               	movwf	6
  3203     0FEA  0187               	clrf	7
  3204     0FEB  0801               	movf	1,w
  3205     0FEC  00F9               	movwf	??_strspn
  3206     0FED  01FA               	clrf	??_strspn+1
  3207     0FEE  0879               	movf	??_strspn,w
  3208     0FEF  00F2               	movwf	strchr@chr
  3209     0FF0  087A               	movf	??_strspn+1,w
  3210     0FF1  00F3               	movwf	strchr@chr+1
  3211     0FF2  318F  273C  318F   	fcall	_strchr
  3212     0FF5  0870               	movf	?_strchr,w
  3213     0FF6  0471               	iorwf	?_strchr+1,w
  3214     0FF7  1D03               	btfss	3,2
  3215     0FF8  2FFA               	goto	u1311
  3216     0FF9  2FFB               	goto	u1310
  3217     0FFA                     u1311:
  3218     0FFA  2FD4               	goto	l1688
  3219     0FFB                     u1310:
  3220     0FFB                     l1694:
  3221     0FFB  087C               	movf	strspn@i+1,w
  3222     0FFC  00F8               	movwf	?_strspn+1
  3223     0FFD  087B               	movf	strspn@i,w
  3224     0FFE  00F7               	movwf	?_strspn
  3225     0FFF                     l828:
  3226     0FFF  0008               	return
  3227     1000                     __end_of_strspn:
  3228                           
  3229                           	psect	text3
  3230     0FA0                     __ptext3:	
  3231 ;; *************** function _strcspn *****************
  3232 ;; Defined at:
  3233 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  s1              1    wreg     PTR const unsigned char 
  3236 ;;		 -> NULL(0), main@tmp(14), 
  3237 ;;  s2              2    7[COMMON] PTR const unsigned char 
  3238 ;;		 -> STR_33(2), STR_31(2), STR_30(2), STR_28(2), 
  3239 ;;		 -> STR_27(2), STR_25(2), STR_24(2), STR_22(2), 
  3240 ;;		 -> STR_21(2), STR_18(2), STR_15(2), STR_14(2), 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  s1              1   13[COMMON] PTR const unsigned char 
  3243 ;;		 -> NULL(0), main@tmp(14), 
  3244 ;;  i               2   11[COMMON] unsigned int 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2    7[COMMON] unsigned int 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3258 ;;Total ram usage:        7 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		_strchr
  3263 ;; This function is called by:
  3264 ;;		_strtok
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268     0FA0                     _strcspn:	
  3269                           ;psect for function _strcspn
  3270                           
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3274                           ;strcspn@s1 stored from wreg
  3275     0FA0  00FD               	movwf	strcspn@s1
  3276     0FA1                     l1698:
  3277     0FA1  01FB               	clrf	strcspn@i
  3278     0FA2  01FC               	clrf	strcspn@i+1
  3279     0FA3  2FAC               	goto	l1702
  3280     0FA4                     l1700:
  3281     0FA4  3001               	movlw	1
  3282     0FA5  00F9               	movwf	??_strcspn
  3283     0FA6  0879               	movf	??_strcspn,w
  3284     0FA7  07FD               	addwf	strcspn@s1,f
  3285     0FA8  3001               	movlw	1
  3286     0FA9  07FB               	addwf	strcspn@i,f
  3287     0FAA  3000               	movlw	0
  3288     0FAB  3DFC               	addwfc	strcspn@i+1,f
  3289     0FAC                     l1702:
  3290     0FAC  087D               	movf	strcspn@s1,w
  3291     0FAD  0086               	movwf	6
  3292     0FAE  0187               	clrf	7
  3293     0FAF  0801               	movf	1,w
  3294     0FB0  1903               	btfsc	3,2
  3295     0FB1  2FB3               	goto	u1321
  3296     0FB2  2FB4               	goto	u1320
  3297     0FB3                     u1321:
  3298     0FB3  2FCB               	goto	l1706
  3299     0FB4                     u1320:
  3300     0FB4                     l1704:
  3301     0FB4  0878               	movf	strcspn@s2+1,w
  3302     0FB5  00F1               	movwf	strchr@ptr+1
  3303     0FB6  0877               	movf	strcspn@s2,w
  3304     0FB7  00F0               	movwf	strchr@ptr
  3305     0FB8  087D               	movf	strcspn@s1,w
  3306     0FB9  0086               	movwf	6
  3307     0FBA  0187               	clrf	7
  3308     0FBB  0801               	movf	1,w
  3309     0FBC  00F9               	movwf	??_strcspn
  3310     0FBD  01FA               	clrf	??_strcspn+1
  3311     0FBE  0879               	movf	??_strcspn,w
  3312     0FBF  00F2               	movwf	strchr@chr
  3313     0FC0  087A               	movf	??_strcspn+1,w
  3314     0FC1  00F3               	movwf	strchr@chr+1
  3315     0FC2  318F  273C  318F   	fcall	_strchr
  3316     0FC5  0870               	movf	?_strchr,w
  3317     0FC6  0471               	iorwf	?_strchr+1,w
  3318     0FC7  1903               	btfsc	3,2
  3319     0FC8  2FCA               	goto	u1331
  3320     0FC9  2FCB               	goto	u1330
  3321     0FCA                     u1331:
  3322     0FCA  2FA4               	goto	l1700
  3323     0FCB                     u1330:
  3324     0FCB                     l1706:
  3325     0FCB  087C               	movf	strcspn@i+1,w
  3326     0FCC  00F8               	movwf	?_strcspn+1
  3327     0FCD  087B               	movf	strcspn@i,w
  3328     0FCE  00F7               	movwf	?_strcspn
  3329     0FCF                     l812:
  3330     0FCF  0008               	return
  3331     0FD0                     __end_of_strcspn:
  3332                           
  3333                           	psect	text4
  3334     0F3C                     __ptext4:	
  3335 ;; *************** function _strchr *****************
  3336 ;; Defined at:
  3337 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  ptr             2    0[COMMON] PTR const unsigned char 
  3340 ;;		 -> STR_33(2), STR_31(2), STR_30(2), STR_28(2), 
  3341 ;;		 -> STR_27(2), STR_25(2), STR_24(2), STR_22(2), 
  3342 ;;		 -> STR_21(2), STR_18(2), STR_15(2), STR_14(2), 
  3343 ;;  chr             2    2[COMMON] int 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2    0[COMMON] PTR unsigned char 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;Total ram usage:        7 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_strcspn
  3365 ;;		_strspn
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     0F3C                     _strchr:	
  3370                           ;psect for function _strchr
  3371                           
  3372     0F3C                     l815:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  3375                           
  3376     0F3C                     l1544:
  3377     0F3C  0870               	movf	strchr@ptr,w
  3378     0F3D  0084               	movwf	4
  3379     0F3E  0871               	movf	strchr@ptr+1,w
  3380     0F3F  0085               	movwf	5
  3381     0F40  0800               	movf	0,w	;code access
  3382     0F41  0672               	xorwf	strchr@chr,w
  3383     0F42  1D03               	skipz
  3384     0F43  2F45               	goto	u1001
  3385     0F44  2F46               	goto	u1000
  3386     0F45                     u1001:
  3387     0F45  2F47               	goto	l1548
  3388     0F46                     u1000:
  3389     0F46                     l1546:
  3390     0F46  2F59               	goto	l817
  3391     0F47                     l1548:
  3392     0F47  0871               	movf	strchr@ptr+1,w
  3393     0F48  00F5               	movwf	??_strchr+1
  3394     0F49  0870               	movf	strchr@ptr,w
  3395     0F4A  00F4               	movwf	??_strchr
  3396     0F4B  0AF0               	incf	strchr@ptr,f
  3397     0F4C  1903               	skipnz
  3398     0F4D  0AF1               	incf	strchr@ptr+1,f
  3399     0F4E  0874               	movf	??_strchr,w
  3400     0F4F  0084               	movwf	4
  3401     0F50  0875               	movf	??_strchr+1,w
  3402     0F51  0085               	movwf	5
  3403     0F52  0012               	moviw fsr0++
  3404     0F53  1D03               	btfss	3,2
  3405     0F54  2F56               	goto	u1011
  3406     0F55  2F57               	goto	u1010
  3407     0F56                     u1011:
  3408     0F56  2F3C               	goto	l815
  3409     0F57                     u1010:
  3410     0F57                     l1550:
  3411     0F57  01F0               	clrf	?_strchr
  3412     0F58  01F1               	clrf	?_strchr+1
  3413     0F59                     l817:
  3414     0F59  0008               	return
  3415     0F5A                     __end_of_strchr:
  3416                           
  3417                           	psect	text5
  3418     0F79                     __ptext5:	
  3419 ;; *************** function _strcmp *****************
  3420 ;; Defined at:
  3421 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  s1              1    wreg     PTR const unsigned char 
  3424 ;;		 -> NULL(0), main@tmp(14), main@rcmd(4), 
  3425 ;;  s2              2    0[COMMON] PTR const unsigned char 
  3426 ;;		 -> STR_39(3), STR_38(3), STR_37(3), STR_36(3), 
  3427 ;;		 -> STR_35(3), STR_34(3), STR_13(4), STR_12(4), 
  3428 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  3429 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3430 ;;		 -> STR_3(4), STR_2(4), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  s1              1    4[COMMON] PTR const unsigned char 
  3433 ;;		 -> NULL(0), main@tmp(14), main@rcmd(4), 
  3434 ;;  r               1    3[COMMON] char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2    0[COMMON] int 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;Total ram usage:        5 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457     0F79                     _strcmp:	
  3458                           ;psect for function _strcmp
  3459                           
  3460                           
  3461                           ;incstack = 0
  3462                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  3463                           ;strcmp@s1 stored from wreg
  3464     0F79  00F4               	movwf	strcmp@s1
  3465     0F7A                     l1800:
  3466     0F7A  2F83               	goto	l1804
  3467     0F7B                     l1802:
  3468     0F7B  3001               	movlw	1
  3469     0F7C  00F2               	movwf	??_strcmp
  3470     0F7D  0872               	movf	??_strcmp,w
  3471     0F7E  07F4               	addwf	strcmp@s1,f
  3472     0F7F  3001               	movlw	1
  3473     0F80  07F0               	addwf	strcmp@s2,f
  3474     0F81  3000               	movlw	0
  3475     0F82  3DF1               	addwfc	strcmp@s2+1,f
  3476     0F83                     l1804:
  3477     0F83  0874               	movf	strcmp@s1,w
  3478     0F84  0086               	movwf	6
  3479     0F85  0187               	clrf	7
  3480     0F86  0870               	movf	strcmp@s2,w
  3481     0F87  0084               	movwf	4
  3482     0F88  0871               	movf	strcmp@s2+1,w
  3483     0F89  0085               	movwf	5
  3484     0F8A  0800               	movf	0,w	;code access
  3485     0F8B  0201               	subwf	1,w
  3486     0F8C  00F3               	movwf	strcmp@r
  3487     0F8D  0873               	movf	strcmp@r,w
  3488     0F8E  1D03               	btfss	3,2
  3489     0F8F  2F91               	goto	u1441
  3490     0F90  2F92               	goto	u1440
  3491     0F91                     u1441:
  3492     0F91  2F9A               	goto	l1808
  3493     0F92                     u1440:
  3494     0F92                     l1806:
  3495     0F92  0874               	movf	strcmp@s1,w
  3496     0F93  0086               	movwf	6
  3497     0F94  0187               	clrf	7
  3498     0F95  0801               	movf	1,w
  3499     0F96  1D03               	btfss	3,2
  3500     0F97  2F99               	goto	u1451
  3501     0F98  2F9A               	goto	u1450
  3502     0F99                     u1451:
  3503     0F99  2F7B               	goto	l1802
  3504     0F9A                     u1450:
  3505     0F9A                     l1808:
  3506     0F9A  0873               	movf	strcmp@r,w
  3507     0F9B  00F0               	movwf	?_strcmp
  3508     0F9C  01F1               	clrf	?_strcmp+1
  3509     0F9D  1BF0               	btfsc	?_strcmp,7
  3510     0F9E  03F1               	decf	?_strcmp+1,f
  3511     0F9F                     l788:
  3512     0F9F  0008               	return
  3513     0FA0                     __end_of_strcmp:
  3514                           
  3515                           	psect	text6
  3516     004A                     __ptext6:	
  3517 ;; *************** function _serial_init *****************
  3518 ;; Defined at:
  3519 ;;		line 41 in file "main.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  BR              4    0[BANK0 ] unsigned long 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  X               2    8[BANK0 ] unsigned int 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;Total ram usage:       10 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 1
  3540 ;; This function calls:
  3541 ;;		___lldiv
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547     004A                     _serial_init:	
  3548                           ;psect for function _serial_init
  3549                           
  3550     004A                     l1710:	
  3551                           ;incstack = 0
  3552                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  3553                           
  3554                           
  3555                           ;main.c: 42: TX1STA = 0x24;
  3556     004A  3024               	movlw	36
  3557     004B  0023               	movlb	3	; select bank3
  3558     004C  009E               	movwf	30	;volatile
  3559     004D                     l1712:
  3560                           
  3561                           ;main.c: 43: BRG16 = 1;
  3562     004D  159F               	bsf	31,3	;volatile
  3563                           
  3564                           ;main.c: 44: RC1STA = 0x90;
  3565     004E  3090               	movlw	144
  3566     004F  009D               	movwf	29	;volatile
  3567     0050                     l1714:
  3568                           
  3569                           ;main.c: 45: unsigned int X= 32000000/BR/4 - 1;
  3570     0050  0020               	movlb	0	; select bank0
  3571     0051  084C               	movf	serial_init@BR+3,w
  3572     0052  00F3               	movwf	___lldiv@divisor+3
  3573     0053  084B               	movf	serial_init@BR+2,w
  3574     0054  00F2               	movwf	___lldiv@divisor+2
  3575     0055  084A               	movf	serial_init@BR+1,w
  3576     0056  00F1               	movwf	___lldiv@divisor+1
  3577     0057  0849               	movf	serial_init@BR,w
  3578     0058  00F0               	movwf	___lldiv@divisor
  3579     0059  3001               	movlw	1
  3580     005A  00F7               	movwf	___lldiv@dividend+3
  3581     005B  30E8               	movlw	232
  3582     005C  00F6               	movwf	___lldiv@dividend+2
  3583     005D  3048               	movlw	72
  3584     005E  00F5               	movwf	___lldiv@dividend+1
  3585     005F  3000               	movlw	0
  3586     0060  00F4               	movwf	___lldiv@dividend
  3587     0061  3181  2161  3180   	fcall	___lldiv
  3588     0064  0870               	movf	?___lldiv,w
  3589     0065  0020               	movlb	0	; select bank0
  3590     0066  00CD               	movwf	??_serial_init
  3591     0067  0871               	movf	?___lldiv+1,w
  3592     0068  00CE               	movwf	??_serial_init+1
  3593     0069  0872               	movf	?___lldiv+2,w
  3594     006A  00CF               	movwf	??_serial_init+2
  3595     006B  0873               	movf	?___lldiv+3,w
  3596     006C  00D0               	movwf	??_serial_init+3
  3597     006D  3002               	movlw	2
  3598     006E                     u1345:
  3599     006E  36D0               	lsrf	??_serial_init+3,f
  3600     006F  0CCF               	rrf	??_serial_init+2,f
  3601     0070  0CCE               	rrf	??_serial_init+1,f
  3602     0071  0CCD               	rrf	??_serial_init,f
  3603     0072                     u1340:
  3604     0072  0B89               	decfsz	9,f
  3605     0073  286E               	goto	u1345
  3606     0074  084D               	movf	??_serial_init,w
  3607     0075  3EFF               	addlw	255
  3608     0076  00D1               	movwf	serial_init@X
  3609     0077  30FF               	movlw	255
  3610     0078  3D4E               	addwfc	??_serial_init+1,w
  3611     0079  00D2               	movwf	serial_init@X+1
  3612     007A                     l1716:
  3613                           
  3614                           ;main.c: 46: SP1BRGH = X / 256;
  3615     007A  0852               	movf	serial_init@X+1,w
  3616     007B  0023               	movlb	3	; select bank3
  3617     007C  009C               	movwf	28	;volatile
  3618     007D                     l1718:
  3619                           
  3620                           ;main.c: 47: SP1BRGL = X % 256;
  3621     007D  0020               	movlb	0	; select bank0
  3622     007E  0851               	movf	serial_init@X,w
  3623     007F  0023               	movlb	3	; select bank3
  3624     0080  009B               	movwf	27	;volatile
  3625     0081                     l47:
  3626     0081  0008               	return
  3627     0082                     __end_of_serial_init:
  3628                           
  3629                           	psect	text7
  3630     0161                     __ptext7:	
  3631 ;; *************** function ___lldiv *****************
  3632 ;; Defined at:
  3633 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  divisor         4    0[COMMON] unsigned long 
  3636 ;;  dividend        4    4[COMMON] unsigned long 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  quotient        4    9[COMMON] unsigned long 
  3639 ;;  counter         1   13[COMMON] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  4    0[COMMON] unsigned long 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3649 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3650 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;Total ram usage:       14 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_serial_init
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662     0161                     ___lldiv:	
  3663                           ;psect for function ___lldiv
  3664                           
  3665     0161                     l1568:	
  3666                           ;incstack = 0
  3667                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3668                           
  3669     0161  3000               	movlw	0
  3670     0162  00FC               	movwf	___lldiv@quotient+3
  3671     0163  3000               	movlw	0
  3672     0164  00FB               	movwf	___lldiv@quotient+2
  3673     0165  3000               	movlw	0
  3674     0166  00FA               	movwf	___lldiv@quotient+1
  3675     0167  3000               	movlw	0
  3676     0168  00F9               	movwf	___lldiv@quotient
  3677     0169  0873               	movf	___lldiv@divisor+3,w
  3678     016A  0472               	iorwf	___lldiv@divisor+2,w
  3679     016B  0471               	iorwf	___lldiv@divisor+1,w
  3680     016C  0470               	iorwf	___lldiv@divisor,w
  3681     016D  1903               	skipnz
  3682     016E  2970               	goto	u1061
  3683     016F  2971               	goto	u1060
  3684     0170                     u1061:
  3685     0170  29B2               	goto	l1588
  3686     0171                     u1060:
  3687     0171                     l1570:
  3688     0171  01FD               	clrf	___lldiv@counter
  3689     0172  0AFD               	incf	___lldiv@counter,f
  3690     0173  297F               	goto	l1574
  3691     0174                     l1572:
  3692     0174  3001               	movlw	1
  3693     0175                     u1075:
  3694     0175  35F0               	lslf	___lldiv@divisor,f
  3695     0176  0DF1               	rlf	___lldiv@divisor+1,f
  3696     0177  0DF2               	rlf	___lldiv@divisor+2,f
  3697     0178  0DF3               	rlf	___lldiv@divisor+3,f
  3698     0179  0B89               	decfsz	9,f
  3699     017A  2975               	goto	u1075
  3700     017B  3001               	movlw	1
  3701     017C  00F8               	movwf	??___lldiv
  3702     017D  0878               	movf	??___lldiv,w
  3703     017E  07FD               	addwf	___lldiv@counter,f
  3704     017F                     l1574:
  3705     017F  1FF3               	btfss	___lldiv@divisor+3,7
  3706     0180  2982               	goto	u1081
  3707     0181  2983               	goto	u1080
  3708     0182                     u1081:
  3709     0182  2974               	goto	l1572
  3710     0183                     u1080:
  3711     0183                     l1576:
  3712     0183  3001               	movlw	1
  3713     0184                     u1095:
  3714     0184  35F9               	lslf	___lldiv@quotient,f
  3715     0185  0DFA               	rlf	___lldiv@quotient+1,f
  3716     0186  0DFB               	rlf	___lldiv@quotient+2,f
  3717     0187  0DFC               	rlf	___lldiv@quotient+3,f
  3718     0188  0B89               	decfsz	9,f
  3719     0189  2984               	goto	u1095
  3720     018A                     l1578:
  3721     018A  0873               	movf	___lldiv@divisor+3,w
  3722     018B  0277               	subwf	___lldiv@dividend+3,w
  3723     018C  1D03               	skipz
  3724     018D  2998               	goto	u1105
  3725     018E  0872               	movf	___lldiv@divisor+2,w
  3726     018F  0276               	subwf	___lldiv@dividend+2,w
  3727     0190  1D03               	skipz
  3728     0191  2998               	goto	u1105
  3729     0192  0871               	movf	___lldiv@divisor+1,w
  3730     0193  0275               	subwf	___lldiv@dividend+1,w
  3731     0194  1D03               	skipz
  3732     0195  2998               	goto	u1105
  3733     0196  0870               	movf	___lldiv@divisor,w
  3734     0197  0274               	subwf	___lldiv@dividend,w
  3735     0198                     u1105:
  3736     0198  1C03               	skipc
  3737     0199  299B               	goto	u1101
  3738     019A  299C               	goto	u1100
  3739     019B                     u1101:
  3740     019B  29A5               	goto	l1584
  3741     019C                     u1100:
  3742     019C                     l1580:
  3743     019C  0870               	movf	___lldiv@divisor,w
  3744     019D  02F4               	subwf	___lldiv@dividend,f
  3745     019E  0871               	movf	___lldiv@divisor+1,w
  3746     019F  3BF5               	subwfb	___lldiv@dividend+1,f
  3747     01A0  0872               	movf	___lldiv@divisor+2,w
  3748     01A1  3BF6               	subwfb	___lldiv@dividend+2,f
  3749     01A2  0873               	movf	___lldiv@divisor+3,w
  3750     01A3  3BF7               	subwfb	___lldiv@dividend+3,f
  3751     01A4                     l1582:
  3752     01A4  1479               	bsf	___lldiv@quotient,0
  3753     01A5                     l1584:
  3754     01A5  3001               	movlw	1
  3755     01A6                     u1115:
  3756     01A6  36F3               	lsrf	___lldiv@divisor+3,f
  3757     01A7  0CF2               	rrf	___lldiv@divisor+2,f
  3758     01A8  0CF1               	rrf	___lldiv@divisor+1,f
  3759     01A9  0CF0               	rrf	___lldiv@divisor,f
  3760     01AA  0B89               	decfsz	9,f
  3761     01AB  29A6               	goto	u1115
  3762     01AC                     l1586:
  3763     01AC  3001               	movlw	1
  3764     01AD  02FD               	subwf	___lldiv@counter,f
  3765     01AE  1D03               	btfss	3,2
  3766     01AF  29B1               	goto	u1121
  3767     01B0  29B2               	goto	u1120
  3768     01B1                     u1121:
  3769     01B1  2983               	goto	l1576
  3770     01B2                     u1120:
  3771     01B2                     l1588:
  3772     01B2  087C               	movf	___lldiv@quotient+3,w
  3773     01B3  00F3               	movwf	?___lldiv+3
  3774     01B4  087B               	movf	___lldiv@quotient+2,w
  3775     01B5  00F2               	movwf	?___lldiv+2
  3776     01B6  087A               	movf	___lldiv@quotient+1,w
  3777     01B7  00F1               	movwf	?___lldiv+1
  3778     01B8  0879               	movf	___lldiv@quotient,w
  3779     01B9  00F0               	movwf	?___lldiv
  3780     01BA                     l323:
  3781     01BA  0008               	return
  3782     01BB                     __end_of___lldiv:
  3783                           
  3784                           	psect	text8
  3785     0239                     __ptext8:	
  3786 ;; *************** function _printf *****************
  3787 ;; Defined at:
  3788 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3791 ;;		 -> STR_41(11), STR_40(9), STR_32(8), STR_29(8), 
  3792 ;;		 -> STR_26(8), STR_23(8), STR_20(8), STR_19(8), 
  3793 ;;		 -> STR_17(8), STR_16(4), STR_1(4), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  tmpval          4    0        struct .
  3796 ;;  val             2   13[BANK0 ] unsigned int 
  3797 ;;  cp              2   11[BANK0 ] PTR const unsigned char 
  3798 ;;		 -> STR_42(7), ?_printf(2), main@tmp(14), 
  3799 ;;  len             2    0        unsigned int 
  3800 ;;  c               1   15[BANK0 ] unsigned char 
  3801 ;;  ap              1   10[BANK0 ] PTR void [1]
  3802 ;;		 -> ?_printf(2), 
  3803 ;;  prec            1    9[BANK0 ] char 
  3804 ;;  flag            1    8[BANK0 ] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  2    0[BANK0 ] int 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;Total ram usage:       16 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 1
  3821 ;; This function calls:
  3822 ;;		___lwdiv
  3823 ;;		___lwmod
  3824 ;;		_putch
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830     0239                     _printf:	
  3831                           ;psect for function _printf
  3832                           
  3833     0239                     l1738:	
  3834                           ;incstack = 0
  3835                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3836                           
  3837                           
  3838                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3839     0239  304B               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3840     023A  0020               	movlb	0	; select bank0
  3841     023B  00D3               	movwf	printf@ap
  3842                           
  3843                           ;doprnt.c: 553: while((c = *f++)) {
  3844     023C  2B11               	goto	l1798
  3845     023D                     l1740:
  3846                           
  3847                           ;doprnt.c: 555: if(c != '%')
  3848     023D  3025               	movlw	37
  3849     023E  0658               	xorwf	printf@c,w
  3850     023F  1903               	btfsc	3,2
  3851     0240  2A42               	goto	u1351
  3852     0241  2A43               	goto	u1350
  3853     0242                     u1351:
  3854     0242  2A48               	goto	l1744
  3855     0243                     u1350:
  3856     0243                     l1742:
  3857                           
  3858                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3859     0243  0858               	movf	printf@c,w
  3860     0244  318F  270A  3182   	fcall	_putch
  3861                           
  3862                           ;doprnt.c: 559: continue;
  3863     0247  2B11               	goto	l1798
  3864     0248                     l1744:
  3865                           
  3866                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3867     0248  01D1               	clrf	printf@flag
  3868                           
  3869                           ;doprnt.c: 661: switch(c = *f++) {
  3870     0249  2A76               	goto	l1762
  3871     024A                     l1746:
  3872                           
  3873                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3874     024A  0853               	movf	printf@ap,w
  3875     024B  0086               	movwf	6
  3876     024C  0187               	clrf	7
  3877     024D  0801               	movf	1,w
  3878     024E  00D4               	movwf	printf@cp
  3879     024F  01D5               	clrf	printf@cp+1
  3880     0250                     l1748:
  3881     0250  3001               	movlw	1
  3882     0251  00CD               	movwf	??_printf
  3883     0252  084D               	movf	??_printf,w
  3884     0253  07D3               	addwf	printf@ap,f
  3885     0254                     l1750:
  3886                           
  3887                           ;doprnt.c: 766: if(!cp)
  3888     0254  0854               	movf	printf@cp,w
  3889     0255  0455               	iorwf	printf@cp+1,w
  3890     0256  1D03               	btfss	3,2
  3891     0257  2A59               	goto	u1361
  3892     0258  2A5A               	goto	u1360
  3893     0259                     u1361:
  3894     0259  2A6C               	goto	l1758
  3895     025A                     u1360:
  3896     025A                     l1752:
  3897                           
  3898                           ;doprnt.c: 767: cp = "(null)";
  3899     025A  3056               	movlw	low (STR_42| (0+32768))
  3900     025B  00D4               	movwf	printf@cp
  3901     025C  3090               	movlw	high (STR_42| (0+32768))
  3902     025D  00D5               	movwf	printf@cp+1
  3903     025E  2A6C               	goto	l1758
  3904     025F                     l1754:
  3905                           
  3906                           ;doprnt.c: 804: (putch(*cp++) );
  3907     025F  0854               	movf	printf@cp,w
  3908     0260  0084               	movwf	4
  3909     0261  0855               	movf	printf@cp+1,w
  3910     0262  0085               	movwf	5
  3911     0263  0800               	movf	0,w	;code access
  3912     0264  318F  270A  3182   	fcall	_putch
  3913     0267                     l1756:
  3914     0267  3001               	movlw	1
  3915     0268  0020               	movlb	0	; select bank0
  3916     0269  07D4               	addwf	printf@cp,f
  3917     026A  3000               	movlw	0
  3918     026B  3DD5               	addwfc	printf@cp+1,f
  3919     026C                     l1758:
  3920     026C  0854               	movf	printf@cp,w
  3921     026D  0084               	movwf	4
  3922     026E  0855               	movf	printf@cp+1,w
  3923     026F  0085               	movwf	5
  3924     0270  0012               	moviw fsr0++
  3925     0271  1D03               	btfss	3,2
  3926     0272  2A74               	goto	u1371
  3927     0273  2A75               	goto	u1370
  3928     0274                     u1371:
  3929     0274  2A5F               	goto	l1754
  3930     0275                     u1370:
  3931     0275  2B11               	goto	l1798
  3932     0276                     l1762:
  3933     0276  084A               	movf	printf@f+1,w
  3934     0277  00CE               	movwf	??_printf+1
  3935     0278  0849               	movf	printf@f,w
  3936     0279  00CD               	movwf	??_printf
  3937     027A  0AC9               	incf	printf@f,f
  3938     027B  1903               	skipnz
  3939     027C  0ACA               	incf	printf@f+1,f
  3940     027D  084D               	movf	??_printf,w
  3941     027E  0084               	movwf	4
  3942     027F  084E               	movf	??_printf+1,w
  3943     0280  0085               	movwf	5
  3944     0281  0800               	movf	0,w	;code access
  3945     0282  00D8               	movwf	printf@c
  3946                           
  3947                           ; Switch size 1, requested type "simple"
  3948                           ; Number of cases is 4, Range of values is 0 to 115
  3949                           ; switch strategies available:
  3950                           ; Name         Instructions Cycles
  3951                           ; simple_byte           13     7 (average)
  3952                           ; direct_byte          238     6 (fixed)
  3953                           ; jumptable            260     6 (fixed)
  3954                           ;	Chosen strategy is simple_byte
  3955     0283  3A00               	xorlw	0	; case 0
  3956     0284  1903               	skipnz
  3957     0285  2B24               	goto	l283
  3958     0286  3A64               	xorlw	100	; case 100
  3959     0287  1903               	skipnz
  3960     0288  2A90               	goto	l1764
  3961     0289  3A0D               	xorlw	13	; case 105
  3962     028A  1903               	skipnz
  3963     028B  2A90               	goto	l1764
  3964     028C  3A1A               	xorlw	26	; case 115
  3965     028D  1903               	skipnz
  3966     028E  2A4A               	goto	l1746
  3967     028F  2B11               	goto	l1798
  3968     0290                     l1764:
  3969                           
  3970                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3971     0290  0853               	movf	printf@ap,w
  3972     0291  0086               	movwf	6
  3973     0292  0187               	clrf	7
  3974     0293  3F40               	moviw [0]fsr1
  3975     0294  00D6               	movwf	printf@val
  3976     0295  3F41               	moviw [1]fsr1
  3977     0296  00D7               	movwf	printf@val+1
  3978     0297                     l1766:
  3979     0297  3002               	movlw	2
  3980     0298  00CD               	movwf	??_printf
  3981     0299  084D               	movf	??_printf,w
  3982     029A  07D3               	addwf	printf@ap,f
  3983     029B                     l1768:
  3984                           
  3985                           ;doprnt.c: 1287: if((int)val < 0) {
  3986     029B  1FD7               	btfss	printf@val+1,7
  3987     029C  2A9E               	goto	u1381
  3988     029D  2A9F               	goto	u1380
  3989     029E                     u1381:
  3990     029E  2AA8               	goto	l1774
  3991     029F                     u1380:
  3992     029F                     l1770:
  3993                           
  3994                           ;doprnt.c: 1288: flag |= 0x03;
  3995     029F  3003               	movlw	3
  3996     02A0  00CD               	movwf	??_printf
  3997     02A1  084D               	movf	??_printf,w
  3998     02A2  04D1               	iorwf	printf@flag,f
  3999     02A3                     l1772:
  4000                           
  4001                           ;doprnt.c: 1289: val = -val;
  4002     02A3  09D6               	comf	printf@val,f
  4003     02A4  09D7               	comf	printf@val+1,f
  4004     02A5  0AD6               	incf	printf@val,f
  4005     02A6  1903               	skipnz
  4006     02A7  0AD7               	incf	printf@val+1,f
  4007     02A8                     l1774:
  4008                           
  4009                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  4010     02A8  01D8               	clrf	printf@c
  4011     02A9  0AD8               	incf	printf@c,f
  4012     02AA                     l1780:
  4013                           
  4014                           ;doprnt.c: 1332: if(val < dpowers[c])
  4015     02AA  0858               	movf	printf@c,w
  4016     02AB  00CD               	movwf	??_printf
  4017     02AC  01CE               	clrf	??_printf+1
  4018     02AD  35CD               	lslf	??_printf,f
  4019     02AE  0DCE               	rlf	??_printf+1,f
  4020     02AF  3000               	movlw	low _dpowers
  4021     02B0  074D               	addwf	??_printf,w
  4022     02B1  0084               	movwf	4
  4023     02B2  3010               	movlw	high _dpowers
  4024     02B3  3D4E               	addwfc	??_printf+1,w
  4025     02B4  3880               	iorlw	128
  4026     02B5  0085               	movwf	5
  4027     02B6  3F00               	moviw [0]fsr0
  4028     02B7  00CF               	movwf	??_printf+2
  4029     02B8  3F01               	moviw [1]fsr0
  4030     02B9  00D0               	movwf	??_printf+3
  4031     02BA  0850               	movf	??_printf+3,w
  4032     02BB  0257               	subwf	printf@val+1,w
  4033     02BC  1D03               	skipz
  4034     02BD  2AC0               	goto	u1395
  4035     02BE  084F               	movf	??_printf+2,w
  4036     02BF  0256               	subwf	printf@val,w
  4037     02C0                     u1395:
  4038     02C0  1803               	skipnc
  4039     02C1  2AC3               	goto	u1391
  4040     02C2  2AC4               	goto	u1390
  4041     02C3                     u1391:
  4042     02C3  2AC5               	goto	l1784
  4043     02C4                     u1390:
  4044     02C4  2ACF               	goto	l1786
  4045     02C5                     l1784:
  4046     02C5  3001               	movlw	1
  4047     02C6  00CD               	movwf	??_printf
  4048     02C7  084D               	movf	??_printf,w
  4049     02C8  07D8               	addwf	printf@c,f
  4050     02C9  3005               	movlw	5
  4051     02CA  0658               	xorwf	printf@c,w
  4052     02CB  1D03               	btfss	3,2
  4053     02CC  2ACE               	goto	u1401
  4054     02CD  2ACF               	goto	u1400
  4055     02CE                     u1401:
  4056     02CE  2AAA               	goto	l1780
  4057     02CF                     u1400:
  4058     02CF                     l1786:
  4059                           
  4060                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4061     02CF  0851               	movf	printf@flag,w
  4062     02D0  3903               	andlw	3
  4063     02D1  1903               	btfsc	3,2
  4064     02D2  2AD4               	goto	u1411
  4065     02D3  2AD5               	goto	u1410
  4066     02D4                     u1411:
  4067     02D4  2AD9               	goto	l1790
  4068     02D5                     u1410:
  4069     02D5                     l1788:
  4070                           
  4071                           ;doprnt.c: 1465: (putch('-') );
  4072     02D5  302D               	movlw	45
  4073     02D6  318F  270A  3182   	fcall	_putch
  4074     02D9                     l1790:
  4075                           
  4076                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4077     02D9  0020               	movlb	0	; select bank0
  4078     02DA  0858               	movf	printf@c,w
  4079     02DB  00D2               	movwf	printf@prec
  4080                           
  4081                           ;doprnt.c: 1500: while(prec--) {
  4082     02DC  2B07               	goto	l1796
  4083     02DD                     l1792:
  4084                           
  4085                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4086     02DD  300A               	movlw	10
  4087     02DE  00F8               	movwf	___lwmod@divisor
  4088     02DF  3000               	movlw	0
  4089     02E0  00F9               	movwf	___lwmod@divisor+1
  4090     02E1  0852               	movf	printf@prec,w
  4091     02E2  00CD               	movwf	??_printf
  4092     02E3  01CE               	clrf	??_printf+1
  4093     02E4  35CD               	lslf	??_printf,f
  4094     02E5  0DCE               	rlf	??_printf+1,f
  4095     02E6  3000               	movlw	low _dpowers
  4096     02E7  074D               	addwf	??_printf,w
  4097     02E8  0084               	movwf	4
  4098     02E9  3010               	movlw	high _dpowers
  4099     02EA  3D4E               	addwfc	??_printf+1,w
  4100     02EB  3880               	iorlw	128
  4101     02EC  0085               	movwf	5
  4102     02ED  3F00               	moviw [0]fsr0
  4103     02EE  00F0               	movwf	___lwdiv@divisor
  4104     02EF  3F01               	moviw [1]fsr0
  4105     02F0  00F1               	movwf	___lwdiv@divisor+1
  4106     02F1  0857               	movf	printf@val+1,w
  4107     02F2  00F3               	movwf	___lwdiv@dividend+1
  4108     02F3  0856               	movf	printf@val,w
  4109     02F4  00F2               	movwf	___lwdiv@dividend
  4110     02F5  3180  2082  3182   	fcall	___lwdiv
  4111     02F8  0871               	movf	?___lwdiv+1,w
  4112     02F9  00FB               	movwf	___lwmod@dividend+1
  4113     02FA  0870               	movf	?___lwdiv,w
  4114     02FB  00FA               	movwf	___lwmod@dividend
  4115     02FC  3180  2016  3182   	fcall	___lwmod
  4116     02FF  0878               	movf	?___lwmod,w
  4117     0300  3E30               	addlw	48
  4118     0301  0020               	movlb	0	; select bank0
  4119     0302  00D8               	movwf	printf@c
  4120     0303                     l1794:
  4121                           
  4122                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4123     0303  0858               	movf	printf@c,w
  4124     0304  318F  270A  3182   	fcall	_putch
  4125     0307                     l1796:
  4126     0307  30FF               	movlw	255
  4127     0308  0020               	movlb	0	; select bank0
  4128     0309  00CD               	movwf	??_printf
  4129     030A  084D               	movf	??_printf,w
  4130     030B  07D2               	addwf	printf@prec,f
  4131     030C  0A52               	incf	printf@prec,w
  4132     030D  1D03               	btfss	3,2
  4133     030E  2B10               	goto	u1421
  4134     030F  2B11               	goto	u1420
  4135     0310                     u1421:
  4136     0310  2ADD               	goto	l1792
  4137     0311                     u1420:
  4138     0311                     l1798:
  4139     0311  0020               	movlb	0	; select bank0
  4140     0312  084A               	movf	printf@f+1,w
  4141     0313  00CE               	movwf	??_printf+1
  4142     0314  0849               	movf	printf@f,w
  4143     0315  00CD               	movwf	??_printf
  4144     0316  0AC9               	incf	printf@f,f
  4145     0317  1903               	skipnz
  4146     0318  0ACA               	incf	printf@f+1,f
  4147     0319  084D               	movf	??_printf,w
  4148     031A  0084               	movwf	4
  4149     031B  084E               	movf	??_printf+1,w
  4150     031C  0085               	movwf	5
  4151     031D  0800               	movf	0,w	;code access
  4152     031E  00D8               	movwf	printf@c
  4153     031F  0858               	movf	printf@c,w
  4154     0320  1D03               	btfss	3,2
  4155     0321  2B23               	goto	u1431
  4156     0322  2B24               	goto	u1430
  4157     0323                     u1431:
  4158     0323  2A3D               	goto	l1740
  4159     0324                     u1430:
  4160     0324                     l283:
  4161     0324  0008               	return
  4162     0325                     __end_of_printf:
  4163                           
  4164                           	psect	text9
  4165     0016                     __ptext9:	
  4166 ;; *************** function ___lwmod *****************
  4167 ;; Defined at:
  4168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  divisor         2    8[COMMON] unsigned int 
  4171 ;;  dividend        2   10[COMMON] unsigned int 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  counter         1   13[COMMON] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  2    8[COMMON] unsigned int 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;Total ram usage:        6 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_printf
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196     0016                     ___lwmod:	
  4197                           ;psect for function ___lwmod
  4198                           
  4199     0016                     l1618:	
  4200                           ;incstack = 0
  4201                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4202                           
  4203     0016  0878               	movf	___lwmod@divisor,w
  4204     0017  0479               	iorwf	___lwmod@divisor+1,w
  4205     0018  1903               	btfsc	3,2
  4206     0019  281B               	goto	u1201
  4207     001A  281C               	goto	u1200
  4208     001B                     u1201:
  4209     001B  2845               	goto	l1636
  4210     001C                     u1200:
  4211     001C                     l1620:
  4212     001C  01FD               	clrf	___lwmod@counter
  4213     001D  0AFD               	incf	___lwmod@counter,f
  4214     001E  2828               	goto	l1626
  4215     001F                     l1622:
  4216     001F  3001               	movlw	1
  4217     0020                     u1215:
  4218     0020  35F8               	lslf	___lwmod@divisor,f
  4219     0021  0DF9               	rlf	___lwmod@divisor+1,f
  4220     0022  0B89               	decfsz	9,f
  4221     0023  2820               	goto	u1215
  4222     0024                     l1624:
  4223     0024  3001               	movlw	1
  4224     0025  00FC               	movwf	??___lwmod
  4225     0026  087C               	movf	??___lwmod,w
  4226     0027  07FD               	addwf	___lwmod@counter,f
  4227     0028                     l1626:
  4228     0028  1FF9               	btfss	___lwmod@divisor+1,7
  4229     0029  282B               	goto	u1221
  4230     002A  282C               	goto	u1220
  4231     002B                     u1221:
  4232     002B  281F               	goto	l1622
  4233     002C                     u1220:
  4234     002C                     l1628:
  4235     002C  0879               	movf	___lwmod@divisor+1,w
  4236     002D  027B               	subwf	___lwmod@dividend+1,w
  4237     002E  1D03               	skipz
  4238     002F  2832               	goto	u1235
  4239     0030  0878               	movf	___lwmod@divisor,w
  4240     0031  027A               	subwf	___lwmod@dividend,w
  4241     0032                     u1235:
  4242     0032  1C03               	skipc
  4243     0033  2835               	goto	u1231
  4244     0034  2836               	goto	u1230
  4245     0035                     u1231:
  4246     0035  283A               	goto	l1632
  4247     0036                     u1230:
  4248     0036                     l1630:
  4249     0036  0878               	movf	___lwmod@divisor,w
  4250     0037  02FA               	subwf	___lwmod@dividend,f
  4251     0038  0879               	movf	___lwmod@divisor+1,w
  4252     0039  3BFB               	subwfb	___lwmod@dividend+1,f
  4253     003A                     l1632:
  4254     003A  3001               	movlw	1
  4255     003B                     u1245:
  4256     003B  36F9               	lsrf	___lwmod@divisor+1,f
  4257     003C  0CF8               	rrf	___lwmod@divisor,f
  4258     003D  0B89               	decfsz	9,f
  4259     003E  283B               	goto	u1245
  4260     003F                     l1634:
  4261     003F  3001               	movlw	1
  4262     0040  02FD               	subwf	___lwmod@counter,f
  4263     0041  1D03               	btfss	3,2
  4264     0042  2844               	goto	u1251
  4265     0043  2845               	goto	u1250
  4266     0044                     u1251:
  4267     0044  282C               	goto	l1628
  4268     0045                     u1250:
  4269     0045                     l1636:
  4270     0045  087B               	movf	___lwmod@dividend+1,w
  4271     0046  00F9               	movwf	?___lwmod+1
  4272     0047  087A               	movf	___lwmod@dividend,w
  4273     0048  00F8               	movwf	?___lwmod
  4274     0049                     l569:
  4275     0049  0008               	return
  4276     004A                     __end_of___lwmod:
  4277                           
  4278                           	psect	text10
  4279     0082                     __ptext10:	
  4280 ;; *************** function ___lwdiv *****************
  4281 ;; Defined at:
  4282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  divisor         2    0[COMMON] unsigned int 
  4285 ;;  dividend        2    2[COMMON] unsigned int 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  quotient        2    5[COMMON] unsigned int 
  4288 ;;  counter         1    7[COMMON] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2    0[COMMON] unsigned int 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;Total ram usage:        8 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_printf
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311     0082                     ___lwdiv:	
  4312                           ;psect for function ___lwdiv
  4313                           
  4314     0082                     l1592:	
  4315                           ;incstack = 0
  4316                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4317                           
  4318     0082  01F5               	clrf	___lwdiv@quotient
  4319     0083  01F6               	clrf	___lwdiv@quotient+1
  4320     0084                     l1594:
  4321     0084  0870               	movf	___lwdiv@divisor,w
  4322     0085  0471               	iorwf	___lwdiv@divisor+1,w
  4323     0086  1903               	btfsc	3,2
  4324     0087  2889               	goto	u1131
  4325     0088  288A               	goto	u1130
  4326     0089                     u1131:
  4327     0089  28B9               	goto	l1614
  4328     008A                     u1130:
  4329     008A                     l1596:
  4330     008A  01F7               	clrf	___lwdiv@counter
  4331     008B  0AF7               	incf	___lwdiv@counter,f
  4332     008C  2896               	goto	l1602
  4333     008D                     l1598:
  4334     008D  3001               	movlw	1
  4335     008E                     u1145:
  4336     008E  35F0               	lslf	___lwdiv@divisor,f
  4337     008F  0DF1               	rlf	___lwdiv@divisor+1,f
  4338     0090  0B89               	decfsz	9,f
  4339     0091  288E               	goto	u1145
  4340     0092                     l1600:
  4341     0092  3001               	movlw	1
  4342     0093  00F4               	movwf	??___lwdiv
  4343     0094  0874               	movf	??___lwdiv,w
  4344     0095  07F7               	addwf	___lwdiv@counter,f
  4345     0096                     l1602:
  4346     0096  1FF1               	btfss	___lwdiv@divisor+1,7
  4347     0097  2899               	goto	u1151
  4348     0098  289A               	goto	u1150
  4349     0099                     u1151:
  4350     0099  288D               	goto	l1598
  4351     009A                     u1150:
  4352     009A                     l1604:
  4353     009A  3001               	movlw	1
  4354     009B                     u1165:
  4355     009B  35F5               	lslf	___lwdiv@quotient,f
  4356     009C  0DF6               	rlf	___lwdiv@quotient+1,f
  4357     009D  0B89               	decfsz	9,f
  4358     009E  289B               	goto	u1165
  4359     009F  0871               	movf	___lwdiv@divisor+1,w
  4360     00A0  0273               	subwf	___lwdiv@dividend+1,w
  4361     00A1  1D03               	skipz
  4362     00A2  28A5               	goto	u1175
  4363     00A3  0870               	movf	___lwdiv@divisor,w
  4364     00A4  0272               	subwf	___lwdiv@dividend,w
  4365     00A5                     u1175:
  4366     00A5  1C03               	skipc
  4367     00A6  28A8               	goto	u1171
  4368     00A7  28A9               	goto	u1170
  4369     00A8                     u1171:
  4370     00A8  28AE               	goto	l1610
  4371     00A9                     u1170:
  4372     00A9                     l1606:
  4373     00A9  0870               	movf	___lwdiv@divisor,w
  4374     00AA  02F2               	subwf	___lwdiv@dividend,f
  4375     00AB  0871               	movf	___lwdiv@divisor+1,w
  4376     00AC  3BF3               	subwfb	___lwdiv@dividend+1,f
  4377     00AD                     l1608:
  4378     00AD  1475               	bsf	___lwdiv@quotient,0
  4379     00AE                     l1610:
  4380     00AE  3001               	movlw	1
  4381     00AF                     u1185:
  4382     00AF  36F1               	lsrf	___lwdiv@divisor+1,f
  4383     00B0  0CF0               	rrf	___lwdiv@divisor,f
  4384     00B1  0B89               	decfsz	9,f
  4385     00B2  28AF               	goto	u1185
  4386     00B3                     l1612:
  4387     00B3  3001               	movlw	1
  4388     00B4  02F7               	subwf	___lwdiv@counter,f
  4389     00B5  1D03               	btfss	3,2
  4390     00B6  28B8               	goto	u1191
  4391     00B7  28B9               	goto	u1190
  4392     00B8                     u1191:
  4393     00B8  289A               	goto	l1604
  4394     00B9                     u1190:
  4395     00B9                     l1614:
  4396     00B9  0876               	movf	___lwdiv@quotient+1,w
  4397     00BA  00F1               	movwf	?___lwdiv+1
  4398     00BB  0875               	movf	___lwdiv@quotient,w
  4399     00BC  00F0               	movwf	?___lwdiv
  4400     00BD                     l559:
  4401     00BD  0008               	return
  4402     00BE                     __end_of___lwdiv:
  4403                           
  4404                           	psect	text11
  4405     0EFC                     __ptext11:	
  4406 ;; *************** function _gets *****************
  4407 ;; Defined at:
  4408 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  s               1    wreg     PTR unsigned char 
  4411 ;;		 -> main@tmp(14), 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  s               1   10[COMMON] PTR unsigned char 
  4414 ;;		 -> main@tmp(14), 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      PTR unsigned char 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;Total ram usage:        1 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 3
  4431 ;; This function calls:
  4432 ;;		_cgets
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438     0EFC                     _gets:	
  4439                           ;psect for function _gets
  4440                           
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _gets: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4444                           ;gets@s stored from wreg
  4445     0EFC  00FA               	movwf	gets@s
  4446     0EFD                     l1734:
  4447                           
  4448                           ;	Return value of _gets is never used
  4449     0EFD  087A               	movf	gets@s,w
  4450     0EFE  3181  210A  318E   	fcall	_cgets
  4451     0F01                     l755:
  4452     0F01  0008               	return
  4453     0F02                     __end_of_gets:
  4454                           
  4455                           	psect	text12
  4456     010A                     __ptext12:	
  4457 ;; *************** function _cgets *****************
  4458 ;; Defined at:
  4459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  s               1    wreg     PTR unsigned char 
  4462 ;;		 -> main@tmp(14), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  s               1    8[COMMON] PTR unsigned char 
  4465 ;;		 -> main@tmp(14), 
  4466 ;;  c               2    6[COMMON] int 
  4467 ;;  s1              1    9[COMMON] PTR unsigned char 
  4468 ;;		 -> main@tmp(14), 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      PTR unsigned char 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;Total ram usage:        8 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 2
  4485 ;; This function calls:
  4486 ;;		_getche
  4487 ;;		_putch
  4488 ;; This function is called by:
  4489 ;;		_gets
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493     010A                     _cgets:	
  4494                           ;psect for function _cgets
  4495                           
  4496                           
  4497                           ;incstack = 0
  4498                           ; Regs used in _cgets: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4499                           ;cgets@s stored from wreg
  4500     010A  00F8               	movwf	cgets@s
  4501     010B                     l1652:
  4502     010B  0878               	movf	cgets@s,w
  4503     010C  00F9               	movwf	cgets@s1
  4504     010D  2944               	goto	l1680
  4505     010E                     l1654:
  4506     010E  0878               	movf	cgets@s,w
  4507     010F  0679               	xorwf	cgets@s1,w
  4508     0110  1D03               	skipz
  4509     0111  2913               	goto	u1281
  4510     0112  2914               	goto	u1280
  4511     0113                     u1281:
  4512     0113  2915               	goto	l1658
  4513     0114                     u1280:
  4514     0114  2944               	goto	l1680
  4515     0115                     l1658:
  4516     0115  3020               	movlw	32
  4517     0116  318F  270A  3181   	fcall	_putch
  4518     0119  3008               	movlw	8
  4519     011A  318F  270A  3181   	fcall	_putch
  4520     011D                     l1660:
  4521     011D  3001               	movlw	1
  4522     011E  02F9               	subwf	cgets@s1,f
  4523     011F  2944               	goto	l1680
  4524     0120                     l1662:
  4525     0120  3008               	movlw	8
  4526     0121  318F  270A  3181   	fcall	_putch
  4527     0124  3020               	movlw	32
  4528     0125  318F  270A  3181   	fcall	_putch
  4529     0128  3008               	movlw	8
  4530     0129  318F  270A  3181   	fcall	_putch
  4531     012C                     l1664:
  4532     012C  3001               	movlw	1
  4533     012D  02F9               	subwf	cgets@s1,f
  4534     012E                     l1666:
  4535     012E  0879               	movf	cgets@s1,w
  4536     012F  0278               	subwf	cgets@s,w
  4537     0130  1C03               	skipc
  4538     0131  2933               	goto	u1291
  4539     0132  2934               	goto	u1290
  4540     0133                     u1291:
  4541     0133  2920               	goto	l1662
  4542     0134                     u1290:
  4543     0134  2944               	goto	l1680
  4544     0135                     l1668:
  4545     0135  0879               	movf	cgets@s1,w
  4546     0136  0086               	movwf	6
  4547     0137  0187               	clrf	7
  4548     0138  0181               	clrf	1
  4549     0139                     l1670:
  4550     0139  0878               	movf	cgets@s,w
  4551     013A  2960               	goto	l773
  4552     013B                     l1674:
  4553     013B  0879               	movf	cgets@s1,w
  4554     013C  0086               	movwf	6
  4555     013D  0187               	clrf	7
  4556     013E  0876               	movf	cgets@c,w
  4557     013F  0081               	movwf	1
  4558     0140                     l1676:
  4559     0140  3001               	movlw	1
  4560     0141  00F4               	movwf	??_cgets
  4561     0142  0874               	movf	??_cgets,w
  4562     0143  07F9               	addwf	cgets@s1,f
  4563     0144                     l1680:
  4564     0144  318F  2714  3181   	fcall	_getche
  4565     0147  00F4               	movwf	??_cgets
  4566     0148  01F5               	clrf	??_cgets+1
  4567     0149  0874               	movf	??_cgets,w
  4568     014A  00F6               	movwf	cgets@c
  4569     014B  0875               	movf	??_cgets+1,w
  4570     014C  00F7               	movwf	cgets@c+1
  4571                           
  4572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4573                           ; Switch size 1, requested type "simple"
  4574                           ; Number of cases is 1, Range of values is 0 to 0
  4575                           ; switch strategies available:
  4576                           ; Name         Instructions Cycles
  4577                           ; simple_byte            4     3 (average)
  4578                           ; direct_byte            8     6 (fixed)
  4579                           ; jumptable            260     6 (fixed)
  4580                           ;	Chosen strategy is simple_byte
  4581     014D  0877               	movf	cgets@c+1,w
  4582     014E  3A00               	xorlw	0	; case 0
  4583     014F  1903               	skipnz
  4584     0150  2952               	goto	l2164
  4585     0151  293B               	goto	l1674
  4586     0152                     l2164:
  4587                           
  4588                           ; Switch size 1, requested type "simple"
  4589                           ; Number of cases is 4, Range of values is 8 to 21
  4590                           ; switch strategies available:
  4591                           ; Name         Instructions Cycles
  4592                           ; simple_byte           13     7 (average)
  4593                           ; direct_byte           37     9 (fixed)
  4594                           ; jumptable            263     9 (fixed)
  4595                           ;	Chosen strategy is simple_byte
  4596     0152  0876               	movf	cgets@c,w
  4597     0153  3A08               	xorlw	8	; case 8
  4598     0154  1903               	skipnz
  4599     0155  290E               	goto	l1654
  4600     0156  3A02               	xorlw	2	; case 10
  4601     0157  1903               	skipnz
  4602     0158  2935               	goto	l1668
  4603     0159  3A07               	xorlw	7	; case 13
  4604     015A  1903               	skipnz
  4605     015B  2935               	goto	l1668
  4606     015C  3A18               	xorlw	24	; case 21
  4607     015D  1903               	skipnz
  4608     015E  292E               	goto	l1666
  4609     015F  293B               	goto	l1674
  4610     0160                     l773:
  4611     0160  0008               	return
  4612     0161                     __end_of_cgets:
  4613                           
  4614                           	psect	text13
  4615     0F14                     __ptext13:	
  4616 ;; *************** function _getche *****************
  4617 ;; Defined at:
  4618 ;;		line 28 in file "uart.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  c               1    1[COMMON] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      unsigned char 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;Total ram usage:        1 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 1
  4639 ;; This function calls:
  4640 ;;		_getch
  4641 ;;		_putch
  4642 ;; This function is called by:
  4643 ;;		_cgets
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647     0F14                     _getche:	
  4648                           ;psect for function _getche
  4649                           
  4650     0F14                     l1536:	
  4651                           ;incstack = 0
  4652                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  4653                           
  4654                           
  4655                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  4656     0F14  318F  2702  318F   	fcall	_getch
  4657     0F17  00F1               	movwf	getche@c
  4658     0F18                     l1538:
  4659                           
  4660                           ;uart.c: 33: putch(c);
  4661     0F18  0871               	movf	getche@c,w
  4662     0F19  318F  270A  318F   	fcall	_putch
  4663     0F1C                     l1540:
  4664                           
  4665                           ;uart.c: 35: return c;
  4666     0F1C  0871               	movf	getche@c,w
  4667     0F1D                     l184:
  4668     0F1D  0008               	return
  4669     0F1E                     __end_of_getche:
  4670                           
  4671                           	psect	text14
  4672     0F0A                     __ptext14:	
  4673 ;; *************** function _putch *****************
  4674 ;; Defined at:
  4675 ;;		line 13 in file "uart.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  byte            1    wreg     unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  byte            1    0[COMMON] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;Total ram usage:        1 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_getche
  4699 ;;		_printf
  4700 ;;		_cgets
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704     0F0A                     _putch:	
  4705                           ;psect for function _putch
  4706                           
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _putch: [wreg]
  4710                           ;putch@byte stored from wreg
  4711     0F0A  00F0               	movwf	putch@byte
  4712     0F0B                     l1526:
  4713     0F0B                     l172:	
  4714                           ;uart.c: 15: while(!TXIF){
  4715                           
  4716     0F0B  0020               	movlb	0	; select bank0
  4717     0F0C  1E11               	btfss	17,4	;volatile
  4718     0F0D  2F0F               	goto	u981
  4719     0F0E  2F10               	goto	u980
  4720     0F0F                     u981:
  4721     0F0F  2F0B               	goto	l172
  4722     0F10                     u980:
  4723     0F10                     l1528:
  4724                           
  4725                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  4726     0F10  0870               	movf	putch@byte,w
  4727     0F11  0023               	movlb	3	; select bank3
  4728     0F12  009A               	movwf	26	;volatile
  4729     0F13                     l175:
  4730     0F13  0008               	return
  4731     0F14                     __end_of_putch:
  4732                           
  4733                           	psect	text15
  4734     0F02                     __ptext15:	
  4735 ;; *************** function _getch *****************
  4736 ;; Defined at:
  4737 ;;		line 20 in file "uart.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_getche
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764     0F02                     _getch:	
  4765                           ;psect for function _getch
  4766                           
  4767     0F02                     l1530:	
  4768                           ;incstack = 0
  4769                           ; Regs used in _getch: [wreg]
  4770                           
  4771     0F02                     l178:	
  4772                           ;uart.c: 22: while(!RCIF){
  4773                           
  4774     0F02  0020               	movlb	0	; select bank0
  4775     0F03  1E91               	btfss	17,5	;volatile
  4776     0F04  2F06               	goto	u991
  4777     0F05  2F07               	goto	u990
  4778     0F06                     u991:
  4779     0F06  2F02               	goto	l178
  4780     0F07                     u990:
  4781     0F07                     l1532:
  4782                           
  4783                           ;uart.c: 23: };uart.c: 25: return RCREG;
  4784     0F07  0023               	movlb	3	; select bank3
  4785     0F08  0819               	movf	25,w	;volatile
  4786     0F09                     l181:
  4787     0F09  0008               	return
  4788     0F0A                     __end_of_getch:
  4789                           
  4790                           	psect	text16
  4791     01BB                     __ptext16:	
  4792 ;; *************** function _atoi *****************
  4793 ;; Defined at:
  4794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  s               1    wreg     PTR const unsigned char 
  4797 ;;		 -> NULL(0), main@tmp(14), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4800 ;;		 -> NULL(0), main@tmp(14), 
  4801 ;;  a               2    1[BANK0 ] int 
  4802 ;;  sign            1    0[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    6[COMMON] int 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:       10 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 1
  4819 ;; This function calls:
  4820 ;;		___wmul
  4821 ;;		_isdigit
  4822 ;; This function is called by:
  4823 ;;		_main
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827     01BB                     _atoi:	
  4828                           ;psect for function _atoi
  4829                           
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4833                           ;atoi@s stored from wreg
  4834     01BB  0020               	movlb	0	; select bank0
  4835     01BC  00CC               	movwf	atoi@s
  4836     01BD                     l1844:
  4837     01BD  29C2               	goto	l1848
  4838     01BE                     l1846:
  4839     01BE  3001               	movlw	1
  4840     01BF  00F8               	movwf	??_atoi
  4841     01C0  0878               	movf	??_atoi,w
  4842     01C1  07CC               	addwf	atoi@s,f
  4843     01C2                     l1848:
  4844     01C2  084C               	movf	atoi@s,w
  4845     01C3  0086               	movwf	6
  4846     01C4  0187               	clrf	7
  4847     01C5  3020               	movlw	32
  4848     01C6  0601               	xorwf	1,w
  4849     01C7  1903               	btfsc	3,2
  4850     01C8  29CA               	goto	u1501
  4851     01C9  29CB               	goto	u1500
  4852     01CA                     u1501:
  4853     01CA  29BE               	goto	l1846
  4854     01CB                     u1500:
  4855     01CB                     l1850:
  4856     01CB  084C               	movf	atoi@s,w
  4857     01CC  0086               	movwf	6
  4858     01CD  0187               	clrf	7
  4859     01CE  3009               	movlw	9
  4860     01CF  0601               	xorwf	1,w
  4861     01D0  1903               	btfsc	3,2
  4862     01D1  29D3               	goto	u1511
  4863     01D2  29D4               	goto	u1510
  4864     01D3                     u1511:
  4865     01D3  29BE               	goto	l1846
  4866     01D4                     u1510:
  4867     01D4                     l1852:
  4868     01D4  01CA               	clrf	atoi@a
  4869     01D5  01CB               	clrf	atoi@a+1
  4870     01D6  01C9               	clrf	atoi@sign
  4871     01D7                     l1854:
  4872     01D7  084C               	movf	atoi@s,w
  4873     01D8  0086               	movwf	6
  4874     01D9  0187               	clrf	7
  4875     01DA  302D               	movlw	45
  4876     01DB  0601               	xorwf	1,w
  4877     01DC  1D03               	btfss	3,2
  4878     01DD  29DF               	goto	u1521
  4879     01DE  29E0               	goto	u1520
  4880     01DF                     u1521:
  4881     01DF  29E9               	goto	l1858
  4882     01E0                     u1520:
  4883     01E0                     l1856:
  4884     01E0  3001               	movlw	1
  4885     01E1  00F8               	movwf	??_atoi
  4886     01E2  0878               	movf	??_atoi,w
  4887     01E3  07C9               	addwf	atoi@sign,f
  4888     01E4  3001               	movlw	1
  4889     01E5  00F8               	movwf	??_atoi
  4890     01E6  0878               	movf	??_atoi,w
  4891     01E7  07CC               	addwf	atoi@s,f
  4892     01E8  2A17               	goto	l1866
  4893     01E9                     l1858:
  4894     01E9  084C               	movf	atoi@s,w
  4895     01EA  0086               	movwf	6
  4896     01EB  0187               	clrf	7
  4897     01EC  302B               	movlw	43
  4898     01ED  0601               	xorwf	1,w
  4899     01EE  1D03               	btfss	3,2
  4900     01EF  29F1               	goto	u1531
  4901     01F0  29F2               	goto	u1530
  4902     01F1                     u1531:
  4903     01F1  2A17               	goto	l1866
  4904     01F2                     u1530:
  4905     01F2                     l1860:
  4906     01F2  3001               	movlw	1
  4907     01F3  00F8               	movwf	??_atoi
  4908     01F4  0878               	movf	??_atoi,w
  4909     01F5  07CC               	addwf	atoi@s,f
  4910     01F6  2A17               	goto	l1866
  4911     01F7                     l1862:
  4912     01F7  0020               	movlb	0	; select bank0
  4913     01F8  084C               	movf	atoi@s,w
  4914     01F9  0086               	movwf	6
  4915     01FA  0187               	clrf	7
  4916     01FB  0801               	movf	1,w
  4917     01FC  00F8               	movwf	??_atoi
  4918     01FD  01F9               	clrf	??_atoi+1
  4919     01FE  084B               	movf	atoi@a+1,w
  4920     01FF  00F1               	movwf	___wmul@multiplier+1
  4921     0200  084A               	movf	atoi@a,w
  4922     0201  00F0               	movwf	___wmul@multiplier
  4923     0202  300A               	movlw	10
  4924     0203  00F2               	movwf	___wmul@multiplicand
  4925     0204  3000               	movlw	0
  4926     0205  00F3               	movwf	___wmul@multiplicand+1
  4927     0206  318F  275A  3181   	fcall	___wmul
  4928     0209  0878               	movf	??_atoi,w
  4929     020A  0770               	addwf	?___wmul,w
  4930     020B  00FA               	movwf	??_atoi+2
  4931     020C  0879               	movf	??_atoi+1,w
  4932     020D  3D71               	addwfc	?___wmul+1,w
  4933     020E  00FB               	movwf	??_atoi+3
  4934     020F  087A               	movf	??_atoi+2,w
  4935     0210  3ED0               	addlw	208
  4936     0211  0020               	movlb	0	; select bank0
  4937     0212  00CA               	movwf	atoi@a
  4938     0213  30FF               	movlw	255
  4939     0214  3D7B               	addwfc	??_atoi+3,w
  4940     0215  00CB               	movwf	atoi@a+1
  4941     0216  29F2               	goto	l1860
  4942     0217                     l1866:
  4943     0217  084C               	movf	atoi@s,w
  4944     0218  0086               	movwf	6
  4945     0219  0187               	clrf	7
  4946     021A  0801               	movf	1,w
  4947     021B  3180  2004  3181   	fcall	_isdigit
  4948     021E  1803               	btfsc	3,0
  4949     021F  2A21               	goto	u1541
  4950     0220  2A22               	goto	u1540
  4951     0221                     u1541:
  4952     0221  29F7               	goto	l1862
  4953     0222                     u1540:
  4954     0222                     l1868:
  4955     0222  0020               	movlb	0	; select bank0
  4956     0223  0849               	movf	atoi@sign,w
  4957     0224  1903               	btfsc	3,2
  4958     0225  2A27               	goto	u1551
  4959     0226  2A28               	goto	u1550
  4960     0227                     u1551:
  4961     0227  2A34               	goto	l1874
  4962     0228                     u1550:
  4963     0228                     l1870:
  4964     0228  094A               	comf	atoi@a,w
  4965     0229  00F8               	movwf	??_atoi
  4966     022A  094B               	comf	atoi@a+1,w
  4967     022B  00F9               	movwf	??_atoi+1
  4968     022C  0AF8               	incf	??_atoi,f
  4969     022D  1903               	skipnz
  4970     022E  0AF9               	incf	??_atoi+1,f
  4971     022F  0878               	movf	??_atoi,w
  4972     0230  00F6               	movwf	?_atoi
  4973     0231  0879               	movf	??_atoi+1,w
  4974     0232  00F7               	movwf	?_atoi+1
  4975     0233  2A38               	goto	l750
  4976     0234                     l1874:
  4977     0234  084B               	movf	atoi@a+1,w
  4978     0235  00F7               	movwf	?_atoi+1
  4979     0236  084A               	movf	atoi@a,w
  4980     0237  00F6               	movwf	?_atoi
  4981     0238                     l750:
  4982     0238  0008               	return
  4983     0239                     __end_of_atoi:
  4984                           
  4985                           	psect	text17
  4986     0004                     __ptext17:	
  4987 ;; *************** function _isdigit *****************
  4988 ;; Defined at:
  4989 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  c               1    wreg     unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  c               1    1[COMMON] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;		None               void
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;Total ram usage:        2 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_atoi
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016     0004                     _isdigit:	
  5017                           ;psect for function _isdigit
  5018                           
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5022                           ;isdigit@c stored from wreg
  5023     0004  00F1               	movwf	isdigit@c
  5024     0005                     l1640:
  5025     0005  01F0               	clrf	_isdigit$543
  5026     0006                     l1642:
  5027     0006  303A               	movlw	58
  5028     0007  0271               	subwf	isdigit@c,w
  5029     0008  1803               	skipnc
  5030     0009  280B               	goto	u1261
  5031     000A  280C               	goto	u1260
  5032     000B                     u1261:
  5033     000B  2814               	goto	l1648
  5034     000C                     u1260:
  5035     000C                     l1644:
  5036     000C  3030               	movlw	48
  5037     000D  0271               	subwf	isdigit@c,w
  5038     000E  1C03               	skipc
  5039     000F  2811               	goto	u1271
  5040     0010  2812               	goto	u1270
  5041     0011                     u1271:
  5042     0011  2814               	goto	l1648
  5043     0012                     u1270:
  5044     0012                     l1646:
  5045     0012  01F0               	clrf	_isdigit$543
  5046     0013  0AF0               	incf	_isdigit$543,f
  5047     0014                     l1648:
  5048     0014  0C70               	rrf	_isdigit$543,w
  5049     0015                     l780:
  5050     0015  0008               	return
  5051     0016                     __end_of_isdigit:
  5052                           
  5053                           	psect	text18
  5054     0F5A                     __ptext18:	
  5055 ;; *************** function ___wmul *****************
  5056 ;; Defined at:
  5057 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  multiplier      2    0[COMMON] unsigned int 
  5060 ;;  multiplicand    2    2[COMMON] unsigned int 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  product         2    4[COMMON] unsigned int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  2    0[COMMON] unsigned int 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;Total ram usage:        6 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_atoi
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085     0F5A                     ___wmul:	
  5086                           ;psect for function ___wmul
  5087                           
  5088     0F5A                     l1554:	
  5089                           ;incstack = 0
  5090                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5091                           
  5092     0F5A  01F4               	clrf	___wmul@product
  5093     0F5B  01F5               	clrf	___wmul@product+1
  5094     0F5C                     l1556:
  5095     0F5C  1C70               	btfss	___wmul@multiplier,0
  5096     0F5D  2F5F               	goto	u1021
  5097     0F5E  2F60               	goto	u1020
  5098     0F5F                     u1021:
  5099     0F5F  2F64               	goto	l287
  5100     0F60                     u1020:
  5101     0F60                     l1558:
  5102     0F60  0872               	movf	___wmul@multiplicand,w
  5103     0F61  07F4               	addwf	___wmul@product,f
  5104     0F62  0873               	movf	___wmul@multiplicand+1,w
  5105     0F63  3DF5               	addwfc	___wmul@product+1,f
  5106     0F64                     l287:
  5107     0F64  3001               	movlw	1
  5108     0F65                     u1035:
  5109     0F65  35F2               	lslf	___wmul@multiplicand,f
  5110     0F66  0DF3               	rlf	___wmul@multiplicand+1,f
  5111     0F67  0B89               	decfsz	9,f
  5112     0F68  2F65               	goto	u1035
  5113     0F69                     l1560:
  5114     0F69  3001               	movlw	1
  5115     0F6A                     u1045:
  5116     0F6A  36F1               	lsrf	___wmul@multiplier+1,f
  5117     0F6B  0CF0               	rrf	___wmul@multiplier,f
  5118     0F6C  0B89               	decfsz	9,f
  5119     0F6D  2F6A               	goto	u1045
  5120     0F6E                     l1562:
  5121     0F6E  0870               	movf	___wmul@multiplier,w
  5122     0F6F  0471               	iorwf	___wmul@multiplier+1,w
  5123     0F70  1D03               	btfss	3,2
  5124     0F71  2F73               	goto	u1051
  5125     0F72  2F74               	goto	u1050
  5126     0F73                     u1051:
  5127     0F73  2F5C               	goto	l1556
  5128     0F74                     u1050:
  5129     0F74                     l1564:
  5130     0F74  0875               	movf	___wmul@product+1,w
  5131     0F75  00F1               	movwf	?___wmul+1
  5132     0F76  0874               	movf	___wmul@product,w
  5133     0F77  00F0               	movwf	?___wmul
  5134     0F78                     l289:
  5135     0F78  0008               	return
  5136     0F79                     __end_of___wmul:
  5137                           
  5138                           	psect	text19
  5139     0F2A                     __ptext19:	
  5140 ;; *************** function _PICinit *****************
  5141 ;; Defined at:
  5142 ;;		line 50 in file "main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, status,2
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;Total ram usage:        0 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_main
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169     0F2A                     _PICinit:	
  5170                           ;psect for function _PICinit
  5171                           
  5172     0F2A                     l1720:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _PICinit: [wreg+status,2]
  5175                           
  5176                           
  5177                           ;main.c: 51: OSCCON = 0b01110000 ;
  5178     0F2A  3070               	movlw	112
  5179     0F2B  0021               	movlb	1	; select bank1
  5180     0F2C  0099               	movwf	25	;volatile
  5181     0F2D                     l1722:
  5182                           
  5183                           ;main.c: 52: ANSELA = 0b00000000 ;
  5184     0F2D  0023               	movlb	3	; select bank3
  5185     0F2E  018C               	clrf	12	;volatile
  5186     0F2F                     l1724:
  5187                           
  5188                           ;main.c: 53: ANSELC = 0b00000000 ;
  5189     0F2F  018E               	clrf	14	;volatile
  5190                           
  5191                           ;main.c: 54: TRISA = 0b00000010 ;
  5192     0F30  3002               	movlw	2
  5193     0F31  0021               	movlb	1	; select bank1
  5194     0F32  008C               	movwf	12	;volatile
  5195     0F33                     l1726:
  5196                           
  5197                           ;main.c: 55: TRISC = 0b00000000 ;
  5198     0F33  018E               	clrf	14	;volatile
  5199     0F34                     l1728:
  5200                           
  5201                           ;main.c: 56: PORTA = 0b00000000 ;
  5202     0F34  0020               	movlb	0	; select bank0
  5203     0F35  018C               	clrf	12	;volatile
  5204     0F36                     l1730:
  5205                           
  5206                           ;main.c: 57: PORTC = 0b00000000 ;
  5207     0F36  018E               	clrf	14	;volatile
  5208     0F37                     l1732:
  5209                           
  5210                           ;main.c: 59: DAC1CON0 = 0b10010000;
  5211     0F37  3090               	movlw	144
  5212     0F38  0022               	movlb	2	; select bank2
  5213     0F39  0098               	movwf	24	;volatile
  5214                           
  5215                           ;main.c: 60: DAC1CON1 = 0;
  5216     0F3A  0199               	clrf	25	;volatile
  5217     0F3B                     l50:
  5218     0F3B  0008               	return
  5219     0F3C                     __end_of_PICinit:
  5220     007E                     btemp	set	126	;btemp
  5221     007E                     wtemp0	set	126
  5222     20D0                     
  5223                           	psect	idloc
  5224                           
  5225                           ;Config register IDLOC0 @ 0x8000
  5226                           ;	unspecified, using default values
  5227     8000                     	org	32768
  5228     8000  3FFF               	dw	16383
  5229                           
  5230                           ;Config register IDLOC1 @ 0x8001
  5231                           ;	unspecified, using default values
  5232     8001                     	org	32769
  5233     8001  3FFF               	dw	16383
  5234                           
  5235                           ;Config register IDLOC2 @ 0x8002
  5236                           ;	unspecified, using default values
  5237     8002                     	org	32770
  5238     8002  3FFF               	dw	16383
  5239                           
  5240                           ;Config register IDLOC3 @ 0x8003
  5241                           ;	unspecified, using default values
  5242     8003                     	org	32771
  5243     8003  3FFF               	dw	16383
  5244                           
  5245                           	psect	config
  5246                           
  5247                           ;Config register CONFIG1 @ 0x8007
  5248                           ;	Oscillator Selection Bits
  5249                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5250                           ;	Watchdog Timer Enable
  5251                           ;	WDTE = OFF, WDT disabled
  5252                           ;	Power-up Timer Enable
  5253                           ;	PWRTE = ON, PWRT enabled
  5254                           ;	MCLR Pin Function Select
  5255                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5256                           ;	Flash Program Memory Code Protection
  5257                           ;	CP = OFF, Program memory code protection is disabled
  5258                           ;	Brown-out Reset Enable
  5259                           ;	BOREN = ON, Brown-out Reset enabled
  5260                           ;	Clock Out Enable
  5261                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5262                           ;	Internal/External Switchover Mode
  5263                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  5264                           ;	Fail-Safe Clock Monitor Enable
  5265                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5266     8007                     	org	32775
  5267     8007  0F84               	dw	3972
  5268                           
  5269                           ;Config register CONFIG2 @ 0x8008
  5270                           ;	Flash Memory Self-Write Protection
  5271                           ;	WRT = OFF, Write protection off
  5272                           ;	Peripheral Pin Select one-way control
  5273                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  5274                           ;	Zero-cross detect disable
  5275                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  5276                           ;	Phase Lock Loop enable
  5277                           ;	PLLEN = ON, 4x PLL is always enabled
  5278                           ;	Stack Overflow/Underflow Reset Enable
  5279                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5280                           ;	Brown-out Reset Voltage Selection
  5281                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  5282                           ;	Low-Power Brown Out Reset
  5283                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5284                           ;	Low-Voltage Programming Enable
  5285                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5286     8008                     	org	32776
  5287     8008  1BFB               	dw	7163

Data Sizes:
    Strings     141
    Constant    10
    Data        0
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      61
    BANK1            80     62      62
    BANK2            48      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_15(CODE[2]), NULL(NULL[0]), 
		 -> STR_14(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_39(CODE[3]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), main@rcmd(BANK1[4]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 14
		 -> main@tmp(BANK1[14]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 14
		 -> main@tmp(BANK1[14]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 14
		 -> main@tmp(BANK1[14]), 

    gets@s	PTR unsigned char  size(1) Largest target is 14
		 -> main@tmp(BANK1[14]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_41(CODE[11]), STR_40(CODE[9]), STR_32(CODE[8]), STR_29(CODE[8]), 
		 -> STR_26(CODE[8]), STR_23(CODE[8]), STR_20(CODE[8]), STR_19(CODE[8]), 
		 -> STR_17(CODE[8]), STR_16(CODE[4]), STR_1(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_42(CODE[7]), ?_printf(BANK0[2]), main@tmp(BANK1[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 14
		 -> NULL(NULL[0]), main@tmp(BANK1[14]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 14
		 -> main@tmp(BANK1[14]), 


Critical Paths under _main in COMMON

    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _serial_init->___lldiv
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   10432
                                             16 BANK0      4     4      0
                                              0 BANK1     62    62      0
                            _PICinit
                               _atoi
                               _gets
                             _printf
                        _serial_init
                             _strcmp
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               5     3      2    2692
                                              0 BANK0      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     592
                                              7 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     592
                                              7 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     392
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2    2053
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1961
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                             10 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                8     6      2     325
                                              2 COMMON     8     6      2
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                10     8      2     870
                                              6 COMMON     6     4      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PICinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PICinit
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _serial_init
     ___lldiv
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      3D       5       76.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3E      3E       7       77.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 14:56:13 2023

                     l50 0F3B                       l47 0081                       l59 0343  
                     l77 0441      ___wmul@multiplicand 0072                      l133 0730  
                    l125 06DA                      l143 0796                      l128 06FB  
                    l138 0763                      l323 01BA                      l172 0F0B  
                    l181 0F09                      l175 0F13                      l184 0F1D  
                    l178 0F02                      l283 0324                      l287 0F64  
                    l289 0F78                      l812 0FCF                      l750 0238  
                    l559 00BD                      l815 0F3C                      l569 0049  
                    l817 0F59                      l755 0F01                      l780 0015  
                    l828 0FFF                      l773 0160                      l788 0F9F  
                    l799 0109                      u980 0F10                      u981 0F0F  
                    u990 0F07                      u991 0F06              main@fp1_amp 00B0  
            main@fp2_amp 00B4              main@fp3_amp 00B8              main@fp4_amp 00BC  
                    wreg 0009                     l2000 0531                     l2010 0565  
                   l2002 0543                     l2100 070D                     l2020 0590  
                   l2012 056E                     l2004 054C                     l2102 0710  
                   l2030 05B9                     l2022 059B                     l2014 0579  
                   l2006 0555                     l2104 071F                     l2112 0743  
                   l2040 05E4                     l2032 05C2                     l2024 05A0  
                   l2016 057E                     l2008 0560                     l2114 0752  
                   l2122 0776                     l2106 0723                     l2050 0611  
                   l2042 05EF                     l2034 05CB                     l2026 05A9  
                   l2018 0587                     l2124 0785                     l2116 0756  
                   l2108 0727                     l2132 07A9                     l2060 0638  
                   l2052 0616                     l2044 05F4                     l2036 05D6  
                   l2028 05B4                     l2126 0789                     l2118 075A  
                   l2070 066C                     l2062 0641                     l2054 061F  
                   l2046 05FD                     l2038 05DB                     l2142 07C1  
                   l1600 0092                     l2128 078D                     l2072 0670  
                   l2080 06A3                     l2136 07AF                     l2064 0643  
                   l2056 062A                     l2048 0606                     l1530 0F02  
                   l1610 00AE                     l1602 0096                     l2138 07B8  
                   l2090 06C7                     l2082 06B2                     l2074 0687  
                   l2058 062F                     l1532 0F07                     l1540 0F1C  
                   l2164 0152                     l1612 00B3                     l1604 009A  
                   l1620 001C                     l1700 0FA4                     l2084 06B6  
                   l2092 06DB                     l2076 068B                     l2068 0653  
                   l1526 0F0B                     l1606 00A9                     l1614 00B9  
                   l1630 0036                     l1622 001F                     l1710 004A  
                   l1550 0F57                     l1702 0FAC                     l2094 06EA  
                   l2086 06BE                     l2078 0690                     l1720 0F2A  
                   l1560 0F69                     l1640 0005                     l1528 0F10  
                   l1536 0F14                     l1608 00AD                     l1632 003A  
                   l1624 0024                     l1712 004D                     l1800 0F7A  
                   l1544 0F3C                     l1704 0FB4                     l2096 06EE  
                   l2088 06C2                     l1730 0F36                     l1722 0F2D  
                   l1562 0F6E                     l1554 0F5A                     l1642 0006  
                   l1538 0F18                     l1634 003F                     l1626 0028  
                   l1618 0016                     l1570 0171                     l1714 0050  
                   l1802 0F7B                     l1546 0F46                     l1706 0FCB  
                   l2098 06F2                     l1732 0F37                     l1724 0F2F  
                   l1564 0F74                     l1556 0F5C                     l1644 000C  
                   l1660 011D                     l1652 010B                     l1628 002C  
                   l1636 0045                     l1740 023D                     l1580 019C  
                   l1572 0174                     l1716 007A                     l1804 0F83  
                   l1548 0F47                     l1812 00C0                     l1900 0360  
                   l1726 0F33                     l1558 0F60                     l1646 0012  
                   l1670 0139                     l1662 0120                     l1654 010E  
                   l1734 0EFD                     l1750 0254                     l1742 0243  
                   l1582 01A4                     l1574 017F                     l1718 007D  
                   l1806 0F92                     l1830 00E6                     l1822 00CE  
                   l1814 00C5                     l1910 0378                     l1902 0363  
                   l1728 0F34                     l1648 0014                     l1664 012C  
                   l1680 0144                     l1592 0082                     l1752 025A  
                   l1744 0248                     l1584 01A5                     l1576 0183  
                   l1568 0161                     l1808 0F9A                     l1840 0108  
                   l1832 00F6                     l1824 00DB                     l1816 00C7  
                   l1920 039F                     l1912 037C                     l1904 0365  
                   l1850 01CB                     l1674 013B                     l1666 012E  
                   l1658 0115                     l1594 0084                     l1770 029F  
                   l1754 025F                     l1746 024A                     l1762 0276  
                   l1738 0239                     l1586 01AC                     l1578 018A  
                   l1690 0FDC                     l1834 00FE                     l1826 00E3  
                   l1818 00CC                     l1930 03D1                     l1922 03AD  
                   l1914 038A                     l1906 0367                     l1860 01F2  
                   l1852 01D4                     l1844 01BD                     l1676 0140  
                   l1668 0135                     l1596 008A                     l1780 02AA  
                   l1772 02A3                     l1764 0290                     l1756 0267  
                   l1748 0250                     l1588 01B2                     l1692 0FE4  
                   l1836 0102                     l1940 03F9                     l1932 03D5  
                   l1924 03B1                     l1916 038D                     l1908 036A  
                   l1870 0228                     l1862 01F7                     l1854 01D7  
                   l1846 01BE                     l1598 008D                     l1790 02D9  
                   l1774 02A8                     l1766 0297                     l1758 026C  
                   l1694 0FFB                     l1686 0FD1                     l1838 0107  
                   l1950 042B                     l1942 0407                     l1934 03E3  
                   l1926 03BF                     l1918 039B                     l1856 01E0  
                   l1848 01C2                     l1792 02DD                     l1784 02C5  
                   l1768 029B                     l1688 0FD4                     l1960 044E  
                   l1952 042F                     l1944 040B                     l1936 03E7  
                   l1928 03C3                     l1880 032E                     l1874 0234  
                   l1866 0217                     l1858 01E9                     l1794 0303  
                   l1786 02CF                     l1698 0FA1                     l1970 048B  
                   l1962 0465                     l1954 043D                     l1946 0419  
                   l1938 03F5                     l1890 034B                     l1882 0331  
                   l1868 0222                     l1796 0307                     l1788 02D5  
                   l1980 04E2                     l1972 0490                     l1964 046A  
                   l1948 041D                     l1956 0441                     l1892 034D  
                   l1884 0334                     l1798 0311                     l1990 050C  
                   l1982 04EB                     l1974 04AC                     l1966 047C  
                   l1958 044B                     l1894 034F                     l1886 0337  
                   l1878 0325                     l1992 0510                     l1984 04EE  
                   l1976 04CB                     l1968 0480                     l1896 0352  
                   l1888 034A                     l1994 051B                     l1986 04F6  
                   l1978 04D0                     l1898 0356                     l1996 0520  
                   l1988 04FA                     l1998 052D                     STR_1 1061  
                   STR_2 1091                     STR_3 1065                     STR_4 106D  
                   STR_5 1075                     STR_6 1069                     STR_7 1071  
                   STR_8 1079                     STR_9 107D                     u1000 0F46  
                   u1001 0F45                     u1010 0F57                     u1011 0F56  
                   u1020 0F60                     u1100 019C                     u1021 0F5F  
                   u1101 019B                     u1200 001C                     u1120 01B2  
                   u1201 001B                     u1121 01B1                     u1105 0198  
                   u1050 0F74                     u1130 008A                     u1051 0F73  
                   u1035 0F65                     u1131 0089                     u1115 01A6  
                   u1220 002C                     u1060 0171                     u1300 0FE4  
                   u1045 0F6A                     u1221 002B                     u1061 0170  
                   u1301 0FE3                     u1150 009A                     u1230 0036  
                   u1310 0FFB                     u1151 0099                     u1231 0035  
                   u1215 0020                     u1311 0FFA                     u2007 078E  
                   u1400 02CF                     u1080 0183                     u1320 0FB4  
                   u1145 008E                     u1401 02CE                     u1081 0182  
                   u1321 0FB3                     u1170 00A9                     u1250 0045  
                   u1410 02D5                     u1330 0FCB                     u1171 00A8  
                   u1251 0044                     u1235 0032                     u1411 02D4  
                   u1075 0175                     u1331 0FCA                     u1260 000C  
                   u1500 01CB                     u1420 0311                     u1340 0072  
                   u1261 000B                     u1501 01CA                     u1165 009B  
                   u1245 003B                     u1421 0310                     u1270 0012  
                   u1510 01D4                     u1190 00B9                     u1430 0324  
                   u1350 0243                     u1271 0011                     u1511 01D3  
                   u1191 00B8                     u1175 00A5                     u1431 0323  
                   u1351 0242                     u1095 0184                     u1520 01E0  
                   u1280 0114                     u1360 025A                     u1440 0F92  
                   u1600 03BF                     u1521 01DF                     u1281 0113  
                   u1185 00AF                     u1361 0259                     u1345 006E  
                   u1441 0F91                     u1601 03BE                     u1530 01F2  
                   u1290 0134                     u1370 0275                     u1450 0F9A  
                   u1610 03D1                     u1531 01F1                     u1291 0133  
                   u1371 0274                     u1451 0F99                     u1611 03D0  
                   u1540 0222                     u1380 029F                     u1460 00C5  
                   u1700 04E2                     u1620 03E3                     u1541 0221  
                   u1381 029E                     u1461 00C4                     u1701 04E1  
                   u1621 03E2                     u1550 0228                     u1390 02C4  
                   u1470 00CC                     u1710 050C                     u1630 03F5  
                   u1551 0227                     u1391 02C3                     u1471 00CB  
                   u1711 050B                     u1631 03F4                     u1480 00E3  
                   u1800 0616                     u1720 0520                     u1640 0407  
                   u1560 0378                     u1481 00E2                     u1801 0615  
                   u1721 051F                     u1705 04DE                     u1641 0406  
                   u1561 0377                     u1490 00FE                     u1810 062F  
                   u1730 0543                     u1650 0419                     u1570 038A  
                   u1395 02C0                     u1491 00FD                     u1811 062E  
                   u1731 0542                     u1715 0508                     u1651 0418  
                   u1571 0389                     u1900 0742                     u1820 0652  
                   u1740 0565                     u1660 042B                     u1580 039B  
                   u1901 0741                     u1821 0651                     u1741 0564  
                   u1661 042A                     u1581 039A                     u1910 0752  
                   u1830 066C                     u1750 057E                     u1670 043D  
                   u1590 03AD                     u1911 0751                     u1831 066B  
                   u1751 057D                     u1735 053F                     u1671 043C  
                   u1591 03AC                     u1920 0775                     u1840 06A2  
                   u1760 05A0                     u1680 047C                     u1921 0774  
                   u1905 073E                     u1841 06A1                     u1825 064E  
                   u1761 059F                     u1681 047B                     u1930 0785  
                   u1850 06B2                     u1770 05B9                     u1690 0490  
                   u1931 0784                     u1851 06B1                     u1771 05B8  
                   u1691 048F                     u1940 07A8                     u1860 06D9  
                   u1780 05DB                     u1941 07A7                     u1925 0771  
                   u1861 06D8                     u1845 069E                     u1781 05DA  
                   u1685 0478                     u1870 06EA                     u1790 05F4  
                   u1871 06E9                     u1791 05F3                     u1880 070D  
                   u1945 07A4                     u1881 070C                     u1865 06D5  
                   u1890 071F                     u1891 071E                     u1885 0709  
                   u1957 0688                     u1967 06BF                     u1977 06F3  
                   u1987 0728                     _RCIF 008D                     u1997 075B  
                   _TXIF 008C          __end_of_PICinit 0F3C                     _atoi 01BB  
                   _gets 0EFC                     _main 0325              main@num_ap1 00D2  
            main@num_ap2 00D4                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E             main@fp1_time 00AE  
           main@fp2_time 00B2             main@fp3_time 00B6                     start 0002  
           main@fp4_time 00BA                    ?_atoi 0076                    ?_gets 0070  
                  ?_main 0070                    STR_10 1085                    STR_11 1081  
                  STR_12 1089                    STR_20 103E                    STR_21 1095  
                  STR_13 108D                    STR_30 1095                    STR_22 1095  
                  STR_14 1095                    STR_31 1095                    STR_15 1095  
                  STR_23 1026                    STR_24 1095                    STR_16 105D  
                  STR_32 104E                    STR_40 1015                    _BRG16 0CFB  
                  STR_33 1095                    STR_25 1095                    STR_17 101E  
                  STR_41 100A                    STR_18 1095                    STR_34 1066  
                  STR_42 1056                    STR_26 1036                    STR_27 1095  
                  STR_35 106E                    STR_19 102E                    STR_28 1095  
                  STR_36 106A                    STR_37 1072                    STR_29 1046  
                  STR_38 107A                    STR_39 107E          __end_of___lldiv 01BB  
        __end_of___lwdiv 00BE          __end_of___lwmod 004A                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTC 000E                    _TRISA 008C                    _TRISC 008E  
                  _RXPPS 0E24                    _TXREG 019A                    _TXSTA 019E  
                  _cgets 010A                    _getch 0F02          __end_of_dpowers 100A  
        __end_of_isdigit 0016                    atoi@a 004A                    atoi@s 004C  
                  _putch 0F0A                    gets@s 007A                    main@i 00C6  
                  main@k 00CC                    status 0003                    wtemp0 007E  
        __end_of_strcspn 0FD0          __initialization 07E7             __end_of_atoi 0239  
           __end_of_gets 0F02             __end_of_main 07E7                   ??_atoi 0078  
                 ??_gets 007A                   ??_main 0059                ??_PICinit 0070  
                 ?_cgets 0072                   ?_getch 0070                   _ANSELA 018C  
                 ?_putch 0070                   _ANSELC 018E                   _RA0PPS 0E90  
                 _RC1STA 019D                   _OSCCON 0099                   _TX1STA 019E  
           ?_serial_init 0049                   ___wmul 0F5A                ??___lldiv 0078  
              ??___lwdiv 0074                ??___lwmod 007C                   _getche 0F14  
                 cgets@c 0076                   cgets@s 0078                   _printf 0239  
                 _strchr 0F3C                   _strcmp 0F79                   _strtok 00BE  
                 _strspn 0FD0                ??_isdigit 0070                ??_strcspn 0079  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_cgets 0161  
          __end_of_getch 0F0A            __end_of_putch 0F14                  ??_cgets 0074  
                ??_getch 0070                  ??_putch 0070               __pbssBANK0 0020  
             __pmaintext 0325                  ?___wmul 0070                  ?_getche 0070  
                ?_printf 0049                  ?_strchr 0070                  ?_strcmp 0070  
                ?_strtok 0049                  ?_strspn 0077                  _SP1BRGH 019C  
                _SP1BRGL 019B                  _PICinit 0F2A                  _ap1_dat 20D0  
                _ap2_dat 0020                  ___lldiv 0161                  ___lwdiv 0082  
                ___lwmod 0016                  __ptext1 00BE                  __ptext2 0FD0  
                __ptext3 0FA0                  __ptext4 0F3C                  __ptext5 0F79  
                __ptext6 004A                  __ptext7 0161                  __ptext8 0239  
                __ptext9 0016                  _dpowers 1000                  _isdigit 0004  
                cgets@s1 0079                  getche@c 0071                  main@cmd 00D8  
                clrloop0 0F1F                  main@ptr 00DD                  main@tmp 00A0  
                _strcspn 0FA0     end_of_initialization 07FD          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                  printf@c 0058                  printf@f 0049  
                strcmp@r 0073                  strspn@i 007B           __end_of___wmul 0F79  
         __end_of_getche 0F1E           __end_of_printf 0325           __end_of_strchr 0F5A  
         __end_of_strcmp 0FA0           __end_of_strtok 010A           __end_of_strspn 1000  
    start_initialization 07E7                 ??___wmul 0074                 ??_getche 0071  
               ??_printf 004D                 ??_strchr 0074                 ??_strcmp 0072  
               ??_strtok 004B                 ??_strspn 0079              __pbssBIGRAM 20D0  
              ___latbits 0002            __pcstackBANK0 0049            __pcstackBANK1 00A0  
               ?_PICinit 0070         ___lwdiv@dividend 0072                 ?___lldiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0078                 _DAC1CON0 0118  
               _DAC1CON1 0119                 ?_isdigit 0070         ___lwdiv@quotient 0075  
               ?_strcspn 0077           ___wmul@product 0074                clear_ram0 0F1E  
          ??_serial_init 004D            serial_init@BR 0049                main@i_131 00C8  
              main@i_132 00CA                main@i_126 00D6                main@i_151 00CE  
              main@i_153 00D0                main@i_161 00C4                main@i_155 00BE  
              main@i_157 00C0                main@i_159 00C2        ___wmul@multiplier 0070  
             printf@flag 0051               printf@prec 0052      __end_of_serial_init 0082  
            _isdigit$543 0070          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0082                 __ptext11 0EFC                 __ptext12 010A  
               __ptext13 0F14                 __ptext14 0F0A                 __ptext15 0F02  
               __ptext16 01BB                 __ptext17 0004                 __ptext18 0F5A  
               __ptext19 0F2A                 atoi@sign 0049             serial_init@X 0051  
              printf@val 0056                 main@rcmd 00D9                putch@byte 0070  
         __pstringtext10 1056           __pstringtext11 105D           __pstringtext20 1081  
         __pstringtext12 1061           __pstringtext21 1085           __pstringtext13 1065  
         __pstringtext22 1089           __pstringtext14 1069           __pstringtext23 108D  
         __pstringtext15 106D           __pstringtext24 1091           __pstringtext16 1071  
         __pstringtext25 1095           __pstringtext17 1075           __pstringtext26 0000  
         __pstringtext18 1079           __pstringtext19 107D                 isdigit@c 0071  
              strchr@chr 0072         ___lwmod@dividend 007A                strchr@ptr 0070  
       ___lldiv@dividend 0074                strcspn@s1 007D                strcspn@s2 0077  
            _serial_init 004A                 printf@ap 0053                 printf@cp 0054  
          __pstringtext1 1000            __pstringtext2 1015            __pstringtext3 101E  
          __pstringtext4 1026            __pstringtext5 102E            __pstringtext6 1036  
          __pstringtext7 103E            __pstringtext8 1046            __pstringtext9 104E  
               strcmp@s1 0074                 strcmp@s2 0070         ___lldiv@quotient 0079  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 strcspn@i 007B  
               strtok@s1 004D                 strtok@s2 0049                 strspn@s1 007D  
               strspn@s2 0077                 strtok@sp 0048  
