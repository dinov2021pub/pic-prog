

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 12 14:20:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    27                           	psect	cinit,global,class=CODE,merge=1,delta=2
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text6,local,class=CODE,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    49                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1705 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000E                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     008C                     	;# 
   118     008E                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0097                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010E                     	;# 
   136     0111                     	;# 
   137     0112                     	;# 
   138     0113                     	;# 
   139     0114                     	;# 
   140     0115                     	;# 
   141     0116                     	;# 
   142     0117                     	;# 
   143     0118                     	;# 
   144     0119                     	;# 
   145     011C                     	;# 
   146     018C                     	;# 
   147     018E                     	;# 
   148     0191                     	;# 
   149     0191                     	;# 
   150     0192                     	;# 
   151     0193                     	;# 
   152     0193                     	;# 
   153     0194                     	;# 
   154     0195                     	;# 
   155     0196                     	;# 
   156     0197                     	;# 
   157     0199                     	;# 
   158     0199                     	;# 
   159     0199                     	;# 
   160     019A                     	;# 
   161     019A                     	;# 
   162     019A                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019C                     	;# 
   169     019C                     	;# 
   170     019C                     	;# 
   171     019D                     	;# 
   172     019D                     	;# 
   173     019D                     	;# 
   174     019E                     	;# 
   175     019E                     	;# 
   176     019E                     	;# 
   177     019F                     	;# 
   178     019F                     	;# 
   179     019F                     	;# 
   180     019F                     	;# 
   181     019F                     	;# 
   182     020C                     	;# 
   183     020E                     	;# 
   184     0211                     	;# 
   185     0211                     	;# 
   186     0212                     	;# 
   187     0212                     	;# 
   188     0213                     	;# 
   189     0213                     	;# 
   190     0214                     	;# 
   191     0214                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0215                     	;# 
   195     0215                     	;# 
   196     0216                     	;# 
   197     0216                     	;# 
   198     0217                     	;# 
   199     0217                     	;# 
   200     028C                     	;# 
   201     028E                     	;# 
   202     0291                     	;# 
   203     0291                     	;# 
   204     0292                     	;# 
   205     0293                     	;# 
   206     0293                     	;# 
   207     0298                     	;# 
   208     0298                     	;# 
   209     0299                     	;# 
   210     029A                     	;# 
   211     029A                     	;# 
   212     029E                     	;# 
   213     030C                     	;# 
   214     030E                     	;# 
   215     038C                     	;# 
   216     038E                     	;# 
   217     0391                     	;# 
   218     0392                     	;# 
   219     0393                     	;# 
   220     0397                     	;# 
   221     0398                     	;# 
   222     0399                     	;# 
   223     0415                     	;# 
   224     0416                     	;# 
   225     0417                     	;# 
   226     041C                     	;# 
   227     041D                     	;# 
   228     041E                     	;# 
   229     0511                     	;# 
   230     0515                     	;# 
   231     0617                     	;# 
   232     0618                     	;# 
   233     0619                     	;# 
   234     0619                     	;# 
   235     061A                     	;# 
   236     061B                     	;# 
   237     061C                     	;# 
   238     061C                     	;# 
   239     0691                     	;# 
   240     0692                     	;# 
   241     0693                     	;# 
   242     0694                     	;# 
   243     0695                     	;# 
   244     0696                     	;# 
   245     0697                     	;# 
   246     0698                     	;# 
   247     0699                     	;# 
   248     069A                     	;# 
   249     069B                     	;# 
   250     069C                     	;# 
   251     069D                     	;# 
   252     069E                     	;# 
   253     069F                     	;# 
   254     0E0F                     	;# 
   255     0E10                     	;# 
   256     0E11                     	;# 
   257     0E12                     	;# 
   258     0E13                     	;# 
   259     0E14                     	;# 
   260     0E15                     	;# 
   261     0E17                     	;# 
   262     0E20                     	;# 
   263     0E21                     	;# 
   264     0E22                     	;# 
   265     0E24                     	;# 
   266     0E25                     	;# 
   267     0E28                     	;# 
   268     0E29                     	;# 
   269     0E2A                     	;# 
   270     0E2B                     	;# 
   271     0E90                     	;# 
   272     0E91                     	;# 
   273     0E92                     	;# 
   274     0E94                     	;# 
   275     0E95                     	;# 
   276     0EA0                     	;# 
   277     0EA1                     	;# 
   278     0EA2                     	;# 
   279     0EA3                     	;# 
   280     0EA4                     	;# 
   281     0EA5                     	;# 
   282     0F0F                     	;# 
   283     0F10                     	;# 
   284     0F11                     	;# 
   285     0F12                     	;# 
   286     0F13                     	;# 
   287     0F14                     	;# 
   288     0F15                     	;# 
   289     0F16                     	;# 
   290     0F17                     	;# 
   291     0F18                     	;# 
   292     0F19                     	;# 
   293     0F1A                     	;# 
   294     0F1B                     	;# 
   295     0F1C                     	;# 
   296     0F1D                     	;# 
   297     0F1E                     	;# 
   298     0F1F                     	;# 
   299     0F20                     	;# 
   300     0F21                     	;# 
   301     0F22                     	;# 
   302     0F23                     	;# 
   303     0F24                     	;# 
   304     0F25                     	;# 
   305     0F26                     	;# 
   306     0F27                     	;# 
   307     0F28                     	;# 
   308     0F29                     	;# 
   309     0F2A                     	;# 
   310     0F2B                     	;# 
   311     0F2C                     	;# 
   312     0F2D                     	;# 
   313     0F9E                     	;# 
   314     0FE4                     	;# 
   315     0FE5                     	;# 
   316     0FE6                     	;# 
   317     0FE7                     	;# 
   318     0FE8                     	;# 
   319     0FE9                     	;# 
   320     0FEA                     	;# 
   321     0FEB                     	;# 
   322     0FED                     	;# 
   323     0FEE                     	;# 
   324     0FEF                     	;# 
   325     0000                     	;# 
   326     0001                     	;# 
   327     0002                     	;# 
   328     0003                     	;# 
   329     0004                     	;# 
   330     0005                     	;# 
   331     0006                     	;# 
   332     0007                     	;# 
   333     0008                     	;# 
   334     0009                     	;# 
   335     000A                     	;# 
   336     000B                     	;# 
   337     000C                     	;# 
   338     000E                     	;# 
   339     0011                     	;# 
   340     0012                     	;# 
   341     0013                     	;# 
   342     0015                     	;# 
   343     0016                     	;# 
   344     0016                     	;# 
   345     0017                     	;# 
   346     0018                     	;# 
   347     0019                     	;# 
   348     001A                     	;# 
   349     001B                     	;# 
   350     001C                     	;# 
   351     008C                     	;# 
   352     008E                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0095                     	;# 
   357     0096                     	;# 
   358     0097                     	;# 
   359     0098                     	;# 
   360     0099                     	;# 
   361     009A                     	;# 
   362     009B                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     010C                     	;# 
   369     010E                     	;# 
   370     0111                     	;# 
   371     0112                     	;# 
   372     0113                     	;# 
   373     0114                     	;# 
   374     0115                     	;# 
   375     0116                     	;# 
   376     0117                     	;# 
   377     0118                     	;# 
   378     0119                     	;# 
   379     011C                     	;# 
   380     018C                     	;# 
   381     018E                     	;# 
   382     0191                     	;# 
   383     0191                     	;# 
   384     0192                     	;# 
   385     0193                     	;# 
   386     0193                     	;# 
   387     0194                     	;# 
   388     0195                     	;# 
   389     0196                     	;# 
   390     0197                     	;# 
   391     0199                     	;# 
   392     0199                     	;# 
   393     0199                     	;# 
   394     019A                     	;# 
   395     019A                     	;# 
   396     019A                     	;# 
   397     019B                     	;# 
   398     019B                     	;# 
   399     019B                     	;# 
   400     019B                     	;# 
   401     019B                     	;# 
   402     019C                     	;# 
   403     019C                     	;# 
   404     019C                     	;# 
   405     019D                     	;# 
   406     019D                     	;# 
   407     019D                     	;# 
   408     019E                     	;# 
   409     019E                     	;# 
   410     019E                     	;# 
   411     019F                     	;# 
   412     019F                     	;# 
   413     019F                     	;# 
   414     019F                     	;# 
   415     019F                     	;# 
   416     020C                     	;# 
   417     020E                     	;# 
   418     0211                     	;# 
   419     0211                     	;# 
   420     0212                     	;# 
   421     0212                     	;# 
   422     0213                     	;# 
   423     0213                     	;# 
   424     0214                     	;# 
   425     0214                     	;# 
   426     0215                     	;# 
   427     0215                     	;# 
   428     0215                     	;# 
   429     0215                     	;# 
   430     0216                     	;# 
   431     0216                     	;# 
   432     0217                     	;# 
   433     0217                     	;# 
   434     028C                     	;# 
   435     028E                     	;# 
   436     0291                     	;# 
   437     0291                     	;# 
   438     0292                     	;# 
   439     0293                     	;# 
   440     0293                     	;# 
   441     0298                     	;# 
   442     0298                     	;# 
   443     0299                     	;# 
   444     029A                     	;# 
   445     029A                     	;# 
   446     029E                     	;# 
   447     030C                     	;# 
   448     030E                     	;# 
   449     038C                     	;# 
   450     038E                     	;# 
   451     0391                     	;# 
   452     0392                     	;# 
   453     0393                     	;# 
   454     0397                     	;# 
   455     0398                     	;# 
   456     0399                     	;# 
   457     0415                     	;# 
   458     0416                     	;# 
   459     0417                     	;# 
   460     041C                     	;# 
   461     041D                     	;# 
   462     041E                     	;# 
   463     0511                     	;# 
   464     0515                     	;# 
   465     0617                     	;# 
   466     0618                     	;# 
   467     0619                     	;# 
   468     0619                     	;# 
   469     061A                     	;# 
   470     061B                     	;# 
   471     061C                     	;# 
   472     061C                     	;# 
   473     0691                     	;# 
   474     0692                     	;# 
   475     0693                     	;# 
   476     0694                     	;# 
   477     0695                     	;# 
   478     0696                     	;# 
   479     0697                     	;# 
   480     0698                     	;# 
   481     0699                     	;# 
   482     069A                     	;# 
   483     069B                     	;# 
   484     069C                     	;# 
   485     069D                     	;# 
   486     069E                     	;# 
   487     069F                     	;# 
   488     0E0F                     	;# 
   489     0E10                     	;# 
   490     0E11                     	;# 
   491     0E12                     	;# 
   492     0E13                     	;# 
   493     0E14                     	;# 
   494     0E15                     	;# 
   495     0E17                     	;# 
   496     0E20                     	;# 
   497     0E21                     	;# 
   498     0E22                     	;# 
   499     0E24                     	;# 
   500     0E25                     	;# 
   501     0E28                     	;# 
   502     0E29                     	;# 
   503     0E2A                     	;# 
   504     0E2B                     	;# 
   505     0E90                     	;# 
   506     0E91                     	;# 
   507     0E92                     	;# 
   508     0E94                     	;# 
   509     0E95                     	;# 
   510     0EA0                     	;# 
   511     0EA1                     	;# 
   512     0EA2                     	;# 
   513     0EA3                     	;# 
   514     0EA4                     	;# 
   515     0EA5                     	;# 
   516     0F0F                     	;# 
   517     0F10                     	;# 
   518     0F11                     	;# 
   519     0F12                     	;# 
   520     0F13                     	;# 
   521     0F14                     	;# 
   522     0F15                     	;# 
   523     0F16                     	;# 
   524     0F17                     	;# 
   525     0F18                     	;# 
   526     0F19                     	;# 
   527     0F1A                     	;# 
   528     0F1B                     	;# 
   529     0F1C                     	;# 
   530     0F1D                     	;# 
   531     0F1E                     	;# 
   532     0F1F                     	;# 
   533     0F20                     	;# 
   534     0F21                     	;# 
   535     0F22                     	;# 
   536     0F23                     	;# 
   537     0F24                     	;# 
   538     0F25                     	;# 
   539     0F26                     	;# 
   540     0F27                     	;# 
   541     0F28                     	;# 
   542     0F29                     	;# 
   543     0F2A                     	;# 
   544     0F2B                     	;# 
   545     0F2C                     	;# 
   546     0F2D                     	;# 
   547     0F9E                     	;# 
   548     0FE4                     	;# 
   549     0FE5                     	;# 
   550     0FE6                     	;# 
   551     0FE7                     	;# 
   552     0FE8                     	;# 
   553     0FE9                     	;# 
   554     0FEA                     	;# 
   555     0FEB                     	;# 
   556     0FED                     	;# 
   557     0FEE                     	;# 
   558     0FEF                     	;# 
   559     000E                     _PORTC	set	14
   560     000C                     _PORTA	set	12
   561     008D                     _RCIF	set	141
   562     008C                     _TXIF	set	140
   563     008E                     _TRISC	set	142
   564     008C                     _TRISA	set	140
   565     0099                     _OSCCON	set	153
   566     0119                     _DAC1CON1	set	281
   567     0118                     _DAC1CON0	set	280
   568     0199                     _RCREG	set	409
   569     019A                     _TXREG	set	410
   570     019D                     _RCSTA	set	413
   571     019E                     _TXSTA	set	414
   572     019B                     _SPBRG	set	411
   573     018E                     _ANSELC	set	398
   574     018C                     _ANSELA	set	396
   575     019B                     _SP1BRGL	set	411
   576     019C                     _SP1BRGH	set	412
   577     019D                     _RC1STA	set	413
   578     019E                     _TX1STA	set	414
   579     0CFB                     _BRG16	set	3323
   580     0E24                     _RXPPS	set	3620
   581     0E90                     _RA0PPS	set	3728
   582                           
   583                           	psect	stringtext1
   584     0800                     __pstringtext1:
   585     0800                     STR_38:
   586     0800  3456               	retlw	86	;'V'
   587     0801  3445               	retlw	69	;'E'
   588     0802  3452               	retlw	82	;'R'
   589     0803  3453               	retlw	83	;'S'
   590     0804  3449               	retlw	73	;'I'
   591     0805  344F               	retlw	79	;'O'
   592     0806  344E               	retlw	78	;'N'
   593     0807  3420               	retlw	32	;' '
   594     0808  3431               	retlw	49	;'1'
   595     0809  3430               	retlw	48	;'0'
   596     080A  3400               	retlw	0
   597                           
   598                           	psect	stringtext2
   599     080B                     __pstringtext2:
   600     080B                     STR_36:
   601     080B  345F               	retlw	95	;'_'
   602     080C  345F               	retlw	95	;'_'
   603     080D  345F               	retlw	95	;'_'
   604     080E  3450               	retlw	80	;'P'
   605     080F  345F               	retlw	95	;'_'
   606     0810  344F               	retlw	79	;'O'
   607     0811  344B               	retlw	75	;'K'
   608     0812  340A               	retlw	10
   609     0813  3400               	retlw	0
   610                           
   611                           	psect	stringtext3
   612     0814                     __pstringtext3:
   613     0814                     STR_15:
   614     0814  3453               	retlw	83	;'S'
   615     0815  3441               	retlw	65	;'A'
   616     0816  3431               	retlw	49	;'1'
   617     0817  3420               	retlw	32	;' '
   618     0818  344F               	retlw	79	;'O'
   619     0819  344B               	retlw	75	;'K'
   620     081A  340A               	retlw	10
   621     081B  3400               	retlw	0
   622                           
   623                           	psect	stringtext4
   624     081C                     __pstringtext4:
   625     081C                     STR_22:
   626     081C  3453               	retlw	83	;'S'
   627     081D  3446               	retlw	70	;'F'
   628     081E  3431               	retlw	49	;'1'
   629     081F  3420               	retlw	32	;' '
   630     0820  344F               	retlw	79	;'O'
   631     0821  344B               	retlw	75	;'K'
   632     0822  340A               	retlw	10
   633     0823  3400               	retlw	0
   634                           
   635                           	psect	stringtext5
   636     0824                     __pstringtext5:
   637     0824                     STR_17:
   638     0824  3453               	retlw	83	;'S'
   639     0825  3441               	retlw	65	;'A'
   640     0826  3432               	retlw	50	;'2'
   641     0827  3420               	retlw	32	;' '
   642     0828  344F               	retlw	79	;'O'
   643     0829  344B               	retlw	75	;'K'
   644     082A  340A               	retlw	10
   645     082B  3400               	retlw	0
   646                           
   647                           	psect	stringtext6
   648     082C                     __pstringtext6:
   649     082C                     STR_25:
   650     082C  3453               	retlw	83	;'S'
   651     082D  3446               	retlw	70	;'F'
   652     082E  3432               	retlw	50	;'2'
   653     082F  3420               	retlw	32	;' '
   654     0830  344F               	retlw	79	;'O'
   655     0831  344B               	retlw	75	;'K'
   656     0832  340A               	retlw	10
   657     0833  3400               	retlw	0
   658                           
   659                           	psect	stringtext7
   660     0834                     __pstringtext7:
   661     0834                     STR_19:
   662     0834  3453               	retlw	83	;'S'
   663     0835  3441               	retlw	65	;'A'
   664     0836  3433               	retlw	51	;'3'
   665     0837  3420               	retlw	32	;' '
   666     0838  344F               	retlw	79	;'O'
   667     0839  344B               	retlw	75	;'K'
   668     083A  340A               	retlw	10
   669     083B  3400               	retlw	0
   670                           
   671                           	psect	stringtext8
   672     083C                     __pstringtext8:
   673     083C                     STR_28:
   674     083C  3453               	retlw	83	;'S'
   675     083D  3446               	retlw	70	;'F'
   676     083E  3433               	retlw	51	;'3'
   677     083F  3420               	retlw	32	;' '
   678     0840  344F               	retlw	79	;'O'
   679     0841  344B               	retlw	75	;'K'
   680     0842  340A               	retlw	10
   681     0843  3400               	retlw	0
   682                           
   683                           	psect	stringtext9
   684     0844                     __pstringtext9:
   685     0844                     STR_39:
   686     0844  3428               	retlw	40	;'('
   687     0845  346E               	retlw	110	;'n'
   688     0846  3475               	retlw	117	;'u'
   689     0847  346C               	retlw	108	;'l'
   690     0848  346C               	retlw	108	;'l'
   691     0849  3429               	retlw	41	;')'
   692     084A  3400               	retlw	0
   693                           
   694                           	psect	stringtext10
   695     084B                     __pstringtext10:
   696     084B                     STR_1:
   697     084B  3425               	retlw	37	;'%'
   698     084C  3473               	retlw	115	;'s'
   699     084D  340A               	retlw	10
   700     084E  3400               	retlw	0
   701                           
   702                           	psect	stringtext11
   703     084F                     __pstringtext11:
   704     084F                     STR_3:
   705     084F  3453               	retlw	83	;'S'
   706     0850  3441               	retlw	65	;'A'
   707     0851  3431               	retlw	49	;'1'
   708     0852  3400               	retlw	0
   709                           
   710                           	psect	stringtext12
   711     0853                     __pstringtext12:
   712     0853                     STR_6:
   713     0853  3453               	retlw	83	;'S'
   714     0854  3446               	retlw	70	;'F'
   715     0855  3431               	retlw	49	;'1'
   716     0856  3400               	retlw	0
   717                           
   718                           	psect	stringtext13
   719     0857                     __pstringtext13:
   720     0857                     STR_4:
   721     0857  3453               	retlw	83	;'S'
   722     0858  3441               	retlw	65	;'A'
   723     0859  3432               	retlw	50	;'2'
   724     085A  3400               	retlw	0
   725                           
   726                           	psect	stringtext14
   727     085B                     __pstringtext14:
   728     085B                     STR_7:
   729     085B  3453               	retlw	83	;'S'
   730     085C  3446               	retlw	70	;'F'
   731     085D  3432               	retlw	50	;'2'
   732     085E  3400               	retlw	0
   733                           
   734                           	psect	stringtext15
   735     085F                     __pstringtext15:
   736     085F                     STR_5:
   737     085F  3453               	retlw	83	;'S'
   738     0860  3441               	retlw	65	;'A'
   739     0861  3433               	retlw	51	;'3'
   740     0862  3400               	retlw	0
   741                           
   742                           	psect	stringtext16
   743     0863                     __pstringtext16:
   744     0863                     STR_8:
   745     0863  3453               	retlw	83	;'S'
   746     0864  3446               	retlw	70	;'F'
   747     0865  3433               	retlw	51	;'3'
   748     0866  3400               	retlw	0
   749                           
   750                           	psect	stringtext17
   751     0867                     __pstringtext17:
   752     0867                     STR_10:
   753     0867  344C               	retlw	76	;'L'
   754     0868  3450               	retlw	80	;'P'
   755     0869  3445               	retlw	69	;'E'
   756     086A  3400               	retlw	0
   757                           
   758                           	psect	stringtext18
   759     086B                     __pstringtext18:
   760     086B                     STR_9:
   761     086B  344C               	retlw	76	;'L'
   762     086C  3445               	retlw	69	;'E'
   763     086D  3450               	retlw	80	;'P'
   764     086E  3400               	retlw	0
   765                           
   766                           	psect	stringtext19
   767     086F                     __pstringtext19:
   768     086F                     STR_11:
   769     086F  344C               	retlw	76	;'L'
   770     0870  3444               	retlw	68	;'D'
   771     0871  3452               	retlw	82	;'R'
   772     0872  3400               	retlw	0
   773                           
   774                           	psect	stringtext20
   775     0873                     __pstringtext20:
   776     0873                     STR_12:
   777     0873  3456               	retlw	86	;'V'
   778     0874  3445               	retlw	69	;'E'
   779     0875  3452               	retlw	82	;'R'
   780     0876  3400               	retlw	0
   781                           
   782                           	psect	stringtext21
   783     0877                     __pstringtext21:
   784     0877                     STR_2:
   785     0877  344C               	retlw	76	;'L'
   786     0878  3444               	retlw	68	;'D'
   787     0879  3453               	retlw	83	;'S'
   788     087A  3400               	retlw	0
   789                           
   790                           	psect	stringtext22
   791     087B                     __pstringtext22:
   792     087B                     STR_13:
   793     087B  342F               	retlw	47	;'/'
   794     087C  3400               	retlw	0
   795                           
   796                           	psect	stringtext23
   797     0000                     __pstringtext23:
   798     087B                     
   799                           	psect	cinit
   800     07FB                     start_initialization:	
   801                           ; #config settings
   802                           
   803     07FB                     __initialization:
   804                           
   805                           ; Clear objects allocated to BANK3
   806     07FB  0023               	movlb	3	; select bank3
   807     07FC  01AD               	clrf	__pbssBANK3& (0+127)
   808     07FD                     end_of_initialization:	
   809                           ;End of C runtime variable initialization code
   810                           
   811     07FD                     __end_of__initialization:
   812     07FD  0020               	movlb	0
   813     07FE  3183  2BBC         	ljmp	_main	;jump to C main() function
   814                           
   815                           	psect	bssBANK3
   816     01AD                     __pbssBANK3:
   817     01AD                     strtok@sp:
   818     01AD                     	ds	1
   819                           
   820                           	psect	cstackBANK3
   821     01A0                     __pcstackBANK3:
   822     01A0                     main@i_151:
   823                           
   824                           ; 2 bytes @ 0x0
   825     01A0                     	ds	2
   826     01A2                     main@i_153:
   827                           
   828                           ; 2 bytes @ 0x2
   829     01A2                     	ds	2
   830     01A4                     main@i_161:
   831                           
   832                           ; 2 bytes @ 0x4
   833     01A4                     	ds	2
   834     01A6                     main@i_163:
   835                           
   836                           ; 2 bytes @ 0x6
   837     01A6                     	ds	2
   838     01A8                     main@rcmd:
   839                           
   840                           ; 4 bytes @ 0x8
   841     01A8                     	ds	4
   842     01AC                     main@ptr:
   843                           
   844                           ; 1 bytes @ 0xC
   845     01AC                     	ds	1
   846                           
   847                           	psect	cstackBANK2
   848     0120                     __pcstackBANK2:
   849     0120                     main@ap3_dat:
   850                           
   851                           ; 40 bytes @ 0x0
   852     0120                     	ds	40
   853     0148                     main@tmp:
   854                           
   855                           ; 40 bytes @ 0x28
   856     0148                     	ds	40
   857                           
   858                           	psect	cstackBANK1
   859     00A0                     __pcstackBANK1:
   860     00A0                     main@ap1_dat:
   861                           
   862                           ; 40 bytes @ 0x0
   863     00A0                     	ds	40
   864     00C8                     main@ap2_dat:
   865                           
   866                           ; 40 bytes @ 0x28
   867     00C8                     	ds	40
   868                           
   869                           	psect	cstackCOMMON
   870     0070                     __pcstackCOMMON:
   871     0070                     ?_isdigit:
   872     0070                     ?_gets:	
   873                           ; 1 bit 
   874                           
   875     0070                     ??_isdigit:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_PICinit:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ??_PICinit:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?_main:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_putch:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ??_putch:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_getch:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ??_getch:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ?_getche:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_strcmp:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_strchr:	
   906                           ; 2 bytes @ 0x0
   907                           
   908     0070                     ?___wmul:	
   909                           ; 2 bytes @ 0x0
   910                           
   911     0070                     ?___lldiv:	
   912                           ; 2 bytes @ 0x0
   913                           
   914     0070                     putch@byte:	
   915                           ; 4 bytes @ 0x0
   916                           
   917     0070                     _isdigit$543:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ___wmul@multiplier:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     strcmp@s2:	
   924                           ; 2 bytes @ 0x0
   925                           
   926     0070                     strchr@ptr:	
   927                           ; 2 bytes @ 0x0
   928                           
   929     0070                     ___lldiv@divisor:	
   930                           ; 2 bytes @ 0x0
   931                           
   932                           
   933                           ; 4 bytes @ 0x0
   934     0070                     	ds	1
   935     0071                     ??_getche:
   936     0071                     ?_printf:	
   937                           ; 1 bytes @ 0x1
   938                           
   939     0071                     getche@c:	
   940                           ; 2 bytes @ 0x1
   941                           
   942     0071                     isdigit@c:	
   943                           ; 1 bytes @ 0x1
   944                           
   945     0071                     printf@f:	
   946                           ; 1 bytes @ 0x1
   947                           
   948                           
   949                           ; 2 bytes @ 0x1
   950     0071                     	ds	1
   951     0072                     ??_strcmp:
   952     0072                     ?_cgets:	
   953                           ; 1 bytes @ 0x2
   954                           
   955     0072                     ___wmul@multiplicand:	
   956                           ; 1 bytes @ 0x2
   957                           
   958     0072                     strchr@chr:	
   959                           ; 2 bytes @ 0x2
   960                           
   961                           
   962                           ; 2 bytes @ 0x2
   963     0072                     	ds	1
   964     0073                     strcmp@r:
   965                           
   966                           ; 1 bytes @ 0x3
   967     0073                     	ds	1
   968     0074                     ??_cgets:
   969     0074                     ??_strchr:	
   970                           ; 1 bytes @ 0x4
   971                           
   972     0074                     ??___wmul:	
   973                           ; 1 bytes @ 0x4
   974                           
   975     0074                     strcmp@s1:	
   976                           ; 1 bytes @ 0x4
   977                           
   978     0074                     ___wmul@product:	
   979                           ; 1 bytes @ 0x4
   980                           
   981     0074                     ___lldiv@dividend:	
   982                           ; 2 bytes @ 0x4
   983                           
   984                           
   985                           ; 4 bytes @ 0x4
   986     0074                     	ds	1
   987     0075                     ??_printf:
   988                           
   989                           ; 1 bytes @ 0x5
   990     0075                     	ds	1
   991     0076                     ?_atoi:
   992     0076                     cgets@c:	
   993                           ; 2 bytes @ 0x6
   994                           
   995                           
   996                           ; 2 bytes @ 0x6
   997     0076                     	ds	1
   998     0077                     ?_strspn:
   999     0077                     ?_strcspn:	
  1000                           ; 2 bytes @ 0x7
  1001                           
  1002     0077                     printf@ap:	
  1003                           ; 2 bytes @ 0x7
  1004                           
  1005     0077                     strcspn@s2:	
  1006                           ; 1 bytes @ 0x7
  1007                           
  1008     0077                     strspn@s2:	
  1009                           ; 2 bytes @ 0x7
  1010                           
  1011                           
  1012                           ; 2 bytes @ 0x7
  1013     0077                     	ds	1
  1014     0078                     ??_atoi:
  1015     0078                     ??___lldiv:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018     0078                     printf@c:	
  1019                           ; 1 bytes @ 0x8
  1020                           
  1021     0078                     cgets@s:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x8
  1026     0078                     	ds	1
  1027     0079                     ??_strspn:
  1028     0079                     ??_strcspn:	
  1029                           ; 1 bytes @ 0x9
  1030                           
  1031     0079                     cgets@s1:	
  1032                           ; 1 bytes @ 0x9
  1033                           
  1034     0079                     printf@cp:	
  1035                           ; 1 bytes @ 0x9
  1036                           
  1037     0079                     ___lldiv@quotient:	
  1038                           ; 2 bytes @ 0x9
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x9
  1042     0079                     	ds	1
  1043     007A                     ??_gets:
  1044     007A                     gets@s:	
  1045                           ; 1 bytes @ 0xA
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0xA
  1049     007A                     	ds	1
  1050     007B                     strcspn@i:
  1051     007B                     strspn@i:	
  1052                           ; 2 bytes @ 0xB
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0xB
  1056     007B                     	ds	2
  1057     007D                     ___lldiv@counter:
  1058     007D                     strcspn@s1:	
  1059                           ; 1 bytes @ 0xD
  1060                           
  1061     007D                     strspn@s1:	
  1062                           ; 1 bytes @ 0xD
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0xD
  1066     007D                     	ds	1
  1067                           
  1068                           	psect	cstackBANK0
  1069     0020                     __pcstackBANK0:
  1070     0020                     ?_strtok:
  1071     0020                     ?_serial_init:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074     0020                     atoi@sign:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077     0020                     strtok@s2:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080     0020                     serial_init@BR:	
  1081                           ; 2 bytes @ 0x0
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x0
  1085     0020                     	ds	1
  1086     0021                     atoi@a:
  1087                           
  1088                           ; 2 bytes @ 0x1
  1089     0021                     	ds	1
  1090     0022                     ??_strtok:
  1091                           
  1092                           ; 1 bytes @ 0x2
  1093     0022                     	ds	1
  1094     0023                     atoi@s:
  1095                           
  1096                           ; 1 bytes @ 0x3
  1097     0023                     	ds	1
  1098     0024                     ??_serial_init:
  1099     0024                     strtok@s1:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0x4
  1104     0024                     	ds	4
  1105     0028                     serial_init@X:
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108     0028                     	ds	2
  1109     002A                     ??_main:
  1110                           
  1111                           ; 1 bytes @ 0xA
  1112     002A                     	ds	1
  1113     002B                     main@dat0:
  1114                           
  1115                           ; 40 bytes @ 0xB
  1116     002B                     	ds	40
  1117     0053                     main@fp3_amp:
  1118                           
  1119                           ; 2 bytes @ 0x33
  1120     0053                     	ds	2
  1121     0055                     main@fp1_time:
  1122                           
  1123                           ; 2 bytes @ 0x35
  1124     0055                     	ds	2
  1125     0057                     main@fp2_time:
  1126                           
  1127                           ; 2 bytes @ 0x37
  1128     0057                     	ds	2
  1129     0059                     main@fp2_amp:
  1130                           
  1131                           ; 2 bytes @ 0x39
  1132     0059                     	ds	2
  1133     005B                     main@fp3_time:
  1134                           
  1135                           ; 2 bytes @ 0x3B
  1136     005B                     	ds	2
  1137     005D                     main@i_155:
  1138                           
  1139                           ; 2 bytes @ 0x3D
  1140     005D                     	ds	2
  1141     005F                     main@i_157:
  1142                           
  1143                           ; 2 bytes @ 0x3F
  1144     005F                     	ds	2
  1145     0061                     main@i_159:
  1146                           
  1147                           ; 2 bytes @ 0x41
  1148     0061                     	ds	2
  1149     0063                     main@fp1_amp:
  1150                           
  1151                           ; 2 bytes @ 0x43
  1152     0063                     	ds	2
  1153     0065                     main@k:
  1154                           
  1155                           ; 2 bytes @ 0x45
  1156     0065                     	ds	2
  1157     0067                     main@i:
  1158                           
  1159                           ; 2 bytes @ 0x47
  1160     0067                     	ds	2
  1161     0069                     main@i_131:
  1162                           
  1163                           ; 2 bytes @ 0x49
  1164     0069                     	ds	2
  1165     006B                     main@i_134:
  1166                           
  1167                           ; 2 bytes @ 0x4B
  1168     006B                     	ds	2
  1169     006D                     main@i_149:
  1170                           
  1171                           ; 2 bytes @ 0x4D
  1172     006D                     	ds	2
  1173     006F                     main@cmd:
  1174                           
  1175                           ; 1 bytes @ 0x4F
  1176     006F                     	ds	1
  1177                           
  1178                           	psect	maintext
  1179     03BC                     __pmaintext:	
  1180 ;;
  1181 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1182 ;;
  1183 ;; *************** function _main *****************
  1184 ;; Defined at:
  1185 ;;		line 87 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  i               2   65[BANK0 ] int 
  1190 ;;  i               2   63[BANK0 ] int 
  1191 ;;  i               2   61[BANK0 ] int 
  1192 ;;  i               2    2[BANK3 ] int 
  1193 ;;  i               2    0[BANK3 ] int 
  1194 ;;  i               2   77[BANK0 ] int 
  1195 ;;  i               2    6[BANK3 ] int 
  1196 ;;  i               2    4[BANK3 ] int 
  1197 ;;  k               2   69[BANK0 ] int 
  1198 ;;  i               2   75[BANK0 ] int 
  1199 ;;  i               2   73[BANK0 ] int 
  1200 ;;  i               2   71[BANK0 ] int 
  1201 ;;  cmd             1   79[BANK0 ] enum E4261
  1202 ;;  tmp            40   40[BANK2 ] unsigned char [40]
  1203 ;;  ap3_dat        40    0[BANK2 ] int [20]
  1204 ;;  ap2_dat        40   40[BANK1 ] int [20]
  1205 ;;  ap1_dat        40    0[BANK1 ] int [20]
  1206 ;;  dat0           40   11[BANK0 ] int [20]
  1207 ;;  rcmd            4    8[BANK3 ] unsigned char [4]
  1208 ;;  fp1_amp         2   67[BANK0 ] int 
  1209 ;;  fp3_time        2   59[BANK0 ] int 
  1210 ;;  fp2_amp         2   57[BANK0 ] int 
  1211 ;;  fp2_time        2   55[BANK0 ] int 
  1212 ;;  fp1_time        2   53[BANK0 ] int 
  1213 ;;  fp3_amp         2   51[BANK0 ] int 
  1214 ;;  intvl3          2    0        int 
  1215 ;;  intvl2          2    0        int 
  1216 ;;  intvl1          2    0        int 
  1217 ;;  ptr             1   12[BANK3 ] PTR unsigned char 
  1218 ;;		 -> NULL(0), main@tmp(40), 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : B1F/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1229 ;;      Locals:         0      69      80      80      13       0       0       0       0       0       0       0       
      +0       0
  1230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1231 ;;      Totals:         0      70      80      80      13       0       0       0       0       0       0       0       
      +0       0
  1232 ;;Total ram usage:      243 bytes
  1233 ;; Hardware stack levels required when called: 4
  1234 ;; This function calls:
  1235 ;;		_PICinit
  1236 ;;		_atoi
  1237 ;;		_gets
  1238 ;;		_printf
  1239 ;;		_serial_init
  1240 ;;		_strcmp
  1241 ;;		_strtok
  1242 ;; This function is called by:
  1243 ;;		Startup code after reset
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247     03BC                     _main:	
  1248                           ;psect for function _main
  1249                           
  1250     03BC                     l1747:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1253                           
  1254                           
  1255                           ;main.c: 88: char tmp[40];;main.c: 89: char rcmd[4];;main.c: 90: int dat0[20];;main.c: 9
      +                          1: int ap1_dat[20];;main.c: 92: int ap2_dat[20];;main.c: 93: int ap3_dat[20];;main.c: 94
      +                          : int fp1_time;;main.c: 95: int fp1_amp;;main.c: 96: int fp2_time;;main.c: 97: int fp2_a
      +                          mp;;main.c: 98: int fp3_time;;main.c: 99: int fp3_amp;;main.c: 100: int intvl1;;main.c: 
      +                          101: int intvl2;;main.c: 102: int intvl3;;main.c: 104: char *ptr;;main.c: 106: PICinit()
      +                          ;
  1256     03BC  3180  20A7  3183   	fcall	_PICinit
  1257     03BF                     l1749:
  1258                           
  1259                           ;main.c: 109: RA0PPS = 0x14;
  1260     03BF  3014               	movlw	20
  1261     03C0  003D               	movlb	29	; select bank29
  1262     03C1  0090               	movwf	16	;volatile
  1263     03C2                     l1751:
  1264                           
  1265                           ;main.c: 110: RXPPS = 0x01;
  1266     03C2  3001               	movlw	1
  1267     03C3  003C               	movlb	28	; select bank28
  1268     03C4  00A4               	movwf	36	;volatile
  1269                           
  1270                           ;main.c: 112: serial_init(9600);
  1271     03C5  3000               	movlw	0
  1272     03C6  0020               	movlb	0	; select bank0
  1273     03C7  00A3               	movwf	serial_init@BR+3
  1274     03C8  3000               	movlw	0
  1275     03C9  00A2               	movwf	serial_init@BR+2
  1276     03CA  3025               	movlw	37
  1277     03CB  00A1               	movwf	serial_init@BR+1
  1278     03CC  3080               	movlw	128
  1279     03CD  00A0               	movwf	serial_init@BR
  1280     03CE  3181  2195  3183   	fcall	_serial_init
  1281     03D1                     l1753:
  1282                           
  1283                           ;main.c: 116: rcmd[0] = 'Q';
  1284     03D1  3051               	movlw	81
  1285     03D2  0023               	movlb	3	; select bank3
  1286     03D3  00A8               	movwf	main@rcmd^(0+384)
  1287     03D4                     l1755:
  1288                           
  1289                           ;main.c: 117: rcmd[1] = 'Q';
  1290     03D4  3051               	movlw	81
  1291     03D5  00A9               	movwf	(main@rcmd^(0+384)+1)
  1292     03D6                     l1757:
  1293                           
  1294                           ;main.c: 118: rcmd[2] = 'Q';
  1295     03D6  3051               	movlw	81
  1296     03D7  00AA               	movwf	(main@rcmd^(0+384)+2)
  1297     03D8                     l1759:
  1298                           
  1299                           ;main.c: 119: rcmd[3] = '\0';
  1300     03D8  01AB               	clrf	(main@rcmd^(0+384)+3)
  1301     03D9                     l1761:
  1302                           
  1303                           ;main.c: 121: tmp[0] = 'Q';
  1304     03D9  3051               	movlw	81
  1305     03DA  0022               	movlb	2	; select bank2
  1306     03DB  00C8               	movwf	main@tmp^(0+256)
  1307     03DC                     l1763:
  1308                           
  1309                           ;main.c: 122: tmp[1] = 'Q';
  1310     03DC  3051               	movlw	81
  1311     03DD  00C9               	movwf	(main@tmp^(0+256)+1)
  1312     03DE                     l1765:
  1313                           
  1314                           ;main.c: 123: tmp[2] = 'Q';
  1315     03DE  3051               	movlw	81
  1316     03DF  00CA               	movwf	(main@tmp^(0+256)+2)
  1317     03E0                     l1767:
  1318                           
  1319                           ;main.c: 124: tmp[3] = '\0';
  1320     03E0  01CB               	clrf	(main@tmp^(0+256)+3)
  1321     03E1                     l1769:
  1322                           
  1323                           ;main.c: 126: gets(tmp);
  1324     03E1  3048               	movlw	(low (main@tmp| (0+256)))& (0+255)
  1325     03E2  3180  2085  3183   	fcall	_gets
  1326     03E5                     l1771:
  1327                           
  1328                           ;main.c: 127: printf("%s\n", tmp);
  1329     03E5  304B               	movlw	low (STR_1| (0+32768))
  1330     03E6  00F1               	movwf	printf@f
  1331     03E7  3088               	movlw	high (STR_1| (0+32768))
  1332     03E8  00F2               	movwf	printf@f+1
  1333     03E9  3048               	movlw	low main@tmp
  1334     03EA  00F3               	movwf	?_printf+2
  1335     03EB  3001               	movlw	high main@tmp
  1336     03EC  00F4               	movwf	?_printf+3
  1337     03ED  3182  22D6  3183   	fcall	_printf
  1338     03F0                     l1773:
  1339                           
  1340                           ;main.c: 129: rcmd[0] = tmp[1];
  1341     03F0  0022               	movlb	2	; select bank2
  1342     03F1  0849               	movf	(main@tmp^(0+256)+1),w
  1343     03F2  0023               	movlb	3	; select bank3
  1344     03F3  00A8               	movwf	main@rcmd^(0+384)
  1345     03F4                     l1775:
  1346                           
  1347                           ;main.c: 130: rcmd[1] = tmp[2];
  1348     03F4  0022               	movlb	2	; select bank2
  1349     03F5  084A               	movf	(main@tmp^(0+256)+2),w
  1350     03F6  0023               	movlb	3	; select bank3
  1351     03F7  00A9               	movwf	(main@rcmd^(0+384)+1)
  1352     03F8                     l1777:
  1353                           
  1354                           ;main.c: 131: rcmd[2] = tmp[3];
  1355     03F8  0022               	movlb	2	; select bank2
  1356     03F9  084B               	movf	(main@tmp^(0+256)+3),w
  1357     03FA  0023               	movlb	3	; select bank3
  1358     03FB  00AA               	movwf	(main@rcmd^(0+384)+2)
  1359     03FC                     l1779:
  1360                           
  1361                           ;main.c: 132: rcmd[3] = '\0';
  1362     03FC  01AB               	clrf	(main@rcmd^(0+384)+3)
  1363     03FD                     l1781:
  1364                           
  1365                           ;main.c: 135: enum command cmd;;main.c: 137: cmd = VER;
  1366     03FD  300A               	movlw	10
  1367     03FE  0020               	movlb	0	; select bank0
  1368     03FF  00EF               	movwf	main@cmd
  1369     0400                     l1783:
  1370                           
  1371                           ;main.c: 139: if(strcmp(rcmd,"LDS") == 0) {
  1372     0400  3077               	movlw	low (STR_2| (0+32768))
  1373     0401  00F0               	movwf	strcmp@s2
  1374     0402  3088               	movlw	high (STR_2| (0+32768))
  1375     0403  00F1               	movwf	strcmp@s2+1
  1376     0404  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1377     0405  3181  2108  3183   	fcall	_strcmp
  1378     0408  0870               	movf	?_strcmp,w
  1379     0409  0471               	iorwf	?_strcmp+1,w
  1380     040A  1D03               	btfss	3,2
  1381     040B  2C0D               	goto	u1211
  1382     040C  2C0E               	goto	u1210
  1383     040D                     u1211:
  1384     040D  2C12               	goto	l1787
  1385     040E                     u1210:
  1386     040E                     l1785:
  1387                           
  1388                           ;main.c: 140: cmd = LDS;
  1389     040E  3007               	movlw	7
  1390     040F  0020               	movlb	0	; select bank0
  1391     0410  00EF               	movwf	main@cmd
  1392                           
  1393                           ;main.c: 141: }else if(strcmp(rcmd,"SA1") == 0){
  1394     0411  2CC5               	goto	l1827
  1395     0412                     l1787:
  1396     0412  304F               	movlw	low (STR_3| (0+32768))
  1397     0413  00F0               	movwf	strcmp@s2
  1398     0414  3088               	movlw	high (STR_3| (0+32768))
  1399     0415  00F1               	movwf	strcmp@s2+1
  1400     0416  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1401     0417  3181  2108  3183   	fcall	_strcmp
  1402     041A  0870               	movf	?_strcmp,w
  1403     041B  0471               	iorwf	?_strcmp+1,w
  1404     041C  1D03               	btfss	3,2
  1405     041D  2C1F               	goto	u1221
  1406     041E  2C20               	goto	u1220
  1407     041F                     u1221:
  1408     041F  2C23               	goto	l1791
  1409     0420                     u1220:
  1410     0420                     l1789:
  1411                           
  1412                           ;main.c: 142: cmd = SA1;
  1413     0420  0020               	movlb	0	; select bank0
  1414     0421  01EF               	clrf	main@cmd
  1415                           
  1416                           ;main.c: 143: }else if(strcmp(rcmd,"SA2") == 0){
  1417     0422  2CC5               	goto	l1827
  1418     0423                     l1791:
  1419     0423  3057               	movlw	low (STR_4| (0+32768))
  1420     0424  00F0               	movwf	strcmp@s2
  1421     0425  3088               	movlw	high (STR_4| (0+32768))
  1422     0426  00F1               	movwf	strcmp@s2+1
  1423     0427  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1424     0428  3181  2108  3183   	fcall	_strcmp
  1425     042B  0870               	movf	?_strcmp,w
  1426     042C  0471               	iorwf	?_strcmp+1,w
  1427     042D  1D03               	btfss	3,2
  1428     042E  2C30               	goto	u1231
  1429     042F  2C31               	goto	u1230
  1430     0430                     u1231:
  1431     0430  2C35               	goto	l1795
  1432     0431                     u1230:
  1433     0431                     l1793:
  1434                           
  1435                           ;main.c: 144: cmd = SA2;
  1436     0431  0020               	movlb	0	; select bank0
  1437     0432  01EF               	clrf	main@cmd
  1438     0433  0AEF               	incf	main@cmd,f
  1439                           
  1440                           ;main.c: 145: }else if(strcmp(rcmd,"SA3") == 0){
  1441     0434  2CC5               	goto	l1827
  1442     0435                     l1795:
  1443     0435  305F               	movlw	low (STR_5| (0+32768))
  1444     0436  00F0               	movwf	strcmp@s2
  1445     0437  3088               	movlw	high (STR_5| (0+32768))
  1446     0438  00F1               	movwf	strcmp@s2+1
  1447     0439  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1448     043A  3181  2108  3183   	fcall	_strcmp
  1449     043D  0870               	movf	?_strcmp,w
  1450     043E  0471               	iorwf	?_strcmp+1,w
  1451     043F  1D03               	btfss	3,2
  1452     0440  2C42               	goto	u1241
  1453     0441  2C43               	goto	u1240
  1454     0442                     u1241:
  1455     0442  2C47               	goto	l1799
  1456     0443                     u1240:
  1457     0443                     l1797:
  1458                           
  1459                           ;main.c: 146: cmd = SA3;
  1460     0443  3002               	movlw	2
  1461     0444  0020               	movlb	0	; select bank0
  1462     0445  00EF               	movwf	main@cmd
  1463                           
  1464                           ;main.c: 147: }else if(strcmp(rcmd,"SF1") == 0){
  1465     0446  2CC5               	goto	l1827
  1466     0447                     l1799:
  1467     0447  3053               	movlw	low (STR_6| (0+32768))
  1468     0448  00F0               	movwf	strcmp@s2
  1469     0449  3088               	movlw	high (STR_6| (0+32768))
  1470     044A  00F1               	movwf	strcmp@s2+1
  1471     044B  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1472     044C  3181  2108  3183   	fcall	_strcmp
  1473     044F  0870               	movf	?_strcmp,w
  1474     0450  0471               	iorwf	?_strcmp+1,w
  1475     0451  1D03               	btfss	3,2
  1476     0452  2C54               	goto	u1251
  1477     0453  2C55               	goto	u1250
  1478     0454                     u1251:
  1479     0454  2C59               	goto	l1803
  1480     0455                     u1250:
  1481     0455                     l1801:
  1482                           
  1483                           ;main.c: 148: cmd = SF1;
  1484     0455  3003               	movlw	3
  1485     0456  0020               	movlb	0	; select bank0
  1486     0457  00EF               	movwf	main@cmd
  1487                           
  1488                           ;main.c: 149: }else if(strcmp(rcmd,"SF2") == 0){
  1489     0458  2CC5               	goto	l1827
  1490     0459                     l1803:
  1491     0459  305B               	movlw	low (STR_7| (0+32768))
  1492     045A  00F0               	movwf	strcmp@s2
  1493     045B  3088               	movlw	high (STR_7| (0+32768))
  1494     045C  00F1               	movwf	strcmp@s2+1
  1495     045D  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1496     045E  3181  2108  3183   	fcall	_strcmp
  1497     0461  0870               	movf	?_strcmp,w
  1498     0462  0471               	iorwf	?_strcmp+1,w
  1499     0463  1D03               	btfss	3,2
  1500     0464  2C66               	goto	u1261
  1501     0465  2C67               	goto	u1260
  1502     0466                     u1261:
  1503     0466  2C6B               	goto	l1807
  1504     0467                     u1260:
  1505     0467                     l1805:
  1506                           
  1507                           ;main.c: 150: cmd = SF2;
  1508     0467  3004               	movlw	4
  1509     0468  0020               	movlb	0	; select bank0
  1510     0469  00EF               	movwf	main@cmd
  1511                           
  1512                           ;main.c: 151: }else if(strcmp(rcmd,"SF3") == 0){
  1513     046A  2CC5               	goto	l1827
  1514     046B                     l1807:
  1515     046B  3063               	movlw	low (STR_8| (0+32768))
  1516     046C  00F0               	movwf	strcmp@s2
  1517     046D  3088               	movlw	high (STR_8| (0+32768))
  1518     046E  00F1               	movwf	strcmp@s2+1
  1519     046F  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1520     0470  3181  2108  3183   	fcall	_strcmp
  1521     0473  0870               	movf	?_strcmp,w
  1522     0474  0471               	iorwf	?_strcmp+1,w
  1523     0475  1D03               	btfss	3,2
  1524     0476  2C78               	goto	u1271
  1525     0477  2C79               	goto	u1270
  1526     0478                     u1271:
  1527     0478  2C7D               	goto	l1811
  1528     0479                     u1270:
  1529     0479                     l1809:
  1530                           
  1531                           ;main.c: 152: cmd = SF3;
  1532     0479  3005               	movlw	5
  1533     047A  0020               	movlb	0	; select bank0
  1534     047B  00EF               	movwf	main@cmd
  1535                           
  1536                           ;main.c: 153: }else if(strcmp(rcmd,"LEP") == 0){
  1537     047C  2CC5               	goto	l1827
  1538     047D                     l1811:
  1539     047D  306B               	movlw	low (STR_9| (0+32768))
  1540     047E  00F0               	movwf	strcmp@s2
  1541     047F  3088               	movlw	high (STR_9| (0+32768))
  1542     0480  00F1               	movwf	strcmp@s2+1
  1543     0481  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1544     0482  3181  2108  3183   	fcall	_strcmp
  1545     0485  0870               	movf	?_strcmp,w
  1546     0486  0471               	iorwf	?_strcmp+1,w
  1547     0487  1D03               	btfss	3,2
  1548     0488  2C8A               	goto	u1281
  1549     0489  2C8B               	goto	u1280
  1550     048A                     u1281:
  1551     048A  2C8F               	goto	l1815
  1552     048B                     u1280:
  1553     048B                     l1813:
  1554                           
  1555                           ;main.c: 154: cmd = LEP;
  1556     048B  3006               	movlw	6
  1557     048C  0020               	movlb	0	; select bank0
  1558     048D  00EF               	movwf	main@cmd
  1559                           
  1560                           ;main.c: 155: }else if(strcmp(rcmd,"LPE") == 0){
  1561     048E  2CC5               	goto	l1827
  1562     048F                     l1815:
  1563     048F  3067               	movlw	low (STR_10| (0+32768))
  1564     0490  00F0               	movwf	strcmp@s2
  1565     0491  3088               	movlw	high (STR_10| (0+32768))
  1566     0492  00F1               	movwf	strcmp@s2+1
  1567     0493  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1568     0494  3181  2108  3183   	fcall	_strcmp
  1569     0497  0870               	movf	?_strcmp,w
  1570     0498  0471               	iorwf	?_strcmp+1,w
  1571     0499  1D03               	btfss	3,2
  1572     049A  2C9C               	goto	u1291
  1573     049B  2C9D               	goto	u1290
  1574     049C                     u1291:
  1575     049C  2CA1               	goto	l1819
  1576     049D                     u1290:
  1577     049D                     l1817:
  1578                           
  1579                           ;main.c: 156: cmd = LPE;
  1580     049D  3008               	movlw	8
  1581     049E  0020               	movlb	0	; select bank0
  1582     049F  00EF               	movwf	main@cmd
  1583                           
  1584                           ;main.c: 157: }else if(strcmp(rcmd,"LDR") == 0){
  1585     04A0  2CC5               	goto	l1827
  1586     04A1                     l1819:
  1587     04A1  306F               	movlw	low (STR_11| (0+32768))
  1588     04A2  00F0               	movwf	strcmp@s2
  1589     04A3  3088               	movlw	high (STR_11| (0+32768))
  1590     04A4  00F1               	movwf	strcmp@s2+1
  1591     04A5  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1592     04A6  3181  2108  3183   	fcall	_strcmp
  1593     04A9  0870               	movf	?_strcmp,w
  1594     04AA  0471               	iorwf	?_strcmp+1,w
  1595     04AB  1D03               	btfss	3,2
  1596     04AC  2CAE               	goto	u1301
  1597     04AD  2CAF               	goto	u1300
  1598     04AE                     u1301:
  1599     04AE  2CB3               	goto	l1823
  1600     04AF                     u1300:
  1601     04AF                     l1821:
  1602                           
  1603                           ;main.c: 158: cmd = LDR;
  1604     04AF  3009               	movlw	9
  1605     04B0  0020               	movlb	0	; select bank0
  1606     04B1  00EF               	movwf	main@cmd
  1607                           
  1608                           ;main.c: 159: }else if(strcmp(rcmd,"VER") == 0){
  1609     04B2  2CC5               	goto	l1827
  1610     04B3                     l1823:
  1611     04B3  3073               	movlw	low (STR_12| (0+32768))
  1612     04B4  00F0               	movwf	strcmp@s2
  1613     04B5  3088               	movlw	high (STR_12| (0+32768))
  1614     04B6  00F1               	movwf	strcmp@s2+1
  1615     04B7  30A8               	movlw	(low (main@rcmd| (0+256)))& (0+255)
  1616     04B8  3181  2108  3183   	fcall	_strcmp
  1617     04BB  0870               	movf	?_strcmp,w
  1618     04BC  0471               	iorwf	?_strcmp+1,w
  1619     04BD  1D03               	btfss	3,2
  1620     04BE  2CC0               	goto	u1311
  1621     04BF  2CC1               	goto	u1310
  1622     04C0                     u1311:
  1623     04C0  2CC5               	goto	l76
  1624     04C1                     u1310:
  1625     04C1                     l1825:
  1626                           
  1627                           ;main.c: 160: cmd = VER;
  1628     04C1  300A               	movlw	10
  1629     04C2  0020               	movlb	0	; select bank0
  1630     04C3  00EF               	movwf	main@cmd
  1631     04C4  2CC5               	goto	l1827
  1632     04C5                     l76:
  1633     04C5                     l1827:
  1634     04C5  307B               	movlw	low (STR_13| (0+32768))
  1635     04C6  0020               	movlb	0	; select bank0
  1636     04C7  00A0               	movwf	strtok@s2
  1637     04C8  3088               	movlw	high (STR_13| (0+32768))
  1638     04C9  00A1               	movwf	strtok@s2+1
  1639     04CA  3048               	movlw	(low (main@tmp| (0+256)))& (0+255)
  1640     04CB  3181  21CD  3183   	fcall	_strtok
  1641                           
  1642                           ;main.c: 165: switch(cmd){
  1643     04CE  2FD8               	goto	l2049
  1644     04CF                     l1829:
  1645                           
  1646                           ;main.c: 168: for (int i=0 ; i < 20 ; i++){
  1647     04CF  01E7               	clrf	main@i
  1648     04D0  01E8               	clrf	main@i+1
  1649     04D1                     l1835:
  1650                           
  1651                           ;main.c: 169: ptr = strtok((0), "/");
  1652     04D1  307B               	movlw	low (STR_13| (0+32768))
  1653     04D2  0020               	movlb	0	; select bank0
  1654     04D3  00A0               	movwf	strtok@s2
  1655     04D4  3088               	movlw	high (STR_13| (0+32768))
  1656     04D5  00A1               	movwf	strtok@s2+1
  1657     04D6  0103               	clrw
  1658     04D7  3181  21CD  3183   	fcall	_strtok
  1659     04DA  0023               	movlb	3	; select bank3
  1660     04DB  00AC               	movwf	main@ptr^(0+384)
  1661     04DC                     l1837:
  1662                           
  1663                           ;main.c: 170: if(ptr != (0)) {
  1664     04DC  082C               	movf	main@ptr^(0+384),w
  1665     04DD  1903               	btfsc	3,2
  1666     04DE  2CE0               	goto	u1321
  1667     04DF  2CE1               	goto	u1320
  1668     04E0                     u1321:
  1669     04E0  2CEE               	goto	l1841
  1670     04E1                     u1320:
  1671     04E1                     l1839:
  1672                           
  1673                           ;main.c: 171: ap1_dat[i] = atoi(ptr);
  1674     04E1  082C               	movf	main@ptr^(0+384),w
  1675     04E2  3183  2338  3183   	fcall	_atoi
  1676     04E5  0020               	movlb	0	; select bank0
  1677     04E6  3567               	lslf	main@i,w
  1678     04E7  3EA0               	addlw	(low (main@ap1_dat| 0))& (0+255)
  1679     04E8  0086               	movwf	6
  1680     04E9  0187               	clrf	7
  1681     04EA  0876               	movf	?_atoi,w
  1682     04EB  3FC0               	movwi [0]fsr1
  1683     04EC  0877               	movf	?_atoi+1,w
  1684     04ED  3FC1               	movwi [1]fsr1
  1685     04EE                     l1841:
  1686     04EE  3001               	movlw	1
  1687     04EF  0020               	movlb	0	; select bank0
  1688     04F0  07E7               	addwf	main@i,f
  1689     04F1  3000               	movlw	0
  1690     04F2  3DE8               	addwfc	main@i+1,f
  1691     04F3                     l1843:
  1692     04F3  0868               	movf	main@i+1,w
  1693     04F4  3A80               	xorlw	128
  1694     04F5  00AA               	movwf	??_main
  1695     04F6  3080               	movlw	128
  1696     04F7  022A               	subwf	??_main,w
  1697     04F8  1D03               	skipz
  1698     04F9  2CFC               	goto	u1335
  1699     04FA  3014               	movlw	20
  1700     04FB  0267               	subwf	main@i,w
  1701     04FC                     u1335:
  1702     04FC  1C03               	skipc
  1703     04FD  2CFF               	goto	u1331
  1704     04FE  2D00               	goto	u1330
  1705     04FF                     u1331:
  1706     04FF  2CD1               	goto	l1835
  1707     0500                     u1330:
  1708     0500                     l1845:
  1709                           
  1710                           ;main.c: 172: };main.c: 173: };main.c: 174: printf("SA1 OK\n");
  1711     0500  3014               	movlw	low (STR_15| (0+32768))
  1712     0501  00F1               	movwf	printf@f
  1713     0502  3088               	movlw	high (STR_15| (0+32768))
  1714     0503  00F2               	movwf	printf@f+1
  1715     0504  3182  22D6  3183   	fcall	_printf
  1716                           
  1717                           ;main.c: 175: break;
  1718     0507  2BD1               	goto	l1753
  1719     0508                     l1847:
  1720                           
  1721                           ;main.c: 178: for (int i=0 ; i < 20 ; i++){
  1722     0508  01E9               	clrf	main@i_131
  1723     0509  01EA               	clrf	main@i_131+1
  1724     050A                     l1853:
  1725                           
  1726                           ;main.c: 179: ptr = strtok((0), "/");
  1727     050A  307B               	movlw	low (STR_13| (0+32768))
  1728     050B  0020               	movlb	0	; select bank0
  1729     050C  00A0               	movwf	strtok@s2
  1730     050D  3088               	movlw	high (STR_13| (0+32768))
  1731     050E  00A1               	movwf	strtok@s2+1
  1732     050F  0103               	clrw
  1733     0510  3181  21CD  3183   	fcall	_strtok
  1734     0513  0023               	movlb	3	; select bank3
  1735     0514  00AC               	movwf	main@ptr^(0+384)
  1736     0515                     l1855:
  1737                           
  1738                           ;main.c: 180: if(ptr != (0)) {
  1739     0515  082C               	movf	main@ptr^(0+384),w
  1740     0516  1903               	btfsc	3,2
  1741     0517  2D19               	goto	u1341
  1742     0518  2D1A               	goto	u1340
  1743     0519                     u1341:
  1744     0519  2D27               	goto	l1859
  1745     051A                     u1340:
  1746     051A                     l1857:
  1747                           
  1748                           ;main.c: 181: ap2_dat[i] = atoi(ptr);
  1749     051A  082C               	movf	main@ptr^(0+384),w
  1750     051B  3183  2338  3183   	fcall	_atoi
  1751     051E  0020               	movlb	0	; select bank0
  1752     051F  3569               	lslf	main@i_131,w
  1753     0520  3EC8               	addlw	(low (main@ap2_dat| 0))& (0+255)
  1754     0521  0086               	movwf	6
  1755     0522  0187               	clrf	7
  1756     0523  0876               	movf	?_atoi,w
  1757     0524  3FC0               	movwi [0]fsr1
  1758     0525  0877               	movf	?_atoi+1,w
  1759     0526  3FC1               	movwi [1]fsr1
  1760     0527                     l1859:
  1761     0527  3001               	movlw	1
  1762     0528  0020               	movlb	0	; select bank0
  1763     0529  07E9               	addwf	main@i_131,f
  1764     052A  3000               	movlw	0
  1765     052B  3DEA               	addwfc	main@i_131+1,f
  1766     052C                     l1861:
  1767     052C  086A               	movf	main@i_131+1,w
  1768     052D  3A80               	xorlw	128
  1769     052E  00AA               	movwf	??_main
  1770     052F  3080               	movlw	128
  1771     0530  022A               	subwf	??_main,w
  1772     0531  1D03               	skipz
  1773     0532  2D35               	goto	u1355
  1774     0533  3014               	movlw	20
  1775     0534  0269               	subwf	main@i_131,w
  1776     0535                     u1355:
  1777     0535  1C03               	skipc
  1778     0536  2D38               	goto	u1351
  1779     0537  2D39               	goto	u1350
  1780     0538                     u1351:
  1781     0538  2D0A               	goto	l1853
  1782     0539                     u1350:
  1783     0539                     l1863:
  1784                           
  1785                           ;main.c: 182: };main.c: 183: };main.c: 184: printf("SA2 OK\n");
  1786     0539  3024               	movlw	low (STR_17| (0+32768))
  1787     053A  00F1               	movwf	printf@f
  1788     053B  3088               	movlw	high (STR_17| (0+32768))
  1789     053C  00F2               	movwf	printf@f+1
  1790     053D  3182  22D6  3183   	fcall	_printf
  1791                           
  1792                           ;main.c: 185: break;
  1793     0540  2BD1               	goto	l1753
  1794     0541                     l1865:
  1795                           
  1796                           ;main.c: 188: for (int i=0 ; i < 20 ; i++){
  1797     0541  01EB               	clrf	main@i_134
  1798     0542  01EC               	clrf	main@i_134+1
  1799     0543                     l1867:
  1800     0543  086C               	movf	main@i_134+1,w
  1801     0544  3A80               	xorlw	128
  1802     0545  00AA               	movwf	??_main
  1803     0546  3080               	movlw	128
  1804     0547  022A               	subwf	??_main,w
  1805     0548  1D03               	skipz
  1806     0549  2D4C               	goto	u1365
  1807     054A  3014               	movlw	20
  1808     054B  026B               	subwf	main@i_134,w
  1809     054C                     u1365:
  1810     054C  1C03               	skipc
  1811     054D  2D4F               	goto	u1361
  1812     054E  2D50               	goto	u1360
  1813     054F                     u1361:
  1814     054F  2D51               	goto	l1871
  1815     0550                     u1360:
  1816     0550  2D75               	goto	l1881
  1817     0551                     l1871:
  1818                           
  1819                           ;main.c: 189: ptr = strtok((0), "/");
  1820     0551  307B               	movlw	low (STR_13| (0+32768))
  1821     0552  0020               	movlb	0	; select bank0
  1822     0553  00A0               	movwf	strtok@s2
  1823     0554  3088               	movlw	high (STR_13| (0+32768))
  1824     0555  00A1               	movwf	strtok@s2+1
  1825     0556  0103               	clrw
  1826     0557  3181  21CD  3183   	fcall	_strtok
  1827     055A  0023               	movlb	3	; select bank3
  1828     055B  00AC               	movwf	main@ptr^(0+384)
  1829     055C                     l1873:
  1830                           
  1831                           ;main.c: 190: if(ptr != (0)) {
  1832     055C  082C               	movf	main@ptr^(0+384),w
  1833     055D  1903               	btfsc	3,2
  1834     055E  2D60               	goto	u1371
  1835     055F  2D61               	goto	u1370
  1836     0560                     u1371:
  1837     0560  2D6F               	goto	l1877
  1838     0561                     u1370:
  1839     0561                     l1875:
  1840                           
  1841                           ;main.c: 191: ap3_dat[i] = atoi(ptr);
  1842     0561  082C               	movf	main@ptr^(0+384),w
  1843     0562  3183  2338  3183   	fcall	_atoi
  1844     0565  0020               	movlb	0	; select bank0
  1845     0566  356B               	lslf	main@i_134,w
  1846     0567  3E20               	addlw	(low (main@ap3_dat| (0+256)))& (0+255)
  1847     0568  0086               	movwf	6
  1848     0569  3001               	movlw	1	; select bank2/3
  1849     056A  0087               	movwf	7
  1850     056B  0876               	movf	?_atoi,w
  1851     056C  3FC0               	movwi [0]fsr1
  1852     056D  0877               	movf	?_atoi+1,w
  1853     056E  3FC1               	movwi [1]fsr1
  1854     056F                     l1877:
  1855     056F  3001               	movlw	1
  1856     0570  0020               	movlb	0	; select bank0
  1857     0571  07EB               	addwf	main@i_134,f
  1858     0572  3000               	movlw	0
  1859     0573  3DEC               	addwfc	main@i_134+1,f
  1860     0574  2D43               	goto	l1867
  1861     0575                     l1881:
  1862                           
  1863                           ;main.c: 192: };main.c: 193: };main.c: 194: printf("SA3 OK\n");
  1864     0575  3034               	movlw	low (STR_19| (0+32768))
  1865     0576  00F1               	movwf	printf@f
  1866     0577  3088               	movlw	high (STR_19| (0+32768))
  1867     0578  00F2               	movwf	printf@f+1
  1868     0579  3182  22D6  3183   	fcall	_printf
  1869                           
  1870                           ;main.c: 195: break;
  1871     057C  2BD1               	goto	l1753
  1872     057D                     l1883:
  1873                           
  1874                           ;main.c: 198: ptr = strtok((0), "/");
  1875     057D  307B               	movlw	low (STR_13| (0+32768))
  1876     057E  00A0               	movwf	strtok@s2
  1877     057F  3088               	movlw	high (STR_13| (0+32768))
  1878     0580  00A1               	movwf	strtok@s2+1
  1879     0581  0103               	clrw
  1880     0582  3181  21CD  3183   	fcall	_strtok
  1881     0585  0023               	movlb	3	; select bank3
  1882     0586  00AC               	movwf	main@ptr^(0+384)
  1883     0587                     l1885:
  1884                           
  1885                           ;main.c: 199: if(ptr != (0)) {
  1886     0587  082C               	movf	main@ptr^(0+384),w
  1887     0588  1903               	btfsc	3,2
  1888     0589  2D8B               	goto	u1381
  1889     058A  2D8C               	goto	u1380
  1890     058B                     u1381:
  1891     058B  2D95               	goto	l1889
  1892     058C                     u1380:
  1893     058C                     l1887:
  1894                           
  1895                           ;main.c: 200: fp1_time = atoi(ptr);
  1896     058C  082C               	movf	main@ptr^(0+384),w
  1897     058D  3183  2338  3183   	fcall	_atoi
  1898     0590  0877               	movf	?_atoi+1,w
  1899     0591  0020               	movlb	0	; select bank0
  1900     0592  00D6               	movwf	main@fp1_time+1
  1901     0593  0876               	movf	?_atoi,w
  1902     0594  00D5               	movwf	main@fp1_time
  1903     0595                     l1889:
  1904                           
  1905                           ;main.c: 201: };main.c: 202: ptr = strtok((0), "/");
  1906     0595  307B               	movlw	low (STR_13| (0+32768))
  1907     0596  0020               	movlb	0	; select bank0
  1908     0597  00A0               	movwf	strtok@s2
  1909     0598  3088               	movlw	high (STR_13| (0+32768))
  1910     0599  00A1               	movwf	strtok@s2+1
  1911     059A  0103               	clrw
  1912     059B  3181  21CD  3183   	fcall	_strtok
  1913     059E  0023               	movlb	3	; select bank3
  1914     059F  00AC               	movwf	main@ptr^(0+384)
  1915     05A0                     l1891:
  1916                           
  1917                           ;main.c: 203: if(ptr != (0)) {
  1918     05A0  082C               	movf	main@ptr^(0+384),w
  1919     05A1  1903               	btfsc	3,2
  1920     05A2  2DA4               	goto	u1391
  1921     05A3  2DA5               	goto	u1390
  1922     05A4                     u1391:
  1923     05A4  2DAE               	goto	l1895
  1924     05A5                     u1390:
  1925     05A5                     l1893:
  1926                           
  1927                           ;main.c: 204: fp1_amp = atoi(ptr);
  1928     05A5  082C               	movf	main@ptr^(0+384),w
  1929     05A6  3183  2338  3183   	fcall	_atoi
  1930     05A9  0877               	movf	?_atoi+1,w
  1931     05AA  0020               	movlb	0	; select bank0
  1932     05AB  00E4               	movwf	main@fp1_amp+1
  1933     05AC  0876               	movf	?_atoi,w
  1934     05AD  00E3               	movwf	main@fp1_amp
  1935     05AE                     l1895:
  1936                           
  1937                           ;main.c: 205: };main.c: 206: printf("SF1 OK\n");
  1938     05AE  301C               	movlw	low (STR_22| (0+32768))
  1939     05AF  00F1               	movwf	printf@f
  1940     05B0  3088               	movlw	high (STR_22| (0+32768))
  1941     05B1  00F2               	movwf	printf@f+1
  1942     05B2  3182  22D6  3183   	fcall	_printf
  1943                           
  1944                           ;main.c: 207: break;
  1945     05B5  2BD1               	goto	l1753
  1946     05B6                     l1897:
  1947                           
  1948                           ;main.c: 210: ptr = strtok((0), "/");
  1949     05B6  307B               	movlw	low (STR_13| (0+32768))
  1950     05B7  00A0               	movwf	strtok@s2
  1951     05B8  3088               	movlw	high (STR_13| (0+32768))
  1952     05B9  00A1               	movwf	strtok@s2+1
  1953     05BA  0103               	clrw
  1954     05BB  3181  21CD  3183   	fcall	_strtok
  1955     05BE  0023               	movlb	3	; select bank3
  1956     05BF  00AC               	movwf	main@ptr^(0+384)
  1957     05C0                     l1899:
  1958                           
  1959                           ;main.c: 211: if(ptr != (0)) {
  1960     05C0  082C               	movf	main@ptr^(0+384),w
  1961     05C1  1903               	btfsc	3,2
  1962     05C2  2DC4               	goto	u1401
  1963     05C3  2DC5               	goto	u1400
  1964     05C4                     u1401:
  1965     05C4  2DCE               	goto	l1903
  1966     05C5                     u1400:
  1967     05C5                     l1901:
  1968                           
  1969                           ;main.c: 212: fp2_time = atoi(ptr);
  1970     05C5  082C               	movf	main@ptr^(0+384),w
  1971     05C6  3183  2338  3183   	fcall	_atoi
  1972     05C9  0877               	movf	?_atoi+1,w
  1973     05CA  0020               	movlb	0	; select bank0
  1974     05CB  00D8               	movwf	main@fp2_time+1
  1975     05CC  0876               	movf	?_atoi,w
  1976     05CD  00D7               	movwf	main@fp2_time
  1977     05CE                     l1903:
  1978                           
  1979                           ;main.c: 213: };main.c: 214: ptr = strtok((0), "/");
  1980     05CE  307B               	movlw	low (STR_13| (0+32768))
  1981     05CF  0020               	movlb	0	; select bank0
  1982     05D0  00A0               	movwf	strtok@s2
  1983     05D1  3088               	movlw	high (STR_13| (0+32768))
  1984     05D2  00A1               	movwf	strtok@s2+1
  1985     05D3  0103               	clrw
  1986     05D4  3181  21CD  3183   	fcall	_strtok
  1987     05D7  0023               	movlb	3	; select bank3
  1988     05D8  00AC               	movwf	main@ptr^(0+384)
  1989     05D9                     l1905:
  1990                           
  1991                           ;main.c: 215: if(ptr != (0)) {
  1992     05D9  082C               	movf	main@ptr^(0+384),w
  1993     05DA  1903               	btfsc	3,2
  1994     05DB  2DDD               	goto	u1411
  1995     05DC  2DDE               	goto	u1410
  1996     05DD                     u1411:
  1997     05DD  2DE7               	goto	l1909
  1998     05DE                     u1410:
  1999     05DE                     l1907:
  2000                           
  2001                           ;main.c: 216: fp2_amp = atoi(ptr);
  2002     05DE  082C               	movf	main@ptr^(0+384),w
  2003     05DF  3183  2338  3183   	fcall	_atoi
  2004     05E2  0877               	movf	?_atoi+1,w
  2005     05E3  0020               	movlb	0	; select bank0
  2006     05E4  00DA               	movwf	main@fp2_amp+1
  2007     05E5  0876               	movf	?_atoi,w
  2008     05E6  00D9               	movwf	main@fp2_amp
  2009     05E7                     l1909:
  2010                           
  2011                           ;main.c: 217: };main.c: 218: printf("SF2 OK\n");
  2012     05E7  302C               	movlw	low (STR_25| (0+32768))
  2013     05E8  00F1               	movwf	printf@f
  2014     05E9  3088               	movlw	high (STR_25| (0+32768))
  2015     05EA  00F2               	movwf	printf@f+1
  2016     05EB  3182  22D6  3183   	fcall	_printf
  2017                           
  2018                           ;main.c: 219: break;
  2019     05EE  2BD1               	goto	l1753
  2020     05EF                     l1911:
  2021                           
  2022                           ;main.c: 222: ptr = strtok((0), "/");
  2023     05EF  307B               	movlw	low (STR_13| (0+32768))
  2024     05F0  00A0               	movwf	strtok@s2
  2025     05F1  3088               	movlw	high (STR_13| (0+32768))
  2026     05F2  00A1               	movwf	strtok@s2+1
  2027     05F3  0103               	clrw
  2028     05F4  3181  21CD  3183   	fcall	_strtok
  2029     05F7  0023               	movlb	3	; select bank3
  2030     05F8  00AC               	movwf	main@ptr^(0+384)
  2031     05F9                     l1913:
  2032                           
  2033                           ;main.c: 223: if(ptr != (0)) {
  2034     05F9  082C               	movf	main@ptr^(0+384),w
  2035     05FA  1903               	btfsc	3,2
  2036     05FB  2DFD               	goto	u1421
  2037     05FC  2DFE               	goto	u1420
  2038     05FD                     u1421:
  2039     05FD  2E07               	goto	l1917
  2040     05FE                     u1420:
  2041     05FE                     l1915:
  2042                           
  2043                           ;main.c: 224: fp3_time = atoi(ptr);
  2044     05FE  082C               	movf	main@ptr^(0+384),w
  2045     05FF  3183  2338  3183   	fcall	_atoi
  2046     0602  0877               	movf	?_atoi+1,w
  2047     0603  0020               	movlb	0	; select bank0
  2048     0604  00DC               	movwf	main@fp3_time+1
  2049     0605  0876               	movf	?_atoi,w
  2050     0606  00DB               	movwf	main@fp3_time
  2051     0607                     l1917:
  2052                           
  2053                           ;main.c: 225: };main.c: 226: ptr = strtok((0), "/");
  2054     0607  307B               	movlw	low (STR_13| (0+32768))
  2055     0608  0020               	movlb	0	; select bank0
  2056     0609  00A0               	movwf	strtok@s2
  2057     060A  3088               	movlw	high (STR_13| (0+32768))
  2058     060B  00A1               	movwf	strtok@s2+1
  2059     060C  0103               	clrw
  2060     060D  3181  21CD  3183   	fcall	_strtok
  2061     0610  0023               	movlb	3	; select bank3
  2062     0611  00AC               	movwf	main@ptr^(0+384)
  2063     0612                     l1919:
  2064                           
  2065                           ;main.c: 227: if(ptr != (0)) {
  2066     0612  082C               	movf	main@ptr^(0+384),w
  2067     0613  1903               	btfsc	3,2
  2068     0614  2E16               	goto	u1431
  2069     0615  2E17               	goto	u1430
  2070     0616                     u1431:
  2071     0616  2E20               	goto	l1923
  2072     0617                     u1430:
  2073     0617                     l1921:
  2074                           
  2075                           ;main.c: 228: fp3_amp = atoi(ptr);
  2076     0617  082C               	movf	main@ptr^(0+384),w
  2077     0618  3183  2338  3183   	fcall	_atoi
  2078     061B  0877               	movf	?_atoi+1,w
  2079     061C  0020               	movlb	0	; select bank0
  2080     061D  00D4               	movwf	main@fp3_amp+1
  2081     061E  0876               	movf	?_atoi,w
  2082     061F  00D3               	movwf	main@fp3_amp
  2083     0620                     l1923:
  2084                           
  2085                           ;main.c: 229: };main.c: 230: printf("SF3 OK\n");
  2086     0620  303C               	movlw	low (STR_28| (0+32768))
  2087     0621  00F1               	movwf	printf@f
  2088     0622  3088               	movlw	high (STR_28| (0+32768))
  2089     0623  00F2               	movwf	printf@f+1
  2090     0624  3182  22D6  3183   	fcall	_printf
  2091                           
  2092                           ;main.c: 231: break;
  2093     0627  2BD1               	goto	l1753
  2094     0628                     l1925:
  2095                           
  2096                           ;main.c: 235: for (int k=0 ; k < 6 ; k++){
  2097     0628  01E5               	clrf	main@k
  2098     0629  01E6               	clrf	main@k+1
  2099     062A                     l1927:
  2100     062A  0866               	movf	main@k+1,w
  2101     062B  3A80               	xorlw	128
  2102     062C  00AA               	movwf	??_main
  2103     062D  3080               	movlw	128
  2104     062E  022A               	subwf	??_main,w
  2105     062F  1D03               	skipz
  2106     0630  2E33               	goto	u1445
  2107     0631  3006               	movlw	6
  2108     0632  0265               	subwf	main@k,w
  2109     0633                     u1445:
  2110     0633  1C03               	skipc
  2111     0634  2E36               	goto	u1441
  2112     0635  2E37               	goto	u1440
  2113     0636                     u1441:
  2114     0636  2E38               	goto	l1931
  2115     0637                     u1440:
  2116     0637  2F6F               	goto	l2013
  2117     0638                     l1931:
  2118                           
  2119                           ;main.c: 236: ptr = strtok((0), "/");
  2120     0638  307B               	movlw	low (STR_13| (0+32768))
  2121     0639  0020               	movlb	0	; select bank0
  2122     063A  00A0               	movwf	strtok@s2
  2123     063B  3088               	movlw	high (STR_13| (0+32768))
  2124     063C  00A1               	movwf	strtok@s2+1
  2125     063D  0103               	clrw
  2126     063E  3181  21CD  3183   	fcall	_strtok
  2127     0641  0023               	movlb	3	; select bank3
  2128     0642  00AC               	movwf	main@ptr^(0+384)
  2129                           
  2130                           ;main.c: 237: if(strcmp(ptr,"A1") == 0) {
  2131     0643  3050               	movlw	low ((STR_3+1)| (0+32768))
  2132     0644  00F0               	movwf	strcmp@s2
  2133     0645  3088               	movlw	high ((STR_3+1)| (0+32768))
  2134     0646  00F1               	movwf	strcmp@s2+1
  2135     0647  082C               	movf	main@ptr^(0+384),w
  2136     0648  3181  2108  3183   	fcall	_strcmp
  2137     064B  0870               	movf	?_strcmp,w
  2138     064C  0471               	iorwf	?_strcmp+1,w
  2139     064D  1D03               	btfss	3,2
  2140     064E  2E50               	goto	u1451
  2141     064F  2E51               	goto	u1450
  2142     0650                     u1451:
  2143     0650  2E73               	goto	l1947
  2144     0651                     u1450:
  2145     0651                     l1933:
  2146                           
  2147                           ;main.c: 238: for (int i=0 ; i < 20 ; i++){
  2148     0651  0020               	movlb	0	; select bank0
  2149     0652  01ED               	clrf	main@i_149
  2150     0653  01EE               	clrf	main@i_149+1
  2151     0654                     l1935:
  2152     0654  086E               	movf	main@i_149+1,w
  2153     0655  3A80               	xorlw	128
  2154     0656  00AA               	movwf	??_main
  2155     0657  3080               	movlw	128
  2156     0658  022A               	subwf	??_main,w
  2157     0659  1D03               	skipz
  2158     065A  2E5D               	goto	u1465
  2159     065B  3014               	movlw	20
  2160     065C  026D               	subwf	main@i_149,w
  2161     065D                     u1465:
  2162     065D  1C03               	skipc
  2163     065E  2E60               	goto	u1461
  2164     065F  2E61               	goto	u1460
  2165     0660                     u1461:
  2166     0660  2E62               	goto	l1939
  2167     0661                     u1460:
  2168     0661  2F69               	goto	l2009
  2169     0662                     l1939:
  2170                           
  2171                           ;main.c: 239: DAC1CON1 = ap1_dat[i] ;
  2172     0662  0020               	movlb	0	; select bank0
  2173     0663  356D               	lslf	main@i_149,w
  2174     0664  3EA0               	addlw	(low (main@ap1_dat| 0))& (0+255)
  2175     0665  0086               	movwf	6
  2176     0666  0187               	clrf	7
  2177     0667  0801               	movf	1,w
  2178     0668  0022               	movlb	2	; select bank2
  2179     0669  0099               	movwf	25	;volatile
  2180     066A                     l1941:
  2181                           
  2182                           ;main.c: 240: _delay((unsigned long)((18)*(32000000/4000000.0))) ;
  2183     066A  3030               	movlw	48
  2184     066B                     u1607:
  2185     066B  0B89               	decfsz	9,f
  2186     066C  2E6B               	goto	u1607
  2187     066D                     l1943:
  2188     066D  3001               	movlw	1
  2189     066E  0020               	movlb	0	; select bank0
  2190     066F  07ED               	addwf	main@i_149,f
  2191     0670  3000               	movlw	0
  2192     0671  3DEE               	addwfc	main@i_149+1,f
  2193     0672  2E54               	goto	l1935
  2194     0673                     l1947:
  2195     0673  3058               	movlw	low ((STR_4+1)| (0+32768))
  2196     0674  00F0               	movwf	strcmp@s2
  2197     0675  3088               	movlw	high ((STR_4+1)| (0+32768))
  2198     0676  00F1               	movwf	strcmp@s2+1
  2199     0677  0023               	movlb	3	; select bank3
  2200     0678  082C               	movf	main@ptr^(0+384),w
  2201     0679  3181  2108  3183   	fcall	_strcmp
  2202     067C  0870               	movf	?_strcmp,w
  2203     067D  0471               	iorwf	?_strcmp+1,w
  2204     067E  1D03               	btfss	3,2
  2205     067F  2E81               	goto	u1471
  2206     0680  2E82               	goto	u1470
  2207     0681                     u1471:
  2208     0681  2EA6               	goto	l1963
  2209     0682                     u1470:
  2210     0682                     l1949:
  2211                           
  2212                           ;main.c: 243: for (int i=0 ; i < 20 ; i++){
  2213     0682  0023               	movlb	3	; select bank3
  2214     0683  01A0               	clrf	main@i_151^(0+384)
  2215     0684  01A1               	clrf	(main@i_151+1)^(0+384)
  2216     0685                     l1951:
  2217     0685  0821               	movf	(main@i_151+1)^(0+384),w
  2218     0686  3A80               	xorlw	128
  2219     0687  0020               	movlb	0	; select bank0
  2220     0688  00AA               	movwf	??_main
  2221     0689  3080               	movlw	128
  2222     068A  022A               	subwf	??_main,w
  2223     068B  1D03               	skipz
  2224     068C  2E90               	goto	u1485
  2225     068D  3014               	movlw	20
  2226     068E  0023               	movlb	3	; select bank3
  2227     068F  0220               	subwf	main@i_151^(0+384),w
  2228     0690                     u1485:
  2229     0690  1C03               	skipc
  2230     0691  2E93               	goto	u1481
  2231     0692  2E94               	goto	u1480
  2232     0693                     u1481:
  2233     0693  2E95               	goto	l1955
  2234     0694                     u1480:
  2235     0694  2F69               	goto	l2009
  2236     0695                     l1955:
  2237                           
  2238                           ;main.c: 244: DAC1CON1 = ap2_dat[i] ;
  2239     0695  0023               	movlb	3	; select bank3
  2240     0696  3520               	lslf	main@i_151^(0+384),w
  2241     0697  3EC8               	addlw	(low (main@ap2_dat| 0))& (0+255)
  2242     0698  0086               	movwf	6
  2243     0699  0187               	clrf	7
  2244     069A  0801               	movf	1,w
  2245     069B  0022               	movlb	2	; select bank2
  2246     069C  0099               	movwf	25	;volatile
  2247     069D                     l1957:
  2248                           
  2249                           ;main.c: 245: _delay((unsigned long)((18)*(32000000/4000000.0))) ;
  2250     069D  3030               	movlw	48
  2251     069E                     u1617:
  2252     069E  0B89               	decfsz	9,f
  2253     069F  2E9E               	goto	u1617
  2254     06A0                     l1959:
  2255     06A0  3001               	movlw	1
  2256     06A1  0023               	movlb	3	; select bank3
  2257     06A2  07A0               	addwf	main@i_151^(0+384),f
  2258     06A3  3000               	movlw	0
  2259     06A4  3DA1               	addwfc	(main@i_151+1)^(0+384),f
  2260     06A5  2E85               	goto	l1951
  2261     06A6                     l1963:
  2262     06A6  3060               	movlw	low ((STR_5+1)| (0+32768))
  2263     06A7  00F0               	movwf	strcmp@s2
  2264     06A8  3088               	movlw	high ((STR_5+1)| (0+32768))
  2265     06A9  00F1               	movwf	strcmp@s2+1
  2266     06AA  0023               	movlb	3	; select bank3
  2267     06AB  082C               	movf	main@ptr^(0+384),w
  2268     06AC  3181  2108  3183   	fcall	_strcmp
  2269     06AF  0870               	movf	?_strcmp,w
  2270     06B0  0471               	iorwf	?_strcmp+1,w
  2271     06B1  1D03               	btfss	3,2
  2272     06B2  2EB4               	goto	u1491
  2273     06B3  2EB5               	goto	u1490
  2274     06B4                     u1491:
  2275     06B4  2EDA               	goto	l1979
  2276     06B5                     u1490:
  2277     06B5                     l1965:
  2278                           
  2279                           ;main.c: 248: for (int i=0 ; i < 20 ; i++){
  2280     06B5  0023               	movlb	3	; select bank3
  2281     06B6  01A2               	clrf	main@i_153^(0+384)
  2282     06B7  01A3               	clrf	(main@i_153+1)^(0+384)
  2283     06B8                     l1967:
  2284     06B8  0823               	movf	(main@i_153+1)^(0+384),w
  2285     06B9  3A80               	xorlw	128
  2286     06BA  0020               	movlb	0	; select bank0
  2287     06BB  00AA               	movwf	??_main
  2288     06BC  3080               	movlw	128
  2289     06BD  022A               	subwf	??_main,w
  2290     06BE  1D03               	skipz
  2291     06BF  2EC3               	goto	u1505
  2292     06C0  3014               	movlw	20
  2293     06C1  0023               	movlb	3	; select bank3
  2294     06C2  0222               	subwf	main@i_153^(0+384),w
  2295     06C3                     u1505:
  2296     06C3  1C03               	skipc
  2297     06C4  2EC6               	goto	u1501
  2298     06C5  2EC7               	goto	u1500
  2299     06C6                     u1501:
  2300     06C6  2EC8               	goto	l1971
  2301     06C7                     u1500:
  2302     06C7  2F69               	goto	l2009
  2303     06C8                     l1971:
  2304                           
  2305                           ;main.c: 249: DAC1CON1 = ap3_dat[i] ;
  2306     06C8  0023               	movlb	3	; select bank3
  2307     06C9  3522               	lslf	main@i_153^(0+384),w
  2308     06CA  3E20               	addlw	(low (main@ap3_dat| (0+256)))& (0+255)
  2309     06CB  0086               	movwf	6
  2310     06CC  3001               	movlw	1	; select bank2/3
  2311     06CD  0087               	movwf	7
  2312     06CE  0801               	movf	1,w
  2313     06CF  0022               	movlb	2	; select bank2
  2314     06D0  0099               	movwf	25	;volatile
  2315     06D1                     l1973:
  2316                           
  2317                           ;main.c: 250: _delay((unsigned long)((18)*(32000000/4000000.0))) ;
  2318     06D1  3030               	movlw	48
  2319     06D2                     u1627:
  2320     06D2  0B89               	decfsz	9,f
  2321     06D3  2ED2               	goto	u1627
  2322     06D4                     l1975:
  2323     06D4  3001               	movlw	1
  2324     06D5  0023               	movlb	3	; select bank3
  2325     06D6  07A2               	addwf	main@i_153^(0+384),f
  2326     06D7  3000               	movlw	0
  2327     06D8  3DA3               	addwfc	(main@i_153+1)^(0+384),f
  2328     06D9  2EB8               	goto	l1967
  2329     06DA                     l1979:
  2330     06DA  3054               	movlw	low ((STR_6+1)| (0+32768))
  2331     06DB  00F0               	movwf	strcmp@s2
  2332     06DC  3088               	movlw	high ((STR_6+1)| (0+32768))
  2333     06DD  00F1               	movwf	strcmp@s2+1
  2334     06DE  0023               	movlb	3	; select bank3
  2335     06DF  082C               	movf	main@ptr^(0+384),w
  2336     06E0  3181  2108  3183   	fcall	_strcmp
  2337     06E3  0870               	movf	?_strcmp,w
  2338     06E4  0471               	iorwf	?_strcmp+1,w
  2339     06E5  1D03               	btfss	3,2
  2340     06E6  2EE8               	goto	u1511
  2341     06E7  2EE9               	goto	u1510
  2342     06E8                     u1511:
  2343     06E8  2F0B               	goto	l1989
  2344     06E9                     u1510:
  2345     06E9                     l1981:
  2346                           
  2347                           ;main.c: 253: DAC1CON1 = fp1_amp ;
  2348     06E9  0020               	movlb	0	; select bank0
  2349     06EA  0863               	movf	main@fp1_amp,w
  2350     06EB  0022               	movlb	2	; select bank2
  2351     06EC  0099               	movwf	25	;volatile
  2352     06ED                     l1983:
  2353                           
  2354                           ;main.c: 254: for (int i=0 ; i < fp1_time ; i++){
  2355     06ED  0020               	movlb	0	; select bank0
  2356     06EE  01DD               	clrf	main@i_155
  2357     06EF  01DE               	clrf	main@i_155+1
  2358     06F0  2EFA               	goto	l121
  2359     06F1                     l1985:
  2360                           
  2361                           ;main.c: 255: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2362     06F1  3035               	movlw	53
  2363     06F2                     u1637:
  2364     06F2  0B89               	decfsz	9,f
  2365     06F3  2EF2               	goto	u1637
  2366     06F4  0000               	nop
  2367     06F5  3001               	movlw	1
  2368     06F6  0020               	movlb	0	; select bank0
  2369     06F7  07DD               	addwf	main@i_155,f
  2370     06F8  3000               	movlw	0
  2371     06F9  3DDE               	addwfc	main@i_155+1,f
  2372     06FA                     l121:
  2373     06FA  085E               	movf	main@i_155+1,w
  2374     06FB  3A80               	xorlw	128
  2375     06FC  00AA               	movwf	??_main
  2376     06FD  0856               	movf	main@fp1_time+1,w
  2377     06FE  3A80               	xorlw	128
  2378     06FF  022A               	subwf	??_main,w
  2379     0700  1D03               	skipz
  2380     0701  2F04               	goto	u1525
  2381     0702  0855               	movf	main@fp1_time,w
  2382     0703  025D               	subwf	main@i_155,w
  2383     0704                     u1525:
  2384     0704  1C03               	skipc
  2385     0705  2F07               	goto	u1521
  2386     0706  2F08               	goto	u1520
  2387     0707                     u1521:
  2388     0707  2EF1               	goto	l1985
  2389     0708                     u1520:
  2390     0708                     l1987:
  2391                           
  2392                           ;main.c: 256: };main.c: 257: DAC1CON1 = 0 ;
  2393     0708  0022               	movlb	2	; select bank2
  2394     0709  0199               	clrf	25	;volatile
  2395                           
  2396                           ;main.c: 258: }else if(strcmp(ptr,"F2") == 0) {
  2397     070A  2F69               	goto	l2009
  2398     070B                     l1989:
  2399     070B  305C               	movlw	low ((STR_7+1)| (0+32768))
  2400     070C  00F0               	movwf	strcmp@s2
  2401     070D  3088               	movlw	high ((STR_7+1)| (0+32768))
  2402     070E  00F1               	movwf	strcmp@s2+1
  2403     070F  0023               	movlb	3	; select bank3
  2404     0710  082C               	movf	main@ptr^(0+384),w
  2405     0711  3181  2108  3183   	fcall	_strcmp
  2406     0714  0870               	movf	?_strcmp,w
  2407     0715  0471               	iorwf	?_strcmp+1,w
  2408     0716  1D03               	btfss	3,2
  2409     0717  2F19               	goto	u1531
  2410     0718  2F1A               	goto	u1530
  2411     0719                     u1531:
  2412     0719  2F3A               	goto	l1999
  2413     071A                     u1530:
  2414     071A                     l1991:
  2415                           
  2416                           ;main.c: 259: DAC1CON1 = fp2_amp ;
  2417     071A  0020               	movlb	0	; select bank0
  2418     071B  0859               	movf	main@fp2_amp,w
  2419     071C  0022               	movlb	2	; select bank2
  2420     071D  0099               	movwf	25	;volatile
  2421     071E                     l1993:
  2422                           
  2423                           ;main.c: 260: for (int i=0 ; i < fp2_time ; i++){
  2424     071E  0020               	movlb	0	; select bank0
  2425     071F  01DF               	clrf	main@i_157
  2426     0720  01E0               	clrf	main@i_157+1
  2427     0721  2F2B               	goto	l126
  2428     0722                     l1995:
  2429                           
  2430                           ;main.c: 261: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2431     0722  3035               	movlw	53
  2432     0723                     u1647:
  2433     0723  0B89               	decfsz	9,f
  2434     0724  2F23               	goto	u1647
  2435     0725  0000               	nop
  2436     0726  3001               	movlw	1
  2437     0727  0020               	movlb	0	; select bank0
  2438     0728  07DF               	addwf	main@i_157,f
  2439     0729  3000               	movlw	0
  2440     072A  3DE0               	addwfc	main@i_157+1,f
  2441     072B                     l126:
  2442     072B  0860               	movf	main@i_157+1,w
  2443     072C  3A80               	xorlw	128
  2444     072D  00AA               	movwf	??_main
  2445     072E  0858               	movf	main@fp2_time+1,w
  2446     072F  3A80               	xorlw	128
  2447     0730  022A               	subwf	??_main,w
  2448     0731  1D03               	skipz
  2449     0732  2F35               	goto	u1545
  2450     0733  0857               	movf	main@fp2_time,w
  2451     0734  025F               	subwf	main@i_157,w
  2452     0735                     u1545:
  2453     0735  1C03               	skipc
  2454     0736  2F38               	goto	u1541
  2455     0737  2F39               	goto	u1540
  2456     0738                     u1541:
  2457     0738  2F22               	goto	l1995
  2458     0739                     u1540:
  2459     0739  2F08               	goto	l1987
  2460     073A                     l1999:
  2461     073A  3064               	movlw	low ((STR_8+1)| (0+32768))
  2462     073B  00F0               	movwf	strcmp@s2
  2463     073C  3088               	movlw	high ((STR_8+1)| (0+32768))
  2464     073D  00F1               	movwf	strcmp@s2+1
  2465     073E  0023               	movlb	3	; select bank3
  2466     073F  082C               	movf	main@ptr^(0+384),w
  2467     0740  3181  2108  3183   	fcall	_strcmp
  2468     0743  0870               	movf	?_strcmp,w
  2469     0744  0471               	iorwf	?_strcmp+1,w
  2470     0745  1D03               	btfss	3,2
  2471     0746  2F48               	goto	u1551
  2472     0747  2F49               	goto	u1550
  2473     0748                     u1551:
  2474     0748  2F69               	goto	l2009
  2475     0749                     u1550:
  2476     0749                     l2001:
  2477                           
  2478                           ;main.c: 265: DAC1CON1 = fp1_amp ;
  2479     0749  0020               	movlb	0	; select bank0
  2480     074A  0863               	movf	main@fp1_amp,w
  2481     074B  0022               	movlb	2	; select bank2
  2482     074C  0099               	movwf	25	;volatile
  2483     074D                     l2003:
  2484                           
  2485                           ;main.c: 266: for (int i=0 ; i < fp3_time ; i++){
  2486     074D  0020               	movlb	0	; select bank0
  2487     074E  01E1               	clrf	main@i_159
  2488     074F  01E2               	clrf	main@i_159+1
  2489     0750  2F5A               	goto	l131
  2490     0751                     l2005:
  2491                           
  2492                           ;main.c: 267: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  2493     0751  3035               	movlw	53
  2494     0752                     u1657:
  2495     0752  0B89               	decfsz	9,f
  2496     0753  2F52               	goto	u1657
  2497     0754  0000               	nop
  2498     0755  3001               	movlw	1
  2499     0756  0020               	movlb	0	; select bank0
  2500     0757  07E1               	addwf	main@i_159,f
  2501     0758  3000               	movlw	0
  2502     0759  3DE2               	addwfc	main@i_159+1,f
  2503     075A                     l131:
  2504     075A  0862               	movf	main@i_159+1,w
  2505     075B  3A80               	xorlw	128
  2506     075C  00AA               	movwf	??_main
  2507     075D  085C               	movf	main@fp3_time+1,w
  2508     075E  3A80               	xorlw	128
  2509     075F  022A               	subwf	??_main,w
  2510     0760  1D03               	skipz
  2511     0761  2F64               	goto	u1565
  2512     0762  085B               	movf	main@fp3_time,w
  2513     0763  0261               	subwf	main@i_159,w
  2514     0764                     u1565:
  2515     0764  1C03               	skipc
  2516     0765  2F67               	goto	u1561
  2517     0766  2F68               	goto	u1560
  2518     0767                     u1561:
  2519     0767  2F51               	goto	l2005
  2520     0768                     u1560:
  2521     0768  2F08               	goto	l1987
  2522     0769                     l2009:
  2523     0769  3001               	movlw	1
  2524     076A  0020               	movlb	0	; select bank0
  2525     076B  07E5               	addwf	main@k,f
  2526     076C  3000               	movlw	0
  2527     076D  3DE6               	addwfc	main@k+1,f
  2528     076E  2E2A               	goto	l1927
  2529     076F                     l2013:
  2530                           
  2531                           ;main.c: 270: };main.c: 271: };main.c: 274: printf("___P_OK\n");
  2532     076F  300B               	movlw	low (STR_36| (0+32768))
  2533     0770  00F1               	movwf	printf@f
  2534     0771  3088               	movlw	high (STR_36| (0+32768))
  2535     0772  00F2               	movwf	printf@f+1
  2536     0773  3182  22D6  3183   	fcall	_printf
  2537                           
  2538                           ;main.c: 275: break;
  2539     0776  2BD1               	goto	l1753
  2540     0777                     l2015:
  2541                           
  2542                           ;main.c: 278: for (int i=0 ; i < 10 ; i++){
  2543     0777  0023               	movlb	3	; select bank3
  2544     0778  01A4               	clrf	main@i_161^(0+384)
  2545     0779  01A5               	clrf	(main@i_161+1)^(0+384)
  2546     077A                     l2017:
  2547     077A  0825               	movf	(main@i_161+1)^(0+384),w
  2548     077B  3A80               	xorlw	128
  2549     077C  0020               	movlb	0	; select bank0
  2550     077D  00AA               	movwf	??_main
  2551     077E  3080               	movlw	128
  2552     077F  022A               	subwf	??_main,w
  2553     0780  1D03               	skipz
  2554     0781  2F85               	goto	u1575
  2555     0782  300A               	movlw	10
  2556     0783  0023               	movlb	3	; select bank3
  2557     0784  0224               	subwf	main@i_161^(0+384),w
  2558     0785                     u1575:
  2559     0785  1C03               	skipc
  2560     0786  2F88               	goto	u1571
  2561     0787  2F89               	goto	u1570
  2562     0788                     u1571:
  2563     0788  2F8A               	goto	l2021
  2564     0789                     u1570:
  2565     0789  2BD1               	goto	l1753
  2566     078A                     l2021:
  2567                           
  2568                           ;main.c: 279: ptr = strtok((0), "/");
  2569     078A  307B               	movlw	low (STR_13| (0+32768))
  2570     078B  0020               	movlb	0	; select bank0
  2571     078C  00A0               	movwf	strtok@s2
  2572     078D  3088               	movlw	high (STR_13| (0+32768))
  2573     078E  00A1               	movwf	strtok@s2+1
  2574     078F  0103               	clrw
  2575     0790  3181  21CD  3183   	fcall	_strtok
  2576     0793  0023               	movlb	3	; select bank3
  2577     0794  00AC               	movwf	main@ptr^(0+384)
  2578     0795                     l2023:
  2579                           
  2580                           ;main.c: 280: if(ptr != (0)) {
  2581     0795  082C               	movf	main@ptr^(0+384),w
  2582     0796  1903               	btfsc	3,2
  2583     0797  2F99               	goto	u1581
  2584     0798  2F9A               	goto	u1580
  2585     0799                     u1581:
  2586     0799  2FA7               	goto	l2027
  2587     079A                     u1580:
  2588     079A                     l2025:
  2589                           
  2590                           ;main.c: 281: dat0[i] = atoi(ptr);
  2591     079A  082C               	movf	main@ptr^(0+384),w
  2592     079B  3183  2338  3183   	fcall	_atoi
  2593     079E  0023               	movlb	3	; select bank3
  2594     079F  3524               	lslf	main@i_161^(0+384),w
  2595     07A0  3E2B               	addlw	(low (main@dat0| 0))& (0+255)
  2596     07A1  0086               	movwf	6
  2597     07A2  0187               	clrf	7
  2598     07A3  0876               	movf	?_atoi,w
  2599     07A4  3FC0               	movwi [0]fsr1
  2600     07A5  0877               	movf	?_atoi+1,w
  2601     07A6  3FC1               	movwi [1]fsr1
  2602     07A7                     l2027:
  2603     07A7  3001               	movlw	1
  2604     07A8  07A4               	addwf	main@i_161^(0+384),f
  2605     07A9  3000               	movlw	0
  2606     07AA  3DA5               	addwfc	(main@i_161+1)^(0+384),f
  2607     07AB  2F7A               	goto	l2017
  2608     07AC                     l2031:
  2609                           
  2610                           ;main.c: 287: for (int i=0 ; i < 10 ; i++){
  2611     07AC  0023               	movlb	3	; select bank3
  2612     07AD  01A6               	clrf	main@i_163^(0+384)
  2613     07AE  01A7               	clrf	(main@i_163+1)^(0+384)
  2614     07AF                     l2033:
  2615     07AF  0827               	movf	(main@i_163+1)^(0+384),w
  2616     07B0  3A80               	xorlw	128
  2617     07B1  0020               	movlb	0	; select bank0
  2618     07B2  00AA               	movwf	??_main
  2619     07B3  3080               	movlw	128
  2620     07B4  022A               	subwf	??_main,w
  2621     07B5  1D03               	skipz
  2622     07B6  2FBA               	goto	u1595
  2623     07B7  300A               	movlw	10
  2624     07B8  0023               	movlb	3	; select bank3
  2625     07B9  0226               	subwf	main@i_163^(0+384),w
  2626     07BA                     u1595:
  2627     07BA  1C03               	skipc
  2628     07BB  2FBD               	goto	u1591
  2629     07BC  2FBE               	goto	u1590
  2630     07BD                     u1591:
  2631     07BD  2FBF               	goto	l2037
  2632     07BE                     u1590:
  2633     07BE  2BD1               	goto	l1753
  2634     07BF                     l2037:
  2635                           
  2636                           ;main.c: 288: DAC1CON1 = dat0[i] ;
  2637     07BF  0023               	movlb	3	; select bank3
  2638     07C0  3526               	lslf	main@i_163^(0+384),w
  2639     07C1  3E2B               	addlw	(low (main@dat0| 0))& (0+255)
  2640     07C2  0086               	movwf	6
  2641     07C3  0187               	clrf	7
  2642     07C4  0801               	movf	1,w
  2643     07C5  0022               	movlb	2	; select bank2
  2644     07C6  0099               	movwf	25	;volatile
  2645     07C7                     l2039:
  2646                           
  2647                           ;main.c: 289: _delay((unsigned long)((18)*(32000000/4000000.0))) ;
  2648     07C7  3030               	movlw	48
  2649     07C8                     u1667:
  2650     07C8  0B89               	decfsz	9,f
  2651     07C9  2FC8               	goto	u1667
  2652     07CA                     l2041:
  2653     07CA  3001               	movlw	1
  2654     07CB  0023               	movlb	3	; select bank3
  2655     07CC  07A6               	addwf	main@i_163^(0+384),f
  2656     07CD  3000               	movlw	0
  2657     07CE  3DA7               	addwfc	(main@i_163+1)^(0+384),f
  2658     07CF  2FAF               	goto	l2033
  2659     07D0                     l2045:
  2660                           
  2661                           ;main.c: 294: printf("VERSION 10");
  2662     07D0  3000               	movlw	low (STR_38| (0+32768))
  2663     07D1  00F1               	movwf	printf@f
  2664     07D2  3088               	movlw	high (STR_38| (0+32768))
  2665     07D3  00F2               	movwf	printf@f+1
  2666     07D4  3182  22D6  3183   	fcall	_printf
  2667                           
  2668                           ;main.c: 295: break;
  2669     07D7  2BD1               	goto	l1753
  2670     07D8                     l2049:
  2671     07D8  0020               	movlb	0	; select bank0
  2672     07D9  086F               	movf	main@cmd,w
  2673                           
  2674                           ; Switch size 1, requested type "simple"
  2675                           ; Number of cases is 10, Range of values is 0 to 10
  2676                           ; switch strategies available:
  2677                           ; Name         Instructions Cycles
  2678                           ; direct_byte           28     6 (fixed)
  2679                           ; simple_byte           31    16 (average)
  2680                           ; jumptable            260     6 (fixed)
  2681                           ;	Chosen strategy is simple_byte
  2682     07DA  3A00               	xorlw	0	; case 0
  2683     07DB  1903               	skipnz
  2684     07DC  2CCF               	goto	l1829
  2685     07DD  3A01               	xorlw	1	; case 1
  2686     07DE  1903               	skipnz
  2687     07DF  2D08               	goto	l1847
  2688     07E0  3A03               	xorlw	3	; case 2
  2689     07E1  1903               	skipnz
  2690     07E2  2D41               	goto	l1865
  2691     07E3  3A01               	xorlw	1	; case 3
  2692     07E4  1903               	skipnz
  2693     07E5  2D7D               	goto	l1883
  2694     07E6  3A07               	xorlw	7	; case 4
  2695     07E7  1903               	skipnz
  2696     07E8  2DB6               	goto	l1897
  2697     07E9  3A01               	xorlw	1	; case 5
  2698     07EA  1903               	skipnz
  2699     07EB  2DEF               	goto	l1911
  2700     07EC  3A03               	xorlw	3	; case 6
  2701     07ED  1903               	skipnz
  2702     07EE  2E28               	goto	l1925
  2703     07EF  3A01               	xorlw	1	; case 7
  2704     07F0  1903               	skipnz
  2705     07F1  2F77               	goto	l2015
  2706     07F2  3A0F               	xorlw	15	; case 8
  2707     07F3  1903               	skipnz
  2708     07F4  2FAC               	goto	l2031
  2709     07F5  3A02               	xorlw	2	; case 10
  2710     07F6  1903               	skipnz
  2711     07F7  2FD0               	goto	l2045
  2712     07F8  2BD1               	goto	l1753
  2713     07F9  3180  2802         	ljmp	start
  2714     07FB                     __end_of_main:
  2715                           
  2716                           	psect	text1
  2717     01CD                     __ptext1:	
  2718 ;; *************** function _strtok *****************
  2719 ;; Defined at:
  2720 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  s1              1    wreg     PTR unsigned char 
  2723 ;;		 -> NULL(0), main@tmp(40), 
  2724 ;;  s2              2    0[BANK0 ] PTR const unsigned char 
  2725 ;;		 -> STR_37(2), STR_29(2), STR_27(2), STR_26(2), 
  2726 ;;		 -> STR_24(2), STR_23(2), STR_21(2), STR_20(2), 
  2727 ;;		 -> STR_18(2), STR_16(2), STR_14(2), STR_13(2), 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  s1              1    4[BANK0 ] PTR unsigned char 
  2730 ;;		 -> NULL(0), main@tmp(40), 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      PTR unsigned char 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2744 ;;Total ram usage:        5 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 2
  2747 ;; This function calls:
  2748 ;;		_strcspn
  2749 ;;		_strspn
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755     01CD                     _strtok:	
  2756                           ;psect for function _strtok
  2757                           
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2761                           ;strtok@s1 stored from wreg
  2762     01CD  0020               	movlb	0	; select bank0
  2763     01CE  00A4               	movwf	strtok@s1
  2764     01CF                     l1681:
  2765     01CF  0824               	movf	strtok@s1,w
  2766     01D0  1D03               	btfss	3,2
  2767     01D1  29D3               	goto	u1111
  2768     01D2  29D4               	goto	u1110
  2769     01D3                     u1111:
  2770     01D3  29D8               	goto	l1685
  2771     01D4                     u1110:
  2772     01D4                     l1683:
  2773     01D4  0023               	movlb	3	; select bank3
  2774     01D5  082D               	movf	strtok@sp^(0+384),w
  2775     01D6  0020               	movlb	0	; select bank0
  2776     01D7  00A4               	movwf	strtok@s1
  2777     01D8                     l1685:
  2778     01D8  0824               	movf	strtok@s1,w
  2779     01D9  1D03               	btfss	3,2
  2780     01DA  29DC               	goto	u1121
  2781     01DB  29DD               	goto	u1120
  2782     01DC                     u1121:
  2783     01DC  29DF               	goto	l1691
  2784     01DD                     u1120:
  2785     01DD                     l1687:
  2786     01DD  3000               	movlw	0
  2787     01DE  2A22               	goto	l780
  2788     01DF                     l1691:
  2789     01DF  0821               	movf	strtok@s2+1,w
  2790     01E0  00F8               	movwf	strspn@s2+1
  2791     01E1  0820               	movf	strtok@s2,w
  2792     01E2  00F7               	movwf	strspn@s2
  2793     01E3  0824               	movf	strtok@s1,w
  2794     01E4  3181  2163  3181   	fcall	_strspn
  2795     01E7  0877               	movf	?_strspn,w
  2796     01E8  0020               	movlb	0	; select bank0
  2797     01E9  00A2               	movwf	??_strtok
  2798     01EA  0822               	movf	??_strtok,w
  2799     01EB  07A4               	addwf	strtok@s1,f
  2800     01EC                     l1693:
  2801     01EC  0824               	movf	strtok@s1,w
  2802     01ED  0086               	movwf	6
  2803     01EE  3001               	movlw	1	; select bank2/3
  2804     01EF  0087               	movwf	7
  2805     01F0  0801               	movf	1,w
  2806     01F1  1D03               	btfss	3,2
  2807     01F2  29F4               	goto	u1131
  2808     01F3  29F5               	goto	u1130
  2809     01F4                     u1131:
  2810     01F4  29F9               	goto	l1699
  2811     01F5                     u1130:
  2812     01F5                     l1695:
  2813     01F5  0023               	movlb	3	; select bank3
  2814     01F6  01AD               	clrf	strtok@sp^(0+384)
  2815     01F7  3000               	movlw	0
  2816     01F8  2A22               	goto	l780
  2817     01F9                     l1699:
  2818     01F9  0821               	movf	strtok@s2+1,w
  2819     01FA  00F8               	movwf	strcspn@s2+1
  2820     01FB  0820               	movf	strtok@s2,w
  2821     01FC  00F7               	movwf	strcspn@s2
  2822     01FD  0824               	movf	strtok@s1,w
  2823     01FE  3181  2131  3181   	fcall	_strcspn
  2824     0201  0877               	movf	?_strcspn,w
  2825     0202  0020               	movlb	0	; select bank0
  2826     0203  00A2               	movwf	??_strtok
  2827     0204  0878               	movf	?_strcspn+1,w
  2828     0205  00A3               	movwf	??_strtok+1
  2829     0206  0824               	movf	strtok@s1,w
  2830     0207  0722               	addwf	??_strtok,w
  2831     0208  0023               	movlb	3	; select bank3
  2832     0209  00AD               	movwf	strtok@sp^(0+384)
  2833     020A                     l1701:
  2834     020A  082D               	movf	strtok@sp^(0+384),w
  2835     020B  0086               	movwf	6
  2836     020C  3001               	movlw	1	; select bank2/3
  2837     020D  0087               	movwf	7
  2838     020E  0801               	movf	1,w
  2839     020F  1903               	btfsc	3,2
  2840     0210  2A12               	goto	u1141
  2841     0211  2A13               	goto	u1140
  2842     0212                     u1141:
  2843     0212  2A1F               	goto	l1707
  2844     0213                     u1140:
  2845     0213                     l1703:
  2846     0213  082D               	movf	strtok@sp^(0+384),w
  2847     0214  0086               	movwf	6
  2848     0215  3001               	movlw	1	; select bank2/3
  2849     0216  0087               	movwf	7
  2850     0217  0181               	clrf	1
  2851     0218                     l1705:
  2852     0218  3001               	movlw	1
  2853     0219  0020               	movlb	0	; select bank0
  2854     021A  00A2               	movwf	??_strtok
  2855     021B  0822               	movf	??_strtok,w
  2856     021C  0023               	movlb	3	; select bank3
  2857     021D  07AD               	addwf	strtok@sp^(0+384),f
  2858     021E  2A20               	goto	l1709
  2859     021F                     l1707:
  2860     021F  01AD               	clrf	strtok@sp^(0+384)
  2861     0220                     l1709:
  2862     0220  0020               	movlb	0	; select bank0
  2863     0221  0824               	movf	strtok@s1,w
  2864     0222                     l780:
  2865     0222  0008               	return
  2866     0223                     __end_of_strtok:
  2867                           
  2868                           	psect	text2
  2869     0163                     __ptext2:	
  2870 ;; *************** function _strspn *****************
  2871 ;; Defined at:
  2872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  s1              1    wreg     PTR const unsigned char 
  2875 ;;		 -> NULL(0), main@tmp(40), 
  2876 ;;  s2              2    7[COMMON] PTR const unsigned char 
  2877 ;;		 -> STR_37(2), STR_29(2), STR_27(2), STR_26(2), 
  2878 ;;		 -> STR_24(2), STR_23(2), STR_21(2), STR_20(2), 
  2879 ;;		 -> STR_18(2), STR_16(2), STR_14(2), STR_13(2), 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  s1              1   13[COMMON] PTR const unsigned char 
  2882 ;;		 -> NULL(0), main@tmp(40), 
  2883 ;;  i               2   11[COMMON] unsigned int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    7[COMMON] unsigned int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2896 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;Total ram usage:        7 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 1
  2900 ;; This function calls:
  2901 ;;		_strchr
  2902 ;; This function is called by:
  2903 ;;		_strtok
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907     0163                     _strspn:	
  2908                           ;psect for function _strspn
  2909                           
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2913                           ;strspn@s1 stored from wreg
  2914     0163  00FD               	movwf	strspn@s1
  2915     0164                     l1589:
  2916     0164  01FB               	clrf	strspn@i
  2917     0165  01FC               	clrf	strspn@i+1
  2918     0166  296F               	goto	l1593
  2919     0167                     l1591:
  2920     0167  3001               	movlw	1
  2921     0168  00F9               	movwf	??_strspn
  2922     0169  0879               	movf	??_strspn,w
  2923     016A  07FD               	addwf	strspn@s1,f
  2924     016B  3001               	movlw	1
  2925     016C  07FB               	addwf	strspn@i,f
  2926     016D  3000               	movlw	0
  2927     016E  3DFC               	addwfc	strspn@i+1,f
  2928     016F                     l1593:
  2929     016F  087D               	movf	strspn@s1,w
  2930     0170  0086               	movwf	6
  2931     0171  3001               	movlw	1	; select bank2/3
  2932     0172  0087               	movwf	7
  2933     0173  0801               	movf	1,w
  2934     0174  1903               	btfsc	3,2
  2935     0175  2977               	goto	u1001
  2936     0176  2978               	goto	u1000
  2937     0177                     u1001:
  2938     0177  2990               	goto	l1597
  2939     0178                     u1000:
  2940     0178                     l1595:
  2941     0178  0878               	movf	strspn@s2+1,w
  2942     0179  00F1               	movwf	strchr@ptr+1
  2943     017A  0877               	movf	strspn@s2,w
  2944     017B  00F0               	movwf	strchr@ptr
  2945     017C  087D               	movf	strspn@s1,w
  2946     017D  0086               	movwf	6
  2947     017E  3001               	movlw	1	; select bank2/3
  2948     017F  0087               	movwf	7
  2949     0180  0801               	movf	1,w
  2950     0181  00F9               	movwf	??_strspn
  2951     0182  01FA               	clrf	??_strspn+1
  2952     0183  0879               	movf	??_strspn,w
  2953     0184  00F2               	movwf	strchr@chr
  2954     0185  087A               	movf	??_strspn+1,w
  2955     0186  00F3               	movwf	strchr@chr+1
  2956     0187  3180  20CB  3181   	fcall	_strchr
  2957     018A  0870               	movf	?_strchr,w
  2958     018B  0471               	iorwf	?_strchr+1,w
  2959     018C  1D03               	btfss	3,2
  2960     018D  298F               	goto	u1011
  2961     018E  2990               	goto	u1010
  2962     018F                     u1011:
  2963     018F  2967               	goto	l1591
  2964     0190                     u1010:
  2965     0190                     l1597:
  2966     0190  087C               	movf	strspn@i+1,w
  2967     0191  00F8               	movwf	?_strspn+1
  2968     0192  087B               	movf	strspn@i,w
  2969     0193  00F7               	movwf	?_strspn
  2970     0194                     l809:
  2971     0194  0008               	return
  2972     0195                     __end_of_strspn:
  2973                           
  2974                           	psect	text3
  2975     0131                     __ptext3:	
  2976 ;; *************** function _strcspn *****************
  2977 ;; Defined at:
  2978 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  s1              1    wreg     PTR const unsigned char 
  2981 ;;		 -> NULL(0), main@tmp(40), 
  2982 ;;  s2              2    7[COMMON] PTR const unsigned char 
  2983 ;;		 -> STR_37(2), STR_29(2), STR_27(2), STR_26(2), 
  2984 ;;		 -> STR_24(2), STR_23(2), STR_21(2), STR_20(2), 
  2985 ;;		 -> STR_18(2), STR_16(2), STR_14(2), STR_13(2), 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  s1              1   13[COMMON] PTR const unsigned char 
  2988 ;;		 -> NULL(0), main@tmp(40), 
  2989 ;;  i               2   11[COMMON] unsigned int 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2    7[COMMON] unsigned int 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;Total ram usage:        7 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 1
  3006 ;; This function calls:
  3007 ;;		_strchr
  3008 ;; This function is called by:
  3009 ;;		_strtok
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013     0131                     _strcspn:	
  3014                           ;psect for function _strcspn
  3015                           
  3016                           
  3017                           ;incstack = 0
  3018                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3019                           ;strcspn@s1 stored from wreg
  3020     0131  00FD               	movwf	strcspn@s1
  3021     0132                     l1601:
  3022     0132  01FB               	clrf	strcspn@i
  3023     0133  01FC               	clrf	strcspn@i+1
  3024     0134  293D               	goto	l1605
  3025     0135                     l1603:
  3026     0135  3001               	movlw	1
  3027     0136  00F9               	movwf	??_strcspn
  3028     0137  0879               	movf	??_strcspn,w
  3029     0138  07FD               	addwf	strcspn@s1,f
  3030     0139  3001               	movlw	1
  3031     013A  07FB               	addwf	strcspn@i,f
  3032     013B  3000               	movlw	0
  3033     013C  3DFC               	addwfc	strcspn@i+1,f
  3034     013D                     l1605:
  3035     013D  087D               	movf	strcspn@s1,w
  3036     013E  0086               	movwf	6
  3037     013F  3001               	movlw	1	; select bank2/3
  3038     0140  0087               	movwf	7
  3039     0141  0801               	movf	1,w
  3040     0142  1903               	btfsc	3,2
  3041     0143  2945               	goto	u1021
  3042     0144  2946               	goto	u1020
  3043     0145                     u1021:
  3044     0145  295E               	goto	l1609
  3045     0146                     u1020:
  3046     0146                     l1607:
  3047     0146  0878               	movf	strcspn@s2+1,w
  3048     0147  00F1               	movwf	strchr@ptr+1
  3049     0148  0877               	movf	strcspn@s2,w
  3050     0149  00F0               	movwf	strchr@ptr
  3051     014A  087D               	movf	strcspn@s1,w
  3052     014B  0086               	movwf	6
  3053     014C  3001               	movlw	1	; select bank2/3
  3054     014D  0087               	movwf	7
  3055     014E  0801               	movf	1,w
  3056     014F  00F9               	movwf	??_strcspn
  3057     0150  01FA               	clrf	??_strcspn+1
  3058     0151  0879               	movf	??_strcspn,w
  3059     0152  00F2               	movwf	strchr@chr
  3060     0153  087A               	movf	??_strcspn+1,w
  3061     0154  00F3               	movwf	strchr@chr+1
  3062     0155  3180  20CB  3181   	fcall	_strchr
  3063     0158  0870               	movf	?_strchr,w
  3064     0159  0471               	iorwf	?_strchr+1,w
  3065     015A  1903               	btfsc	3,2
  3066     015B  295D               	goto	u1031
  3067     015C  295E               	goto	u1030
  3068     015D                     u1031:
  3069     015D  2935               	goto	l1603
  3070     015E                     u1030:
  3071     015E                     l1609:
  3072     015E  087C               	movf	strcspn@i+1,w
  3073     015F  00F8               	movwf	?_strcspn+1
  3074     0160  087B               	movf	strcspn@i,w
  3075     0161  00F7               	movwf	?_strcspn
  3076     0162                     l793:
  3077     0162  0008               	return
  3078     0163                     __end_of_strcspn:
  3079                           
  3080                           	psect	text4
  3081     00CB                     __ptext4:	
  3082 ;; *************** function _strchr *****************
  3083 ;; Defined at:
  3084 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  ptr             2    0[COMMON] PTR const unsigned char 
  3087 ;;		 -> STR_37(2), STR_29(2), STR_27(2), STR_26(2), 
  3088 ;;		 -> STR_24(2), STR_23(2), STR_21(2), STR_20(2), 
  3089 ;;		 -> STR_18(2), STR_16(2), STR_14(2), STR_13(2), 
  3090 ;;  chr             2    2[COMMON] int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2    0[COMMON] PTR unsigned char 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;Total ram usage:        7 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_strcspn
  3112 ;;		_strspn
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116     00CB                     _strchr:	
  3117                           ;psect for function _strchr
  3118                           
  3119     00CB                     l796:	
  3120                           ;incstack = 0
  3121                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  3122                           
  3123     00CB                     l1495:
  3124     00CB  0870               	movf	strchr@ptr,w
  3125     00CC  0084               	movwf	4
  3126     00CD  0871               	movf	strchr@ptr+1,w
  3127     00CE  0085               	movwf	5
  3128     00CF  0800               	movf	0,w	;code access
  3129     00D0  0672               	xorwf	strchr@chr,w
  3130     00D1  1D03               	skipz
  3131     00D2  28D4               	goto	u831
  3132     00D3  28D5               	goto	u830
  3133     00D4                     u831:
  3134     00D4  28D6               	goto	l1499
  3135     00D5                     u830:
  3136     00D5                     l1497:
  3137     00D5  28E8               	goto	l798
  3138     00D6                     l1499:
  3139     00D6  0871               	movf	strchr@ptr+1,w
  3140     00D7  00F5               	movwf	??_strchr+1
  3141     00D8  0870               	movf	strchr@ptr,w
  3142     00D9  00F4               	movwf	??_strchr
  3143     00DA  0AF0               	incf	strchr@ptr,f
  3144     00DB  1903               	skipnz
  3145     00DC  0AF1               	incf	strchr@ptr+1,f
  3146     00DD  0874               	movf	??_strchr,w
  3147     00DE  0084               	movwf	4
  3148     00DF  0875               	movf	??_strchr+1,w
  3149     00E0  0085               	movwf	5
  3150     00E1  0012               	moviw fsr0++
  3151     00E2  1D03               	btfss	3,2
  3152     00E3  28E5               	goto	u841
  3153     00E4  28E6               	goto	u840
  3154     00E5                     u841:
  3155     00E5  28CB               	goto	l796
  3156     00E6                     u840:
  3157     00E6                     l1501:
  3158     00E6  01F0               	clrf	?_strchr
  3159     00E7  01F1               	clrf	?_strchr+1
  3160     00E8                     l798:
  3161     00E8  0008               	return
  3162     00E9                     __end_of_strchr:
  3163                           
  3164                           	psect	text5
  3165     0108                     __ptext5:	
  3166 ;; *************** function _strcmp *****************
  3167 ;; Defined at:
  3168 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  s1              1    wreg     PTR const unsigned char 
  3171 ;;		 -> NULL(0), main@tmp(40), main@rcmd(4), 
  3172 ;;  s2              2    0[COMMON] PTR const unsigned char 
  3173 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  3174 ;;		 -> STR_31(3), STR_30(3), STR_12(4), STR_11(4), 
  3175 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3176 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  3177 ;;		 -> STR_2(4), 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  s1              1    4[COMMON] PTR const unsigned char 
  3180 ;;		 -> NULL(0), main@tmp(40), main@rcmd(4), 
  3181 ;;  r               1    3[COMMON] char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2    0[COMMON] int 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;Total ram usage:        5 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204     0108                     _strcmp:	
  3205                           ;psect for function _strcmp
  3206                           
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  3210                           ;strcmp@s1 stored from wreg
  3211     0108  00F4               	movwf	strcmp@s1
  3212     0109                     l1669:
  3213     0109  2912               	goto	l1673
  3214     010A                     l1671:
  3215     010A  3001               	movlw	1
  3216     010B  00F2               	movwf	??_strcmp
  3217     010C  0872               	movf	??_strcmp,w
  3218     010D  07F4               	addwf	strcmp@s1,f
  3219     010E  3001               	movlw	1
  3220     010F  07F0               	addwf	strcmp@s2,f
  3221     0110  3000               	movlw	0
  3222     0111  3DF1               	addwfc	strcmp@s2+1,f
  3223     0112                     l1673:
  3224     0112  0874               	movf	strcmp@s1,w
  3225     0113  0086               	movwf	6
  3226     0114  3001               	movlw	1	; select bank2/3
  3227     0115  0087               	movwf	7
  3228     0116  0870               	movf	strcmp@s2,w
  3229     0117  0084               	movwf	4
  3230     0118  0871               	movf	strcmp@s2+1,w
  3231     0119  0085               	movwf	5
  3232     011A  0800               	movf	0,w	;code access
  3233     011B  0201               	subwf	1,w
  3234     011C  00F3               	movwf	strcmp@r
  3235     011D  0873               	movf	strcmp@r,w
  3236     011E  1D03               	btfss	3,2
  3237     011F  2921               	goto	u1091
  3238     0120  2922               	goto	u1090
  3239     0121                     u1091:
  3240     0121  292B               	goto	l1677
  3241     0122                     u1090:
  3242     0122                     l1675:
  3243     0122  0874               	movf	strcmp@s1,w
  3244     0123  0086               	movwf	6
  3245     0124  3001               	movlw	1	; select bank2/3
  3246     0125  0087               	movwf	7
  3247     0126  0801               	movf	1,w
  3248     0127  1D03               	btfss	3,2
  3249     0128  292A               	goto	u1101
  3250     0129  292B               	goto	u1100
  3251     012A                     u1101:
  3252     012A  290A               	goto	l1671
  3253     012B                     u1100:
  3254     012B                     l1677:
  3255     012B  0873               	movf	strcmp@r,w
  3256     012C  00F0               	movwf	?_strcmp
  3257     012D  01F1               	clrf	?_strcmp+1
  3258     012E  1BF0               	btfsc	?_strcmp,7
  3259     012F  03F1               	decf	?_strcmp+1,f
  3260     0130                     l769:
  3261     0130  0008               	return
  3262     0131                     __end_of_strcmp:
  3263                           
  3264                           	psect	text6
  3265     0195                     __ptext6:	
  3266 ;; *************** function _serial_init *****************
  3267 ;; Defined at:
  3268 ;;		line 41 in file "main.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  BR              4    0[BANK0 ] unsigned long 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  X               2    8[BANK0 ] unsigned int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;Total ram usage:       10 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 1
  3289 ;; This function calls:
  3290 ;;		___lldiv
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296     0195                     _serial_init:	
  3297                           ;psect for function _serial_init
  3298                           
  3299     0195                     l1613:	
  3300                           ;incstack = 0
  3301                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  3302                           
  3303                           
  3304                           ;main.c: 42: TX1STA = 0x24;
  3305     0195  3024               	movlw	36
  3306     0196  0023               	movlb	3	; select bank3
  3307     0197  009E               	movwf	30	;volatile
  3308     0198                     l1615:
  3309                           
  3310                           ;main.c: 43: BRG16 = 1;
  3311     0198  159F               	bsf	31,3	;volatile
  3312                           
  3313                           ;main.c: 44: RC1STA = 0x90;
  3314     0199  3090               	movlw	144
  3315     019A  009D               	movwf	29	;volatile
  3316     019B                     l1617:
  3317                           
  3318                           ;main.c: 45: unsigned int X= 32000000/BR/4 - 1;
  3319     019B  0020               	movlb	0	; select bank0
  3320     019C  0823               	movf	serial_init@BR+3,w
  3321     019D  00F3               	movwf	___lldiv@divisor+3
  3322     019E  0822               	movf	serial_init@BR+2,w
  3323     019F  00F2               	movwf	___lldiv@divisor+2
  3324     01A0  0821               	movf	serial_init@BR+1,w
  3325     01A1  00F1               	movwf	___lldiv@divisor+1
  3326     01A2  0820               	movf	serial_init@BR,w
  3327     01A3  00F0               	movwf	___lldiv@divisor
  3328     01A4  3001               	movlw	1
  3329     01A5  00F7               	movwf	___lldiv@dividend+3
  3330     01A6  30E8               	movlw	232
  3331     01A7  00F6               	movwf	___lldiv@dividend+2
  3332     01A8  3048               	movlw	72
  3333     01A9  00F5               	movwf	___lldiv@dividend+1
  3334     01AA  3000               	movlw	0
  3335     01AB  00F4               	movwf	___lldiv@dividend
  3336     01AC  3182  227C  3181   	fcall	___lldiv
  3337     01AF  0870               	movf	?___lldiv,w
  3338     01B0  0020               	movlb	0	; select bank0
  3339     01B1  00A4               	movwf	??_serial_init
  3340     01B2  0871               	movf	?___lldiv+1,w
  3341     01B3  00A5               	movwf	??_serial_init+1
  3342     01B4  0872               	movf	?___lldiv+2,w
  3343     01B5  00A6               	movwf	??_serial_init+2
  3344     01B6  0873               	movf	?___lldiv+3,w
  3345     01B7  00A7               	movwf	??_serial_init+3
  3346     01B8  3002               	movlw	2
  3347     01B9                     u1045:
  3348     01B9  36A7               	lsrf	??_serial_init+3,f
  3349     01BA  0CA6               	rrf	??_serial_init+2,f
  3350     01BB  0CA5               	rrf	??_serial_init+1,f
  3351     01BC  0CA4               	rrf	??_serial_init,f
  3352     01BD                     u1040:
  3353     01BD  0B89               	decfsz	9,f
  3354     01BE  29B9               	goto	u1045
  3355     01BF  0824               	movf	??_serial_init,w
  3356     01C0  3EFF               	addlw	255
  3357     01C1  00A8               	movwf	serial_init@X
  3358     01C2  30FF               	movlw	255
  3359     01C3  3D25               	addwfc	??_serial_init+1,w
  3360     01C4  00A9               	movwf	serial_init@X+1
  3361     01C5                     l1619:
  3362                           
  3363                           ;main.c: 46: SP1BRGH = X / 256;
  3364     01C5  0829               	movf	serial_init@X+1,w
  3365     01C6  0023               	movlb	3	; select bank3
  3366     01C7  009C               	movwf	28	;volatile
  3367     01C8                     l1621:
  3368                           
  3369                           ;main.c: 47: SP1BRGL = X % 256;
  3370     01C8  0020               	movlb	0	; select bank0
  3371     01C9  0828               	movf	serial_init@X,w
  3372     01CA  0023               	movlb	3	; select bank3
  3373     01CB  009B               	movwf	27	;volatile
  3374     01CC                     l47:
  3375     01CC  0008               	return
  3376     01CD                     __end_of_serial_init:
  3377                           
  3378                           	psect	text7
  3379     027C                     __ptext7:	
  3380 ;; *************** function ___lldiv *****************
  3381 ;; Defined at:
  3382 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  divisor         4    0[COMMON] unsigned long 
  3385 ;;  dividend        4    4[COMMON] unsigned long 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  quotient        4    9[COMMON] unsigned long 
  3388 ;;  counter         1   13[COMMON] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  4    0[COMMON] unsigned long 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3398 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;Total ram usage:       14 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_serial_init
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411     027C                     ___lldiv:	
  3412                           ;psect for function ___lldiv
  3413                           
  3414     027C                     l1519:	
  3415                           ;incstack = 0
  3416                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3417                           
  3418     027C  3000               	movlw	0
  3419     027D  00FC               	movwf	___lldiv@quotient+3
  3420     027E  3000               	movlw	0
  3421     027F  00FB               	movwf	___lldiv@quotient+2
  3422     0280  3000               	movlw	0
  3423     0281  00FA               	movwf	___lldiv@quotient+1
  3424     0282  3000               	movlw	0
  3425     0283  00F9               	movwf	___lldiv@quotient
  3426     0284  0873               	movf	___lldiv@divisor+3,w
  3427     0285  0472               	iorwf	___lldiv@divisor+2,w
  3428     0286  0471               	iorwf	___lldiv@divisor+1,w
  3429     0287  0470               	iorwf	___lldiv@divisor,w
  3430     0288  1903               	skipnz
  3431     0289  2A8B               	goto	u891
  3432     028A  2A8C               	goto	u890
  3433     028B                     u891:
  3434     028B  2ACD               	goto	l1539
  3435     028C                     u890:
  3436     028C                     l1521:
  3437     028C  01FD               	clrf	___lldiv@counter
  3438     028D  0AFD               	incf	___lldiv@counter,f
  3439     028E  2A9A               	goto	l1525
  3440     028F                     l1523:
  3441     028F  3001               	movlw	1
  3442     0290                     u905:
  3443     0290  35F0               	lslf	___lldiv@divisor,f
  3444     0291  0DF1               	rlf	___lldiv@divisor+1,f
  3445     0292  0DF2               	rlf	___lldiv@divisor+2,f
  3446     0293  0DF3               	rlf	___lldiv@divisor+3,f
  3447     0294  0B89               	decfsz	9,f
  3448     0295  2A90               	goto	u905
  3449     0296  3001               	movlw	1
  3450     0297  00F8               	movwf	??___lldiv
  3451     0298  0878               	movf	??___lldiv,w
  3452     0299  07FD               	addwf	___lldiv@counter,f
  3453     029A                     l1525:
  3454     029A  1FF3               	btfss	___lldiv@divisor+3,7
  3455     029B  2A9D               	goto	u911
  3456     029C  2A9E               	goto	u910
  3457     029D                     u911:
  3458     029D  2A8F               	goto	l1523
  3459     029E                     u910:
  3460     029E                     l1527:
  3461     029E  3001               	movlw	1
  3462     029F                     u925:
  3463     029F  35F9               	lslf	___lldiv@quotient,f
  3464     02A0  0DFA               	rlf	___lldiv@quotient+1,f
  3465     02A1  0DFB               	rlf	___lldiv@quotient+2,f
  3466     02A2  0DFC               	rlf	___lldiv@quotient+3,f
  3467     02A3  0B89               	decfsz	9,f
  3468     02A4  2A9F               	goto	u925
  3469     02A5                     l1529:
  3470     02A5  0873               	movf	___lldiv@divisor+3,w
  3471     02A6  0277               	subwf	___lldiv@dividend+3,w
  3472     02A7  1D03               	skipz
  3473     02A8  2AB3               	goto	u935
  3474     02A9  0872               	movf	___lldiv@divisor+2,w
  3475     02AA  0276               	subwf	___lldiv@dividend+2,w
  3476     02AB  1D03               	skipz
  3477     02AC  2AB3               	goto	u935
  3478     02AD  0871               	movf	___lldiv@divisor+1,w
  3479     02AE  0275               	subwf	___lldiv@dividend+1,w
  3480     02AF  1D03               	skipz
  3481     02B0  2AB3               	goto	u935
  3482     02B1  0870               	movf	___lldiv@divisor,w
  3483     02B2  0274               	subwf	___lldiv@dividend,w
  3484     02B3                     u935:
  3485     02B3  1C03               	skipc
  3486     02B4  2AB6               	goto	u931
  3487     02B5  2AB7               	goto	u930
  3488     02B6                     u931:
  3489     02B6  2AC0               	goto	l1535
  3490     02B7                     u930:
  3491     02B7                     l1531:
  3492     02B7  0870               	movf	___lldiv@divisor,w
  3493     02B8  02F4               	subwf	___lldiv@dividend,f
  3494     02B9  0871               	movf	___lldiv@divisor+1,w
  3495     02BA  3BF5               	subwfb	___lldiv@dividend+1,f
  3496     02BB  0872               	movf	___lldiv@divisor+2,w
  3497     02BC  3BF6               	subwfb	___lldiv@dividend+2,f
  3498     02BD  0873               	movf	___lldiv@divisor+3,w
  3499     02BE  3BF7               	subwfb	___lldiv@dividend+3,f
  3500     02BF                     l1533:
  3501     02BF  1479               	bsf	___lldiv@quotient,0
  3502     02C0                     l1535:
  3503     02C0  3001               	movlw	1
  3504     02C1                     u945:
  3505     02C1  36F3               	lsrf	___lldiv@divisor+3,f
  3506     02C2  0CF2               	rrf	___lldiv@divisor+2,f
  3507     02C3  0CF1               	rrf	___lldiv@divisor+1,f
  3508     02C4  0CF0               	rrf	___lldiv@divisor,f
  3509     02C5  0B89               	decfsz	9,f
  3510     02C6  2AC1               	goto	u945
  3511     02C7                     l1537:
  3512     02C7  3001               	movlw	1
  3513     02C8  02FD               	subwf	___lldiv@counter,f
  3514     02C9  1D03               	btfss	3,2
  3515     02CA  2ACC               	goto	u951
  3516     02CB  2ACD               	goto	u950
  3517     02CC                     u951:
  3518     02CC  2A9E               	goto	l1527
  3519     02CD                     u950:
  3520     02CD                     l1539:
  3521     02CD  087C               	movf	___lldiv@quotient+3,w
  3522     02CE  00F3               	movwf	?___lldiv+3
  3523     02CF  087B               	movf	___lldiv@quotient+2,w
  3524     02D0  00F2               	movwf	?___lldiv+2
  3525     02D1  087A               	movf	___lldiv@quotient+1,w
  3526     02D2  00F1               	movwf	?___lldiv+1
  3527     02D3  0879               	movf	___lldiv@quotient,w
  3528     02D4  00F0               	movwf	?___lldiv
  3529     02D5                     l304:
  3530     02D5  0008               	return
  3531     02D6                     __end_of___lldiv:
  3532                           
  3533                           	psect	text8
  3534     02D6                     __ptext8:	
  3535 ;; *************** function _printf *****************
  3536 ;; Defined at:
  3537 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  f               2    1[COMMON] PTR const unsigned char 
  3540 ;;		 -> STR_38(11), STR_36(9), STR_28(8), STR_25(8), 
  3541 ;;		 -> STR_22(8), STR_19(8), STR_17(8), STR_15(8), 
  3542 ;;		 -> STR_1(4), 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  tmpval          4    0        struct .
  3545 ;;  cp              2    9[COMMON] PTR const unsigned char 
  3546 ;;		 -> STR_39(7), ?_printf(2), main@tmp(40), 
  3547 ;;  len             2    0        unsigned int 
  3548 ;;  val             2    0        unsigned int 
  3549 ;;  c               1    8[COMMON] unsigned char 
  3550 ;;  ap              1    7[COMMON] PTR void [1]
  3551 ;;		 -> ?_printf(2), 
  3552 ;;  flag            1    0        unsigned char 
  3553 ;;  prec            1    0        char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2    1[COMMON] int 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3566 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3567 ;;Total ram usage:       10 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 1
  3570 ;; This function calls:
  3571 ;;		_putch
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577     02D6                     _printf:	
  3578                           ;psect for function _printf
  3579                           
  3580     02D6                     l1641:	
  3581                           ;incstack = 0
  3582                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3583                           
  3584                           
  3585                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3586     02D6  3073               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3587     02D7  00F7               	movwf	printf@ap
  3588                           
  3589                           ;doprnt.c: 553: while((c = *f++)) {
  3590     02D8  2B25               	goto	l1667
  3591     02D9                     l1643:
  3592                           
  3593                           ;doprnt.c: 555: if(c != '%')
  3594     02D9  3025               	movlw	37
  3595     02DA  0678               	xorwf	printf@c,w
  3596     02DB  1903               	btfsc	3,2
  3597     02DC  2ADE               	goto	u1051
  3598     02DD  2ADF               	goto	u1050
  3599     02DE                     u1051:
  3600     02DE  2AE4               	goto	l1647
  3601     02DF                     u1050:
  3602     02DF                     l1645:
  3603                           
  3604                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3605     02DF  0878               	movf	printf@c,w
  3606     02E0  3180  2093  3182   	fcall	_putch
  3607                           
  3608                           ;doprnt.c: 559: continue;
  3609     02E3  2B25               	goto	l1667
  3610     02E4                     l1647:
  3611                           
  3612                           ;doprnt.c: 661: switch(c = *f++) {
  3613     02E4  2B11               	goto	l1665
  3614     02E5                     l1649:
  3615                           
  3616                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3617     02E5  0877               	movf	printf@ap,w
  3618     02E6  0086               	movwf	6
  3619     02E7  0187               	clrf	7
  3620     02E8  3F40               	moviw [0]fsr1
  3621     02E9  00F9               	movwf	printf@cp
  3622     02EA  3F41               	moviw [1]fsr1
  3623     02EB  00FA               	movwf	printf@cp+1
  3624     02EC                     l1651:
  3625     02EC  3002               	movlw	2
  3626     02ED  00F5               	movwf	??_printf
  3627     02EE  0875               	movf	??_printf,w
  3628     02EF  07F7               	addwf	printf@ap,f
  3629     02F0                     l1653:
  3630                           
  3631                           ;doprnt.c: 766: if(!cp)
  3632     02F0  0879               	movf	printf@cp,w
  3633     02F1  047A               	iorwf	printf@cp+1,w
  3634     02F2  1D03               	btfss	3,2
  3635     02F3  2AF5               	goto	u1061
  3636     02F4  2AF6               	goto	u1060
  3637     02F5                     u1061:
  3638     02F5  2B07               	goto	l1661
  3639     02F6                     u1060:
  3640     02F6                     l1655:
  3641                           
  3642                           ;doprnt.c: 767: cp = "(null)";
  3643     02F6  3044               	movlw	low (STR_39| (0+32768))
  3644     02F7  00F9               	movwf	printf@cp
  3645     02F8  3088               	movlw	high (STR_39| (0+32768))
  3646     02F9  00FA               	movwf	printf@cp+1
  3647     02FA  2B07               	goto	l1661
  3648     02FB                     l1657:
  3649                           
  3650                           ;doprnt.c: 804: (putch(*cp++) );
  3651     02FB  0879               	movf	printf@cp,w
  3652     02FC  0084               	movwf	4
  3653     02FD  087A               	movf	printf@cp+1,w
  3654     02FE  0085               	movwf	5
  3655     02FF  0800               	movf	0,w	;code access
  3656     0300  3180  2093  3182   	fcall	_putch
  3657     0303                     l1659:
  3658     0303  3001               	movlw	1
  3659     0304  07F9               	addwf	printf@cp,f
  3660     0305  3000               	movlw	0
  3661     0306  3DFA               	addwfc	printf@cp+1,f
  3662     0307                     l1661:
  3663     0307  0879               	movf	printf@cp,w
  3664     0308  0084               	movwf	4
  3665     0309  087A               	movf	printf@cp+1,w
  3666     030A  0085               	movwf	5
  3667     030B  0012               	moviw fsr0++
  3668     030C  1D03               	btfss	3,2
  3669     030D  2B0F               	goto	u1071
  3670     030E  2B10               	goto	u1070
  3671     030F                     u1071:
  3672     030F  2AFB               	goto	l1657
  3673     0310                     u1070:
  3674     0310  2B25               	goto	l1667
  3675     0311                     l1665:
  3676     0311  0872               	movf	printf@f+1,w
  3677     0312  00F6               	movwf	??_printf+1
  3678     0313  0871               	movf	printf@f,w
  3679     0314  00F5               	movwf	??_printf
  3680     0315  0AF1               	incf	printf@f,f
  3681     0316  1903               	skipnz
  3682     0317  0AF2               	incf	printf@f+1,f
  3683     0318  0875               	movf	??_printf,w
  3684     0319  0084               	movwf	4
  3685     031A  0876               	movf	??_printf+1,w
  3686     031B  0085               	movwf	5
  3687     031C  0800               	movf	0,w	;code access
  3688     031D  00F8               	movwf	printf@c
  3689                           
  3690                           ; Switch size 1, requested type "simple"
  3691                           ; Number of cases is 2, Range of values is 0 to 115
  3692                           ; switch strategies available:
  3693                           ; Name         Instructions Cycles
  3694                           ; simple_byte            7     4 (average)
  3695                           ; direct_byte          238     6 (fixed)
  3696                           ; jumptable            260     6 (fixed)
  3697                           ;	Chosen strategy is simple_byte
  3698     031E  3A00               	xorlw	0	; case 0
  3699     031F  1903               	skipnz
  3700     0320  2B37               	goto	l264
  3701     0321  3A73               	xorlw	115	; case 115
  3702     0322  1903               	skipnz
  3703     0323  2AE5               	goto	l1649
  3704     0324  2B25               	goto	l1667
  3705     0325                     l1667:
  3706     0325  0872               	movf	printf@f+1,w
  3707     0326  00F6               	movwf	??_printf+1
  3708     0327  0871               	movf	printf@f,w
  3709     0328  00F5               	movwf	??_printf
  3710     0329  0AF1               	incf	printf@f,f
  3711     032A  1903               	skipnz
  3712     032B  0AF2               	incf	printf@f+1,f
  3713     032C  0875               	movf	??_printf,w
  3714     032D  0084               	movwf	4
  3715     032E  0876               	movf	??_printf+1,w
  3716     032F  0085               	movwf	5
  3717     0330  0800               	movf	0,w	;code access
  3718     0331  00F8               	movwf	printf@c
  3719     0332  0878               	movf	printf@c,w
  3720     0333  1D03               	btfss	3,2
  3721     0334  2B36               	goto	u1081
  3722     0335  2B37               	goto	u1080
  3723     0336                     u1081:
  3724     0336  2AD9               	goto	l1643
  3725     0337                     u1080:
  3726     0337                     l264:
  3727     0337  0008               	return
  3728     0338                     __end_of_printf:
  3729                           
  3730                           	psect	text9
  3731     0085                     __ptext9:	
  3732 ;; *************** function _gets *****************
  3733 ;; Defined at:
  3734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  s               1    wreg     PTR unsigned char 
  3737 ;;		 -> main@tmp(40), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  s               1   10[COMMON] PTR unsigned char 
  3740 ;;		 -> main@tmp(40), 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      PTR unsigned char 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 3
  3757 ;; This function calls:
  3758 ;;		_cgets
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764     0085                     _gets:	
  3765                           ;psect for function _gets
  3766                           
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _gets: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3770                           ;gets@s stored from wreg
  3771     0085  00FA               	movwf	gets@s
  3772     0086                     l1637:
  3773                           
  3774                           ;	Return value of _gets is never used
  3775     0086  087A               	movf	gets@s,w
  3776     0087  3182  2223  3180   	fcall	_cgets
  3777     008A                     l736:
  3778     008A  0008               	return
  3779     008B                     __end_of_gets:
  3780                           
  3781                           	psect	text10
  3782     0223                     __ptext10:	
  3783 ;; *************** function _cgets *****************
  3784 ;; Defined at:
  3785 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  s               1    wreg     PTR unsigned char 
  3788 ;;		 -> main@tmp(40), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  s               1    8[COMMON] PTR unsigned char 
  3791 ;;		 -> main@tmp(40), 
  3792 ;;  c               2    6[COMMON] int 
  3793 ;;  s1              1    9[COMMON] PTR unsigned char 
  3794 ;;		 -> main@tmp(40), 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      PTR unsigned char 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;Total ram usage:        8 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 2
  3811 ;; This function calls:
  3812 ;;		_getche
  3813 ;;		_putch
  3814 ;; This function is called by:
  3815 ;;		_gets
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819     0223                     _cgets:	
  3820                           ;psect for function _cgets
  3821                           
  3822                           
  3823                           ;incstack = 0
  3824                           ; Regs used in _cgets: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3825                           ;cgets@s stored from wreg
  3826     0223  00F8               	movwf	cgets@s
  3827     0224                     l1555:
  3828     0224  0878               	movf	cgets@s,w
  3829     0225  00F9               	movwf	cgets@s1
  3830     0226  2A5F               	goto	l1583
  3831     0227                     l1557:
  3832     0227  0878               	movf	cgets@s,w
  3833     0228  0679               	xorwf	cgets@s1,w
  3834     0229  1D03               	skipz
  3835     022A  2A2C               	goto	u981
  3836     022B  2A2D               	goto	u980
  3837     022C                     u981:
  3838     022C  2A2E               	goto	l1561
  3839     022D                     u980:
  3840     022D  2A5F               	goto	l1583
  3841     022E                     l1561:
  3842     022E  3020               	movlw	32
  3843     022F  3180  2093  3182   	fcall	_putch
  3844     0232  3008               	movlw	8
  3845     0233  3180  2093  3182   	fcall	_putch
  3846     0236                     l1563:
  3847     0236  3001               	movlw	1
  3848     0237  02F9               	subwf	cgets@s1,f
  3849     0238  2A5F               	goto	l1583
  3850     0239                     l1565:
  3851     0239  3008               	movlw	8
  3852     023A  3180  2093  3182   	fcall	_putch
  3853     023D  3020               	movlw	32
  3854     023E  3180  2093  3182   	fcall	_putch
  3855     0241  3008               	movlw	8
  3856     0242  3180  2093  3182   	fcall	_putch
  3857     0245                     l1567:
  3858     0245  3001               	movlw	1
  3859     0246  02F9               	subwf	cgets@s1,f
  3860     0247                     l1569:
  3861     0247  0879               	movf	cgets@s1,w
  3862     0248  0278               	subwf	cgets@s,w
  3863     0249  1C03               	skipc
  3864     024A  2A4C               	goto	u991
  3865     024B  2A4D               	goto	u990
  3866     024C                     u991:
  3867     024C  2A39               	goto	l1565
  3868     024D                     u990:
  3869     024D  2A5F               	goto	l1583
  3870     024E                     l1571:
  3871     024E  0879               	movf	cgets@s1,w
  3872     024F  0086               	movwf	6
  3873     0250  3001               	movlw	1	; select bank2/3
  3874     0251  0087               	movwf	7
  3875     0252  0181               	clrf	1
  3876     0253                     l1573:
  3877     0253  0878               	movf	cgets@s,w
  3878     0254  2A7B               	goto	l754
  3879     0255                     l1577:
  3880     0255  0879               	movf	cgets@s1,w
  3881     0256  0086               	movwf	6
  3882     0257  3001               	movlw	1	; select bank2/3
  3883     0258  0087               	movwf	7
  3884     0259  0876               	movf	cgets@c,w
  3885     025A  0081               	movwf	1
  3886     025B                     l1579:
  3887     025B  3001               	movlw	1
  3888     025C  00F4               	movwf	??_cgets
  3889     025D  0874               	movf	??_cgets,w
  3890     025E  07F9               	addwf	cgets@s1,f
  3891     025F                     l1583:
  3892     025F  3180  209D  3182   	fcall	_getche
  3893     0262  00F4               	movwf	??_cgets
  3894     0263  01F5               	clrf	??_cgets+1
  3895     0264  0874               	movf	??_cgets,w
  3896     0265  00F6               	movwf	cgets@c
  3897     0266  0875               	movf	??_cgets+1,w
  3898     0267  00F7               	movwf	cgets@c+1
  3899                           
  3900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3901                           ; Switch size 1, requested type "simple"
  3902                           ; Number of cases is 1, Range of values is 0 to 0
  3903                           ; switch strategies available:
  3904                           ; Name         Instructions Cycles
  3905                           ; simple_byte            4     3 (average)
  3906                           ; direct_byte            8     6 (fixed)
  3907                           ; jumptable            260     6 (fixed)
  3908                           ;	Chosen strategy is simple_byte
  3909     0268  0877               	movf	cgets@c+1,w
  3910     0269  3A00               	xorlw	0	; case 0
  3911     026A  1903               	skipnz
  3912     026B  2A6D               	goto	l2071
  3913     026C  2A55               	goto	l1577
  3914     026D                     l2071:
  3915                           
  3916                           ; Switch size 1, requested type "simple"
  3917                           ; Number of cases is 4, Range of values is 8 to 21
  3918                           ; switch strategies available:
  3919                           ; Name         Instructions Cycles
  3920                           ; simple_byte           13     7 (average)
  3921                           ; direct_byte           37     9 (fixed)
  3922                           ; jumptable            263     9 (fixed)
  3923                           ;	Chosen strategy is simple_byte
  3924     026D  0876               	movf	cgets@c,w
  3925     026E  3A08               	xorlw	8	; case 8
  3926     026F  1903               	skipnz
  3927     0270  2A27               	goto	l1557
  3928     0271  3A02               	xorlw	2	; case 10
  3929     0272  1903               	skipnz
  3930     0273  2A4E               	goto	l1571
  3931     0274  3A07               	xorlw	7	; case 13
  3932     0275  1903               	skipnz
  3933     0276  2A4E               	goto	l1571
  3934     0277  3A18               	xorlw	24	; case 21
  3935     0278  1903               	skipnz
  3936     0279  2A47               	goto	l1569
  3937     027A  2A55               	goto	l1577
  3938     027B                     l754:
  3939     027B  0008               	return
  3940     027C                     __end_of_cgets:
  3941                           
  3942                           	psect	text11
  3943     009D                     __ptext11:	
  3944 ;; *************** function _getche *****************
  3945 ;; Defined at:
  3946 ;;		line 28 in file "uart.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  c               1    1[COMMON] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      unsigned char 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0, pclath, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;Total ram usage:        1 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 1
  3967 ;; This function calls:
  3968 ;;		_getch
  3969 ;;		_putch
  3970 ;; This function is called by:
  3971 ;;		_cgets
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975     009D                     _getche:	
  3976                           ;psect for function _getche
  3977                           
  3978     009D                     l1487:	
  3979                           ;incstack = 0
  3980                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  3981                           
  3982                           
  3983                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  3984     009D  3180  208B  3180   	fcall	_getch
  3985     00A0  00F1               	movwf	getche@c
  3986     00A1                     l1489:
  3987                           
  3988                           ;uart.c: 33: putch(c);
  3989     00A1  0871               	movf	getche@c,w
  3990     00A2  3180  2093  3180   	fcall	_putch
  3991     00A5                     l1491:
  3992                           
  3993                           ;uart.c: 35: return c;
  3994     00A5  0871               	movf	getche@c,w
  3995     00A6                     l177:
  3996     00A6  0008               	return
  3997     00A7                     __end_of_getche:
  3998                           
  3999                           	psect	text12
  4000     0093                     __ptext12:	
  4001 ;; *************** function _putch *****************
  4002 ;; Defined at:
  4003 ;;		line 13 in file "uart.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  byte            1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  byte            1    0[COMMON] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;Total ram usage:        1 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_getche
  4027 ;;		_printf
  4028 ;;		_cgets
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032     0093                     _putch:	
  4033                           ;psect for function _putch
  4034                           
  4035                           
  4036                           ;incstack = 0
  4037                           ; Regs used in _putch: [wreg]
  4038                           ;putch@byte stored from wreg
  4039     0093  00F0               	movwf	putch@byte
  4040     0094                     l1477:
  4041     0094                     l165:	
  4042                           ;uart.c: 15: while(!TXIF){
  4043                           
  4044     0094  0020               	movlb	0	; select bank0
  4045     0095  1E11               	btfss	17,4	;volatile
  4046     0096  2898               	goto	u811
  4047     0097  2899               	goto	u810
  4048     0098                     u811:
  4049     0098  2894               	goto	l165
  4050     0099                     u810:
  4051     0099                     l1479:
  4052                           
  4053                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  4054     0099  0870               	movf	putch@byte,w
  4055     009A  0023               	movlb	3	; select bank3
  4056     009B  009A               	movwf	26	;volatile
  4057     009C                     l168:
  4058     009C  0008               	return
  4059     009D                     __end_of_putch:
  4060                           
  4061                           	psect	text13
  4062     008B                     __ptext13:	
  4063 ;; *************** function _getch *****************
  4064 ;; Defined at:
  4065 ;;		line 20 in file "uart.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      unsigned char 
  4072 ;; Registers used:
  4073 ;;		wreg
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_getche
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092     008B                     _getch:	
  4093                           ;psect for function _getch
  4094                           
  4095     008B                     l1481:	
  4096                           ;incstack = 0
  4097                           ; Regs used in _getch: [wreg]
  4098                           
  4099     008B                     l171:	
  4100                           ;uart.c: 22: while(!RCIF){
  4101                           
  4102     008B  0020               	movlb	0	; select bank0
  4103     008C  1E91               	btfss	17,5	;volatile
  4104     008D  288F               	goto	u821
  4105     008E  2890               	goto	u820
  4106     008F                     u821:
  4107     008F  288B               	goto	l171
  4108     0090                     u820:
  4109     0090                     l1483:
  4110                           
  4111                           ;uart.c: 23: };uart.c: 25: return RCREG;
  4112     0090  0023               	movlb	3	; select bank3
  4113     0091  0819               	movf	25,w	;volatile
  4114     0092                     l174:
  4115     0092  0008               	return
  4116     0093                     __end_of_getch:
  4117                           
  4118                           	psect	text14
  4119     0338                     __ptext14:	
  4120 ;; *************** function _atoi *****************
  4121 ;; Defined at:
  4122 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  s               1    wreg     PTR const unsigned char 
  4125 ;;		 -> NULL(0), main@tmp(40), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  4128 ;;		 -> NULL(0), main@tmp(40), 
  4129 ;;  a               2    1[BANK0 ] int 
  4130 ;;  sign            1    0[BANK0 ] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  2    6[COMMON] int 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4143 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;Total ram usage:       10 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 1
  4147 ;; This function calls:
  4148 ;;		___wmul
  4149 ;;		_isdigit
  4150 ;; This function is called by:
  4151 ;;		_main
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155     0338                     _atoi:	
  4156                           ;psect for function _atoi
  4157                           
  4158                           
  4159                           ;incstack = 0
  4160                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4161                           ;atoi@s stored from wreg
  4162     0338  0020               	movlb	0	; select bank0
  4163     0339  00A3               	movwf	atoi@s
  4164     033A                     l1713:
  4165     033A  2B3F               	goto	l1717
  4166     033B                     l1715:
  4167     033B  3001               	movlw	1
  4168     033C  00F8               	movwf	??_atoi
  4169     033D  0878               	movf	??_atoi,w
  4170     033E  07A3               	addwf	atoi@s,f
  4171     033F                     l1717:
  4172     033F  0823               	movf	atoi@s,w
  4173     0340  0086               	movwf	6
  4174     0341  3001               	movlw	1	; select bank2/3
  4175     0342  0087               	movwf	7
  4176     0343  3020               	movlw	32
  4177     0344  0601               	xorwf	1,w
  4178     0345  1903               	btfsc	3,2
  4179     0346  2B48               	goto	u1151
  4180     0347  2B49               	goto	u1150
  4181     0348                     u1151:
  4182     0348  2B3B               	goto	l1715
  4183     0349                     u1150:
  4184     0349                     l1719:
  4185     0349  0823               	movf	atoi@s,w
  4186     034A  0086               	movwf	6
  4187     034B  3001               	movlw	1	; select bank2/3
  4188     034C  0087               	movwf	7
  4189     034D  3009               	movlw	9
  4190     034E  0601               	xorwf	1,w
  4191     034F  1903               	btfsc	3,2
  4192     0350  2B52               	goto	u1161
  4193     0351  2B53               	goto	u1160
  4194     0352                     u1161:
  4195     0352  2B3B               	goto	l1715
  4196     0353                     u1160:
  4197     0353                     l1721:
  4198     0353  01A1               	clrf	atoi@a
  4199     0354  01A2               	clrf	atoi@a+1
  4200     0355  01A0               	clrf	atoi@sign
  4201     0356                     l1723:
  4202     0356  0823               	movf	atoi@s,w
  4203     0357  0086               	movwf	6
  4204     0358  3001               	movlw	1	; select bank2/3
  4205     0359  0087               	movwf	7
  4206     035A  302D               	movlw	45
  4207     035B  0601               	xorwf	1,w
  4208     035C  1D03               	btfss	3,2
  4209     035D  2B5F               	goto	u1171
  4210     035E  2B60               	goto	u1170
  4211     035F                     u1171:
  4212     035F  2B69               	goto	l1727
  4213     0360                     u1170:
  4214     0360                     l1725:
  4215     0360  3001               	movlw	1
  4216     0361  00F8               	movwf	??_atoi
  4217     0362  0878               	movf	??_atoi,w
  4218     0363  07A0               	addwf	atoi@sign,f
  4219     0364  3001               	movlw	1
  4220     0365  00F8               	movwf	??_atoi
  4221     0366  0878               	movf	??_atoi,w
  4222     0367  07A3               	addwf	atoi@s,f
  4223     0368  2B99               	goto	l1735
  4224     0369                     l1727:
  4225     0369  0823               	movf	atoi@s,w
  4226     036A  0086               	movwf	6
  4227     036B  3001               	movlw	1	; select bank2/3
  4228     036C  0087               	movwf	7
  4229     036D  302B               	movlw	43
  4230     036E  0601               	xorwf	1,w
  4231     036F  1D03               	btfss	3,2
  4232     0370  2B72               	goto	u1181
  4233     0371  2B73               	goto	u1180
  4234     0372                     u1181:
  4235     0372  2B99               	goto	l1735
  4236     0373                     u1180:
  4237     0373                     l1729:
  4238     0373  3001               	movlw	1
  4239     0374  00F8               	movwf	??_atoi
  4240     0375  0878               	movf	??_atoi,w
  4241     0376  07A3               	addwf	atoi@s,f
  4242     0377  2B99               	goto	l1735
  4243     0378                     l1731:
  4244     0378  0020               	movlb	0	; select bank0
  4245     0379  0823               	movf	atoi@s,w
  4246     037A  0086               	movwf	6
  4247     037B  3001               	movlw	1	; select bank2/3
  4248     037C  0087               	movwf	7
  4249     037D  0801               	movf	1,w
  4250     037E  00F8               	movwf	??_atoi
  4251     037F  01F9               	clrf	??_atoi+1
  4252     0380  0822               	movf	atoi@a+1,w
  4253     0381  00F1               	movwf	___wmul@multiplier+1
  4254     0382  0821               	movf	atoi@a,w
  4255     0383  00F0               	movwf	___wmul@multiplier
  4256     0384  300A               	movlw	10
  4257     0385  00F2               	movwf	___wmul@multiplicand
  4258     0386  3000               	movlw	0
  4259     0387  00F3               	movwf	___wmul@multiplicand+1
  4260     0388  3180  20E9  3183   	fcall	___wmul
  4261     038B  0878               	movf	??_atoi,w
  4262     038C  0770               	addwf	?___wmul,w
  4263     038D  00FA               	movwf	??_atoi+2
  4264     038E  0879               	movf	??_atoi+1,w
  4265     038F  3D71               	addwfc	?___wmul+1,w
  4266     0390  00FB               	movwf	??_atoi+3
  4267     0391  087A               	movf	??_atoi+2,w
  4268     0392  3ED0               	addlw	208
  4269     0393  0020               	movlb	0	; select bank0
  4270     0394  00A1               	movwf	atoi@a
  4271     0395  30FF               	movlw	255
  4272     0396  3D7B               	addwfc	??_atoi+3,w
  4273     0397  00A2               	movwf	atoi@a+1
  4274     0398  2B73               	goto	l1729
  4275     0399                     l1735:
  4276     0399  0823               	movf	atoi@s,w
  4277     039A  0086               	movwf	6
  4278     039B  3001               	movlw	1	; select bank2/3
  4279     039C  0087               	movwf	7
  4280     039D  0801               	movf	1,w
  4281     039E  3180  20B9  3183   	fcall	_isdigit
  4282     03A1  1803               	btfsc	3,0
  4283     03A2  2BA4               	goto	u1191
  4284     03A3  2BA5               	goto	u1190
  4285     03A4                     u1191:
  4286     03A4  2B78               	goto	l1731
  4287     03A5                     u1190:
  4288     03A5                     l1737:
  4289     03A5  0020               	movlb	0	; select bank0
  4290     03A6  0820               	movf	atoi@sign,w
  4291     03A7  1903               	btfsc	3,2
  4292     03A8  2BAA               	goto	u1201
  4293     03A9  2BAB               	goto	u1200
  4294     03AA                     u1201:
  4295     03AA  2BB7               	goto	l1743
  4296     03AB                     u1200:
  4297     03AB                     l1739:
  4298     03AB  0921               	comf	atoi@a,w
  4299     03AC  00F8               	movwf	??_atoi
  4300     03AD  0922               	comf	atoi@a+1,w
  4301     03AE  00F9               	movwf	??_atoi+1
  4302     03AF  0AF8               	incf	??_atoi,f
  4303     03B0  1903               	skipnz
  4304     03B1  0AF9               	incf	??_atoi+1,f
  4305     03B2  0878               	movf	??_atoi,w
  4306     03B3  00F6               	movwf	?_atoi
  4307     03B4  0879               	movf	??_atoi+1,w
  4308     03B5  00F7               	movwf	?_atoi+1
  4309     03B6  2BBB               	goto	l731
  4310     03B7                     l1743:
  4311     03B7  0822               	movf	atoi@a+1,w
  4312     03B8  00F7               	movwf	?_atoi+1
  4313     03B9  0821               	movf	atoi@a,w
  4314     03BA  00F6               	movwf	?_atoi
  4315     03BB                     l731:
  4316     03BB  0008               	return
  4317     03BC                     __end_of_atoi:
  4318                           
  4319                           	psect	text15
  4320     00B9                     __ptext15:	
  4321 ;; *************** function _isdigit *****************
  4322 ;; Defined at:
  4323 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  c               1    wreg     unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  c               1    1[COMMON] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;		None               void
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;Total ram usage:        2 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_atoi
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350     00B9                     _isdigit:	
  4351                           ;psect for function _isdigit
  4352                           
  4353                           
  4354                           ;incstack = 0
  4355                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4356                           ;isdigit@c stored from wreg
  4357     00B9  00F1               	movwf	isdigit@c
  4358     00BA                     l1543:
  4359     00BA  01F0               	clrf	_isdigit$543
  4360     00BB                     l1545:
  4361     00BB  303A               	movlw	58
  4362     00BC  0271               	subwf	isdigit@c,w
  4363     00BD  1803               	skipnc
  4364     00BE  28C0               	goto	u961
  4365     00BF  28C1               	goto	u960
  4366     00C0                     u961:
  4367     00C0  28C9               	goto	l1551
  4368     00C1                     u960:
  4369     00C1                     l1547:
  4370     00C1  3030               	movlw	48
  4371     00C2  0271               	subwf	isdigit@c,w
  4372     00C3  1C03               	skipc
  4373     00C4  28C6               	goto	u971
  4374     00C5  28C7               	goto	u970
  4375     00C6                     u971:
  4376     00C6  28C9               	goto	l1551
  4377     00C7                     u970:
  4378     00C7                     l1549:
  4379     00C7  01F0               	clrf	_isdigit$543
  4380     00C8  0AF0               	incf	_isdigit$543,f
  4381     00C9                     l1551:
  4382     00C9  0C70               	rrf	_isdigit$543,w
  4383     00CA                     l761:
  4384     00CA  0008               	return
  4385     00CB                     __end_of_isdigit:
  4386                           
  4387                           	psect	text16
  4388     00E9                     __ptext16:	
  4389 ;; *************** function ___wmul *****************
  4390 ;; Defined at:
  4391 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  multiplier      2    0[COMMON] unsigned int 
  4394 ;;  multiplicand    2    2[COMMON] unsigned int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  product         2    4[COMMON] unsigned int 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2    0[COMMON] unsigned int 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        6 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_atoi
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419     00E9                     ___wmul:	
  4420                           ;psect for function ___wmul
  4421                           
  4422     00E9                     l1505:	
  4423                           ;incstack = 0
  4424                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4425                           
  4426     00E9  01F4               	clrf	___wmul@product
  4427     00EA  01F5               	clrf	___wmul@product+1
  4428     00EB                     l1507:
  4429     00EB  1C70               	btfss	___wmul@multiplier,0
  4430     00EC  28EE               	goto	u851
  4431     00ED  28EF               	goto	u850
  4432     00EE                     u851:
  4433     00EE  28F3               	goto	l268
  4434     00EF                     u850:
  4435     00EF                     l1509:
  4436     00EF  0872               	movf	___wmul@multiplicand,w
  4437     00F0  07F4               	addwf	___wmul@product,f
  4438     00F1  0873               	movf	___wmul@multiplicand+1,w
  4439     00F2  3DF5               	addwfc	___wmul@product+1,f
  4440     00F3                     l268:
  4441     00F3  3001               	movlw	1
  4442     00F4                     u865:
  4443     00F4  35F2               	lslf	___wmul@multiplicand,f
  4444     00F5  0DF3               	rlf	___wmul@multiplicand+1,f
  4445     00F6  0B89               	decfsz	9,f
  4446     00F7  28F4               	goto	u865
  4447     00F8                     l1511:
  4448     00F8  3001               	movlw	1
  4449     00F9                     u875:
  4450     00F9  36F1               	lsrf	___wmul@multiplier+1,f
  4451     00FA  0CF0               	rrf	___wmul@multiplier,f
  4452     00FB  0B89               	decfsz	9,f
  4453     00FC  28F9               	goto	u875
  4454     00FD                     l1513:
  4455     00FD  0870               	movf	___wmul@multiplier,w
  4456     00FE  0471               	iorwf	___wmul@multiplier+1,w
  4457     00FF  1D03               	btfss	3,2
  4458     0100  2902               	goto	u881
  4459     0101  2903               	goto	u880
  4460     0102                     u881:
  4461     0102  28EB               	goto	l1507
  4462     0103                     u880:
  4463     0103                     l1515:
  4464     0103  0875               	movf	___wmul@product+1,w
  4465     0104  00F1               	movwf	?___wmul+1
  4466     0105  0874               	movf	___wmul@product,w
  4467     0106  00F0               	movwf	?___wmul
  4468     0107                     l270:
  4469     0107  0008               	return
  4470     0108                     __end_of___wmul:
  4471                           
  4472                           	psect	text17
  4473     00A7                     __ptext17:	
  4474 ;; *************** function _PICinit *****************
  4475 ;; Defined at:
  4476 ;;		line 50 in file "main.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503     00A7                     _PICinit:	
  4504                           ;psect for function _PICinit
  4505                           
  4506     00A7                     l1623:	
  4507                           ;incstack = 0
  4508                           ; Regs used in _PICinit: [wreg+status,2]
  4509                           
  4510                           
  4511                           ;main.c: 51: OSCCON = 0b01110000 ;
  4512     00A7  3070               	movlw	112
  4513     00A8  0021               	movlb	1	; select bank1
  4514     00A9  0099               	movwf	25	;volatile
  4515     00AA                     l1625:
  4516                           
  4517                           ;main.c: 52: ANSELA = 0b00000000 ;
  4518     00AA  0023               	movlb	3	; select bank3
  4519     00AB  018C               	clrf	12	;volatile
  4520     00AC                     l1627:
  4521                           
  4522                           ;main.c: 53: ANSELC = 0b00000000 ;
  4523     00AC  018E               	clrf	14	;volatile
  4524                           
  4525                           ;main.c: 54: TRISA = 0b00000010 ;
  4526     00AD  3002               	movlw	2
  4527     00AE  0021               	movlb	1	; select bank1
  4528     00AF  008C               	movwf	12	;volatile
  4529     00B0                     l1629:
  4530                           
  4531                           ;main.c: 55: TRISC = 0b00000000 ;
  4532     00B0  018E               	clrf	14	;volatile
  4533     00B1                     l1631:
  4534                           
  4535                           ;main.c: 56: PORTA = 0b00000000 ;
  4536     00B1  0020               	movlb	0	; select bank0
  4537     00B2  018C               	clrf	12	;volatile
  4538     00B3                     l1633:
  4539                           
  4540                           ;main.c: 57: PORTC = 0b00000000 ;
  4541     00B3  018E               	clrf	14	;volatile
  4542     00B4                     l1635:
  4543                           
  4544                           ;main.c: 59: DAC1CON0 = 0b10010000;
  4545     00B4  3090               	movlw	144
  4546     00B5  0022               	movlb	2	; select bank2
  4547     00B6  0098               	movwf	24	;volatile
  4548                           
  4549                           ;main.c: 60: DAC1CON1 = 0;
  4550     00B7  0199               	clrf	25	;volatile
  4551     00B8                     l50:
  4552     00B8  0008               	return
  4553     00B9                     __end_of_PICinit:
  4554     007E                     btemp	set	126	;btemp
  4555     007E                     wtemp0	set	126
  4556                           
  4557                           	psect	idloc
  4558                           
  4559                           ;Config register IDLOC0 @ 0x8000
  4560                           ;	unspecified, using default values
  4561     8000                     	org	32768
  4562     8000  3FFF               	dw	16383
  4563                           
  4564                           ;Config register IDLOC1 @ 0x8001
  4565                           ;	unspecified, using default values
  4566     8001                     	org	32769
  4567     8001  3FFF               	dw	16383
  4568                           
  4569                           ;Config register IDLOC2 @ 0x8002
  4570                           ;	unspecified, using default values
  4571     8002                     	org	32770
  4572     8002  3FFF               	dw	16383
  4573                           
  4574                           ;Config register IDLOC3 @ 0x8003
  4575                           ;	unspecified, using default values
  4576     8003                     	org	32771
  4577     8003  3FFF               	dw	16383
  4578                           
  4579                           	psect	config
  4580                           
  4581                           ;Config register CONFIG1 @ 0x8007
  4582                           ;	Oscillator Selection Bits
  4583                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4584                           ;	Watchdog Timer Enable
  4585                           ;	WDTE = OFF, WDT disabled
  4586                           ;	Power-up Timer Enable
  4587                           ;	PWRTE = ON, PWRT enabled
  4588                           ;	MCLR Pin Function Select
  4589                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4590                           ;	Flash Program Memory Code Protection
  4591                           ;	CP = OFF, Program memory code protection is disabled
  4592                           ;	Brown-out Reset Enable
  4593                           ;	BOREN = ON, Brown-out Reset enabled
  4594                           ;	Clock Out Enable
  4595                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4596                           ;	Internal/External Switchover Mode
  4597                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  4598                           ;	Fail-Safe Clock Monitor Enable
  4599                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4600     8007                     	org	32775
  4601     8007  0F84               	dw	3972
  4602                           
  4603                           ;Config register CONFIG2 @ 0x8008
  4604                           ;	Flash Memory Self-Write Protection
  4605                           ;	WRT = OFF, Write protection off
  4606                           ;	Peripheral Pin Select one-way control
  4607                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  4608                           ;	Zero-cross detect disable
  4609                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  4610                           ;	Phase Lock Loop enable
  4611                           ;	PLLEN = ON, 4x PLL is always enabled
  4612                           ;	Stack Overflow/Underflow Reset Enable
  4613                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4614                           ;	Brown-out Reset Voltage Selection
  4615                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  4616                           ;	Low-Power Brown Out Reset
  4617                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4618                           ;	Low-Voltage Programming Enable
  4619                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4620     8008                     	org	32776
  4621     8008  1BFB               	dw	7163

Data Sizes:
    Strings     125
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80     13      14
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_37(CODE[2]), STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_37(CODE[2]), STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_37(CODE[2]), STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), NULL(NULL[0]), 
		 -> STR_13(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_37(CODE[2]), STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_37(CODE[2]), STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), main@rcmd(BANK3[4]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK2[40]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK2[40]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK2[40]), 

    gets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK2[40]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_38(CODE[11]), STR_36(CODE[9]), STR_28(CODE[8]), STR_25(CODE[8]), 
		 -> STR_22(CODE[8]), STR_19(CODE[8]), STR_17(CODE[8]), STR_15(CODE[8]), 
		 -> STR_1(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_39(CODE[7]), ?_printf(COMMON[2]), main@tmp(BANK2[40]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK2[40]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK2[40]), 


Critical Paths under _main in COMMON

    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _serial_init->___lldiv
    _printf->_putch
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_serial_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               249   249      0    9459
                                             10 BANK0     70    70      0
                                              0 BANK1     80    80      0
                                              0 BANK2     80    80      0
                                              0 BANK3     13    13      0
                            _PICinit
                               _atoi
                               _gets
                             _printf
                        _serial_init
                             _strcmp
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               5     3      2    2692
                                              0 BANK0      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     592
                                              7 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     592
                                              7 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     392
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2    1944
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    16      4     890
                                              1 COMMON    10     6      4
                              _putch
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                             10 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                8     6      2     325
                                              2 COMMON     8     6      2
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                10     8      2     870
                                              6 COMMON     6     4      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PICinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PICinit
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _printf
     _putch
   _serial_init
     ___lldiv
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      D       E      11       17.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 12 14:20:40 2023

                     l50 00B8                       l47 01CC                       l76 04C5  
    ___wmul@multiplicand 0072                      l121 06FA                      l131 075A  
                    l126 072B                      l304 02D5                      l171 008B  
                    l165 0094                      l270 0107                      l174 0092  
                    l168 009C                      l264 0337                      l177 00A6  
                    l268 00F3                      l731 03BB                      l736 008A  
                    l761 00CA                      l809 0194                      l754 027B  
                    l780 0222                      l769 0130                      l793 0162  
                    l796 00CB                      l798 00E8              main@ap1_dat 00A0  
            main@ap2_dat 00C8              main@ap3_dat 0120                      u810 0099  
                    u811 0098                      u820 0090                      u821 008F  
                    u910 029E                      u830 00D5                      u911 029D  
                    u831 00D4                      u840 00E6                      u905 0290  
                    u841 00E5                      u850 00EF                      u930 02B7  
                    u851 00EE                      u931 02B6                      u925 029F  
                    u950 02CD                      u951 02CC                      u935 02B3  
                    u880 0103                      u960 00C1                      u881 0102  
                    u865 00F4                      u961 00C0                      u945 02C1  
                    u970 00C7                      u890 028C                      u875 00F9  
                    u971 00C6                      u891 028B                      u980 022D  
                    u981 022C                      u990 024D                      u991 024C  
            main@fp1_amp 0063              main@fp2_amp 0059              main@fp3_amp 0053  
                    wreg 0009                     l2001 0749                     l2003 074D  
                   l2021 078A                     l2005 0751                     l2013 076F  
                   l2031 07AC                     l2023 0795                     l2015 0777  
                   l2041 07CA                     l2033 07AF                     l2025 079A  
                   l2017 077A                     l2009 0769                     l2027 07A7  
                   l1501 00E6                     l2045 07D0                     l2037 07BF  
                   l1511 00F8                     l2071 026D                     l2039 07C7  
                   l1513 00FD                     l1505 00E9                     l1521 028C  
                   l1601 0132                     l2049 07D8                     l1515 0103  
                   l1507 00EB                     l1531 02B7                     l1523 028F  
                   l1603 0135                     l1509 00EF                     l1533 02BF  
                   l1525 029A                     l1621 01C8                     l1613 0195  
                   l1605 013D                     l1701 020A                     l1631 00B1  
                   l1623 00A7                     l1551 00C9                     l1543 00BA  
                   l1535 02C0                     l1527 029E                     l1519 027C  
                   l1615 0198                     l1607 0146                     l1703 0213  
                   l1633 00B3                     l1625 00AA                     l1545 00BB  
                   l1721 0353                     l1713 033A                     l1481 008B  
                   l1561 022E                     l1641 02D6                     l1537 02C7  
                   l1529 02A5                     l1617 019B                     l1609 015E  
                   l1705 0218                     l1801 0455                     l1635 00B4  
                   l1627 00AC                     l1547 00C1                     l1731 0378  
                   l1723 0356                     l1715 033B                     l1483 0090  
                   l1491 00A5                     l1571 024E                     l1563 0236  
                   l1555 0224                     l1651 02EC                     l1643 02D9  
                   l1539 02CD                     l1619 01C5                     l1707 021F  
                   l1811 047D                     l1803 0459                     l1629 00B0  
                   l1549 00C7                     l1725 0360                     l1717 033F  
                   l1477 0094                     l1573 0253                     l1565 0239  
                   l1557 0227                     l1637 0086                     l1661 0307  
                   l1653 02F0                     l1645 02DF                     l1709 0220  
                   l1901 05C5                     l1821 04AF                     l1813 048B  
                   l1805 0467                     l1743 03B7                     l1735 0399  
                   l1727 0369                     l1719 0349                     l1479 0099  
                   l1487 009D                     l1567 0245                     l1583 025F  
                   l1655 02F6                     l1647 02E4                     l1671 010A  
                   l1495 00CB                     l1591 0167                     l1911 05EF  
                   l1903 05CE                     l1823 04B3                     l1815 048F  
                   l1807 046B                     l1751 03C2                     l1737 03A5  
                   l1729 0373                     l1489 00A1                     l1577 0255  
                   l1569 0247                     l1657 02FB                     l1649 02E5  
                   l1665 0311                     l1673 0112                     l1497 00D5  
                   l1593 016F                     l1681 01CF                     l1921 0617  
                   l1913 05F9                     l1905 05D9                     l1841 04EE  
                   l1825 04C1                     l1817 049D                     l1809 0479  
                   l1761 03D9                     l1753 03D1                     l1739 03AB  
                   l1579 025B                     l1659 0303                     l1667 0325  
                   l1675 0122                     l1499 00D6                     l1595 0178  
                   l1691 01DF                     l1683 01D4                     l1931 0638  
                   l1923 0620                     l1915 05FE                     l1907 05DE  
                   l1843 04F3                     l1835 04D1                     l1819 04A1  
                   l1827 04C5                     l1771 03E5                     l1763 03DC  
                   l1755 03D4                     l1747 03BC                     l1677 012B  
                   l1669 0109                     l1597 0190                     l1589 0164  
                   l1693 01EC                     l1685 01D8                     l1941 066A  
                   l1933 0651                     l1925 0628                     l1917 0607  
                   l1909 05E7                     l1861 052C                     l1853 050A  
                   l1845 0500                     l1837 04DC                     l1829 04CF  
                   l1781 03FD                     l1773 03F0                     l1765 03DE  
                   l1757 03D6                     l1749 03BF                     l1695 01F5  
                   l1687 01DD                     l1951 0685                     l1943 066D  
                   l1935 0654                     l1927 062A                     l1919 0612  
                   l1871 0551                     l1863 0539                     l1855 0515  
                   l1847 0508                     l1839 04E1                     l1791 0423  
                   l1783 0400                     l1775 03F4                     l1767 03E0  
                   l1759 03D8                     l1873 055C                     l1881 0575  
                   l1865 0541                     l1857 051A                     l1793 0431  
                   l1785 040E                     l1777 03F8                     l1769 03E1  
                   l1699 01F9                     l1971 06C8                     l1955 0695  
                   l1963 06A6                     l1939 0662                     l1947 0673  
                   l1891 05A0                     l1883 057D                     l1875 0561  
                   l1867 0543                     l1859 0527                     l1795 0435  
                   l1787 0412                     l1779 03FC                     l1981 06E9  
                   l1973 06D1                     l1965 06B5                     l1957 069D  
                   l1949 0682                     l1893 05A5                     l1885 0587  
                   l1877 056F                     l1797 0443                     l1789 0420  
                   l1991 071A                     l1983 06ED                     l1975 06D4  
                   l1967 06B8                     l1959 06A0                     l1895 05AE  
                   l1887 058C                     l1799 0447                     l1993 071E  
                   l1985 06F1                     l1897 05B6                     l1889 0595  
                   l1995 0722                     l1987 0708                     l1979 06DA  
                   l1899 05C0                     l1989 070B                     l1999 073A  
                   STR_1 084B                     STR_2 0877                     STR_3 084F  
                   STR_4 0857                     STR_5 085F                     STR_6 0853  
                   STR_7 085B                     STR_8 0863                     STR_9 086B  
                   u1000 0178                     u1001 0177                     u1010 0190  
                   u1011 018F                     u1100 012B                     u1020 0146  
                   u1101 012A                     u1021 0145                     u1030 015E  
                   u1110 01D4                     u1031 015D                     u1111 01D3  
                   u1200 03AB                     u1040 01BD                     u1120 01DD  
                   u1201 03AA                     u1121 01DC                     u1050 02DF  
                   u1130 01F5                     u1210 040E                     u1051 02DE  
                   u1131 01F4                     u1211 040D                     u1060 02F6  
                   u1140 0213                     u1300 04AF                     u1220 0420  
                   u1061 02F5                     u1045 01B9                     u1141 0212  
                   u1301 04AE                     u1221 041F                     u1150 0349  
                   u1070 0310                     u1310 04C1                     u1230 0431  
                   u1151 0348                     u1071 030F                     u1311 04C0  
                   u1231 0430                     u1160 0353                     u1080 0337  
                   u1400 05C5                     u1320 04E1                     u1240 0443  
                   u1161 0352                     u1081 0336                     u1401 05C4  
                   u1321 04E0                     u1241 0442                     u1170 0360  
                   u1090 0122                     u1410 05DE                     u1330 0500  
                   u1250 0455                     u1171 035F                     u1091 0121  
                   u1411 05DD                     u1331 04FF                     u1251 0454  
                   u1180 0373                     u1500 06C7                     u1420 05FE  
                   u1340 051A                     u1260 0467                     u1181 0372  
                   u1501 06C6                     u1421 05FD                     u1341 0519  
                   u1261 0466                     u1190 03A5                     u1510 06E9  
                   u1430 0617                     u1350 0539                     u1270 0479  
                   u1191 03A4                     u1511 06E8                     u1431 0616  
                   u1351 0538                     u1335 04FC                     u1271 0478  
                   u1520 0708                     u1440 0637                     u1360 0550  
                   u1280 048B                     u1521 0707                     u1505 06C3  
                   u1441 0636                     u1361 054F                     u1281 048A  
                   u1530 071A                     u1450 0651                     u1370 0561  
                   u1290 049D                     u1531 0719                     u1451 0650  
                   u1371 0560                     u1355 0535                     u1291 049C  
                   u1540 0739                     u1460 0661                     u1380 058C  
                   u1541 0738                     u1525 0704                     u1461 0660  
                   u1445 0633                     u1381 058B                     u1365 054C  
                   u1550 0749                     u1470 0682                     u1390 05A5  
                   u1551 0748                     u1471 0681                     u1607 066B  
                   u1391 05A4                     u1560 0768                     u1480 0694  
                   u1561 0767                     u1545 0735                     u1617 069E  
                   u1481 0693                     u1465 065D                     u1570 0789  
                   u1490 06B5                     u1571 0788                     u1627 06D2  
                   u1491 06B4                     u1580 079A                     u1581 0799  
                   u1565 0764                     u1637 06F2                     u1485 0690  
                   u1590 07BE                     u1591 07BD                     u1575 0785  
                   u1647 0723                     u1657 0752                     u1667 07C8  
                   u1595 07BA                     _RCIF 008D                     _TXIF 008C  
        __end_of_PICinit 00B9                     _atoi 0338                     _gets 0085  
                   _main 03BC                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E             main@fp1_time 0055  
           main@fp2_time 0057             main@fp3_time 005B                     start 0002  
                  ?_atoi 0076                    ?_gets 0070                    ?_main 0070  
                  STR_10 0867                    STR_11 086F                    STR_20 087B  
                  STR_12 0873                    STR_21 087B                    STR_13 087B  
                  STR_14 087B                    STR_30 0850                    STR_22 081C  
                  STR_23 087B                    STR_31 0858                    STR_15 0814  
                  STR_24 087B                    STR_16 087B                    STR_32 0860  
                  _BRG16 0CFB                    STR_33 0854                    STR_25 082C  
                  STR_17 0824                    STR_26 087B                    STR_18 087B  
                  STR_34 085C                    STR_27 087B                    STR_35 0864  
                  STR_19 0834                    STR_28 083C                    STR_36 080B  
                  STR_37 087B                    STR_29 087B                    STR_38 0800  
                  STR_39 0844          __end_of___lldiv 02D6                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTC 000E                    _TRISA 008C                    _TRISC 008E  
                  _RXPPS 0E24                    _TXREG 019A                    _TXSTA 019E  
                  _cgets 0223                    _getch 008B          __end_of_isdigit 00CB  
                  atoi@a 0021                    atoi@s 0023                    _putch 0093  
                  gets@s 007A                    main@i 0067                    main@k 0065  
                  status 0003                    wtemp0 007E          __end_of_strcspn 0163  
        __initialization 07FB             __end_of_atoi 03BC             __end_of_gets 008B  
           __end_of_main 07FB                   ??_atoi 0078                   ??_gets 007A  
                 ??_main 002A                ??_PICinit 0070                   ?_cgets 0072  
                 ?_getch 0070                   _ANSELA 018C                   ?_putch 0070  
                 _ANSELC 018E                   _RA0PPS 0E90                   _RC1STA 019D  
                 _OSCCON 0099                   _TX1STA 019E             ?_serial_init 0020  
                 ___wmul 00E9                ??___lldiv 0078                   _getche 009D  
                 cgets@c 0076                   cgets@s 0078                   _printf 02D6  
                 _strchr 00CB                   _strcmp 0108                   _strtok 01CD  
                 _strspn 0163                ??_isdigit 0070                ??_strcspn 0079  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_cgets 027C  
          __end_of_getch 0093            __end_of_putch 009D                  ??_cgets 0074  
                ??_getch 0070                  ??_putch 0070               __pbssBANK3 01AD  
             __pmaintext 03BC                  ?___wmul 0070                  ?_getche 0070  
                ?_printf 0071                  ?_strchr 0070                  ?_strcmp 0070  
                ?_strtok 0020                  ?_strspn 0077                  _SP1BRGH 019C  
                _SP1BRGL 019B                  _PICinit 00A7                  ___lldiv 027C  
                __ptext1 01CD                  __ptext2 0163                  __ptext3 0131  
                __ptext4 00CB                  __ptext5 0108                  __ptext6 0195  
                __ptext7 027C                  __ptext8 02D6                  __ptext9 0085  
                _isdigit 00B9                  cgets@s1 0079                  getche@c 0071  
                main@cmd 006F                  main@tmp 0148                  main@ptr 01AC  
                _strcspn 0131     end_of_initialization 07FD          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                  printf@c 0078                  printf@f 0071  
                strcmp@r 0073                  strspn@i 007B           __end_of___wmul 0108  
         __end_of_getche 00A7           __end_of_printf 0338           __end_of_strchr 00E9  
         __end_of_strcmp 0131           __end_of_strtok 0223           __end_of_strspn 0195  
    start_initialization 07FB                 ??___wmul 0074                 ??_getche 0071  
               ??_printf 0075                 ??_strchr 0074                 ??_strcmp 0072  
               ??_strtok 0022                 ??_strspn 0079                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK2 0120  
          __pcstackBANK3 01A0                 ?_PICinit 0070                 ?___lldiv 0070  
               _DAC1CON0 0118                 _DAC1CON1 0119                 ?_isdigit 0070  
               ?_strcspn 0077           ___wmul@product 0074            ??_serial_init 0024  
          serial_init@BR 0020                main@i_131 0069                main@i_134 006B  
              main@i_151 01A0                main@i_161 01A4                main@i_153 01A2  
              main@i_155 005D                main@i_163 01A6                main@i_149 006D  
              main@i_157 005F                main@i_159 0061        ___wmul@multiplier 0070  
    __end_of_serial_init 01CD              _isdigit$543 0070                 __ptext10 0223  
               __ptext11 009D                 __ptext12 0093                 __ptext13 008B  
               __ptext14 0338                 __ptext15 00B9                 __ptext16 00E9  
               __ptext17 00A7                 atoi@sign 0020             serial_init@X 0028  
               main@dat0 002B                 main@rcmd 01A8                putch@byte 0070  
         __pstringtext10 084B           __pstringtext11 084F           __pstringtext20 0873  
         __pstringtext12 0853           __pstringtext21 0877           __pstringtext13 0857  
         __pstringtext22 087B           __pstringtext14 085B           __pstringtext23 0000  
         __pstringtext15 085F           __pstringtext16 0863           __pstringtext17 0867  
         __pstringtext18 086B           __pstringtext19 086F                 isdigit@c 0071  
              strchr@chr 0072                strchr@ptr 0070         ___lldiv@dividend 0074  
              strcspn@s1 007D                strcspn@s2 0077              _serial_init 0195  
               printf@ap 0077                 printf@cp 0079            __pstringtext1 0800  
          __pstringtext2 080B            __pstringtext3 0814            __pstringtext4 081C  
          __pstringtext5 0824            __pstringtext6 082C            __pstringtext7 0834  
          __pstringtext8 083C            __pstringtext9 0844                 strcmp@s1 0074  
               strcmp@s2 0070         ___lldiv@quotient 0079                 strcspn@i 007B  
               strtok@s1 0024                 strtok@s2 0020                 strspn@s1 007D  
               strspn@s2 0077                 strtok@sp 01AD  
