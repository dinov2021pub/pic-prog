

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Nov 19 11:28:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    32                           	psect	cinit,global,class=CODE,merge=1,delta=2
    33                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text6,local,class=CODE,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    51                           	psect	text13,local,class=CODE,merge=1,delta=2
    52                           	psect	text14,local,class=CODE,merge=1,delta=2
    53                           	psect	text15,local,class=CODE,merge=1,delta=2
    54                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text19,local,class=CODE,merge=1,delta=2
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x620,48
    61                           	dabs	1,0x5A0,80
    62                           	dabs	1,0x520,80
    63                           	dabs	1,0x4A0,80
    64                           	dabs	1,0x464,12
    65                           	dabs	1,0x420,68
    66                           	dabs	1,0x3A0,80
    67                           	dabs	1,0x320,80
    68                           	dabs	1,0x2A0,80
    69                           	dabs	1,0x220,80
    70                           	dabs	1,0x1A0,80
    71                           	dabs	1,0x120,80
    72                           	dabs	1,0xBC,52
    73                           	dabs	1,0x206C,0,_ap1_dat
    74                           	dabs	1,0x22C4,0,main@tmp
    75                           	dabs	1,0x7E,2
    76     0000                     
    77                           ; Version 2.40
    78                           ; Generated 17/11/2021 GMT
    79                           ; 
    80                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F1705 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000E                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     008C                     	;# 
   139     008E                     	;# 
   140     0091                     	;# 
   141     0092                     	;# 
   142     0093                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009B                     	;# 
   151     009C                     	;# 
   152     009D                     	;# 
   153     009E                     	;# 
   154     009F                     	;# 
   155     010C                     	;# 
   156     010E                     	;# 
   157     0111                     	;# 
   158     0112                     	;# 
   159     0113                     	;# 
   160     0114                     	;# 
   161     0115                     	;# 
   162     0116                     	;# 
   163     0117                     	;# 
   164     0118                     	;# 
   165     0119                     	;# 
   166     011C                     	;# 
   167     018C                     	;# 
   168     018E                     	;# 
   169     0191                     	;# 
   170     0191                     	;# 
   171     0192                     	;# 
   172     0193                     	;# 
   173     0193                     	;# 
   174     0194                     	;# 
   175     0195                     	;# 
   176     0196                     	;# 
   177     0197                     	;# 
   178     0199                     	;# 
   179     0199                     	;# 
   180     0199                     	;# 
   181     019A                     	;# 
   182     019A                     	;# 
   183     019A                     	;# 
   184     019B                     	;# 
   185     019B                     	;# 
   186     019B                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019C                     	;# 
   190     019C                     	;# 
   191     019C                     	;# 
   192     019D                     	;# 
   193     019D                     	;# 
   194     019D                     	;# 
   195     019E                     	;# 
   196     019E                     	;# 
   197     019E                     	;# 
   198     019F                     	;# 
   199     019F                     	;# 
   200     019F                     	;# 
   201     019F                     	;# 
   202     019F                     	;# 
   203     020C                     	;# 
   204     020E                     	;# 
   205     0211                     	;# 
   206     0211                     	;# 
   207     0212                     	;# 
   208     0212                     	;# 
   209     0213                     	;# 
   210     0213                     	;# 
   211     0214                     	;# 
   212     0214                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0215                     	;# 
   216     0215                     	;# 
   217     0216                     	;# 
   218     0216                     	;# 
   219     0217                     	;# 
   220     0217                     	;# 
   221     028C                     	;# 
   222     028E                     	;# 
   223     0291                     	;# 
   224     0291                     	;# 
   225     0292                     	;# 
   226     0293                     	;# 
   227     0293                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029A                     	;# 
   233     029E                     	;# 
   234     030C                     	;# 
   235     030E                     	;# 
   236     038C                     	;# 
   237     038E                     	;# 
   238     0391                     	;# 
   239     0392                     	;# 
   240     0393                     	;# 
   241     0397                     	;# 
   242     0398                     	;# 
   243     0399                     	;# 
   244     0415                     	;# 
   245     0416                     	;# 
   246     0417                     	;# 
   247     041C                     	;# 
   248     041D                     	;# 
   249     041E                     	;# 
   250     0511                     	;# 
   251     0515                     	;# 
   252     0617                     	;# 
   253     0618                     	;# 
   254     0619                     	;# 
   255     0619                     	;# 
   256     061A                     	;# 
   257     061B                     	;# 
   258     061C                     	;# 
   259     061C                     	;# 
   260     0691                     	;# 
   261     0692                     	;# 
   262     0693                     	;# 
   263     0694                     	;# 
   264     0695                     	;# 
   265     0696                     	;# 
   266     0697                     	;# 
   267     0698                     	;# 
   268     0699                     	;# 
   269     069A                     	;# 
   270     069B                     	;# 
   271     069C                     	;# 
   272     069D                     	;# 
   273     069E                     	;# 
   274     069F                     	;# 
   275     0E0F                     	;# 
   276     0E10                     	;# 
   277     0E11                     	;# 
   278     0E12                     	;# 
   279     0E13                     	;# 
   280     0E14                     	;# 
   281     0E15                     	;# 
   282     0E17                     	;# 
   283     0E20                     	;# 
   284     0E21                     	;# 
   285     0E22                     	;# 
   286     0E24                     	;# 
   287     0E25                     	;# 
   288     0E28                     	;# 
   289     0E29                     	;# 
   290     0E2A                     	;# 
   291     0E2B                     	;# 
   292     0E90                     	;# 
   293     0E91                     	;# 
   294     0E92                     	;# 
   295     0E94                     	;# 
   296     0E95                     	;# 
   297     0EA0                     	;# 
   298     0EA1                     	;# 
   299     0EA2                     	;# 
   300     0EA3                     	;# 
   301     0EA4                     	;# 
   302     0EA5                     	;# 
   303     0F0F                     	;# 
   304     0F10                     	;# 
   305     0F11                     	;# 
   306     0F12                     	;# 
   307     0F13                     	;# 
   308     0F14                     	;# 
   309     0F15                     	;# 
   310     0F16                     	;# 
   311     0F17                     	;# 
   312     0F18                     	;# 
   313     0F19                     	;# 
   314     0F1A                     	;# 
   315     0F1B                     	;# 
   316     0F1C                     	;# 
   317     0F1D                     	;# 
   318     0F1E                     	;# 
   319     0F1F                     	;# 
   320     0F20                     	;# 
   321     0F21                     	;# 
   322     0F22                     	;# 
   323     0F23                     	;# 
   324     0F24                     	;# 
   325     0F25                     	;# 
   326     0F26                     	;# 
   327     0F27                     	;# 
   328     0F28                     	;# 
   329     0F29                     	;# 
   330     0F2A                     	;# 
   331     0F2B                     	;# 
   332     0F2C                     	;# 
   333     0F2D                     	;# 
   334     0F9E                     	;# 
   335     0FE4                     	;# 
   336     0FE5                     	;# 
   337     0FE6                     	;# 
   338     0FE7                     	;# 
   339     0FE8                     	;# 
   340     0FE9                     	;# 
   341     0FEA                     	;# 
   342     0FEB                     	;# 
   343     0FED                     	;# 
   344     0FEE                     	;# 
   345     0FEF                     	;# 
   346     0000                     	;# 
   347     0001                     	;# 
   348     0002                     	;# 
   349     0003                     	;# 
   350     0004                     	;# 
   351     0005                     	;# 
   352     0006                     	;# 
   353     0007                     	;# 
   354     0008                     	;# 
   355     0009                     	;# 
   356     000A                     	;# 
   357     000B                     	;# 
   358     000C                     	;# 
   359     000E                     	;# 
   360     0011                     	;# 
   361     0012                     	;# 
   362     0013                     	;# 
   363     0015                     	;# 
   364     0016                     	;# 
   365     0016                     	;# 
   366     0017                     	;# 
   367     0018                     	;# 
   368     0019                     	;# 
   369     001A                     	;# 
   370     001B                     	;# 
   371     001C                     	;# 
   372     008C                     	;# 
   373     008E                     	;# 
   374     0091                     	;# 
   375     0092                     	;# 
   376     0093                     	;# 
   377     0095                     	;# 
   378     0096                     	;# 
   379     0097                     	;# 
   380     0098                     	;# 
   381     0099                     	;# 
   382     009A                     	;# 
   383     009B                     	;# 
   384     009B                     	;# 
   385     009C                     	;# 
   386     009D                     	;# 
   387     009E                     	;# 
   388     009F                     	;# 
   389     010C                     	;# 
   390     010E                     	;# 
   391     0111                     	;# 
   392     0112                     	;# 
   393     0113                     	;# 
   394     0114                     	;# 
   395     0115                     	;# 
   396     0116                     	;# 
   397     0117                     	;# 
   398     0118                     	;# 
   399     0119                     	;# 
   400     011C                     	;# 
   401     018C                     	;# 
   402     018E                     	;# 
   403     0191                     	;# 
   404     0191                     	;# 
   405     0192                     	;# 
   406     0193                     	;# 
   407     0193                     	;# 
   408     0194                     	;# 
   409     0195                     	;# 
   410     0196                     	;# 
   411     0197                     	;# 
   412     0199                     	;# 
   413     0199                     	;# 
   414     0199                     	;# 
   415     019A                     	;# 
   416     019A                     	;# 
   417     019A                     	;# 
   418     019B                     	;# 
   419     019B                     	;# 
   420     019B                     	;# 
   421     019B                     	;# 
   422     019B                     	;# 
   423     019C                     	;# 
   424     019C                     	;# 
   425     019C                     	;# 
   426     019D                     	;# 
   427     019D                     	;# 
   428     019D                     	;# 
   429     019E                     	;# 
   430     019E                     	;# 
   431     019E                     	;# 
   432     019F                     	;# 
   433     019F                     	;# 
   434     019F                     	;# 
   435     019F                     	;# 
   436     019F                     	;# 
   437     020C                     	;# 
   438     020E                     	;# 
   439     0211                     	;# 
   440     0211                     	;# 
   441     0212                     	;# 
   442     0212                     	;# 
   443     0213                     	;# 
   444     0213                     	;# 
   445     0214                     	;# 
   446     0214                     	;# 
   447     0215                     	;# 
   448     0215                     	;# 
   449     0215                     	;# 
   450     0215                     	;# 
   451     0216                     	;# 
   452     0216                     	;# 
   453     0217                     	;# 
   454     0217                     	;# 
   455     028C                     	;# 
   456     028E                     	;# 
   457     0291                     	;# 
   458     0291                     	;# 
   459     0292                     	;# 
   460     0293                     	;# 
   461     0293                     	;# 
   462     0298                     	;# 
   463     0298                     	;# 
   464     0299                     	;# 
   465     029A                     	;# 
   466     029A                     	;# 
   467     029E                     	;# 
   468     030C                     	;# 
   469     030E                     	;# 
   470     038C                     	;# 
   471     038E                     	;# 
   472     0391                     	;# 
   473     0392                     	;# 
   474     0393                     	;# 
   475     0397                     	;# 
   476     0398                     	;# 
   477     0399                     	;# 
   478     0415                     	;# 
   479     0416                     	;# 
   480     0417                     	;# 
   481     041C                     	;# 
   482     041D                     	;# 
   483     041E                     	;# 
   484     0511                     	;# 
   485     0515                     	;# 
   486     0617                     	;# 
   487     0618                     	;# 
   488     0619                     	;# 
   489     0619                     	;# 
   490     061A                     	;# 
   491     061B                     	;# 
   492     061C                     	;# 
   493     061C                     	;# 
   494     0691                     	;# 
   495     0692                     	;# 
   496     0693                     	;# 
   497     0694                     	;# 
   498     0695                     	;# 
   499     0696                     	;# 
   500     0697                     	;# 
   501     0698                     	;# 
   502     0699                     	;# 
   503     069A                     	;# 
   504     069B                     	;# 
   505     069C                     	;# 
   506     069D                     	;# 
   507     069E                     	;# 
   508     069F                     	;# 
   509     0E0F                     	;# 
   510     0E10                     	;# 
   511     0E11                     	;# 
   512     0E12                     	;# 
   513     0E13                     	;# 
   514     0E14                     	;# 
   515     0E15                     	;# 
   516     0E17                     	;# 
   517     0E20                     	;# 
   518     0E21                     	;# 
   519     0E22                     	;# 
   520     0E24                     	;# 
   521     0E25                     	;# 
   522     0E28                     	;# 
   523     0E29                     	;# 
   524     0E2A                     	;# 
   525     0E2B                     	;# 
   526     0E90                     	;# 
   527     0E91                     	;# 
   528     0E92                     	;# 
   529     0E94                     	;# 
   530     0E95                     	;# 
   531     0EA0                     	;# 
   532     0EA1                     	;# 
   533     0EA2                     	;# 
   534     0EA3                     	;# 
   535     0EA4                     	;# 
   536     0EA5                     	;# 
   537     0F0F                     	;# 
   538     0F10                     	;# 
   539     0F11                     	;# 
   540     0F12                     	;# 
   541     0F13                     	;# 
   542     0F14                     	;# 
   543     0F15                     	;# 
   544     0F16                     	;# 
   545     0F17                     	;# 
   546     0F18                     	;# 
   547     0F19                     	;# 
   548     0F1A                     	;# 
   549     0F1B                     	;# 
   550     0F1C                     	;# 
   551     0F1D                     	;# 
   552     0F1E                     	;# 
   553     0F1F                     	;# 
   554     0F20                     	;# 
   555     0F21                     	;# 
   556     0F22                     	;# 
   557     0F23                     	;# 
   558     0F24                     	;# 
   559     0F25                     	;# 
   560     0F26                     	;# 
   561     0F27                     	;# 
   562     0F28                     	;# 
   563     0F29                     	;# 
   564     0F2A                     	;# 
   565     0F2B                     	;# 
   566     0F2C                     	;# 
   567     0F2D                     	;# 
   568     0F9E                     	;# 
   569     0FE4                     	;# 
   570     0FE5                     	;# 
   571     0FE6                     	;# 
   572     0FE7                     	;# 
   573     0FE8                     	;# 
   574     0FE9                     	;# 
   575     0FEA                     	;# 
   576     0FEB                     	;# 
   577     0FED                     	;# 
   578     0FEE                     	;# 
   579     0FEF                     	;_ap1_dat
   580                           
   581                           	psect	stringtext1
   582     1000                     __pstringtext1:
   583     1000                     _dpowers:
   584     1000  3401               	retlw	1
   585     1001  3400               	retlw	0
   586     1002  340A               	retlw	10
   587     1003  3400               	retlw	0
   588     1004  3464               	retlw	100
   589     1005  3400               	retlw	0
   590     1006  34E8               	retlw	232
   591     1007  3403               	retlw	3
   592     1008  3410               	retlw	16
   593     1009  3427               	retlw	39
   594     100A                     __end_of_dpowers:
   595     000E                     _PORTC	set	14
   596     000C                     _PORTA	set	12
   597     008D                     _RCIF	set	141
   598     008C                     _TXIF	set	140
   599     008E                     _TRISC	set	142
   600     008C                     _TRISA	set	140
   601     0099                     _OSCCON	set	153
   602     0119                     _DAC1CON1	set	281
   603     0118                     _DAC1CON0	set	280
   604     0199                     _RCREG	set	409
   605     019A                     _TXREG	set	410
   606     019D                     _RCSTA	set	413
   607     019E                     _TXSTA	set	414
   608     019B                     _SPBRG	set	411
   609     018E                     _ANSELC	set	398
   610     018C                     _ANSELA	set	396
   611     019B                     _SP1BRGL	set	411
   612     019C                     _SP1BRGH	set	412
   613     019D                     _RC1STA	set	413
   614     019E                     _TX1STA	set	414
   615     0CFB                     _BRG16	set	3323
   616     0E24                     _RXPPS	set	3620
   617     0E90                     _RA0PPS	set	3728
   618     100A                     STR_43:
   619     100A  3456               	retlw	86	;'V'
   620     100B  3445               	retlw	69	;'E'
   621     100C  3452               	retlw	82	;'R'
   622     100D  3453               	retlw	83	;'S'
   623     100E  3449               	retlw	73	;'I'
   624     100F  344F               	retlw	79	;'O'
   625     1010  344E               	retlw	78	;'N'
   626     1011  3420               	retlw	32	;' '
   627     1012  3431               	retlw	49	;'1'
   628     1013  3430               	retlw	48	;'0'
   629     1014  3400               	retlw	0
   630                           
   631                           	psect	stringtext2
   632     1015                     __pstringtext2:
   633     1015                     STR_42:
   634     1015  345F               	retlw	95	;'_'
   635     1016  345F               	retlw	95	;'_'
   636     1017  345F               	retlw	95	;'_'
   637     1018  3450               	retlw	80	;'P'
   638     1019  345F               	retlw	95	;'_'
   639     101A  344F               	retlw	79	;'O'
   640     101B  344B               	retlw	75	;'K'
   641     101C  340A               	retlw	10
   642     101D  3400               	retlw	0
   643                           
   644                           	psect	stringtext3
   645     101E                     __pstringtext3:
   646     101E                     STR_19:
   647     101E  3453               	retlw	83	;'S'
   648     101F  3441               	retlw	65	;'A'
   649     1020  3431               	retlw	49	;'1'
   650     1021  3420               	retlw	32	;' '
   651     1022  344F               	retlw	79	;'O'
   652     1023  344B               	retlw	75	;'K'
   653     1024  340A               	retlw	10
   654     1025  3400               	retlw	0
   655                           
   656                           	psect	stringtext4
   657     1026                     __pstringtext4:
   658     1026                     STR_25:
   659     1026  3453               	retlw	83	;'S'
   660     1027  3446               	retlw	70	;'F'
   661     1028  3431               	retlw	49	;'1'
   662     1029  3420               	retlw	32	;' '
   663     102A  344F               	retlw	79	;'O'
   664     102B  344B               	retlw	75	;'K'
   665     102C  340A               	retlw	10
   666     102D  3400               	retlw	0
   667                           
   668                           	psect	stringtext5
   669     102E                     __pstringtext5:
   670     102E                     STR_21:
   671     102E  3453               	retlw	83	;'S'
   672     102F  3441               	retlw	65	;'A'
   673     1030  3432               	retlw	50	;'2'
   674     1031  3420               	retlw	32	;' '
   675     1032  344F               	retlw	79	;'O'
   676     1033  344B               	retlw	75	;'K'
   677     1034  340A               	retlw	10
   678     1035  3400               	retlw	0
   679                           
   680                           	psect	stringtext6
   681     1036                     __pstringtext6:
   682     1036                     STR_28:
   683     1036  3453               	retlw	83	;'S'
   684     1037  3446               	retlw	70	;'F'
   685     1038  3432               	retlw	50	;'2'
   686     1039  3420               	retlw	32	;' '
   687     103A  344F               	retlw	79	;'O'
   688     103B  344B               	retlw	75	;'K'
   689     103C  340A               	retlw	10
   690     103D  3400               	retlw	0
   691                           
   692                           	psect	stringtext7
   693     103E                     __pstringtext7:
   694     103E                     STR_22:
   695     103E  3453               	retlw	83	;'S'
   696     103F  3441               	retlw	65	;'A'
   697     1040  3433               	retlw	51	;'3'
   698     1041  3420               	retlw	32	;' '
   699     1042  344F               	retlw	79	;'O'
   700     1043  344B               	retlw	75	;'K'
   701     1044  340A               	retlw	10
   702     1045  3400               	retlw	0
   703                           
   704                           	psect	stringtext8
   705     1046                     __pstringtext8:
   706     1046                     STR_31:
   707     1046  3453               	retlw	83	;'S'
   708     1047  3446               	retlw	70	;'F'
   709     1048  3433               	retlw	51	;'3'
   710     1049  3420               	retlw	32	;' '
   711     104A  344F               	retlw	79	;'O'
   712     104B  344B               	retlw	75	;'K'
   713     104C  340A               	retlw	10
   714     104D  3400               	retlw	0
   715                           
   716                           	psect	stringtext9
   717     104E                     __pstringtext9:
   718     104E                     STR_34:
   719     104E  3453               	retlw	83	;'S'
   720     104F  3446               	retlw	70	;'F'
   721     1050  3434               	retlw	52	;'4'
   722     1051  3420               	retlw	32	;' '
   723     1052  344F               	retlw	79	;'O'
   724     1053  344B               	retlw	75	;'K'
   725     1054  340A               	retlw	10
   726     1055  3400               	retlw	0
   727                           
   728                           	psect	stringtext10
   729     1056                     __pstringtext10:
   730     1056                     STR_44:
   731     1056  3428               	retlw	40	;'('
   732     1057  346E               	retlw	110	;'n'
   733     1058  3475               	retlw	117	;'u'
   734     1059  346C               	retlw	108	;'l'
   735     105A  346C               	retlw	108	;'l'
   736     105B  3429               	retlw	41	;')'
   737     105C  3400               	retlw	0
   738                           
   739                           	psect	stringtext11
   740     105D                     __pstringtext11:
   741     105D                     STR_18:
   742     105D  3425               	retlw	37	;'%'
   743     105E  3464               	retlw	100	;'d'
   744     105F  340A               	retlw	10
   745     1060  3400               	retlw	0
   746                           
   747                           	psect	stringtext12
   748     1061                     __pstringtext12:
   749     1061                     STR_1:
   750     1061  3425               	retlw	37	;'%'
   751     1062  3473               	retlw	115	;'s'
   752     1063  340A               	retlw	10
   753     1064  3400               	retlw	0
   754                           
   755                           	psect	stringtext13
   756     1065                     __pstringtext13:
   757     1065                     STR_3:
   758     1065  3453               	retlw	83	;'S'
   759     1066  3441               	retlw	65	;'A'
   760     1067  3431               	retlw	49	;'1'
   761     1068  3400               	retlw	0
   762                           
   763                           	psect	stringtext14
   764     1069                     __pstringtext14:
   765     1069                     STR_6:
   766     1069  3453               	retlw	83	;'S'
   767     106A  3446               	retlw	70	;'F'
   768     106B  3431               	retlw	49	;'1'
   769     106C  3400               	retlw	0
   770                           
   771                           	psect	stringtext15
   772     106D                     __pstringtext15:
   773     106D                     STR_4:
   774     106D  3453               	retlw	83	;'S'
   775     106E  3441               	retlw	65	;'A'
   776     106F  3432               	retlw	50	;'2'
   777     1070  3400               	retlw	0
   778                           
   779                           	psect	stringtext16
   780     1071                     __pstringtext16:
   781     1071                     STR_7:
   782     1071  3453               	retlw	83	;'S'
   783     1072  3446               	retlw	70	;'F'
   784     1073  3432               	retlw	50	;'2'
   785     1074  3400               	retlw	0
   786                           
   787                           	psect	stringtext17
   788     1075                     __pstringtext17:
   789     1075                     STR_5:
   790     1075  3453               	retlw	83	;'S'
   791     1076  3441               	retlw	65	;'A'
   792     1077  3433               	retlw	51	;'3'
   793     1078  3400               	retlw	0
   794                           
   795                           	psect	stringtext18
   796     1079                     __pstringtext18:
   797     1079                     STR_8:
   798     1079  3453               	retlw	83	;'S'
   799     107A  3446               	retlw	70	;'F'
   800     107B  3433               	retlw	51	;'3'
   801     107C  3400               	retlw	0
   802                           
   803                           	psect	stringtext19
   804     107D                     __pstringtext19:
   805     107D                     STR_9:
   806     107D  3453               	retlw	83	;'S'
   807     107E  3446               	retlw	70	;'F'
   808     107F  3434               	retlw	52	;'4'
   809     1080  3400               	retlw	0
   810                           
   811                           	psect	stringtext20
   812     1081                     __pstringtext20:
   813     1081                     STR_11:
   814     1081  344C               	retlw	76	;'L'
   815     1082  3450               	retlw	80	;'P'
   816     1083  3445               	retlw	69	;'E'
   817     1084  3400               	retlw	0
   818                           
   819                           	psect	stringtext21
   820     1085                     __pstringtext21:
   821     1085                     STR_14:
   822     1085  344C               	retlw	76	;'L'
   823     1086  344F               	retlw	79	;'O'
   824     1087  3446               	retlw	70	;'F'
   825     1088  3400               	retlw	0
   826                           
   827                           	psect	stringtext22
   828     1089                     __pstringtext22:
   829     1089                     STR_13:
   830     1089  344C               	retlw	76	;'L'
   831     108A  344F               	retlw	79	;'O'
   832     108B  344E               	retlw	78	;'N'
   833     108C  3400               	retlw	0
   834                           
   835                           	psect	stringtext23
   836     108D                     __pstringtext23:
   837     108D                     STR_10:
   838     108D  344C               	retlw	76	;'L'
   839     108E  3445               	retlw	69	;'E'
   840     108F  3450               	retlw	80	;'P'
   841     1090  3400               	retlw	0
   842                           
   843                           	psect	stringtext24
   844     1091                     __pstringtext24:
   845     1091                     STR_12:
   846     1091  344C               	retlw	76	;'L'
   847     1092  3444               	retlw	68	;'D'
   848     1093  3452               	retlw	82	;'R'
   849     1094  3400               	retlw	0
   850                           
   851                           	psect	stringtext25
   852     1095                     __pstringtext25:
   853     1095                     STR_15:
   854     1095  3456               	retlw	86	;'V'
   855     1096  3445               	retlw	69	;'E'
   856     1097  3452               	retlw	82	;'R'
   857     1098  3400               	retlw	0
   858                           
   859                           	psect	stringtext26
   860     1099                     __pstringtext26:
   861     1099                     STR_2:
   862     1099  344C               	retlw	76	;'L'
   863     109A  3444               	retlw	68	;'D'
   864     109B  3453               	retlw	83	;'S'
   865     109C  3400               	retlw	0
   866                           
   867                           	psect	stringtext27
   868     109D                     __pstringtext27:
   869     109D                     STR_16:
   870     109D  342F               	retlw	47	;'/'
   871     109E  3400               	retlw	0
   872                           
   873                           	psect	stringtext28
   874     0000                     __pstringtext28:
   875     109D                     
   876                           	psect	cinit
   877     07E4                     start_initialization:	
   878                           ; #config settings
   879                           
   880     07E4                     __initialization:	;BIGRAM
   881                           
   882                           ; Clear objects allocated to BIGRAM
   883     07E4  306C               	movlw	low (0+8300)
   884     07E5  0084               	movwf	4
   885     07E6  3020               	movlw	high (0+8300)
   886     07E7  0085               	movwf	5
   887     07E8  3084               	movlw	132
   888     07E9  00FE               	movwf	btemp
   889     07EA  3003               	movlw	3
   890     07EB  00FF               	movwf	btemp+1
   891     07EC  318E  2620  3187   	fcall	clear_ram0
   892                           
   893                           ; Clear objects allocated to BANK0
   894     07EF  0020               	movlb	0	; select bank0
   895     07F0  01E9               	clrf	__pbssBANK0& (0+127)
   896     07F1  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   897                           
   898                           ; Clear objects allocated to BANK1
   899     07F2  30A0               	movlw	low __pbssBANK1
   900     07F3  0084               	movwf	4
   901     07F4  3000               	movlw	high __pbssBANK1
   902     07F5  0085               	movwf	5
   903     07F6  3014               	movlw	20
   904     07F7  00FE               	movwf	btemp
   905     07F8  3000               	movlw	0
   906     07F9  00FF               	movwf	btemp+1
   907     07FA  318E  2620  3187   	fcall	clear_ram0
   908     07FD                     end_of_initialization:	
   909                           ;End of C runtime variable initialization code
   910                           
   911     07FD                     __end_of__initialization:
   912     07FD  0020               	movlb	0
   913     07FE  3182  2A53         	ljmp	_main	;jump to C main() function
   914                           
   915                           	psect	bssBANK0
   916     0069                     __pbssBANK0:
   917     0069                     strtok@sp:
   918     0069                     	ds	2
   919                           
   920                           	psect	bssBANK1
   921     00A0                     __pbssBANK1:
   922     00A0                     _ap2_dat:
   923     00A0                     	ds	20
   924                           
   925                           	psect	clrtext
   926     0E20                     clear_ram0:	
   927                           ;	Called with FSR0 containing the base address, and
   928                           ;	btemp/btemp+1 has the size to clear
   929                           
   930     0E20  0064               	clrwdt	;clear the watchdog before getting into this loop
   931     0E21                     clrloop0:
   932     0E21  0180               	clrf	0	;clear RAM location pointed to by FSR
   933     0E22  3101               	addfsr 0,1
   934     0E23  3001               	movlw	1
   935     0E24  02FE               	subwf	btemp,f
   936     0E25  3000               	movlw	0
   937     0E26  3BFF               	subwfb	btemp+1,f
   938     0E27  087F               	movf	btemp+1,w
   939     0E28  047E               	iorwf	btemp,w
   940     0E29  1D03               	skipz
   941     0E2A  2E21               	goto	clrloop0	;have we reached the end yet?
   942     0E2B  3400               	retlw	0	;all done for this memory range, return
   943                           
   944                           	psect	cstackCOMMON
   945     0070                     __pcstackCOMMON:
   946     0070                     ?_isdigit:
   947     0070                     ??_isdigit:	
   948                           ; 1 bit 
   949                           
   950     0070                     ?_PICinit:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ??_PICinit:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ?_main:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ?_putch:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ??_putch:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ?_getch:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     ??_getch:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0070                     ?_getche:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     ?_strcmp:	
   975                           ; 1 bytes @ 0x0
   976                           
   977     0070                     ?_strchr:	
   978                           ; 2 bytes @ 0x0
   979                           
   980     0070                     ?___wmul:	
   981                           ; 2 bytes @ 0x0
   982                           
   983     0070                     ?___lwdiv:	
   984                           ; 2 bytes @ 0x0
   985                           
   986     0070                     ?___lldiv:	
   987                           ; 2 bytes @ 0x0
   988                           
   989     0070                     putch@byte:	
   990                           ; 4 bytes @ 0x0
   991                           
   992     0070                     _isdigit$549:	
   993                           ; 1 bytes @ 0x0
   994                           
   995     0070                     ___wmul@multiplier:	
   996                           ; 1 bytes @ 0x0
   997                           
   998     0070                     ___lwdiv@divisor:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001     0070                     strcmp@s1:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004     0070                     strchr@ptr:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007     0070                     ___lldiv@divisor:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x0
  1012     0070                     	ds	1
  1013     0071                     ??_getche:
  1014     0071                     getche@c:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017     0071                     isdigit@c:	
  1018                           ; 1 bytes @ 0x1
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x1
  1022     0071                     	ds	1
  1023     0072                     ?_cgets:
  1024     0072                     ___wmul@multiplicand:	
  1025                           ; 2 bytes @ 0x2
  1026                           
  1027     0072                     ___lwdiv@dividend:	
  1028                           ; 2 bytes @ 0x2
  1029                           
  1030     0072                     cgets@s:	
  1031                           ; 2 bytes @ 0x2
  1032                           
  1033     0072                     strcmp@s2:	
  1034                           ; 2 bytes @ 0x2
  1035                           
  1036     0072                     strchr@chr:	
  1037                           ; 2 bytes @ 0x2
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x2
  1041     0072                     	ds	2
  1042     0074                     ??_strcmp:
  1043     0074                     ??_cgets:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046     0074                     ??_strchr:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049     0074                     ??___wmul:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052     0074                     ??___lwdiv:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055     0074                     strcmp@r:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058     0074                     ___wmul@product:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061     0074                     ___lldiv@dividend:	
  1062                           ; 2 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0x4
  1066     0074                     	ds	1
  1067     0075                     ___lwdiv@quotient:
  1068                           
  1069                           ; 2 bytes @ 0x5
  1070     0075                     	ds	1
  1071     0076                     ?_atoi:
  1072     0076                     atoi@s:	
  1073                           ; 2 bytes @ 0x6
  1074                           
  1075     0076                     cgets@c:	
  1076                           ; 2 bytes @ 0x6
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x6
  1080     0076                     	ds	1
  1081     0077                     ?_strspn:
  1082     0077                     ?_strcspn:	
  1083                           ; 2 bytes @ 0x7
  1084                           
  1085     0077                     ___lwdiv@counter:	
  1086                           ; 2 bytes @ 0x7
  1087                           
  1088     0077                     strcspn@s1:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091     0077                     strspn@s1:	
  1092                           ; 2 bytes @ 0x7
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x7
  1096     0077                     	ds	1
  1097     0078                     ??_atoi:
  1098     0078                     ??___lldiv:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101     0078                     ?___lwmod:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104     0078                     ___lwmod@divisor:	
  1105                           ; 2 bytes @ 0x8
  1106                           
  1107     0078                     cgets@s1:	
  1108                           ; 2 bytes @ 0x8
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x8
  1112     0078                     	ds	1
  1113     0079                     strcspn@s2:
  1114     0079                     strspn@s2:	
  1115                           ; 2 bytes @ 0x9
  1116                           
  1117     0079                     ___lldiv@quotient:	
  1118                           ; 2 bytes @ 0x9
  1119                           
  1120                           
  1121                           ; 4 bytes @ 0x9
  1122     0079                     	ds	1
  1123     007A                     ?_gets:
  1124     007A                     ___lwmod@dividend:	
  1125                           ; 2 bytes @ 0xA
  1126                           
  1127     007A                     gets@s:	
  1128                           ; 2 bytes @ 0xA
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0xA
  1132     007A                     	ds	1
  1133     007B                     ??_strspn:
  1134     007B                     ??_strcspn:	
  1135                           ; 1 bytes @ 0xB
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0xB
  1139     007B                     	ds	1
  1140     007C                     ??_gets:
  1141     007C                     ??___lwmod:	
  1142                           ; 1 bytes @ 0xC
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0xC
  1146     007C                     	ds	1
  1147     007D                     ??_strtok:
  1148     007D                     ___lldiv@counter:	
  1149                           ; 1 bytes @ 0xD
  1150                           
  1151     007D                     ___lwmod@counter:	
  1152                           ; 1 bytes @ 0xD
  1153                           
  1154                           
  1155                           ; 1 bytes @ 0xD
  1156     007D                     	ds	1
  1157                           
  1158                           	psect	cstackBANK0
  1159     0020                     __pcstackBANK0:
  1160     0020                     ?_serial_init:
  1161     0020                     ?_printf:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164     0020                     atoi@sign:	
  1165                           ; 2 bytes @ 0x0
  1166                           
  1167     0020                     printf@f:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     0020                     strcspn@i:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173     0020                     strspn@i:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176     0020                     serial_init@BR:	
  1177                           ; 2 bytes @ 0x0
  1178                           
  1179                           
  1180                           ; 4 bytes @ 0x0
  1181     0020                     	ds	1
  1182     0021                     atoi@a:
  1183                           
  1184                           ; 2 bytes @ 0x1
  1185     0021                     	ds	1
  1186     0022                     ?_strtok:
  1187     0022                     strtok@s1:	
  1188                           ; 2 bytes @ 0x2
  1189                           
  1190                           
  1191                           ; 2 bytes @ 0x2
  1192     0022                     	ds	2
  1193     0024                     ??_printf:
  1194     0024                     ??_serial_init:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197     0024                     strtok@s2:	
  1198                           ; 1 bytes @ 0x4
  1199                           
  1200                           
  1201                           ; 2 bytes @ 0x4
  1202     0024                     	ds	4
  1203     0028                     printf@flag:
  1204     0028                     serial_init@X:	
  1205                           ; 1 bytes @ 0x8
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0x8
  1209     0028                     	ds	1
  1210     0029                     printf@prec:
  1211                           
  1212                           ; 1 bytes @ 0x9
  1213     0029                     	ds	1
  1214     002A                     printf@ap:
  1215                           
  1216                           ; 1 bytes @ 0xA
  1217     002A                     	ds	1
  1218     002B                     printf@cp:
  1219                           
  1220                           ; 2 bytes @ 0xB
  1221     002B                     	ds	2
  1222     002D                     printf@val:
  1223                           
  1224                           ; 2 bytes @ 0xD
  1225     002D                     	ds	2
  1226     002F                     printf@c:
  1227                           
  1228                           ; 1 bytes @ 0xF
  1229     002F                     	ds	1
  1230     0030                     ??_main:
  1231                           
  1232                           ; 1 bytes @ 0x10
  1233     0030                     	ds	4
  1234     0034                     main@fp1_time:
  1235                           
  1236                           ; 2 bytes @ 0x14
  1237     0034                     	ds	2
  1238     0036                     main@fp1_amp:
  1239                           
  1240                           ; 2 bytes @ 0x16
  1241     0036                     	ds	2
  1242     0038                     main@fp2_time:
  1243                           
  1244                           ; 2 bytes @ 0x18
  1245     0038                     	ds	2
  1246     003A                     main@fp2_amp:
  1247                           
  1248                           ; 2 bytes @ 0x1A
  1249     003A                     	ds	2
  1250     003C                     main@fp3_time:
  1251                           
  1252                           ; 2 bytes @ 0x1C
  1253     003C                     	ds	2
  1254     003E                     main@fp3_amp:
  1255                           
  1256                           ; 2 bytes @ 0x1E
  1257     003E                     	ds	2
  1258     0040                     main@fp4_time:
  1259                           
  1260                           ; 2 bytes @ 0x20
  1261     0040                     	ds	2
  1262     0042                     main@fp4_amp:
  1263                           
  1264                           ; 2 bytes @ 0x22
  1265     0042                     	ds	2
  1266     0044                     main@num_ap1_cnt:
  1267                           
  1268                           ; 2 bytes @ 0x24
  1269     0044                     	ds	2
  1270     0046                     main@num_ap2_cnt:
  1271                           
  1272                           ; 2 bytes @ 0x26
  1273     0046                     	ds	2
  1274     0048                     main@i_161:
  1275                           
  1276                           ; 2 bytes @ 0x28
  1277     0048                     	ds	2
  1278     004A                     main@i_163:
  1279                           
  1280                           ; 2 bytes @ 0x2A
  1281     004A                     	ds	2
  1282     004C                     main@i_165:
  1283                           
  1284                           ; 2 bytes @ 0x2C
  1285     004C                     	ds	2
  1286     004E                     main@i_167:
  1287                           
  1288                           ; 2 bytes @ 0x2E
  1289     004E                     	ds	2
  1290     0050                     main@num_ap1:
  1291                           
  1292                           ; 2 bytes @ 0x30
  1293     0050                     	ds	2
  1294     0052                     main@num_ap2:
  1295                           
  1296                           ; 2 bytes @ 0x32
  1297     0052                     	ds	2
  1298     0054                     main@i:
  1299                           
  1300                           ; 2 bytes @ 0x34
  1301     0054                     	ds	2
  1302     0056                     main@i_137:
  1303                           
  1304                           ; 2 bytes @ 0x36
  1305     0056                     	ds	2
  1306     0058                     main@k:
  1307                           
  1308                           ; 2 bytes @ 0x38
  1309     0058                     	ds	2
  1310     005A                     main@i_157:
  1311                           
  1312                           ; 2 bytes @ 0x3A
  1313     005A                     	ds	2
  1314     005C                     main@i_159:
  1315                           
  1316                           ; 2 bytes @ 0x3C
  1317     005C                     	ds	2
  1318     005E                     main@i_138:
  1319                           
  1320                           ; 2 bytes @ 0x3E
  1321     005E                     	ds	2
  1322     0060                     main@i_132:
  1323                           
  1324                           ; 2 bytes @ 0x40
  1325     0060                     	ds	2
  1326     0062                     main@cmd:
  1327                           
  1328                           ; 1 bytes @ 0x42
  1329     0062                     	ds	1
  1330     0063                     main@rcmd:
  1331                           
  1332                           ; 4 bytes @ 0x43
  1333     0063                     	ds	4
  1334     0067                     main@ptr:
  1335                           
  1336                           ; 2 bytes @ 0x47
  1337     0067                     	ds	2
  1338                           
  1339                           	psect	maintext
  1340     0253                     __pmaintext:	
  1341 ;;
  1342 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1343 ;;
  1344 ;; *************** function _main *****************
  1345 ;; Defined at:
  1346 ;;		line 86 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  i               2   46[BANK0 ] int 
  1351 ;;  i               2   44[BANK0 ] int 
  1352 ;;  i               2   42[BANK0 ] int 
  1353 ;;  i               2   40[BANK0 ] int 
  1354 ;;  i               2   60[BANK0 ] int 
  1355 ;;  i               2   58[BANK0 ] int 
  1356 ;;  k               2   56[BANK0 ] int 
  1357 ;;  i               2   62[BANK0 ] int 
  1358 ;;  i               2   54[BANK0 ] int 
  1359 ;;  i               2   64[BANK0 ] int 
  1360 ;;  i               2   52[BANK0 ] int 
  1361 ;;  cmd             1   66[BANK0 ] enum E4261
  1362 ;;  rcmd            4   67[BANK0 ] unsigned char [4]
  1363 ;;  ptr             2   71[BANK0 ] PTR unsigned char 
  1364 ;;		 -> NULL(0), main@tmp(300), 
  1365 ;;  num_ap2         2   50[BANK0 ] int 
  1366 ;;  num_ap1         2   48[BANK0 ] int 
  1367 ;;  num_ap2_cnt     2   38[BANK0 ] int 
  1368 ;;  num_ap1_cnt     2   36[BANK0 ] int 
  1369 ;;  fp4_amp         2   34[BANK0 ] int 
  1370 ;;  fp4_time        2   32[BANK0 ] int 
  1371 ;;  fp3_amp         2   30[BANK0 ] int 
  1372 ;;  fp3_time        2   28[BANK0 ] int 
  1373 ;;  fp2_amp         2   26[BANK0 ] int 
  1374 ;;  fp2_time        2   24[BANK0 ] int 
  1375 ;;  fp1_amp         2   22[BANK0 ] int 
  1376 ;;  fp1_time        2   20[BANK0 ] int 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : B1F/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1387 ;;      Locals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;      Totals:         0      57       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1390 ;;Total ram usage:       57 bytes
  1391 ;; Hardware stack levels required when called: 4
  1392 ;; This function calls:
  1393 ;;		_PICinit
  1394 ;;		_atoi
  1395 ;;		_gets
  1396 ;;		_printf
  1397 ;;		_serial_init
  1398 ;;		_strcmp
  1399 ;;		_strtok
  1400 ;; This function is called by:
  1401 ;;		Startup code after reset
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405     0253                     _main:	
  1406                           ;psect for function _main
  1407                           
  1408     0253                     l1912:	
  1409                           ;incstack = 0
  1410                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1411                           
  1412                           
  1413                           ;main.c: 88: static char tmp[300];;main.c: 89: char rcmd[4];;main.c: 90: int fp1_time;;m
      +                          ain.c: 91: int fp1_amp;;main.c: 92: int fp2_time;;main.c: 93: int fp2_amp;;main.c: 94: i
      +                          nt fp3_time;;main.c: 95: int fp3_amp;;main.c: 96: int fp4_time;;main.c: 97: int fp4_amp;
      +                          ;main.c: 99: int num_ap1 = 300;
  1414     0253  302C               	movlw	44
  1415     0254  0020               	movlb	0	; select bank0
  1416     0255  00D0               	movwf	main@num_ap1
  1417     0256  3001               	movlw	1
  1418     0257  00D1               	movwf	main@num_ap1+1
  1419                           
  1420                           ;main.c: 100: int num_ap2 = 20;
  1421     0258  3014               	movlw	20
  1422     0259  00D2               	movwf	main@num_ap2
  1423     025A  3000               	movlw	0
  1424     025B  00D3               	movwf	main@num_ap2+1
  1425     025C                     l1914:
  1426                           
  1427                           ;main.c: 101: int num_ap1_cnt = 0;
  1428     025C  01C4               	clrf	main@num_ap1_cnt
  1429     025D  01C5               	clrf	main@num_ap1_cnt+1
  1430     025E                     l1916:
  1431                           
  1432                           ;main.c: 102: int num_ap2_cnt = 0;
  1433     025E  01C6               	clrf	main@num_ap2_cnt
  1434     025F  01C7               	clrf	main@num_ap2_cnt+1
  1435     0260                     l1918:
  1436                           
  1437                           ;main.c: 105: char *ptr;;main.c: 107: PICinit();
  1438     0260  318E  262C  3182   	fcall	_PICinit
  1439     0263                     l1920:
  1440                           
  1441                           ;main.c: 110: RA0PPS = 0x14;
  1442     0263  3014               	movlw	20
  1443     0264  003D               	movlb	29	; select bank29
  1444     0265  0090               	movwf	16	;volatile
  1445     0266                     l1922:
  1446                           
  1447                           ;main.c: 111: RXPPS = 0x01;
  1448     0266  3001               	movlw	1
  1449     0267  003C               	movlb	28	; select bank28
  1450     0268  00A4               	movwf	36	;volatile
  1451     0269                     l1924:
  1452                           
  1453                           ;main.c: 113: serial_init(9600);
  1454     0269  3000               	movlw	0
  1455     026A  0020               	movlb	0	; select bank0
  1456     026B  00A3               	movwf	serial_init@BR+3
  1457     026C  3000               	movlw	0
  1458     026D  00A2               	movwf	serial_init@BR+2
  1459     026E  3025               	movlw	37
  1460     026F  00A1               	movwf	serial_init@BR+1
  1461     0270  3080               	movlw	128
  1462     0271  00A0               	movwf	serial_init@BR
  1463     0272  318F  2732  3182   	fcall	_serial_init
  1464     0275                     l61:	
  1465                           ;main.c: 115: while(1){
  1466                           
  1467                           
  1468                           ;main.c: 117: rcmd[0] = 'Q';
  1469     0275  3051               	movlw	81
  1470     0276  0020               	movlb	0	; select bank0
  1471     0277  00E3               	movwf	main@rcmd
  1472                           
  1473                           ;main.c: 118: rcmd[1] = 'Q';
  1474     0278  3051               	movlw	81
  1475     0279  00E4               	movwf	main@rcmd+1
  1476                           
  1477                           ;main.c: 119: rcmd[2] = 'Q';
  1478     027A  3051               	movlw	81
  1479     027B  00E5               	movwf	main@rcmd+2
  1480     027C                     l1926:
  1481                           
  1482                           ;main.c: 120: rcmd[3] = '\0';
  1483     027C  01E6               	clrf	main@rcmd+3
  1484     027D                     l1928:
  1485                           
  1486                           ;main.c: 122: tmp[0] = 'Q';
  1487     027D  30C4               	movlw	196
  1488     027E  0086               	movwf	6
  1489     027F  3022               	movlw	34
  1490     0280  0087               	movwf	7
  1491     0281  3051               	movlw	81
  1492     0282  3FC0               	movwi [0]fsr1
  1493     0283                     l1930:
  1494                           
  1495                           ;main.c: 123: tmp[1] = 'Q';
  1496     0283  30C5               	movlw	197
  1497     0284  0086               	movwf	6
  1498     0285  3022               	movlw	34
  1499     0286  0087               	movwf	7
  1500     0287  3051               	movlw	81
  1501     0288  0081               	movwf	1
  1502     0289                     l1932:
  1503                           
  1504                           ;main.c: 124: tmp[2] = 'Q';
  1505     0289  30C6               	movlw	198
  1506     028A  0086               	movwf	6
  1507     028B  3022               	movlw	34
  1508     028C  0087               	movwf	7
  1509     028D  3051               	movlw	81
  1510     028E  0081               	movwf	1
  1511     028F                     l1934:
  1512                           
  1513                           ;main.c: 125: tmp[3] = '\0';
  1514     028F  30C4               	movlw	196
  1515     0290  0086               	movwf	6
  1516     0291  3022               	movlw	34
  1517     0292  0087               	movwf	7
  1518     0293  3143               	addfsr 1,3
  1519     0294  0181               	clrf	1
  1520     0295                     l1936:
  1521                           
  1522                           ;main.c: 127: gets(tmp);
  1523     0295  30C4               	movlw	196
  1524     0296  00FA               	movwf	gets@s
  1525     0297  3022               	movlw	34
  1526     0298  00FB               	movwf	gets@s+1
  1527     0299  318E  2604  3182   	fcall	_gets
  1528     029C                     l1938:
  1529                           
  1530                           ;main.c: 128: printf("%s\n", tmp);
  1531     029C  3061               	movlw	low (STR_1| (0+32768))
  1532     029D  0020               	movlb	0	; select bank0
  1533     029E  00A0               	movwf	printf@f
  1534     029F  3090               	movlw	high (STR_1| (0+32768))
  1535     02A0  00A1               	movwf	printf@f+1
  1536     02A1  30C4               	movlw	196
  1537     02A2  00A2               	movwf	low ((?_printf| 0+2))
  1538     02A3  3022               	movlw	34
  1539     02A4  00A3               	movwf	(low ((?_printf| 0+2))+1)
  1540     02A5  3181  2166  3182   	fcall	_printf
  1541     02A8                     l1940:
  1542                           
  1543                           ;main.c: 130: rcmd[0] = tmp[1];
  1544     02A8  30C4               	movlw	196
  1545     02A9  0086               	movwf	6
  1546     02AA  3022               	movlw	34
  1547     02AB  0087               	movwf	7
  1548     02AC  3141               	addfsr 1,1
  1549     02AD  0801               	movf	1,w
  1550     02AE  0020               	movlb	0	; select bank0
  1551     02AF  00E3               	movwf	main@rcmd
  1552     02B0                     l1942:
  1553                           
  1554                           ;main.c: 131: rcmd[1] = tmp[2];
  1555     02B0  30C4               	movlw	196
  1556     02B1  0086               	movwf	6
  1557     02B2  3022               	movlw	34
  1558     02B3  0087               	movwf	7
  1559     02B4  3142               	addfsr 1,2
  1560     02B5  0801               	movf	1,w
  1561     02B6  00E4               	movwf	main@rcmd+1
  1562     02B7                     l1944:
  1563                           
  1564                           ;main.c: 132: rcmd[2] = tmp[3];
  1565     02B7  30C4               	movlw	196
  1566     02B8  0086               	movwf	6
  1567     02B9  3022               	movlw	34
  1568     02BA  0087               	movwf	7
  1569     02BB  3143               	addfsr 1,3
  1570     02BC  0801               	movf	1,w
  1571     02BD  00E5               	movwf	main@rcmd+2
  1572     02BE                     l1946:
  1573                           
  1574                           ;main.c: 133: rcmd[3] = '\0';
  1575     02BE  01E6               	clrf	main@rcmd+3
  1576     02BF                     l1948:
  1577                           
  1578                           ;main.c: 136: enum command cmd;;main.c: 138: cmd = VER;
  1579     02BF  300D               	movlw	13
  1580     02C0  00E2               	movwf	main@cmd
  1581     02C1                     l1950:
  1582                           
  1583                           ;main.c: 140: if(strcmp(rcmd,"LDS") == 0) {
  1584     02C1  3063               	movlw	low main@rcmd
  1585     02C2  00F0               	movwf	strcmp@s1
  1586     02C3  3000               	movlw	high main@rcmd
  1587     02C4  00F1               	movwf	strcmp@s1+1
  1588     02C5  3099               	movlw	low (STR_2| (0+32768))
  1589     02C6  00F2               	movwf	strcmp@s2
  1590     02C7  3090               	movlw	high (STR_2| (0+32768))
  1591     02C8  00F3               	movwf	strcmp@s2+1
  1592     02C9  318E  266E  3182   	fcall	_strcmp
  1593     02CC  0870               	movf	?_strcmp,w
  1594     02CD  0471               	iorwf	?_strcmp+1,w
  1595     02CE  1D03               	btfss	3,2
  1596     02CF  2AD1               	goto	u1581
  1597     02D0  2AD2               	goto	u1580
  1598     02D1                     u1581:
  1599     02D1  2AD6               	goto	l1954
  1600     02D2                     u1580:
  1601     02D2                     l1952:
  1602                           
  1603                           ;main.c: 141: cmd = LDS;
  1604     02D2  3008               	movlw	8
  1605     02D3  0020               	movlb	0	; select bank0
  1606     02D4  00E2               	movwf	main@cmd
  1607                           
  1608                           ;main.c: 142: }else if(strcmp(rcmd,"SA1") == 0){
  1609     02D5  2BE6               	goto	l2006
  1610     02D6                     l1954:
  1611     02D6  3063               	movlw	low main@rcmd
  1612     02D7  00F0               	movwf	strcmp@s1
  1613     02D8  3000               	movlw	high main@rcmd
  1614     02D9  00F1               	movwf	strcmp@s1+1
  1615     02DA  3065               	movlw	low (STR_3| (0+32768))
  1616     02DB  00F2               	movwf	strcmp@s2
  1617     02DC  3090               	movlw	high (STR_3| (0+32768))
  1618     02DD  00F3               	movwf	strcmp@s2+1
  1619     02DE  318E  266E  3182   	fcall	_strcmp
  1620     02E1  0870               	movf	?_strcmp,w
  1621     02E2  0471               	iorwf	?_strcmp+1,w
  1622     02E3  1D03               	btfss	3,2
  1623     02E4  2AE6               	goto	u1591
  1624     02E5  2AE7               	goto	u1590
  1625     02E6                     u1591:
  1626     02E6  2AEA               	goto	l1958
  1627     02E7                     u1590:
  1628     02E7                     l1956:
  1629                           
  1630                           ;main.c: 143: cmd = SA1;
  1631     02E7  0020               	movlb	0	; select bank0
  1632     02E8  01E2               	clrf	main@cmd
  1633                           
  1634                           ;main.c: 144: }else if(strcmp(rcmd,"SA2") == 0){
  1635     02E9  2BE6               	goto	l2006
  1636     02EA                     l1958:
  1637     02EA  3063               	movlw	low main@rcmd
  1638     02EB  00F0               	movwf	strcmp@s1
  1639     02EC  3000               	movlw	high main@rcmd
  1640     02ED  00F1               	movwf	strcmp@s1+1
  1641     02EE  306D               	movlw	low (STR_4| (0+32768))
  1642     02EF  00F2               	movwf	strcmp@s2
  1643     02F0  3090               	movlw	high (STR_4| (0+32768))
  1644     02F1  00F3               	movwf	strcmp@s2+1
  1645     02F2  318E  266E  3182   	fcall	_strcmp
  1646     02F5  0870               	movf	?_strcmp,w
  1647     02F6  0471               	iorwf	?_strcmp+1,w
  1648     02F7  1D03               	btfss	3,2
  1649     02F8  2AFA               	goto	u1601
  1650     02F9  2AFB               	goto	u1600
  1651     02FA                     u1601:
  1652     02FA  2AFF               	goto	l1962
  1653     02FB                     u1600:
  1654     02FB                     l1960:
  1655                           
  1656                           ;main.c: 145: cmd = SA2;
  1657     02FB  0020               	movlb	0	; select bank0
  1658     02FC  01E2               	clrf	main@cmd
  1659     02FD  0AE2               	incf	main@cmd,f
  1660                           
  1661                           ;main.c: 146: }else if(strcmp(rcmd,"SA3") == 0){
  1662     02FE  2BE6               	goto	l2006
  1663     02FF                     l1962:
  1664     02FF  3063               	movlw	low main@rcmd
  1665     0300  00F0               	movwf	strcmp@s1
  1666     0301  3000               	movlw	high main@rcmd
  1667     0302  00F1               	movwf	strcmp@s1+1
  1668     0303  3075               	movlw	low (STR_5| (0+32768))
  1669     0304  00F2               	movwf	strcmp@s2
  1670     0305  3090               	movlw	high (STR_5| (0+32768))
  1671     0306  00F3               	movwf	strcmp@s2+1
  1672     0307  318E  266E  3182   	fcall	_strcmp
  1673     030A  0870               	movf	?_strcmp,w
  1674     030B  0471               	iorwf	?_strcmp+1,w
  1675     030C  1D03               	btfss	3,2
  1676     030D  2B0F               	goto	u1611
  1677     030E  2B10               	goto	u1610
  1678     030F                     u1611:
  1679     030F  2B14               	goto	l1966
  1680     0310                     u1610:
  1681     0310                     l1964:
  1682                           
  1683                           ;main.c: 147: cmd = SA3;
  1684     0310  3002               	movlw	2
  1685     0311  0020               	movlb	0	; select bank0
  1686     0312  00E2               	movwf	main@cmd
  1687                           
  1688                           ;main.c: 148: }else if(strcmp(rcmd,"SF1") == 0){
  1689     0313  2BE6               	goto	l2006
  1690     0314                     l1966:
  1691     0314  3063               	movlw	low main@rcmd
  1692     0315  00F0               	movwf	strcmp@s1
  1693     0316  3000               	movlw	high main@rcmd
  1694     0317  00F1               	movwf	strcmp@s1+1
  1695     0318  3069               	movlw	low (STR_6| (0+32768))
  1696     0319  00F2               	movwf	strcmp@s2
  1697     031A  3090               	movlw	high (STR_6| (0+32768))
  1698     031B  00F3               	movwf	strcmp@s2+1
  1699     031C  318E  266E  3182   	fcall	_strcmp
  1700     031F  0870               	movf	?_strcmp,w
  1701     0320  0471               	iorwf	?_strcmp+1,w
  1702     0321  1D03               	btfss	3,2
  1703     0322  2B24               	goto	u1621
  1704     0323  2B25               	goto	u1620
  1705     0324                     u1621:
  1706     0324  2B29               	goto	l1970
  1707     0325                     u1620:
  1708     0325                     l1968:
  1709                           
  1710                           ;main.c: 149: cmd = SF1;
  1711     0325  3003               	movlw	3
  1712     0326  0020               	movlb	0	; select bank0
  1713     0327  00E2               	movwf	main@cmd
  1714                           
  1715                           ;main.c: 150: }else if(strcmp(rcmd,"SF2") == 0){
  1716     0328  2BE6               	goto	l2006
  1717     0329                     l1970:
  1718     0329  3063               	movlw	low main@rcmd
  1719     032A  00F0               	movwf	strcmp@s1
  1720     032B  3000               	movlw	high main@rcmd
  1721     032C  00F1               	movwf	strcmp@s1+1
  1722     032D  3071               	movlw	low (STR_7| (0+32768))
  1723     032E  00F2               	movwf	strcmp@s2
  1724     032F  3090               	movlw	high (STR_7| (0+32768))
  1725     0330  00F3               	movwf	strcmp@s2+1
  1726     0331  318E  266E  3182   	fcall	_strcmp
  1727     0334  0870               	movf	?_strcmp,w
  1728     0335  0471               	iorwf	?_strcmp+1,w
  1729     0336  1D03               	btfss	3,2
  1730     0337  2B39               	goto	u1631
  1731     0338  2B3A               	goto	u1630
  1732     0339                     u1631:
  1733     0339  2B3E               	goto	l1974
  1734     033A                     u1630:
  1735     033A                     l1972:
  1736                           
  1737                           ;main.c: 151: cmd = SF2;
  1738     033A  3004               	movlw	4
  1739     033B  0020               	movlb	0	; select bank0
  1740     033C  00E2               	movwf	main@cmd
  1741                           
  1742                           ;main.c: 152: }else if(strcmp(rcmd,"SF3") == 0){
  1743     033D  2BE6               	goto	l2006
  1744     033E                     l1974:
  1745     033E  3063               	movlw	low main@rcmd
  1746     033F  00F0               	movwf	strcmp@s1
  1747     0340  3000               	movlw	high main@rcmd
  1748     0341  00F1               	movwf	strcmp@s1+1
  1749     0342  3079               	movlw	low (STR_8| (0+32768))
  1750     0343  00F2               	movwf	strcmp@s2
  1751     0344  3090               	movlw	high (STR_8| (0+32768))
  1752     0345  00F3               	movwf	strcmp@s2+1
  1753     0346  318E  266E  3182   	fcall	_strcmp
  1754     0349  0870               	movf	?_strcmp,w
  1755     034A  0471               	iorwf	?_strcmp+1,w
  1756     034B  1D03               	btfss	3,2
  1757     034C  2B4E               	goto	u1641
  1758     034D  2B4F               	goto	u1640
  1759     034E                     u1641:
  1760     034E  2B53               	goto	l1978
  1761     034F                     u1640:
  1762     034F                     l1976:
  1763                           
  1764                           ;main.c: 153: cmd = SF3;
  1765     034F  3005               	movlw	5
  1766     0350  0020               	movlb	0	; select bank0
  1767     0351  00E2               	movwf	main@cmd
  1768                           
  1769                           ;main.c: 154: }else if(strcmp(rcmd,"SF4") == 0){
  1770     0352  2BE6               	goto	l2006
  1771     0353                     l1978:
  1772     0353  3063               	movlw	low main@rcmd
  1773     0354  00F0               	movwf	strcmp@s1
  1774     0355  3000               	movlw	high main@rcmd
  1775     0356  00F1               	movwf	strcmp@s1+1
  1776     0357  307D               	movlw	low (STR_9| (0+32768))
  1777     0358  00F2               	movwf	strcmp@s2
  1778     0359  3090               	movlw	high (STR_9| (0+32768))
  1779     035A  00F3               	movwf	strcmp@s2+1
  1780     035B  318E  266E  3182   	fcall	_strcmp
  1781     035E  0870               	movf	?_strcmp,w
  1782     035F  0471               	iorwf	?_strcmp+1,w
  1783     0360  1D03               	btfss	3,2
  1784     0361  2B63               	goto	u1651
  1785     0362  2B64               	goto	u1650
  1786     0363                     u1651:
  1787     0363  2B68               	goto	l1982
  1788     0364                     u1650:
  1789     0364                     l1980:
  1790                           
  1791                           ;main.c: 155: cmd = SF4;
  1792     0364  3006               	movlw	6
  1793     0365  0020               	movlb	0	; select bank0
  1794     0366  00E2               	movwf	main@cmd
  1795                           
  1796                           ;main.c: 156: }else if(strcmp(rcmd,"LEP") == 0){
  1797     0367  2BE6               	goto	l2006
  1798     0368                     l1982:
  1799     0368  3063               	movlw	low main@rcmd
  1800     0369  00F0               	movwf	strcmp@s1
  1801     036A  3000               	movlw	high main@rcmd
  1802     036B  00F1               	movwf	strcmp@s1+1
  1803     036C  308D               	movlw	low (STR_10| (0+32768))
  1804     036D  00F2               	movwf	strcmp@s2
  1805     036E  3090               	movlw	high (STR_10| (0+32768))
  1806     036F  00F3               	movwf	strcmp@s2+1
  1807     0370  318E  266E  3182   	fcall	_strcmp
  1808     0373  0870               	movf	?_strcmp,w
  1809     0374  0471               	iorwf	?_strcmp+1,w
  1810     0375  1D03               	btfss	3,2
  1811     0376  2B78               	goto	u1661
  1812     0377  2B79               	goto	u1660
  1813     0378                     u1661:
  1814     0378  2B7D               	goto	l1986
  1815     0379                     u1660:
  1816     0379                     l1984:
  1817                           
  1818                           ;main.c: 157: cmd = LEP;
  1819     0379  3007               	movlw	7
  1820     037A  0020               	movlb	0	; select bank0
  1821     037B  00E2               	movwf	main@cmd
  1822                           
  1823                           ;main.c: 158: }else if(strcmp(rcmd,"LPE") == 0){
  1824     037C  2BE6               	goto	l2006
  1825     037D                     l1986:
  1826     037D  3063               	movlw	low main@rcmd
  1827     037E  00F0               	movwf	strcmp@s1
  1828     037F  3000               	movlw	high main@rcmd
  1829     0380  00F1               	movwf	strcmp@s1+1
  1830     0381  3081               	movlw	low (STR_11| (0+32768))
  1831     0382  00F2               	movwf	strcmp@s2
  1832     0383  3090               	movlw	high (STR_11| (0+32768))
  1833     0384  00F3               	movwf	strcmp@s2+1
  1834     0385  318E  266E  3182   	fcall	_strcmp
  1835     0388  0870               	movf	?_strcmp,w
  1836     0389  0471               	iorwf	?_strcmp+1,w
  1837     038A  1D03               	btfss	3,2
  1838     038B  2B8D               	goto	u1671
  1839     038C  2B8E               	goto	u1670
  1840     038D                     u1671:
  1841     038D  2B92               	goto	l1990
  1842     038E                     u1670:
  1843     038E                     l1988:
  1844                           
  1845                           ;main.c: 159: cmd = LPE;
  1846     038E  3009               	movlw	9
  1847     038F  0020               	movlb	0	; select bank0
  1848     0390  00E2               	movwf	main@cmd
  1849                           
  1850                           ;main.c: 160: }else if(strcmp(rcmd,"LDR") == 0){
  1851     0391  2BE6               	goto	l2006
  1852     0392                     l1990:
  1853     0392  3063               	movlw	low main@rcmd
  1854     0393  00F0               	movwf	strcmp@s1
  1855     0394  3000               	movlw	high main@rcmd
  1856     0395  00F1               	movwf	strcmp@s1+1
  1857     0396  3091               	movlw	low (STR_12| (0+32768))
  1858     0397  00F2               	movwf	strcmp@s2
  1859     0398  3090               	movlw	high (STR_12| (0+32768))
  1860     0399  00F3               	movwf	strcmp@s2+1
  1861     039A  318E  266E  3182   	fcall	_strcmp
  1862     039D  0870               	movf	?_strcmp,w
  1863     039E  0471               	iorwf	?_strcmp+1,w
  1864     039F  1D03               	btfss	3,2
  1865     03A0  2BA2               	goto	u1681
  1866     03A1  2BA3               	goto	u1680
  1867     03A2                     u1681:
  1868     03A2  2BA7               	goto	l1994
  1869     03A3                     u1680:
  1870     03A3                     l1992:
  1871                           
  1872                           ;main.c: 161: cmd = LDR;
  1873     03A3  300A               	movlw	10
  1874     03A4  0020               	movlb	0	; select bank0
  1875     03A5  00E2               	movwf	main@cmd
  1876                           
  1877                           ;main.c: 162: }else if(strcmp(rcmd,"LON") == 0){
  1878     03A6  2BE6               	goto	l2006
  1879     03A7                     l1994:
  1880     03A7  3063               	movlw	low main@rcmd
  1881     03A8  00F0               	movwf	strcmp@s1
  1882     03A9  3000               	movlw	high main@rcmd
  1883     03AA  00F1               	movwf	strcmp@s1+1
  1884     03AB  3089               	movlw	low (STR_13| (0+32768))
  1885     03AC  00F2               	movwf	strcmp@s2
  1886     03AD  3090               	movlw	high (STR_13| (0+32768))
  1887     03AE  00F3               	movwf	strcmp@s2+1
  1888     03AF  318E  266E  3182   	fcall	_strcmp
  1889     03B2  0870               	movf	?_strcmp,w
  1890     03B3  0471               	iorwf	?_strcmp+1,w
  1891     03B4  1D03               	btfss	3,2
  1892     03B5  2BB7               	goto	u1691
  1893     03B6  2BB8               	goto	u1690
  1894     03B7                     u1691:
  1895     03B7  2BBC               	goto	l1998
  1896     03B8                     u1690:
  1897     03B8                     l1996:
  1898                           
  1899                           ;main.c: 163: cmd = LON;
  1900     03B8  300B               	movlw	11
  1901     03B9  0020               	movlb	0	; select bank0
  1902     03BA  00E2               	movwf	main@cmd
  1903                           
  1904                           ;main.c: 164: }else if(strcmp(rcmd,"LOF") == 0){
  1905     03BB  2BE6               	goto	l2006
  1906     03BC                     l1998:
  1907     03BC  3063               	movlw	low main@rcmd
  1908     03BD  00F0               	movwf	strcmp@s1
  1909     03BE  3000               	movlw	high main@rcmd
  1910     03BF  00F1               	movwf	strcmp@s1+1
  1911     03C0  3085               	movlw	low (STR_14| (0+32768))
  1912     03C1  00F2               	movwf	strcmp@s2
  1913     03C2  3090               	movlw	high (STR_14| (0+32768))
  1914     03C3  00F3               	movwf	strcmp@s2+1
  1915     03C4  318E  266E  3182   	fcall	_strcmp
  1916     03C7  0870               	movf	?_strcmp,w
  1917     03C8  0471               	iorwf	?_strcmp+1,w
  1918     03C9  1D03               	btfss	3,2
  1919     03CA  2BCC               	goto	u1701
  1920     03CB  2BCD               	goto	u1700
  1921     03CC                     u1701:
  1922     03CC  2BD1               	goto	l2002
  1923     03CD                     u1700:
  1924     03CD                     l2000:
  1925                           
  1926                           ;main.c: 165: cmd = LOF;
  1927     03CD  300C               	movlw	12
  1928     03CE  0020               	movlb	0	; select bank0
  1929     03CF  00E2               	movwf	main@cmd
  1930                           
  1931                           ;main.c: 166: }else if(strcmp(rcmd,"VER") == 0){
  1932     03D0  2BE6               	goto	l2006
  1933     03D1                     l2002:
  1934     03D1  3063               	movlw	low main@rcmd
  1935     03D2  00F0               	movwf	strcmp@s1
  1936     03D3  3000               	movlw	high main@rcmd
  1937     03D4  00F1               	movwf	strcmp@s1+1
  1938     03D5  3095               	movlw	low (STR_15| (0+32768))
  1939     03D6  00F2               	movwf	strcmp@s2
  1940     03D7  3090               	movlw	high (STR_15| (0+32768))
  1941     03D8  00F3               	movwf	strcmp@s2+1
  1942     03D9  318E  266E  3182   	fcall	_strcmp
  1943     03DC  0870               	movf	?_strcmp,w
  1944     03DD  0471               	iorwf	?_strcmp+1,w
  1945     03DE  1D03               	btfss	3,2
  1946     03DF  2BE1               	goto	u1711
  1947     03E0  2BE2               	goto	u1710
  1948     03E1                     u1711:
  1949     03E1  2BE6               	goto	l83
  1950     03E2                     u1710:
  1951     03E2                     l2004:
  1952                           
  1953                           ;main.c: 167: cmd = VER;
  1954     03E2  300D               	movlw	13
  1955     03E3  0020               	movlb	0	; select bank0
  1956     03E4  00E2               	movwf	main@cmd
  1957     03E5  2BE6               	goto	l2006
  1958     03E6                     l83:
  1959     03E6                     l2006:
  1960                           
  1961                           ;main.c: 168: };main.c: 169: ptr = strtok(tmp, "/");
  1962     03E6  30C4               	movlw	196
  1963     03E7  0020               	movlb	0	; select bank0
  1964     03E8  00A2               	movwf	strtok@s1
  1965     03E9  3022               	movlw	34
  1966     03EA  00A3               	movwf	strtok@s1+1
  1967     03EB  309D               	movlw	low (STR_16| (0+32768))
  1968     03EC  00A4               	movwf	strtok@s2
  1969     03ED  3090               	movlw	high (STR_16| (0+32768))
  1970     03EE  00A5               	movwf	strtok@s2+1
  1971     03EF  3180  2028  3182   	fcall	_strtok
  1972     03F2  0020               	movlb	0	; select bank0
  1973     03F3  0823               	movf	?_strtok+1,w
  1974     03F4  00E8               	movwf	main@ptr+1
  1975     03F5  0822               	movf	?_strtok,w
  1976     03F6  00E7               	movwf	main@ptr
  1977                           
  1978                           ;main.c: 172: switch(cmd){
  1979     03F7  2FB9               	goto	l2196
  1980     03F8                     l2008:
  1981                           
  1982                           ;main.c: 175: for (int i=0 ; i < num_ap1 ; i++){
  1983     03F8  01D4               	clrf	main@i
  1984     03F9  01D5               	clrf	main@i+1
  1985     03FA  2C13               	goto	l2014
  1986     03FB                     l2010:
  1987                           
  1988                           ;main.c: 176: ap1_dat[i] = 0;
  1989     03FB  0020               	movlb	0	; select bank0
  1990     03FC  0855               	movf	main@i+1,w
  1991     03FD  00B1               	movwf	??_main+1
  1992     03FE  0854               	movf	main@i,w
  1993     03FF  00B0               	movwf	??_main
  1994     0400  35B0               	lslf	??_main,f
  1995     0401  0DB1               	rlf	??_main+1,f
  1996     0402  306C               	movlw	108
  1997     0403  00B2               	movwf	??_main+2
  1998     0404  3020               	movlw	32
  1999     0405  00B3               	movwf	??_main+3
  2000     0406  0830               	movf	??_main,w
  2001     0407  0732               	addwf	??_main+2,w
  2002     0408  0086               	movwf	6
  2003     0409  0831               	movf	??_main+1,w
  2004     040A  3D33               	addwfc	??_main+3,w
  2005     040B  0087               	movwf	7
  2006     040C  3000               	movlw	0
  2007     040D  3FC0               	movwi [0]fsr1
  2008     040E  3FC1               	movwi [1]fsr1
  2009     040F                     l2012:
  2010     040F  3001               	movlw	1
  2011     0410  07D4               	addwf	main@i,f
  2012     0411  3000               	movlw	0
  2013     0412  3DD5               	addwfc	main@i+1,f
  2014     0413                     l2014:
  2015     0413  0855               	movf	main@i+1,w
  2016     0414  3A80               	xorlw	128
  2017     0415  00B0               	movwf	??_main
  2018     0416  0851               	movf	main@num_ap1+1,w
  2019     0417  3A80               	xorlw	128
  2020     0418  0230               	subwf	??_main,w
  2021     0419  1D03               	skipz
  2022     041A  2C1D               	goto	u1725
  2023     041B  0850               	movf	main@num_ap1,w
  2024     041C  0254               	subwf	main@i,w
  2025     041D                     u1725:
  2026     041D  1C03               	skipc
  2027     041E  2C20               	goto	u1721
  2028     041F  2C21               	goto	u1720
  2029     0420                     u1721:
  2030     0420  2BFB               	goto	l2010
  2031     0421                     u1720:
  2032     0421                     l2016:
  2033                           
  2034                           ;main.c: 177: };main.c: 178: for (int i=0 ; i < num_ap1 ; i++){
  2035     0421  0020               	movlb	0	; select bank0
  2036     0422  01E0               	clrf	main@i_132
  2037     0423  01E1               	clrf	main@i_132+1
  2038     0424  2C7D               	goto	l94
  2039     0425                     l2018:
  2040                           
  2041                           ;main.c: 179: ptr = strtok((0), "/");
  2042     0425  3000               	movlw	0
  2043     0426  0020               	movlb	0	; select bank0
  2044     0427  00A2               	movwf	strtok@s1
  2045     0428  00A3               	movwf	strtok@s1+1
  2046     0429  309D               	movlw	low (STR_16| (0+32768))
  2047     042A  00A4               	movwf	strtok@s2
  2048     042B  3090               	movlw	high (STR_16| (0+32768))
  2049     042C  00A5               	movwf	strtok@s2+1
  2050     042D  3180  2028  3182   	fcall	_strtok
  2051     0430  0020               	movlb	0	; select bank0
  2052     0431  0823               	movf	?_strtok+1,w
  2053     0432  00E8               	movwf	main@ptr+1
  2054     0433  0822               	movf	?_strtok,w
  2055     0434  00E7               	movwf	main@ptr
  2056     0435                     l2020:
  2057                           
  2058                           ;main.c: 180: if(ptr != (0)) {
  2059     0435  0867               	movf	main@ptr,w
  2060     0436  0468               	iorwf	main@ptr+1,w
  2061     0437  1903               	btfsc	3,2
  2062     0438  2C3A               	goto	u1731
  2063     0439  2C3B               	goto	u1730
  2064     043A                     u1731:
  2065     043A  2C73               	goto	l2026
  2066     043B                     u1730:
  2067     043B                     l2022:
  2068                           
  2069                           ;main.c: 181: ap1_dat[i] = atoi(ptr);
  2070     043B  0868               	movf	main@ptr+1,w
  2071     043C  00F7               	movwf	atoi@s+1
  2072     043D  0867               	movf	main@ptr,w
  2073     043E  00F6               	movwf	atoi@s
  2074     043F  3180  20E7  3182   	fcall	_atoi
  2075     0442  0020               	movlb	0	; select bank0
  2076     0443  0861               	movf	main@i_132+1,w
  2077     0444  00B1               	movwf	??_main+1
  2078     0445  0860               	movf	main@i_132,w
  2079     0446  00B0               	movwf	??_main
  2080     0447  35B0               	lslf	??_main,f
  2081     0448  0DB1               	rlf	??_main+1,f
  2082     0449  306C               	movlw	108
  2083     044A  00B2               	movwf	??_main+2
  2084     044B  3020               	movlw	32
  2085     044C  00B3               	movwf	??_main+3
  2086     044D  0830               	movf	??_main,w
  2087     044E  0732               	addwf	??_main+2,w
  2088     044F  0086               	movwf	6
  2089     0450  0831               	movf	??_main+1,w
  2090     0451  3D33               	addwfc	??_main+3,w
  2091     0452  0087               	movwf	7
  2092     0453  0876               	movf	?_atoi,w
  2093     0454  3FC0               	movwi [0]fsr1
  2094     0455  0877               	movf	?_atoi+1,w
  2095     0456  3FC1               	movwi [1]fsr1
  2096     0457                     l2024:
  2097                           
  2098                           ;main.c: 182: printf("%d\n", ap1_dat[i]);
  2099     0457  305D               	movlw	low (STR_18| (0+32768))
  2100     0458  00A0               	movwf	printf@f
  2101     0459  3090               	movlw	high (STR_18| (0+32768))
  2102     045A  00A1               	movwf	printf@f+1
  2103     045B  0861               	movf	main@i_132+1,w
  2104     045C  00B1               	movwf	??_main+1
  2105     045D  0860               	movf	main@i_132,w
  2106     045E  00B0               	movwf	??_main
  2107     045F  35B0               	lslf	??_main,f
  2108     0460  0DB1               	rlf	??_main+1,f
  2109     0461  306C               	movlw	108
  2110     0462  00B2               	movwf	??_main+2
  2111     0463  3020               	movlw	32
  2112     0464  00B3               	movwf	??_main+3
  2113     0465  0830               	movf	??_main,w
  2114     0466  0732               	addwf	??_main+2,w
  2115     0467  0086               	movwf	6
  2116     0468  0831               	movf	??_main+1,w
  2117     0469  3D33               	addwfc	??_main+3,w
  2118     046A  0087               	movwf	7
  2119     046B  3F40               	moviw [0]fsr1
  2120     046C  00A2               	movwf	?_printf+2
  2121     046D  3F41               	moviw [1]fsr1
  2122     046E  00A3               	movwf	?_printf+3
  2123     046F  3181  2166  3182   	fcall	_printf
  2124                           
  2125                           ;main.c: 183: }else{
  2126     0472  2C78               	goto	l2028
  2127     0473                     l2026:
  2128                           
  2129                           ;main.c: 184: num_ap1_cnt = i;
  2130     0473  0861               	movf	main@i_132+1,w
  2131     0474  00C5               	movwf	main@num_ap1_cnt+1
  2132     0475  0860               	movf	main@i_132,w
  2133     0476  00C4               	movwf	main@num_ap1_cnt
  2134                           
  2135                           ;main.c: 185: break;
  2136     0477  2C8B               	goto	l2030
  2137     0478                     l2028:
  2138     0478  3001               	movlw	1
  2139     0479  0020               	movlb	0	; select bank0
  2140     047A  07E0               	addwf	main@i_132,f
  2141     047B  3000               	movlw	0
  2142     047C  3DE1               	addwfc	main@i_132+1,f
  2143     047D                     l94:
  2144     047D  0861               	movf	main@i_132+1,w
  2145     047E  3A80               	xorlw	128
  2146     047F  00B0               	movwf	??_main
  2147     0480  0851               	movf	main@num_ap1+1,w
  2148     0481  3A80               	xorlw	128
  2149     0482  0230               	subwf	??_main,w
  2150     0483  1D03               	skipz
  2151     0484  2C87               	goto	u1745
  2152     0485  0850               	movf	main@num_ap1,w
  2153     0486  0260               	subwf	main@i_132,w
  2154     0487                     u1745:
  2155     0487  1C03               	skipc
  2156     0488  2C8A               	goto	u1741
  2157     0489  2C8B               	goto	u1740
  2158     048A                     u1741:
  2159     048A  2C25               	goto	l2018
  2160     048B                     u1740:
  2161     048B                     l2030:
  2162                           
  2163                           ;main.c: 186: };main.c: 187: };main.c: 188: printf("SA1 OK\n");
  2164     048B  301E               	movlw	low (STR_19| (0+32768))
  2165     048C  0020               	movlb	0	; select bank0
  2166     048D  00A0               	movwf	printf@f
  2167     048E  3090               	movlw	high (STR_19| (0+32768))
  2168     048F  00A1               	movwf	printf@f+1
  2169     0490  3181  2166  3182   	fcall	_printf
  2170                           
  2171                           ;main.c: 189: break;
  2172     0493  2A75               	goto	l61
  2173     0494                     l2032:
  2174                           
  2175                           ;main.c: 192: for (int i=0 ; i < num_ap2 ; i++){
  2176     0494  01D6               	clrf	main@i_137
  2177     0495  01D7               	clrf	main@i_137+1
  2178     0496  2CA3               	goto	l2038
  2179     0497                     l2034:
  2180                           
  2181                           ;main.c: 193: ap2_dat[i] = 0;
  2182     0497  0020               	movlb	0	; select bank0
  2183     0498  3556               	lslf	main@i_137,w
  2184     0499  3EA0               	addlw	(low (_ap2_dat| 0))& (0+255)
  2185     049A  0086               	movwf	6
  2186     049B  0187               	clrf	7
  2187     049C  3000               	movlw	0
  2188     049D  3FC0               	movwi [0]fsr1
  2189     049E  3FC1               	movwi [1]fsr1
  2190     049F                     l2036:
  2191     049F  3001               	movlw	1
  2192     04A0  07D6               	addwf	main@i_137,f
  2193     04A1  3000               	movlw	0
  2194     04A2  3DD7               	addwfc	main@i_137+1,f
  2195     04A3                     l2038:
  2196     04A3  0857               	movf	main@i_137+1,w
  2197     04A4  3A80               	xorlw	128
  2198     04A5  00B0               	movwf	??_main
  2199     04A6  0853               	movf	main@num_ap2+1,w
  2200     04A7  3A80               	xorlw	128
  2201     04A8  0230               	subwf	??_main,w
  2202     04A9  1D03               	skipz
  2203     04AA  2CAD               	goto	u1755
  2204     04AB  0852               	movf	main@num_ap2,w
  2205     04AC  0256               	subwf	main@i_137,w
  2206     04AD                     u1755:
  2207     04AD  1C03               	skipc
  2208     04AE  2CB0               	goto	u1751
  2209     04AF  2CB1               	goto	u1750
  2210     04B0                     u1751:
  2211     04B0  2C97               	goto	l2034
  2212     04B1                     u1750:
  2213     04B1                     l2040:
  2214                           
  2215                           ;main.c: 194: };main.c: 195: for (int i=0 ; i < num_ap2 ; i++){
  2216     04B1  0020               	movlb	0	; select bank0
  2217     04B2  01DE               	clrf	main@i_138
  2218     04B3  01DF               	clrf	main@i_138+1
  2219     04B4  2CE5               	goto	l104
  2220     04B5                     l2042:
  2221                           
  2222                           ;main.c: 196: ptr = strtok((0), "/");
  2223     04B5  3000               	movlw	0
  2224     04B6  0020               	movlb	0	; select bank0
  2225     04B7  00A2               	movwf	strtok@s1
  2226     04B8  00A3               	movwf	strtok@s1+1
  2227     04B9  309D               	movlw	low (STR_16| (0+32768))
  2228     04BA  00A4               	movwf	strtok@s2
  2229     04BB  3090               	movlw	high (STR_16| (0+32768))
  2230     04BC  00A5               	movwf	strtok@s2+1
  2231     04BD  3180  2028  3182   	fcall	_strtok
  2232     04C0  0020               	movlb	0	; select bank0
  2233     04C1  0823               	movf	?_strtok+1,w
  2234     04C2  00E8               	movwf	main@ptr+1
  2235     04C3  0822               	movf	?_strtok,w
  2236     04C4  00E7               	movwf	main@ptr
  2237     04C5                     l2044:
  2238                           
  2239                           ;main.c: 197: if(ptr != (0)) {
  2240     04C5  0867               	movf	main@ptr,w
  2241     04C6  0468               	iorwf	main@ptr+1,w
  2242     04C7  1903               	btfsc	3,2
  2243     04C8  2CCA               	goto	u1761
  2244     04C9  2CCB               	goto	u1760
  2245     04CA                     u1761:
  2246     04CA  2CDC               	goto	l2048
  2247     04CB                     u1760:
  2248     04CB                     l2046:
  2249                           
  2250                           ;main.c: 198: ap2_dat[i] = atoi(ptr);
  2251     04CB  0868               	movf	main@ptr+1,w
  2252     04CC  00F7               	movwf	atoi@s+1
  2253     04CD  0867               	movf	main@ptr,w
  2254     04CE  00F6               	movwf	atoi@s
  2255     04CF  3180  20E7  3182   	fcall	_atoi
  2256     04D2  0020               	movlb	0	; select bank0
  2257     04D3  355E               	lslf	main@i_138,w
  2258     04D4  3EA0               	addlw	(low (_ap2_dat| 0))& (0+255)
  2259     04D5  0086               	movwf	6
  2260     04D6  0187               	clrf	7
  2261     04D7  0876               	movf	?_atoi,w
  2262     04D8  3FC0               	movwi [0]fsr1
  2263     04D9  0877               	movf	?_atoi+1,w
  2264     04DA  3FC1               	movwi [1]fsr1
  2265                           
  2266                           ;main.c: 199: }else{
  2267     04DB  2CE1               	goto	l2050
  2268     04DC                     l2048:
  2269                           
  2270                           ;main.c: 200: num_ap2_cnt = i;
  2271     04DC  085F               	movf	main@i_138+1,w
  2272     04DD  00C7               	movwf	main@num_ap2_cnt+1
  2273     04DE  085E               	movf	main@i_138,w
  2274     04DF  00C6               	movwf	main@num_ap2_cnt
  2275                           
  2276                           ;main.c: 201: break;
  2277     04E0  2CF3               	goto	l2052
  2278     04E1                     l2050:
  2279     04E1  3001               	movlw	1
  2280     04E2  07DE               	addwf	main@i_138,f
  2281     04E3  3000               	movlw	0
  2282     04E4  3DDF               	addwfc	main@i_138+1,f
  2283     04E5                     l104:
  2284     04E5  085F               	movf	main@i_138+1,w
  2285     04E6  3A80               	xorlw	128
  2286     04E7  00B0               	movwf	??_main
  2287     04E8  0853               	movf	main@num_ap2+1,w
  2288     04E9  3A80               	xorlw	128
  2289     04EA  0230               	subwf	??_main,w
  2290     04EB  1D03               	skipz
  2291     04EC  2CEF               	goto	u1775
  2292     04ED  0852               	movf	main@num_ap2,w
  2293     04EE  025E               	subwf	main@i_138,w
  2294     04EF                     u1775:
  2295     04EF  1C03               	skipc
  2296     04F0  2CF2               	goto	u1771
  2297     04F1  2CF3               	goto	u1770
  2298     04F2                     u1771:
  2299     04F2  2CB5               	goto	l2042
  2300     04F3                     u1770:
  2301     04F3                     l2052:
  2302                           
  2303                           ;main.c: 202: };main.c: 203: };main.c: 204: printf("SA2 OK\n");
  2304     04F3  302E               	movlw	low (STR_21| (0+32768))
  2305     04F4  0020               	movlb	0	; select bank0
  2306     04F5  00A0               	movwf	printf@f
  2307     04F6  3090               	movlw	high (STR_21| (0+32768))
  2308     04F7  00A1               	movwf	printf@f+1
  2309     04F8  3181  2166  3182   	fcall	_printf
  2310                           
  2311                           ;main.c: 205: break;
  2312     04FB  2A75               	goto	l61
  2313     04FC                     l2054:
  2314                           
  2315                           ;main.c: 214: printf("SA3 OK\n");
  2316     04FC  303E               	movlw	low (STR_22| (0+32768))
  2317     04FD  00A0               	movwf	printf@f
  2318     04FE  3090               	movlw	high (STR_22| (0+32768))
  2319     04FF  00A1               	movwf	printf@f+1
  2320     0500  3181  2166  3182   	fcall	_printf
  2321                           
  2322                           ;main.c: 215: break;
  2323     0503  2A75               	goto	l61
  2324     0504                     l2056:
  2325                           
  2326                           ;main.c: 218: ptr = strtok((0), "/");
  2327     0504  3000               	movlw	0
  2328     0505  00A2               	movwf	strtok@s1
  2329     0506  00A3               	movwf	strtok@s1+1
  2330     0507  309D               	movlw	low (STR_16| (0+32768))
  2331     0508  00A4               	movwf	strtok@s2
  2332     0509  3090               	movlw	high (STR_16| (0+32768))
  2333     050A  00A5               	movwf	strtok@s2+1
  2334     050B  3180  2028  3182   	fcall	_strtok
  2335     050E  0020               	movlb	0	; select bank0
  2336     050F  0823               	movf	?_strtok+1,w
  2337     0510  00E8               	movwf	main@ptr+1
  2338     0511  0822               	movf	?_strtok,w
  2339     0512  00E7               	movwf	main@ptr
  2340     0513                     l2058:
  2341                           
  2342                           ;main.c: 219: if(ptr != (0)) {
  2343     0513  0867               	movf	main@ptr,w
  2344     0514  0468               	iorwf	main@ptr+1,w
  2345     0515  1903               	btfsc	3,2
  2346     0516  2D18               	goto	u1781
  2347     0517  2D19               	goto	u1780
  2348     0518                     u1781:
  2349     0518  2D25               	goto	l2062
  2350     0519                     u1780:
  2351     0519                     l2060:
  2352                           
  2353                           ;main.c: 220: fp1_time = atoi(ptr);
  2354     0519  0868               	movf	main@ptr+1,w
  2355     051A  00F7               	movwf	atoi@s+1
  2356     051B  0867               	movf	main@ptr,w
  2357     051C  00F6               	movwf	atoi@s
  2358     051D  3180  20E7  3182   	fcall	_atoi
  2359     0520  0877               	movf	?_atoi+1,w
  2360     0521  0020               	movlb	0	; select bank0
  2361     0522  00B5               	movwf	main@fp1_time+1
  2362     0523  0876               	movf	?_atoi,w
  2363     0524  00B4               	movwf	main@fp1_time
  2364     0525                     l2062:
  2365                           
  2366                           ;main.c: 221: };main.c: 222: ptr = strtok((0), "/");
  2367     0525  3000               	movlw	0
  2368     0526  00A2               	movwf	strtok@s1
  2369     0527  00A3               	movwf	strtok@s1+1
  2370     0528  309D               	movlw	low (STR_16| (0+32768))
  2371     0529  00A4               	movwf	strtok@s2
  2372     052A  3090               	movlw	high (STR_16| (0+32768))
  2373     052B  00A5               	movwf	strtok@s2+1
  2374     052C  3180  2028  3182   	fcall	_strtok
  2375     052F  0020               	movlb	0	; select bank0
  2376     0530  0823               	movf	?_strtok+1,w
  2377     0531  00E8               	movwf	main@ptr+1
  2378     0532  0822               	movf	?_strtok,w
  2379     0533  00E7               	movwf	main@ptr
  2380     0534                     l2064:
  2381                           
  2382                           ;main.c: 223: if(ptr != (0)) {
  2383     0534  0867               	movf	main@ptr,w
  2384     0535  0468               	iorwf	main@ptr+1,w
  2385     0536  1903               	btfsc	3,2
  2386     0537  2D39               	goto	u1791
  2387     0538  2D3A               	goto	u1790
  2388     0539                     u1791:
  2389     0539  2D46               	goto	l2068
  2390     053A                     u1790:
  2391     053A                     l2066:
  2392                           
  2393                           ;main.c: 224: fp1_amp = atoi(ptr);
  2394     053A  0868               	movf	main@ptr+1,w
  2395     053B  00F7               	movwf	atoi@s+1
  2396     053C  0867               	movf	main@ptr,w
  2397     053D  00F6               	movwf	atoi@s
  2398     053E  3180  20E7  3182   	fcall	_atoi
  2399     0541  0877               	movf	?_atoi+1,w
  2400     0542  0020               	movlb	0	; select bank0
  2401     0543  00B7               	movwf	main@fp1_amp+1
  2402     0544  0876               	movf	?_atoi,w
  2403     0545  00B6               	movwf	main@fp1_amp
  2404     0546                     l2068:
  2405                           
  2406                           ;main.c: 225: };main.c: 226: printf("SF1 OK\n");
  2407     0546  3026               	movlw	low (STR_25| (0+32768))
  2408     0547  00A0               	movwf	printf@f
  2409     0548  3090               	movlw	high (STR_25| (0+32768))
  2410     0549  00A1               	movwf	printf@f+1
  2411     054A  3181  2166  3182   	fcall	_printf
  2412                           
  2413                           ;main.c: 227: break;
  2414     054D  2A75               	goto	l61
  2415     054E                     l2070:
  2416                           
  2417                           ;main.c: 230: ptr = strtok((0), "/");
  2418     054E  3000               	movlw	0
  2419     054F  00A2               	movwf	strtok@s1
  2420     0550  00A3               	movwf	strtok@s1+1
  2421     0551  309D               	movlw	low (STR_16| (0+32768))
  2422     0552  00A4               	movwf	strtok@s2
  2423     0553  3090               	movlw	high (STR_16| (0+32768))
  2424     0554  00A5               	movwf	strtok@s2+1
  2425     0555  3180  2028  3182   	fcall	_strtok
  2426     0558  0020               	movlb	0	; select bank0
  2427     0559  0823               	movf	?_strtok+1,w
  2428     055A  00E8               	movwf	main@ptr+1
  2429     055B  0822               	movf	?_strtok,w
  2430     055C  00E7               	movwf	main@ptr
  2431     055D                     l2072:
  2432                           
  2433                           ;main.c: 231: if(ptr != (0)) {
  2434     055D  0867               	movf	main@ptr,w
  2435     055E  0468               	iorwf	main@ptr+1,w
  2436     055F  1903               	btfsc	3,2
  2437     0560  2D62               	goto	u1801
  2438     0561  2D63               	goto	u1800
  2439     0562                     u1801:
  2440     0562  2D6F               	goto	l2076
  2441     0563                     u1800:
  2442     0563                     l2074:
  2443                           
  2444                           ;main.c: 232: fp2_time = atoi(ptr);
  2445     0563  0868               	movf	main@ptr+1,w
  2446     0564  00F7               	movwf	atoi@s+1
  2447     0565  0867               	movf	main@ptr,w
  2448     0566  00F6               	movwf	atoi@s
  2449     0567  3180  20E7  3182   	fcall	_atoi
  2450     056A  0877               	movf	?_atoi+1,w
  2451     056B  0020               	movlb	0	; select bank0
  2452     056C  00B9               	movwf	main@fp2_time+1
  2453     056D  0876               	movf	?_atoi,w
  2454     056E  00B8               	movwf	main@fp2_time
  2455     056F                     l2076:
  2456                           
  2457                           ;main.c: 233: };main.c: 234: ptr = strtok((0), "/");
  2458     056F  3000               	movlw	0
  2459     0570  00A2               	movwf	strtok@s1
  2460     0571  00A3               	movwf	strtok@s1+1
  2461     0572  309D               	movlw	low (STR_16| (0+32768))
  2462     0573  00A4               	movwf	strtok@s2
  2463     0574  3090               	movlw	high (STR_16| (0+32768))
  2464     0575  00A5               	movwf	strtok@s2+1
  2465     0576  3180  2028  3182   	fcall	_strtok
  2466     0579  0020               	movlb	0	; select bank0
  2467     057A  0823               	movf	?_strtok+1,w
  2468     057B  00E8               	movwf	main@ptr+1
  2469     057C  0822               	movf	?_strtok,w
  2470     057D  00E7               	movwf	main@ptr
  2471     057E                     l2078:
  2472                           
  2473                           ;main.c: 235: if(ptr != (0)) {
  2474     057E  0867               	movf	main@ptr,w
  2475     057F  0468               	iorwf	main@ptr+1,w
  2476     0580  1903               	btfsc	3,2
  2477     0581  2D83               	goto	u1811
  2478     0582  2D84               	goto	u1810
  2479     0583                     u1811:
  2480     0583  2D90               	goto	l2082
  2481     0584                     u1810:
  2482     0584                     l2080:
  2483                           
  2484                           ;main.c: 236: fp2_amp = atoi(ptr);
  2485     0584  0868               	movf	main@ptr+1,w
  2486     0585  00F7               	movwf	atoi@s+1
  2487     0586  0867               	movf	main@ptr,w
  2488     0587  00F6               	movwf	atoi@s
  2489     0588  3180  20E7  3182   	fcall	_atoi
  2490     058B  0877               	movf	?_atoi+1,w
  2491     058C  0020               	movlb	0	; select bank0
  2492     058D  00BB               	movwf	main@fp2_amp+1
  2493     058E  0876               	movf	?_atoi,w
  2494     058F  00BA               	movwf	main@fp2_amp
  2495     0590                     l2082:
  2496                           
  2497                           ;main.c: 237: };main.c: 238: printf("SF2 OK\n");
  2498     0590  3036               	movlw	low (STR_28| (0+32768))
  2499     0591  00A0               	movwf	printf@f
  2500     0592  3090               	movlw	high (STR_28| (0+32768))
  2501     0593  00A1               	movwf	printf@f+1
  2502     0594  3181  2166  3182   	fcall	_printf
  2503                           
  2504                           ;main.c: 239: break;
  2505     0597  2A75               	goto	l61
  2506     0598                     l2084:
  2507                           
  2508                           ;main.c: 242: ptr = strtok((0), "/");
  2509     0598  3000               	movlw	0
  2510     0599  00A2               	movwf	strtok@s1
  2511     059A  00A3               	movwf	strtok@s1+1
  2512     059B  309D               	movlw	low (STR_16| (0+32768))
  2513     059C  00A4               	movwf	strtok@s2
  2514     059D  3090               	movlw	high (STR_16| (0+32768))
  2515     059E  00A5               	movwf	strtok@s2+1
  2516     059F  3180  2028  3182   	fcall	_strtok
  2517     05A2  0020               	movlb	0	; select bank0
  2518     05A3  0823               	movf	?_strtok+1,w
  2519     05A4  00E8               	movwf	main@ptr+1
  2520     05A5  0822               	movf	?_strtok,w
  2521     05A6  00E7               	movwf	main@ptr
  2522     05A7                     l2086:
  2523                           
  2524                           ;main.c: 243: if(ptr != (0)) {
  2525     05A7  0867               	movf	main@ptr,w
  2526     05A8  0468               	iorwf	main@ptr+1,w
  2527     05A9  1903               	btfsc	3,2
  2528     05AA  2DAC               	goto	u1821
  2529     05AB  2DAD               	goto	u1820
  2530     05AC                     u1821:
  2531     05AC  2DB9               	goto	l2090
  2532     05AD                     u1820:
  2533     05AD                     l2088:
  2534                           
  2535                           ;main.c: 244: fp3_time = atoi(ptr);
  2536     05AD  0868               	movf	main@ptr+1,w
  2537     05AE  00F7               	movwf	atoi@s+1
  2538     05AF  0867               	movf	main@ptr,w
  2539     05B0  00F6               	movwf	atoi@s
  2540     05B1  3180  20E7  3182   	fcall	_atoi
  2541     05B4  0877               	movf	?_atoi+1,w
  2542     05B5  0020               	movlb	0	; select bank0
  2543     05B6  00BD               	movwf	main@fp3_time+1
  2544     05B7  0876               	movf	?_atoi,w
  2545     05B8  00BC               	movwf	main@fp3_time
  2546     05B9                     l2090:
  2547                           
  2548                           ;main.c: 245: };main.c: 246: ptr = strtok((0), "/");
  2549     05B9  3000               	movlw	0
  2550     05BA  00A2               	movwf	strtok@s1
  2551     05BB  00A3               	movwf	strtok@s1+1
  2552     05BC  309D               	movlw	low (STR_16| (0+32768))
  2553     05BD  00A4               	movwf	strtok@s2
  2554     05BE  3090               	movlw	high (STR_16| (0+32768))
  2555     05BF  00A5               	movwf	strtok@s2+1
  2556     05C0  3180  2028  3182   	fcall	_strtok
  2557     05C3  0020               	movlb	0	; select bank0
  2558     05C4  0823               	movf	?_strtok+1,w
  2559     05C5  00E8               	movwf	main@ptr+1
  2560     05C6  0822               	movf	?_strtok,w
  2561     05C7  00E7               	movwf	main@ptr
  2562     05C8                     l2092:
  2563                           
  2564                           ;main.c: 247: if(ptr != (0)) {
  2565     05C8  0867               	movf	main@ptr,w
  2566     05C9  0468               	iorwf	main@ptr+1,w
  2567     05CA  1903               	btfsc	3,2
  2568     05CB  2DCD               	goto	u1831
  2569     05CC  2DCE               	goto	u1830
  2570     05CD                     u1831:
  2571     05CD  2DDA               	goto	l2096
  2572     05CE                     u1830:
  2573     05CE                     l2094:
  2574                           
  2575                           ;main.c: 248: fp3_amp = atoi(ptr);
  2576     05CE  0868               	movf	main@ptr+1,w
  2577     05CF  00F7               	movwf	atoi@s+1
  2578     05D0  0867               	movf	main@ptr,w
  2579     05D1  00F6               	movwf	atoi@s
  2580     05D2  3180  20E7  3182   	fcall	_atoi
  2581     05D5  0877               	movf	?_atoi+1,w
  2582     05D6  0020               	movlb	0	; select bank0
  2583     05D7  00BF               	movwf	main@fp3_amp+1
  2584     05D8  0876               	movf	?_atoi,w
  2585     05D9  00BE               	movwf	main@fp3_amp
  2586     05DA                     l2096:
  2587                           
  2588                           ;main.c: 249: };main.c: 250: printf("SF3 OK\n");
  2589     05DA  3046               	movlw	low (STR_31| (0+32768))
  2590     05DB  00A0               	movwf	printf@f
  2591     05DC  3090               	movlw	high (STR_31| (0+32768))
  2592     05DD  00A1               	movwf	printf@f+1
  2593     05DE  3181  2166  3182   	fcall	_printf
  2594                           
  2595                           ;main.c: 251: break;
  2596     05E1  2A75               	goto	l61
  2597     05E2                     l2098:
  2598                           
  2599                           ;main.c: 254: ptr = strtok((0), "/");
  2600     05E2  3000               	movlw	0
  2601     05E3  00A2               	movwf	strtok@s1
  2602     05E4  00A3               	movwf	strtok@s1+1
  2603     05E5  309D               	movlw	low (STR_16| (0+32768))
  2604     05E6  00A4               	movwf	strtok@s2
  2605     05E7  3090               	movlw	high (STR_16| (0+32768))
  2606     05E8  00A5               	movwf	strtok@s2+1
  2607     05E9  3180  2028  3182   	fcall	_strtok
  2608     05EC  0020               	movlb	0	; select bank0
  2609     05ED  0823               	movf	?_strtok+1,w
  2610     05EE  00E8               	movwf	main@ptr+1
  2611     05EF  0822               	movf	?_strtok,w
  2612     05F0  00E7               	movwf	main@ptr
  2613     05F1                     l2100:
  2614                           
  2615                           ;main.c: 255: if(ptr != (0)) {
  2616     05F1  0867               	movf	main@ptr,w
  2617     05F2  0468               	iorwf	main@ptr+1,w
  2618     05F3  1903               	btfsc	3,2
  2619     05F4  2DF6               	goto	u1841
  2620     05F5  2DF7               	goto	u1840
  2621     05F6                     u1841:
  2622     05F6  2E03               	goto	l2104
  2623     05F7                     u1840:
  2624     05F7                     l2102:
  2625                           
  2626                           ;main.c: 256: fp4_time = atoi(ptr);
  2627     05F7  0868               	movf	main@ptr+1,w
  2628     05F8  00F7               	movwf	atoi@s+1
  2629     05F9  0867               	movf	main@ptr,w
  2630     05FA  00F6               	movwf	atoi@s
  2631     05FB  3180  20E7  3182   	fcall	_atoi
  2632     05FE  0877               	movf	?_atoi+1,w
  2633     05FF  0020               	movlb	0	; select bank0
  2634     0600  00C1               	movwf	main@fp4_time+1
  2635     0601  0876               	movf	?_atoi,w
  2636     0602  00C0               	movwf	main@fp4_time
  2637     0603                     l2104:
  2638                           
  2639                           ;main.c: 257: };main.c: 258: ptr = strtok((0), "/");
  2640     0603  3000               	movlw	0
  2641     0604  00A2               	movwf	strtok@s1
  2642     0605  00A3               	movwf	strtok@s1+1
  2643     0606  309D               	movlw	low (STR_16| (0+32768))
  2644     0607  00A4               	movwf	strtok@s2
  2645     0608  3090               	movlw	high (STR_16| (0+32768))
  2646     0609  00A5               	movwf	strtok@s2+1
  2647     060A  3180  2028  3182   	fcall	_strtok
  2648     060D  0020               	movlb	0	; select bank0
  2649     060E  0823               	movf	?_strtok+1,w
  2650     060F  00E8               	movwf	main@ptr+1
  2651     0610  0822               	movf	?_strtok,w
  2652     0611  00E7               	movwf	main@ptr
  2653     0612                     l2106:
  2654                           
  2655                           ;main.c: 259: if(ptr != (0)) {
  2656     0612  0867               	movf	main@ptr,w
  2657     0613  0468               	iorwf	main@ptr+1,w
  2658     0614  1903               	btfsc	3,2
  2659     0615  2E17               	goto	u1851
  2660     0616  2E18               	goto	u1850
  2661     0617                     u1851:
  2662     0617  2E24               	goto	l2110
  2663     0618                     u1850:
  2664     0618                     l2108:
  2665                           
  2666                           ;main.c: 260: fp4_amp = atoi(ptr);
  2667     0618  0868               	movf	main@ptr+1,w
  2668     0619  00F7               	movwf	atoi@s+1
  2669     061A  0867               	movf	main@ptr,w
  2670     061B  00F6               	movwf	atoi@s
  2671     061C  3180  20E7  3182   	fcall	_atoi
  2672     061F  0877               	movf	?_atoi+1,w
  2673     0620  0020               	movlb	0	; select bank0
  2674     0621  00C3               	movwf	main@fp4_amp+1
  2675     0622  0876               	movf	?_atoi,w
  2676     0623  00C2               	movwf	main@fp4_amp
  2677     0624                     l2110:
  2678                           
  2679                           ;main.c: 261: };main.c: 262: printf("SF4 OK\n");
  2680     0624  304E               	movlw	low (STR_34| (0+32768))
  2681     0625  00A0               	movwf	printf@f
  2682     0626  3090               	movlw	high (STR_34| (0+32768))
  2683     0627  00A1               	movwf	printf@f+1
  2684     0628  3181  2166  3182   	fcall	_printf
  2685                           
  2686                           ;main.c: 263: break;
  2687     062B  2A75               	goto	l61
  2688     062C                     l2112:
  2689                           
  2690                           ;main.c: 267: for (int k=0 ; k < 6 ; k++){
  2691     062C  01D8               	clrf	main@k
  2692     062D  01D9               	clrf	main@k+1
  2693     062E                     l2114:
  2694     062E  0859               	movf	main@k+1,w
  2695     062F  3A80               	xorlw	128
  2696     0630  00B0               	movwf	??_main
  2697     0631  3080               	movlw	128
  2698     0632  0230               	subwf	??_main,w
  2699     0633  1D03               	skipz
  2700     0634  2E37               	goto	u1865
  2701     0635  3006               	movlw	6
  2702     0636  0258               	subwf	main@k,w
  2703     0637                     u1865:
  2704     0637  1C03               	skipc
  2705     0638  2E3A               	goto	u1861
  2706     0639  2E3B               	goto	u1860
  2707     063A                     u1861:
  2708     063A  2E3C               	goto	l2118
  2709     063B                     u1860:
  2710     063B  2FA1               	goto	l2186
  2711     063C                     l2118:
  2712                           
  2713                           ;main.c: 268: ptr = strtok((0), "/");
  2714     063C  3000               	movlw	0
  2715     063D  0020               	movlb	0	; select bank0
  2716     063E  00A2               	movwf	strtok@s1
  2717     063F  00A3               	movwf	strtok@s1+1
  2718     0640  309D               	movlw	low (STR_16| (0+32768))
  2719     0641  00A4               	movwf	strtok@s2
  2720     0642  3090               	movlw	high (STR_16| (0+32768))
  2721     0643  00A5               	movwf	strtok@s2+1
  2722     0644  3180  2028  3182   	fcall	_strtok
  2723     0647  0020               	movlb	0	; select bank0
  2724     0648  0823               	movf	?_strtok+1,w
  2725     0649  00E8               	movwf	main@ptr+1
  2726     064A  0822               	movf	?_strtok,w
  2727     064B  00E7               	movwf	main@ptr
  2728                           
  2729                           ;main.c: 269: if(strcmp(ptr,"A1") == 0) {
  2730     064C  0868               	movf	main@ptr+1,w
  2731     064D  00F1               	movwf	strcmp@s1+1
  2732     064E  0867               	movf	main@ptr,w
  2733     064F  00F0               	movwf	strcmp@s1
  2734     0650  3066               	movlw	low ((STR_3+1)| (0+32768))
  2735     0651  00F2               	movwf	strcmp@s2
  2736     0652  3090               	movlw	high ((STR_3+1)| (0+32768))
  2737     0653  00F3               	movwf	strcmp@s2+1
  2738     0654  318E  266E  3182   	fcall	_strcmp
  2739     0657  0870               	movf	?_strcmp,w
  2740     0658  0471               	iorwf	?_strcmp+1,w
  2741     0659  1D03               	btfss	3,2
  2742     065A  2E5C               	goto	u1871
  2743     065B  2E5D               	goto	u1870
  2744     065C                     u1871:
  2745     065C  2E8C               	goto	l2130
  2746     065D                     u1870:
  2747     065D                     l2120:
  2748                           
  2749                           ;main.c: 270: for (int i=0 ; i < num_ap1_cnt ; i++){
  2750     065D  0020               	movlb	0	; select bank0
  2751     065E  01DA               	clrf	main@i_157
  2752     065F  01DB               	clrf	main@i_157+1
  2753     0660  2E7D               	goto	l2128
  2754     0661                     l2122:
  2755                           
  2756                           ;main.c: 271: DAC1CON1 = ap1_dat[i] ;
  2757     0661  0020               	movlb	0	; select bank0
  2758     0662  085B               	movf	main@i_157+1,w
  2759     0663  00B1               	movwf	??_main+1
  2760     0664  085A               	movf	main@i_157,w
  2761     0665  00B0               	movwf	??_main
  2762     0666  35B0               	lslf	??_main,f
  2763     0667  0DB1               	rlf	??_main+1,f
  2764     0668  306C               	movlw	108
  2765     0669  00B2               	movwf	??_main+2
  2766     066A  3020               	movlw	32
  2767     066B  00B3               	movwf	??_main+3
  2768     066C  0830               	movf	??_main,w
  2769     066D  0732               	addwf	??_main+2,w
  2770     066E  0086               	movwf	6
  2771     066F  0831               	movf	??_main+1,w
  2772     0670  3D33               	addwfc	??_main+3,w
  2773     0671  0087               	movwf	7
  2774     0672  0801               	movf	1,w
  2775     0673  0022               	movlb	2	; select bank2
  2776     0674  0099               	movwf	25	;volatile
  2777     0675                     l2124:
  2778                           
  2779                           ;main.c: 272: _delay((unsigned long)((21)*(32000000/4000000.0))) ;
  2780     0675  3038               	movlw	56
  2781     0676                     u1997:
  2782     0676  0B89               	decfsz	9,f
  2783     0677  2E76               	goto	u1997
  2784     0678                     l2126:
  2785     0678  3001               	movlw	1
  2786     0679  0020               	movlb	0	; select bank0
  2787     067A  07DA               	addwf	main@i_157,f
  2788     067B  3000               	movlw	0
  2789     067C  3DDB               	addwfc	main@i_157+1,f
  2790     067D                     l2128:
  2791     067D  085B               	movf	main@i_157+1,w
  2792     067E  3A80               	xorlw	128
  2793     067F  00B0               	movwf	??_main
  2794     0680  0845               	movf	main@num_ap1_cnt+1,w
  2795     0681  3A80               	xorlw	128
  2796     0682  0230               	subwf	??_main,w
  2797     0683  1D03               	skipz
  2798     0684  2E87               	goto	u1885
  2799     0685  0844               	movf	main@num_ap1_cnt,w
  2800     0686  025A               	subwf	main@i_157,w
  2801     0687                     u1885:
  2802     0687  1C03               	skipc
  2803     0688  2E8A               	goto	u1881
  2804     0689  2E8B               	goto	u1880
  2805     068A                     u1881:
  2806     068A  2E61               	goto	l2122
  2807     068B                     u1880:
  2808     068B  2F9B               	goto	l2182
  2809     068C                     l2130:
  2810     068C  0020               	movlb	0	; select bank0
  2811     068D  0868               	movf	main@ptr+1,w
  2812     068E  00F1               	movwf	strcmp@s1+1
  2813     068F  0867               	movf	main@ptr,w
  2814     0690  00F0               	movwf	strcmp@s1
  2815     0691  306E               	movlw	low ((STR_4+1)| (0+32768))
  2816     0692  00F2               	movwf	strcmp@s2
  2817     0693  3090               	movlw	high ((STR_4+1)| (0+32768))
  2818     0694  00F3               	movwf	strcmp@s2+1
  2819     0695  318E  266E  3182   	fcall	_strcmp
  2820     0698  0870               	movf	?_strcmp,w
  2821     0699  0471               	iorwf	?_strcmp+1,w
  2822     069A  1D03               	btfss	3,2
  2823     069B  2E9D               	goto	u1891
  2824     069C  2E9E               	goto	u1890
  2825     069D                     u1891:
  2826     069D  2EC2               	goto	l2142
  2827     069E                     u1890:
  2828     069E                     l2132:
  2829                           
  2830                           ;main.c: 275: for (int i=0 ; i < num_ap2_cnt ; i++){
  2831     069E  0020               	movlb	0	; select bank0
  2832     069F  01DC               	clrf	main@i_159
  2833     06A0  01DD               	clrf	main@i_159+1
  2834     06A1  2EB2               	goto	l2140
  2835     06A2                     l2134:
  2836                           
  2837                           ;main.c: 276: DAC1CON1 = ap2_dat[i] ;
  2838     06A2  0020               	movlb	0	; select bank0
  2839     06A3  355C               	lslf	main@i_159,w
  2840     06A4  3EA0               	addlw	(low (_ap2_dat| 0))& (0+255)
  2841     06A5  0086               	movwf	6
  2842     06A6  0187               	clrf	7
  2843     06A7  0801               	movf	1,w
  2844     06A8  0022               	movlb	2	; select bank2
  2845     06A9  0099               	movwf	25	;volatile
  2846     06AA                     l2136:
  2847                           
  2848                           ;main.c: 277: _delay((unsigned long)((21)*(32000000/4000000.0))) ;
  2849     06AA  3038               	movlw	56
  2850     06AB                     u2007:
  2851     06AB  0B89               	decfsz	9,f
  2852     06AC  2EAB               	goto	u2007
  2853     06AD                     l2138:
  2854     06AD  3001               	movlw	1
  2855     06AE  0020               	movlb	0	; select bank0
  2856     06AF  07DC               	addwf	main@i_159,f
  2857     06B0  3000               	movlw	0
  2858     06B1  3DDD               	addwfc	main@i_159+1,f
  2859     06B2                     l2140:
  2860     06B2  085D               	movf	main@i_159+1,w
  2861     06B3  3A80               	xorlw	128
  2862     06B4  00B0               	movwf	??_main
  2863     06B5  0847               	movf	main@num_ap2_cnt+1,w
  2864     06B6  3A80               	xorlw	128
  2865     06B7  0230               	subwf	??_main,w
  2866     06B8  1D03               	skipz
  2867     06B9  2EBC               	goto	u1905
  2868     06BA  0846               	movf	main@num_ap2_cnt,w
  2869     06BB  025C               	subwf	main@i_159,w
  2870     06BC                     u1905:
  2871     06BC  1C03               	skipc
  2872     06BD  2EBF               	goto	u1901
  2873     06BE  2EC0               	goto	u1900
  2874     06BF                     u1901:
  2875     06BF  2EA2               	goto	l2134
  2876     06C0                     u1900:
  2877     06C0  2F9B               	goto	l2182
  2878     06C1                     l133:
  2879                           
  2880                           ;main.c: 278: };main.c: 284: }else if(strcmp(ptr,"F1") == 0) {
  2881     06C1  2F9B               	goto	l2182
  2882     06C2                     l2142:
  2883     06C2  0020               	movlb	0	; select bank0
  2884     06C3  0868               	movf	main@ptr+1,w
  2885     06C4  00F1               	movwf	strcmp@s1+1
  2886     06C5  0867               	movf	main@ptr,w
  2887     06C6  00F0               	movwf	strcmp@s1
  2888     06C7  306A               	movlw	low ((STR_6+1)| (0+32768))
  2889     06C8  00F2               	movwf	strcmp@s2
  2890     06C9  3090               	movlw	high ((STR_6+1)| (0+32768))
  2891     06CA  00F3               	movwf	strcmp@s2+1
  2892     06CB  318E  266E  3182   	fcall	_strcmp
  2893     06CE  0870               	movf	?_strcmp,w
  2894     06CF  0471               	iorwf	?_strcmp+1,w
  2895     06D0  1D03               	btfss	3,2
  2896     06D1  2ED3               	goto	u1911
  2897     06D2  2ED4               	goto	u1910
  2898     06D3                     u1911:
  2899     06D3  2EFB               	goto	l2152
  2900     06D4                     u1910:
  2901     06D4                     l2144:
  2902                           
  2903                           ;main.c: 285: DAC1CON1 = fp1_amp ;
  2904     06D4  0020               	movlb	0	; select bank0
  2905     06D5  0836               	movf	main@fp1_amp,w
  2906     06D6  0022               	movlb	2	; select bank2
  2907     06D7  0099               	movwf	25	;volatile
  2908     06D8                     l2146:
  2909                           
  2910                           ;main.c: 286: for (int i=0 ; i < fp1_time ; i++){
  2911     06D8  0020               	movlb	0	; select bank0
  2912     06D9  01C8               	clrf	main@i_161
  2913     06DA  01C9               	clrf	main@i_161+1
  2914     06DB  2EEA               	goto	l136
  2915     06DC                     l2148:
  2916                           
  2917                           ;main.c: 288: _delay((unsigned long)((1)*(32000000/4000.0))) ;
  2918     06DC  300B               	movlw	11
  2919     06DD  0020               	movlb	0	; select bank0
  2920     06DE  00B0               	movwf	??_main
  2921     06DF  3062               	movlw	98
  2922     06E0                     u2017:
  2923     06E0  0B89               	decfsz	9,f
  2924     06E1  2EE0               	goto	u2017
  2925     06E2  0BB0               	decfsz	??_main,f
  2926     06E3  2EE0               	goto	u2017
  2927     06E4  0000               	nop
  2928     06E5  3001               	movlw	1
  2929     06E6  0020               	movlb	0	; select bank0
  2930     06E7  07C8               	addwf	main@i_161,f
  2931     06E8  3000               	movlw	0
  2932     06E9  3DC9               	addwfc	main@i_161+1,f
  2933     06EA                     l136:
  2934     06EA  0849               	movf	main@i_161+1,w
  2935     06EB  3A80               	xorlw	128
  2936     06EC  00B0               	movwf	??_main
  2937     06ED  0835               	movf	main@fp1_time+1,w
  2938     06EE  3A80               	xorlw	128
  2939     06EF  0230               	subwf	??_main,w
  2940     06F0  1D03               	skipz
  2941     06F1  2EF4               	goto	u1925
  2942     06F2  0834               	movf	main@fp1_time,w
  2943     06F3  0248               	subwf	main@i_161,w
  2944     06F4                     u1925:
  2945     06F4  1C03               	skipc
  2946     06F5  2EF7               	goto	u1921
  2947     06F6  2EF8               	goto	u1920
  2948     06F7                     u1921:
  2949     06F7  2EDC               	goto	l2148
  2950     06F8                     u1920:
  2951     06F8                     l2150:
  2952                           
  2953                           ;main.c: 289: };main.c: 290: DAC1CON1 = 0 ;
  2954     06F8  0022               	movlb	2	; select bank2
  2955     06F9  0199               	clrf	25	;volatile
  2956                           
  2957                           ;main.c: 291: }else if(strcmp(ptr,"F2") == 0) {
  2958     06FA  2F9B               	goto	l2182
  2959     06FB                     l2152:
  2960     06FB  0020               	movlb	0	; select bank0
  2961     06FC  0868               	movf	main@ptr+1,w
  2962     06FD  00F1               	movwf	strcmp@s1+1
  2963     06FE  0867               	movf	main@ptr,w
  2964     06FF  00F0               	movwf	strcmp@s1
  2965     0700  3072               	movlw	low ((STR_7+1)| (0+32768))
  2966     0701  00F2               	movwf	strcmp@s2
  2967     0702  3090               	movlw	high ((STR_7+1)| (0+32768))
  2968     0703  00F3               	movwf	strcmp@s2+1
  2969     0704  318E  266E  3182   	fcall	_strcmp
  2970     0707  0870               	movf	?_strcmp,w
  2971     0708  0471               	iorwf	?_strcmp+1,w
  2972     0709  1D03               	btfss	3,2
  2973     070A  2F0C               	goto	u1931
  2974     070B  2F0D               	goto	u1930
  2975     070C                     u1931:
  2976     070C  2F32               	goto	l2162
  2977     070D                     u1930:
  2978     070D                     l2154:
  2979                           
  2980                           ;main.c: 292: DAC1CON1 = fp2_amp ;
  2981     070D  0020               	movlb	0	; select bank0
  2982     070E  083A               	movf	main@fp2_amp,w
  2983     070F  0022               	movlb	2	; select bank2
  2984     0710  0099               	movwf	25	;volatile
  2985     0711                     l2156:
  2986                           
  2987                           ;main.c: 293: for (int i=0 ; i < fp2_time ; i++){
  2988     0711  0020               	movlb	0	; select bank0
  2989     0712  01CA               	clrf	main@i_163
  2990     0713  01CB               	clrf	main@i_163+1
  2991     0714  2F23               	goto	l141
  2992     0715                     l2158:
  2993                           
  2994                           ;main.c: 295: _delay((unsigned long)((1)*(32000000/4000.0))) ;
  2995     0715  300B               	movlw	11
  2996     0716  0020               	movlb	0	; select bank0
  2997     0717  00B0               	movwf	??_main
  2998     0718  3062               	movlw	98
  2999     0719                     u2027:
  3000     0719  0B89               	decfsz	9,f
  3001     071A  2F19               	goto	u2027
  3002     071B  0BB0               	decfsz	??_main,f
  3003     071C  2F19               	goto	u2027
  3004     071D  0000               	nop
  3005     071E  3001               	movlw	1
  3006     071F  0020               	movlb	0	; select bank0
  3007     0720  07CA               	addwf	main@i_163,f
  3008     0721  3000               	movlw	0
  3009     0722  3DCB               	addwfc	main@i_163+1,f
  3010     0723                     l141:
  3011     0723  084B               	movf	main@i_163+1,w
  3012     0724  3A80               	xorlw	128
  3013     0725  00B0               	movwf	??_main
  3014     0726  0839               	movf	main@fp2_time+1,w
  3015     0727  3A80               	xorlw	128
  3016     0728  0230               	subwf	??_main,w
  3017     0729  1D03               	skipz
  3018     072A  2F2D               	goto	u1945
  3019     072B  0838               	movf	main@fp2_time,w
  3020     072C  024A               	subwf	main@i_163,w
  3021     072D                     u1945:
  3022     072D  1C03               	skipc
  3023     072E  2F30               	goto	u1941
  3024     072F  2F31               	goto	u1940
  3025     0730                     u1941:
  3026     0730  2F15               	goto	l2158
  3027     0731                     u1940:
  3028     0731  2EF8               	goto	l2150
  3029     0732                     l2162:
  3030     0732  0020               	movlb	0	; select bank0
  3031     0733  0868               	movf	main@ptr+1,w
  3032     0734  00F1               	movwf	strcmp@s1+1
  3033     0735  0867               	movf	main@ptr,w
  3034     0736  00F0               	movwf	strcmp@s1
  3035     0737  307A               	movlw	low ((STR_8+1)| (0+32768))
  3036     0738  00F2               	movwf	strcmp@s2
  3037     0739  3090               	movlw	high ((STR_8+1)| (0+32768))
  3038     073A  00F3               	movwf	strcmp@s2+1
  3039     073B  318E  266E  3182   	fcall	_strcmp
  3040     073E  0870               	movf	?_strcmp,w
  3041     073F  0471               	iorwf	?_strcmp+1,w
  3042     0740  1D03               	btfss	3,2
  3043     0741  2F43               	goto	u1951
  3044     0742  2F44               	goto	u1950
  3045     0743                     u1951:
  3046     0743  2F69               	goto	l2172
  3047     0744                     u1950:
  3048     0744                     l2164:
  3049                           
  3050                           ;main.c: 299: DAC1CON1 = fp3_amp ;
  3051     0744  0020               	movlb	0	; select bank0
  3052     0745  083E               	movf	main@fp3_amp,w
  3053     0746  0022               	movlb	2	; select bank2
  3054     0747  0099               	movwf	25	;volatile
  3055     0748                     l2166:
  3056                           
  3057                           ;main.c: 300: for (int i=0 ; i < fp3_time ; i++){
  3058     0748  0020               	movlb	0	; select bank0
  3059     0749  01CC               	clrf	main@i_165
  3060     074A  01CD               	clrf	main@i_165+1
  3061     074B  2F5A               	goto	l146
  3062     074C                     l2168:
  3063                           
  3064                           ;main.c: 302: _delay((unsigned long)((1)*(32000000/4000.0))) ;
  3065     074C  300B               	movlw	11
  3066     074D  0020               	movlb	0	; select bank0
  3067     074E  00B0               	movwf	??_main
  3068     074F  3062               	movlw	98
  3069     0750                     u2037:
  3070     0750  0B89               	decfsz	9,f
  3071     0751  2F50               	goto	u2037
  3072     0752  0BB0               	decfsz	??_main,f
  3073     0753  2F50               	goto	u2037
  3074     0754  0000               	nop
  3075     0755  3001               	movlw	1
  3076     0756  0020               	movlb	0	; select bank0
  3077     0757  07CC               	addwf	main@i_165,f
  3078     0758  3000               	movlw	0
  3079     0759  3DCD               	addwfc	main@i_165+1,f
  3080     075A                     l146:
  3081     075A  084D               	movf	main@i_165+1,w
  3082     075B  3A80               	xorlw	128
  3083     075C  00B0               	movwf	??_main
  3084     075D  083D               	movf	main@fp3_time+1,w
  3085     075E  3A80               	xorlw	128
  3086     075F  0230               	subwf	??_main,w
  3087     0760  1D03               	skipz
  3088     0761  2F64               	goto	u1965
  3089     0762  083C               	movf	main@fp3_time,w
  3090     0763  024C               	subwf	main@i_165,w
  3091     0764                     u1965:
  3092     0764  1C03               	skipc
  3093     0765  2F67               	goto	u1961
  3094     0766  2F68               	goto	u1960
  3095     0767                     u1961:
  3096     0767  2F4C               	goto	l2168
  3097     0768                     u1960:
  3098     0768  2EF8               	goto	l2150
  3099     0769                     l2172:
  3100     0769  0020               	movlb	0	; select bank0
  3101     076A  0868               	movf	main@ptr+1,w
  3102     076B  00F1               	movwf	strcmp@s1+1
  3103     076C  0867               	movf	main@ptr,w
  3104     076D  00F0               	movwf	strcmp@s1
  3105     076E  307E               	movlw	low ((STR_9+1)| (0+32768))
  3106     076F  00F2               	movwf	strcmp@s2
  3107     0770  3090               	movlw	high ((STR_9+1)| (0+32768))
  3108     0771  00F3               	movwf	strcmp@s2+1
  3109     0772  318E  266E  3182   	fcall	_strcmp
  3110     0775  0870               	movf	?_strcmp,w
  3111     0776  0471               	iorwf	?_strcmp+1,w
  3112     0777  1D03               	btfss	3,2
  3113     0778  2F7A               	goto	u1971
  3114     0779  2F7B               	goto	u1970
  3115     077A                     u1971:
  3116     077A  2EC1               	goto	l133
  3117     077B                     u1970:
  3118     077B                     l2174:
  3119                           
  3120                           ;main.c: 306: DAC1CON1 = fp4_amp ;
  3121     077B  0020               	movlb	0	; select bank0
  3122     077C  0842               	movf	main@fp4_amp,w
  3123     077D  0022               	movlb	2	; select bank2
  3124     077E  0099               	movwf	25	;volatile
  3125     077F                     l2176:
  3126                           
  3127                           ;main.c: 307: for (int i=0 ; i < fp4_time ; i++){
  3128     077F  0020               	movlb	0	; select bank0
  3129     0780  01CE               	clrf	main@i_167
  3130     0781  01CF               	clrf	main@i_167+1
  3131     0782  2F8C               	goto	l151
  3132     0783                     l2178:
  3133                           
  3134                           ;main.c: 308: _delay((unsigned long)((20)*(32000000/4000000.0))) ;
  3135     0783  3035               	movlw	53
  3136     0784                     u2047:
  3137     0784  0B89               	decfsz	9,f
  3138     0785  2F84               	goto	u2047
  3139     0786  0000               	nop
  3140     0787  3001               	movlw	1
  3141     0788  0020               	movlb	0	; select bank0
  3142     0789  07CE               	addwf	main@i_167,f
  3143     078A  3000               	movlw	0
  3144     078B  3DCF               	addwfc	main@i_167+1,f
  3145     078C                     l151:
  3146     078C  084F               	movf	main@i_167+1,w
  3147     078D  3A80               	xorlw	128
  3148     078E  00B0               	movwf	??_main
  3149     078F  0841               	movf	main@fp4_time+1,w
  3150     0790  3A80               	xorlw	128
  3151     0791  0230               	subwf	??_main,w
  3152     0792  1D03               	skipz
  3153     0793  2F96               	goto	u1985
  3154     0794  0840               	movf	main@fp4_time,w
  3155     0795  024E               	subwf	main@i_167,w
  3156     0796                     u1985:
  3157     0796  1C03               	skipc
  3158     0797  2F99               	goto	u1981
  3159     0798  2F9A               	goto	u1980
  3160     0799                     u1981:
  3161     0799  2F83               	goto	l2178
  3162     079A                     u1980:
  3163     079A  2EF8               	goto	l2150
  3164     079B                     l2182:
  3165     079B  3001               	movlw	1
  3166     079C  0020               	movlb	0	; select bank0
  3167     079D  07D8               	addwf	main@k,f
  3168     079E  3000               	movlw	0
  3169     079F  3DD9               	addwfc	main@k+1,f
  3170     07A0  2E2E               	goto	l2114
  3171     07A1                     l2186:
  3172                           
  3173                           ;main.c: 311: };main.c: 312: };main.c: 315: printf("___P_OK\n");
  3174     07A1  3015               	movlw	low (STR_42| (0+32768))
  3175     07A2  0020               	movlb	0	; select bank0
  3176     07A3  00A0               	movwf	printf@f
  3177     07A4  3090               	movlw	high (STR_42| (0+32768))
  3178     07A5  00A1               	movwf	printf@f+1
  3179     07A6  3181  2166  3182   	fcall	_printf
  3180                           
  3181                           ;main.c: 316: break;
  3182     07A9  2A75               	goto	l61
  3183     07AA                     l2188:
  3184                           
  3185                           ;main.c: 319: DAC1CON1 = 200 ;
  3186     07AA  30C8               	movlw	200
  3187     07AB  0022               	movlb	2	; select bank2
  3188     07AC  0099               	movwf	25	;volatile
  3189                           
  3190                           ;main.c: 320: break;
  3191     07AD  2A75               	goto	l61
  3192     07AE                     l2190:
  3193                           
  3194                           ;main.c: 323: DAC1CON1 = 0 ;
  3195     07AE  0022               	movlb	2	; select bank2
  3196     07AF  0199               	clrf	25	;volatile
  3197                           
  3198                           ;main.c: 324: break;
  3199     07B0  2A75               	goto	l61
  3200     07B1                     l2192:
  3201                           
  3202                           ;main.c: 333: printf("VERSION 10");
  3203     07B1  300A               	movlw	low (STR_43| (0+32768))
  3204     07B2  00A0               	movwf	printf@f
  3205     07B3  3090               	movlw	high (STR_43| (0+32768))
  3206     07B4  00A1               	movwf	printf@f+1
  3207     07B5  3181  2166  3182   	fcall	_printf
  3208                           
  3209                           ;main.c: 334: break;
  3210     07B8  2A75               	goto	l61
  3211     07B9                     l2196:
  3212     07B9  0862               	movf	main@cmd,w
  3213                           
  3214                           ; Switch size 1, requested type "simple"
  3215                           ; Number of cases is 13, Range of values is 0 to 13
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; direct_byte           34     6 (fixed)
  3219                           ; simple_byte           40    21 (average)
  3220                           ; jumptable            260     6 (fixed)
  3221                           ;	Chosen strategy is simple_byte
  3222     07BA  3A00               	xorlw	0	; case 0
  3223     07BB  1903               	skipnz
  3224     07BC  2BF8               	goto	l2008
  3225     07BD  3A01               	xorlw	1	; case 1
  3226     07BE  1903               	skipnz
  3227     07BF  2C94               	goto	l2032
  3228     07C0  3A03               	xorlw	3	; case 2
  3229     07C1  1903               	skipnz
  3230     07C2  2CFC               	goto	l2054
  3231     07C3  3A01               	xorlw	1	; case 3
  3232     07C4  1903               	skipnz
  3233     07C5  2D04               	goto	l2056
  3234     07C6  3A07               	xorlw	7	; case 4
  3235     07C7  1903               	skipnz
  3236     07C8  2D4E               	goto	l2070
  3237     07C9  3A01               	xorlw	1	; case 5
  3238     07CA  1903               	skipnz
  3239     07CB  2D98               	goto	l2084
  3240     07CC  3A03               	xorlw	3	; case 6
  3241     07CD  1903               	skipnz
  3242     07CE  2DE2               	goto	l2098
  3243     07CF  3A01               	xorlw	1	; case 7
  3244     07D0  1903               	skipnz
  3245     07D1  2E2C               	goto	l2112
  3246     07D2  3A0F               	xorlw	15	; case 8
  3247     07D3  1903               	skipnz
  3248     07D4  2A75               	goto	l61
  3249     07D5  3A01               	xorlw	1	; case 9
  3250     07D6  1903               	skipnz
  3251     07D7  2A75               	goto	l61
  3252     07D8  3A02               	xorlw	2	; case 11
  3253     07D9  1903               	skipnz
  3254     07DA  2FAA               	goto	l2188
  3255     07DB  3A07               	xorlw	7	; case 12
  3256     07DC  1903               	skipnz
  3257     07DD  2FAE               	goto	l2190
  3258     07DE  3A01               	xorlw	1	; case 13
  3259     07DF  1903               	skipnz
  3260     07E0  2FB1               	goto	l2192
  3261     07E1  2A75               	goto	l61
  3262     07E2  3180  2802         	ljmp	start
  3263     07E4                     __end_of_main:
  3264                           
  3265                           	psect	text1
  3266     0028                     __ptext1:	
  3267 ;; *************** function _strtok *****************
  3268 ;; Defined at:
  3269 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  s1              2    2[BANK0 ] PTR unsigned char 
  3272 ;;		 -> NULL(0), main@tmp(300), 
  3273 ;;  s2              2    4[BANK0 ] PTR const unsigned char 
  3274 ;;		 -> STR_35(2), STR_33(2), STR_32(2), STR_30(2), 
  3275 ;;		 -> STR_29(2), STR_27(2), STR_26(2), STR_24(2), 
  3276 ;;		 -> STR_23(2), STR_20(2), STR_17(2), STR_16(2), 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    2[BANK0 ] PTR unsigned char 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3288 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;Total ram usage:        4 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 2
  3295 ;; This function calls:
  3296 ;;		_strcspn
  3297 ;;		_strspn
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     0028                     _strtok:	
  3304                           ;psect for function _strtok
  3305                           
  3306     0028                     l1844:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3309                           
  3310     0028  0020               	movlb	0	; select bank0
  3311     0029  0822               	movf	strtok@s1,w
  3312     002A  0423               	iorwf	strtok@s1+1,w
  3313     002B  1D03               	btfss	3,2
  3314     002C  282E               	goto	u1481
  3315     002D  282F               	goto	u1480
  3316     002E                     u1481:
  3317     002E  2833               	goto	l1848
  3318     002F                     u1480:
  3319     002F                     l1846:
  3320     002F  086A               	movf	strtok@sp+1,w
  3321     0030  00A3               	movwf	strtok@s1+1
  3322     0031  0869               	movf	strtok@sp,w
  3323     0032  00A2               	movwf	strtok@s1
  3324     0033                     l1848:
  3325     0033  0822               	movf	strtok@s1,w
  3326     0034  0423               	iorwf	strtok@s1+1,w
  3327     0035  1D03               	btfss	3,2
  3328     0036  2838               	goto	u1491
  3329     0037  2839               	goto	u1490
  3330     0038                     u1491:
  3331     0038  283C               	goto	l1854
  3332     0039                     u1490:
  3333     0039                     l1850:
  3334     0039  01A2               	clrf	?_strtok
  3335     003A  01A3               	clrf	?_strtok+1
  3336     003B  2881               	goto	l809
  3337     003C                     l1854:
  3338     003C  0823               	movf	strtok@s1+1,w
  3339     003D  00F8               	movwf	strspn@s1+1
  3340     003E  0822               	movf	strtok@s1,w
  3341     003F  00F7               	movwf	strspn@s1
  3342     0040  0825               	movf	strtok@s2+1,w
  3343     0041  00FA               	movwf	strspn@s2+1
  3344     0042  0824               	movf	strtok@s2,w
  3345     0043  00F9               	movwf	strspn@s2
  3346     0044  318E  26FE  3180   	fcall	_strspn
  3347     0047  0877               	movf	?_strspn,w
  3348     0048  0020               	movlb	0	; select bank0
  3349     0049  07A2               	addwf	strtok@s1,f
  3350     004A  0878               	movf	?_strspn+1,w
  3351     004B  3DA3               	addwfc	strtok@s1+1,f
  3352     004C                     l1856:
  3353     004C  0822               	movf	strtok@s1,w
  3354     004D  0086               	movwf	6
  3355     004E  0823               	movf	strtok@s1+1,w
  3356     004F  0087               	movwf	7
  3357     0050  0801               	movf	1,w
  3358     0051  1D03               	btfss	3,2
  3359     0052  2854               	goto	u1501
  3360     0053  2855               	goto	u1500
  3361     0054                     u1501:
  3362     0054  285A               	goto	l1862
  3363     0055                     u1500:
  3364     0055                     l1858:
  3365     0055  01E9               	clrf	strtok@sp
  3366     0056  01EA               	clrf	strtok@sp+1
  3367     0057  01A2               	clrf	?_strtok
  3368     0058  01A3               	clrf	?_strtok+1
  3369     0059  2881               	goto	l809
  3370     005A                     l1862:
  3371     005A  0823               	movf	strtok@s1+1,w
  3372     005B  00F8               	movwf	strcspn@s1+1
  3373     005C  0822               	movf	strtok@s1,w
  3374     005D  00F7               	movwf	strcspn@s1
  3375     005E  0825               	movf	strtok@s2+1,w
  3376     005F  00FA               	movwf	strcspn@s2+1
  3377     0060  0824               	movf	strtok@s2,w
  3378     0061  00F9               	movwf	strcspn@s2
  3379     0062  318E  26CA  3180   	fcall	_strcspn
  3380     0065  0877               	movf	?_strcspn,w
  3381     0066  0020               	movlb	0	; select bank0
  3382     0067  0722               	addwf	strtok@s1,w
  3383     0068  00E9               	movwf	strtok@sp
  3384     0069  0878               	movf	?_strcspn+1,w
  3385     006A  3D23               	addwfc	strtok@s1+1,w
  3386     006B  00EA               	movwf	strtok@sp+1
  3387     006C                     l1864:
  3388     006C  0869               	movf	strtok@sp,w
  3389     006D  0086               	movwf	6
  3390     006E  086A               	movf	strtok@sp+1,w
  3391     006F  0087               	movwf	7
  3392     0070  0801               	movf	1,w
  3393     0071  1903               	btfsc	3,2
  3394     0072  2874               	goto	u1511
  3395     0073  2875               	goto	u1510
  3396     0074                     u1511:
  3397     0074  287F               	goto	l1870
  3398     0075                     u1510:
  3399     0075                     l1866:
  3400     0075  0869               	movf	strtok@sp,w
  3401     0076  0086               	movwf	6
  3402     0077  086A               	movf	strtok@sp+1,w
  3403     0078  0087               	movwf	7
  3404     0079  0181               	clrf	1
  3405     007A                     l1868:
  3406     007A  3001               	movlw	1
  3407     007B  07E9               	addwf	strtok@sp,f
  3408     007C  3000               	movlw	0
  3409     007D  3DEA               	addwfc	strtok@sp+1,f
  3410     007E  2881               	goto	l1872
  3411     007F                     l1870:
  3412     007F  01E9               	clrf	strtok@sp
  3413     0080  01EA               	clrf	strtok@sp+1
  3414     0081                     l1872:
  3415     0081                     l809:
  3416     0081  0008               	return
  3417     0082                     __end_of_strtok:
  3418                           
  3419                           	psect	text2
  3420     0EFE                     __ptext2:	
  3421 ;; *************** function _strspn *****************
  3422 ;; Defined at:
  3423 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  s1              2    7[COMMON] PTR const unsigned char 
  3426 ;;		 -> NULL(0), main@tmp(300), 
  3427 ;;  s2              2    9[COMMON] PTR const unsigned char 
  3428 ;;		 -> STR_35(2), STR_33(2), STR_32(2), STR_30(2), 
  3429 ;;		 -> STR_29(2), STR_27(2), STR_26(2), STR_24(2), 
  3430 ;;		 -> STR_23(2), STR_20(2), STR_17(2), STR_16(2), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  i               2    0[BANK0 ] unsigned int 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2    7[COMMON] unsigned int 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;Total ram usage:        8 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		_strchr
  3451 ;; This function is called by:
  3452 ;;		_strtok
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456     0EFE                     _strspn:	
  3457                           ;psect for function _strspn
  3458                           
  3459     0EFE                     l1718:	
  3460                           ;incstack = 0
  3461                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3462                           
  3463     0EFE  0020               	movlb	0	; select bank0
  3464     0EFF  01A0               	clrf	strspn@i
  3465     0F00  01A1               	clrf	strspn@i+1
  3466     0F01  2F0B               	goto	l1722
  3467     0F02                     l1720:
  3468     0F02  3001               	movlw	1
  3469     0F03  07F7               	addwf	strspn@s1,f
  3470     0F04  3000               	movlw	0
  3471     0F05  3DF8               	addwfc	strspn@s1+1,f
  3472     0F06  3001               	movlw	1
  3473     0F07  0020               	movlb	0	; select bank0
  3474     0F08  07A0               	addwf	strspn@i,f
  3475     0F09  3000               	movlw	0
  3476     0F0A  3DA1               	addwfc	strspn@i+1,f
  3477     0F0B                     l1722:
  3478     0F0B  0877               	movf	strspn@s1,w
  3479     0F0C  0086               	movwf	6
  3480     0F0D  0878               	movf	strspn@s1+1,w
  3481     0F0E  0087               	movwf	7
  3482     0F0F  0801               	movf	1,w
  3483     0F10  1903               	btfsc	3,2
  3484     0F11  2F13               	goto	u1321
  3485     0F12  2F14               	goto	u1320
  3486     0F13                     u1321:
  3487     0F13  2F2C               	goto	l1726
  3488     0F14                     u1320:
  3489     0F14                     l1724:
  3490     0F14  087A               	movf	strspn@s2+1,w
  3491     0F15  00F1               	movwf	strchr@ptr+1
  3492     0F16  0879               	movf	strspn@s2,w
  3493     0F17  00F0               	movwf	strchr@ptr
  3494     0F18  0877               	movf	strspn@s1,w
  3495     0F19  0086               	movwf	6
  3496     0F1A  0878               	movf	strspn@s1+1,w
  3497     0F1B  0087               	movwf	7
  3498     0F1C  0801               	movf	1,w
  3499     0F1D  00FB               	movwf	??_strspn
  3500     0F1E  01FC               	clrf	??_strspn+1
  3501     0F1F  087B               	movf	??_strspn,w
  3502     0F20  00F2               	movwf	strchr@chr
  3503     0F21  087C               	movf	??_strspn+1,w
  3504     0F22  00F3               	movwf	strchr@chr+1
  3505     0F23  318E  2650  318E   	fcall	_strchr
  3506     0F26  0870               	movf	?_strchr,w
  3507     0F27  0471               	iorwf	?_strchr+1,w
  3508     0F28  1D03               	btfss	3,2
  3509     0F29  2F2B               	goto	u1331
  3510     0F2A  2F2C               	goto	u1330
  3511     0F2B                     u1331:
  3512     0F2B  2F02               	goto	l1720
  3513     0F2C                     u1330:
  3514     0F2C                     l1726:
  3515     0F2C  0020               	movlb	0	; select bank0
  3516     0F2D  0821               	movf	strspn@i+1,w
  3517     0F2E  00F8               	movwf	?_strspn+1
  3518     0F2F  0820               	movf	strspn@i,w
  3519     0F30  00F7               	movwf	?_strspn
  3520     0F31                     l838:
  3521     0F31  0008               	return
  3522     0F32                     __end_of_strspn:
  3523                           
  3524                           	psect	text3
  3525     0ECA                     __ptext3:	
  3526 ;; *************** function _strcspn *****************
  3527 ;; Defined at:
  3528 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  s1              2    7[COMMON] PTR const unsigned char 
  3531 ;;		 -> NULL(0), main@tmp(300), 
  3532 ;;  s2              2    9[COMMON] PTR const unsigned char 
  3533 ;;		 -> STR_35(2), STR_33(2), STR_32(2), STR_30(2), 
  3534 ;;		 -> STR_29(2), STR_27(2), STR_26(2), STR_24(2), 
  3535 ;;		 -> STR_23(2), STR_20(2), STR_17(2), STR_16(2), 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  i               2    0[BANK0 ] unsigned int 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  2    7[COMMON] unsigned int 
  3540 ;; Registers used:
  3541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;Total ram usage:        8 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; Hardware stack levels required when called: 1
  3554 ;; This function calls:
  3555 ;;		_strchr
  3556 ;; This function is called by:
  3557 ;;		_strtok
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561     0ECA                     _strcspn:	
  3562                           ;psect for function _strcspn
  3563                           
  3564     0ECA                     l1730:	
  3565                           ;incstack = 0
  3566                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3567                           
  3568     0ECA  0020               	movlb	0	; select bank0
  3569     0ECB  01A0               	clrf	strcspn@i
  3570     0ECC  01A1               	clrf	strcspn@i+1
  3571     0ECD  2ED7               	goto	l1734
  3572     0ECE                     l1732:
  3573     0ECE  3001               	movlw	1
  3574     0ECF  07F7               	addwf	strcspn@s1,f
  3575     0ED0  3000               	movlw	0
  3576     0ED1  3DF8               	addwfc	strcspn@s1+1,f
  3577     0ED2  3001               	movlw	1
  3578     0ED3  0020               	movlb	0	; select bank0
  3579     0ED4  07A0               	addwf	strcspn@i,f
  3580     0ED5  3000               	movlw	0
  3581     0ED6  3DA1               	addwfc	strcspn@i+1,f
  3582     0ED7                     l1734:
  3583     0ED7  0877               	movf	strcspn@s1,w
  3584     0ED8  0086               	movwf	6
  3585     0ED9  0878               	movf	strcspn@s1+1,w
  3586     0EDA  0087               	movwf	7
  3587     0EDB  0801               	movf	1,w
  3588     0EDC  1903               	btfsc	3,2
  3589     0EDD  2EDF               	goto	u1341
  3590     0EDE  2EE0               	goto	u1340
  3591     0EDF                     u1341:
  3592     0EDF  2EF8               	goto	l1738
  3593     0EE0                     u1340:
  3594     0EE0                     l1736:
  3595     0EE0  087A               	movf	strcspn@s2+1,w
  3596     0EE1  00F1               	movwf	strchr@ptr+1
  3597     0EE2  0879               	movf	strcspn@s2,w
  3598     0EE3  00F0               	movwf	strchr@ptr
  3599     0EE4  0877               	movf	strcspn@s1,w
  3600     0EE5  0086               	movwf	6
  3601     0EE6  0878               	movf	strcspn@s1+1,w
  3602     0EE7  0087               	movwf	7
  3603     0EE8  0801               	movf	1,w
  3604     0EE9  00FB               	movwf	??_strcspn
  3605     0EEA  01FC               	clrf	??_strcspn+1
  3606     0EEB  087B               	movf	??_strcspn,w
  3607     0EEC  00F2               	movwf	strchr@chr
  3608     0EED  087C               	movf	??_strcspn+1,w
  3609     0EEE  00F3               	movwf	strchr@chr+1
  3610     0EEF  318E  2650  318E   	fcall	_strchr
  3611     0EF2  0870               	movf	?_strchr,w
  3612     0EF3  0471               	iorwf	?_strchr+1,w
  3613     0EF4  1903               	btfsc	3,2
  3614     0EF5  2EF7               	goto	u1351
  3615     0EF6  2EF8               	goto	u1350
  3616     0EF7                     u1351:
  3617     0EF7  2ECE               	goto	l1732
  3618     0EF8                     u1350:
  3619     0EF8                     l1738:
  3620     0EF8  0020               	movlb	0	; select bank0
  3621     0EF9  0821               	movf	strcspn@i+1,w
  3622     0EFA  00F8               	movwf	?_strcspn+1
  3623     0EFB  0820               	movf	strcspn@i,w
  3624     0EFC  00F7               	movwf	?_strcspn
  3625     0EFD                     l822:
  3626     0EFD  0008               	return
  3627     0EFE                     __end_of_strcspn:
  3628                           
  3629                           	psect	text4
  3630     0E50                     __ptext4:	
  3631 ;; *************** function _strchr *****************
  3632 ;; Defined at:
  3633 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  ptr             2    0[COMMON] PTR const unsigned char 
  3636 ;;		 -> STR_35(2), STR_33(2), STR_32(2), STR_30(2), 
  3637 ;;		 -> STR_29(2), STR_27(2), STR_26(2), STR_24(2), 
  3638 ;;		 -> STR_23(2), STR_20(2), STR_17(2), STR_16(2), 
  3639 ;;  chr             2    2[COMMON] int 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2    0[COMMON] PTR unsigned char 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3654 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3655 ;;Total ram usage:        7 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_strcspn
  3661 ;;		_strspn
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665     0E50                     _strchr:	
  3666                           ;psect for function _strchr
  3667                           
  3668     0E50                     l825:	
  3669                           ;incstack = 0
  3670                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  3671                           
  3672     0E50                     l1576:
  3673     0E50  0870               	movf	strchr@ptr,w
  3674     0E51  0084               	movwf	4
  3675     0E52  0871               	movf	strchr@ptr+1,w
  3676     0E53  0085               	movwf	5
  3677     0E54  0800               	movf	0,w	;code access
  3678     0E55  0672               	xorwf	strchr@chr,w
  3679     0E56  1D03               	skipz
  3680     0E57  2E59               	goto	u1021
  3681     0E58  2E5A               	goto	u1020
  3682     0E59                     u1021:
  3683     0E59  2E5B               	goto	l1580
  3684     0E5A                     u1020:
  3685     0E5A                     l1578:
  3686     0E5A  2E6D               	goto	l827
  3687     0E5B                     l1580:
  3688     0E5B  0871               	movf	strchr@ptr+1,w
  3689     0E5C  00F5               	movwf	??_strchr+1
  3690     0E5D  0870               	movf	strchr@ptr,w
  3691     0E5E  00F4               	movwf	??_strchr
  3692     0E5F  0AF0               	incf	strchr@ptr,f
  3693     0E60  1903               	skipnz
  3694     0E61  0AF1               	incf	strchr@ptr+1,f
  3695     0E62  0874               	movf	??_strchr,w
  3696     0E63  0084               	movwf	4
  3697     0E64  0875               	movf	??_strchr+1,w
  3698     0E65  0085               	movwf	5
  3699     0E66  0012               	moviw fsr0++
  3700     0E67  1D03               	btfss	3,2
  3701     0E68  2E6A               	goto	u1031
  3702     0E69  2E6B               	goto	u1030
  3703     0E6A                     u1031:
  3704     0E6A  2E50               	goto	l825
  3705     0E6B                     u1030:
  3706     0E6B                     l1582:
  3707     0E6B  01F0               	clrf	?_strchr
  3708     0E6C  01F1               	clrf	?_strchr+1
  3709     0E6D                     l827:
  3710     0E6D  0008               	return
  3711     0E6E                     __end_of_strchr:
  3712                           
  3713                           	psect	text5
  3714     0E6E                     __ptext5:	
  3715 ;; *************** function _strcmp *****************
  3716 ;; Defined at:
  3717 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  s1              2    0[COMMON] PTR const unsigned char 
  3720 ;;		 -> NULL(0), main@tmp(300), main@rcmd(4), 
  3721 ;;  s2              2    2[COMMON] PTR const unsigned char 
  3722 ;;		 -> STR_41(3), STR_40(3), STR_39(3), STR_38(3), 
  3723 ;;		 -> STR_37(3), STR_36(3), STR_15(4), STR_14(4), 
  3724 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  3725 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(4), 
  3726 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  r               1    4[COMMON] char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2    0[COMMON] int 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;Total ram usage:        5 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751     0E6E                     _strcmp:	
  3752                           ;psect for function _strcmp
  3753                           
  3754     0E6E                     l1832:	
  3755                           ;incstack = 0
  3756                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  3757                           
  3758     0E6E  2E77               	goto	l1836
  3759     0E6F                     l1834:
  3760     0E6F  3001               	movlw	1
  3761     0E70  07F0               	addwf	strcmp@s1,f
  3762     0E71  3000               	movlw	0
  3763     0E72  3DF1               	addwfc	strcmp@s1+1,f
  3764     0E73  3001               	movlw	1
  3765     0E74  07F2               	addwf	strcmp@s2,f
  3766     0E75  3000               	movlw	0
  3767     0E76  3DF3               	addwfc	strcmp@s2+1,f
  3768     0E77                     l1836:
  3769     0E77  0870               	movf	strcmp@s1,w
  3770     0E78  0086               	movwf	6
  3771     0E79  0871               	movf	strcmp@s1+1,w
  3772     0E7A  0087               	movwf	7
  3773     0E7B  0872               	movf	strcmp@s2,w
  3774     0E7C  0084               	movwf	4
  3775     0E7D  0873               	movf	strcmp@s2+1,w
  3776     0E7E  0085               	movwf	5
  3777     0E7F  0800               	movf	0,w	;code access
  3778     0E80  0201               	subwf	1,w
  3779     0E81  00F4               	movwf	strcmp@r
  3780     0E82  0874               	movf	strcmp@r,w
  3781     0E83  1D03               	btfss	3,2
  3782     0E84  2E86               	goto	u1461
  3783     0E85  2E87               	goto	u1460
  3784     0E86                     u1461:
  3785     0E86  2E90               	goto	l1840
  3786     0E87                     u1460:
  3787     0E87                     l1838:
  3788     0E87  0870               	movf	strcmp@s1,w
  3789     0E88  0086               	movwf	6
  3790     0E89  0871               	movf	strcmp@s1+1,w
  3791     0E8A  0087               	movwf	7
  3792     0E8B  0801               	movf	1,w
  3793     0E8C  1D03               	btfss	3,2
  3794     0E8D  2E8F               	goto	u1471
  3795     0E8E  2E90               	goto	u1470
  3796     0E8F                     u1471:
  3797     0E8F  2E6F               	goto	l1834
  3798     0E90                     u1470:
  3799     0E90                     l1840:
  3800     0E90  0874               	movf	strcmp@r,w
  3801     0E91  00F0               	movwf	?_strcmp
  3802     0E92  01F1               	clrf	?_strcmp+1
  3803     0E93  1BF0               	btfsc	?_strcmp,7
  3804     0E94  03F1               	decf	?_strcmp+1,f
  3805     0E95                     l798:
  3806     0E95  0008               	return
  3807     0E96                     __end_of_strcmp:
  3808                           
  3809                           	psect	text6
  3810     0F32                     __ptext6:	
  3811 ;; *************** function _serial_init *****************
  3812 ;; Defined at:
  3813 ;;		line 43 in file "main.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  BR              4    0[BANK0 ] unsigned long 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  X               2    8[BANK0 ] unsigned int 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;Total ram usage:       10 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		___lldiv
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841     0F32                     _serial_init:	
  3842                           ;psect for function _serial_init
  3843                           
  3844     0F32                     l1742:	
  3845                           ;incstack = 0
  3846                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  3847                           
  3848                           
  3849                           ;main.c: 44: TX1STA = 0x24;
  3850     0F32  3024               	movlw	36
  3851     0F33  0023               	movlb	3	; select bank3
  3852     0F34  009E               	movwf	30	;volatile
  3853     0F35                     l1744:
  3854                           
  3855                           ;main.c: 45: BRG16 = 1;
  3856     0F35  159F               	bsf	31,3	;volatile
  3857                           
  3858                           ;main.c: 46: RC1STA = 0x90;
  3859     0F36  3090               	movlw	144
  3860     0F37  009D               	movwf	29	;volatile
  3861     0F38                     l1746:
  3862                           
  3863                           ;main.c: 47: unsigned int X= 32000000/BR/4 - 1;
  3864     0F38  0020               	movlb	0	; select bank0
  3865     0F39  0823               	movf	serial_init@BR+3,w
  3866     0F3A  00F3               	movwf	___lldiv@divisor+3
  3867     0F3B  0822               	movf	serial_init@BR+2,w
  3868     0F3C  00F2               	movwf	___lldiv@divisor+2
  3869     0F3D  0821               	movf	serial_init@BR+1,w
  3870     0F3E  00F1               	movwf	___lldiv@divisor+1
  3871     0F3F  0820               	movf	serial_init@BR,w
  3872     0F40  00F0               	movwf	___lldiv@divisor
  3873     0F41  3001               	movlw	1
  3874     0F42  00F7               	movwf	___lldiv@dividend+3
  3875     0F43  30E8               	movlw	232
  3876     0F44  00F6               	movwf	___lldiv@dividend+2
  3877     0F45  3048               	movlw	72
  3878     0F46  00F5               	movwf	___lldiv@dividend+1
  3879     0F47  3000               	movlw	0
  3880     0F48  00F4               	movwf	___lldiv@dividend
  3881     0F49  318F  27A6  318F   	fcall	___lldiv
  3882     0F4C  0870               	movf	?___lldiv,w
  3883     0F4D  0020               	movlb	0	; select bank0
  3884     0F4E  00A4               	movwf	??_serial_init
  3885     0F4F  0871               	movf	?___lldiv+1,w
  3886     0F50  00A5               	movwf	??_serial_init+1
  3887     0F51  0872               	movf	?___lldiv+2,w
  3888     0F52  00A6               	movwf	??_serial_init+2
  3889     0F53  0873               	movf	?___lldiv+3,w
  3890     0F54  00A7               	movwf	??_serial_init+3
  3891     0F55  3002               	movlw	2
  3892     0F56                     u1365:
  3893     0F56  36A7               	lsrf	??_serial_init+3,f
  3894     0F57  0CA6               	rrf	??_serial_init+2,f
  3895     0F58  0CA5               	rrf	??_serial_init+1,f
  3896     0F59  0CA4               	rrf	??_serial_init,f
  3897     0F5A                     u1360:
  3898     0F5A  0B89               	decfsz	9,f
  3899     0F5B  2F56               	goto	u1365
  3900     0F5C  0824               	movf	??_serial_init,w
  3901     0F5D  3EFF               	addlw	255
  3902     0F5E  00A8               	movwf	serial_init@X
  3903     0F5F  30FF               	movlw	255
  3904     0F60  3D25               	addwfc	??_serial_init+1,w
  3905     0F61  00A9               	movwf	serial_init@X+1
  3906     0F62                     l1748:
  3907                           
  3908                           ;main.c: 48: SP1BRGH = X / 256;
  3909     0F62  0829               	movf	serial_init@X+1,w
  3910     0F63  0023               	movlb	3	; select bank3
  3911     0F64  009C               	movwf	28	;volatile
  3912     0F65                     l1750:
  3913                           
  3914                           ;main.c: 49: SP1BRGL = X % 256;
  3915     0F65  0020               	movlb	0	; select bank0
  3916     0F66  0828               	movf	serial_init@X,w
  3917     0F67  0023               	movlb	3	; select bank3
  3918     0F68  009B               	movwf	27	;volatile
  3919     0F69                     l47:
  3920     0F69  0008               	return
  3921     0F6A                     __end_of_serial_init:
  3922                           
  3923                           	psect	text7
  3924     0FA6                     __ptext7:	
  3925 ;; *************** function ___lldiv *****************
  3926 ;; Defined at:
  3927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  divisor         4    0[COMMON] unsigned long 
  3930 ;;  dividend        4    4[COMMON] unsigned long 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  quotient        4    9[COMMON] unsigned long 
  3933 ;;  counter         1   13[COMMON] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  4    0[COMMON] unsigned long 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3943 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;Total ram usage:       14 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_serial_init
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956     0FA6                     ___lldiv:	
  3957                           ;psect for function ___lldiv
  3958                           
  3959     0FA6                     l1600:	
  3960                           ;incstack = 0
  3961                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3962                           
  3963     0FA6  3000               	movlw	0
  3964     0FA7  00FC               	movwf	___lldiv@quotient+3
  3965     0FA8  3000               	movlw	0
  3966     0FA9  00FB               	movwf	___lldiv@quotient+2
  3967     0FAA  3000               	movlw	0
  3968     0FAB  00FA               	movwf	___lldiv@quotient+1
  3969     0FAC  3000               	movlw	0
  3970     0FAD  00F9               	movwf	___lldiv@quotient
  3971     0FAE  0873               	movf	___lldiv@divisor+3,w
  3972     0FAF  0472               	iorwf	___lldiv@divisor+2,w
  3973     0FB0  0471               	iorwf	___lldiv@divisor+1,w
  3974     0FB1  0470               	iorwf	___lldiv@divisor,w
  3975     0FB2  1903               	skipnz
  3976     0FB3  2FB5               	goto	u1081
  3977     0FB4  2FB6               	goto	u1080
  3978     0FB5                     u1081:
  3979     0FB5  2FF7               	goto	l1620
  3980     0FB6                     u1080:
  3981     0FB6                     l1602:
  3982     0FB6  01FD               	clrf	___lldiv@counter
  3983     0FB7  0AFD               	incf	___lldiv@counter,f
  3984     0FB8  2FC4               	goto	l1606
  3985     0FB9                     l1604:
  3986     0FB9  3001               	movlw	1
  3987     0FBA                     u1095:
  3988     0FBA  35F0               	lslf	___lldiv@divisor,f
  3989     0FBB  0DF1               	rlf	___lldiv@divisor+1,f
  3990     0FBC  0DF2               	rlf	___lldiv@divisor+2,f
  3991     0FBD  0DF3               	rlf	___lldiv@divisor+3,f
  3992     0FBE  0B89               	decfsz	9,f
  3993     0FBF  2FBA               	goto	u1095
  3994     0FC0  3001               	movlw	1
  3995     0FC1  00F8               	movwf	??___lldiv
  3996     0FC2  0878               	movf	??___lldiv,w
  3997     0FC3  07FD               	addwf	___lldiv@counter,f
  3998     0FC4                     l1606:
  3999     0FC4  1FF3               	btfss	___lldiv@divisor+3,7
  4000     0FC5  2FC7               	goto	u1101
  4001     0FC6  2FC8               	goto	u1100
  4002     0FC7                     u1101:
  4003     0FC7  2FB9               	goto	l1604
  4004     0FC8                     u1100:
  4005     0FC8                     l1608:
  4006     0FC8  3001               	movlw	1
  4007     0FC9                     u1115:
  4008     0FC9  35F9               	lslf	___lldiv@quotient,f
  4009     0FCA  0DFA               	rlf	___lldiv@quotient+1,f
  4010     0FCB  0DFB               	rlf	___lldiv@quotient+2,f
  4011     0FCC  0DFC               	rlf	___lldiv@quotient+3,f
  4012     0FCD  0B89               	decfsz	9,f
  4013     0FCE  2FC9               	goto	u1115
  4014     0FCF                     l1610:
  4015     0FCF  0873               	movf	___lldiv@divisor+3,w
  4016     0FD0  0277               	subwf	___lldiv@dividend+3,w
  4017     0FD1  1D03               	skipz
  4018     0FD2  2FDD               	goto	u1125
  4019     0FD3  0872               	movf	___lldiv@divisor+2,w
  4020     0FD4  0276               	subwf	___lldiv@dividend+2,w
  4021     0FD5  1D03               	skipz
  4022     0FD6  2FDD               	goto	u1125
  4023     0FD7  0871               	movf	___lldiv@divisor+1,w
  4024     0FD8  0275               	subwf	___lldiv@dividend+1,w
  4025     0FD9  1D03               	skipz
  4026     0FDA  2FDD               	goto	u1125
  4027     0FDB  0870               	movf	___lldiv@divisor,w
  4028     0FDC  0274               	subwf	___lldiv@dividend,w
  4029     0FDD                     u1125:
  4030     0FDD  1C03               	skipc
  4031     0FDE  2FE0               	goto	u1121
  4032     0FDF  2FE1               	goto	u1120
  4033     0FE0                     u1121:
  4034     0FE0  2FEA               	goto	l1616
  4035     0FE1                     u1120:
  4036     0FE1                     l1612:
  4037     0FE1  0870               	movf	___lldiv@divisor,w
  4038     0FE2  02F4               	subwf	___lldiv@dividend,f
  4039     0FE3  0871               	movf	___lldiv@divisor+1,w
  4040     0FE4  3BF5               	subwfb	___lldiv@dividend+1,f
  4041     0FE5  0872               	movf	___lldiv@divisor+2,w
  4042     0FE6  3BF6               	subwfb	___lldiv@dividend+2,f
  4043     0FE7  0873               	movf	___lldiv@divisor+3,w
  4044     0FE8  3BF7               	subwfb	___lldiv@dividend+3,f
  4045     0FE9                     l1614:
  4046     0FE9  1479               	bsf	___lldiv@quotient,0
  4047     0FEA                     l1616:
  4048     0FEA  3001               	movlw	1
  4049     0FEB                     u1135:
  4050     0FEB  36F3               	lsrf	___lldiv@divisor+3,f
  4051     0FEC  0CF2               	rrf	___lldiv@divisor+2,f
  4052     0FED  0CF1               	rrf	___lldiv@divisor+1,f
  4053     0FEE  0CF0               	rrf	___lldiv@divisor,f
  4054     0FEF  0B89               	decfsz	9,f
  4055     0FF0  2FEB               	goto	u1135
  4056     0FF1                     l1618:
  4057     0FF1  3001               	movlw	1
  4058     0FF2  02FD               	subwf	___lldiv@counter,f
  4059     0FF3  1D03               	btfss	3,2
  4060     0FF4  2FF6               	goto	u1141
  4061     0FF5  2FF7               	goto	u1140
  4062     0FF6                     u1141:
  4063     0FF6  2FC8               	goto	l1608
  4064     0FF7                     u1140:
  4065     0FF7                     l1620:
  4066     0FF7  087C               	movf	___lldiv@quotient+3,w
  4067     0FF8  00F3               	movwf	?___lldiv+3
  4068     0FF9  087B               	movf	___lldiv@quotient+2,w
  4069     0FFA  00F2               	movwf	?___lldiv+2
  4070     0FFB  087A               	movf	___lldiv@quotient+1,w
  4071     0FFC  00F1               	movwf	?___lldiv+1
  4072     0FFD  0879               	movf	___lldiv@quotient,w
  4073     0FFE  00F0               	movwf	?___lldiv
  4074     0FFF                     l333:
  4075     0FFF  0008               	return
  4076     1000                     __end_of___lldiv:
  4077                           
  4078                           	psect	text8
  4079     0166                     __ptext8:	
  4080 ;; *************** function _printf *****************
  4081 ;; Defined at:
  4082 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  4085 ;;		 -> STR_43(11), STR_42(9), STR_34(8), STR_31(8), 
  4086 ;;		 -> STR_28(8), STR_25(8), STR_22(8), STR_21(8), 
  4087 ;;		 -> STR_19(8), STR_18(4), STR_1(4), 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  tmpval          4    0        struct .
  4090 ;;  val             2   13[BANK0 ] unsigned int 
  4091 ;;  cp              2   11[BANK0 ] PTR const unsigned char 
  4092 ;;		 -> STR_44(7), ?_printf(2), main@tmp(300), 
  4093 ;;  len             2    0        unsigned int 
  4094 ;;  c               1   15[BANK0 ] unsigned char 
  4095 ;;  ap              1   10[BANK0 ] PTR void [1]
  4096 ;;		 -> ?_printf(2), 
  4097 ;;  prec            1    9[BANK0 ] char 
  4098 ;;  flag            1    8[BANK0 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2    0[BANK0 ] int 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4108 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;Total ram usage:       16 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 1
  4115 ;; This function calls:
  4116 ;;		___lwdiv
  4117 ;;		___lwmod
  4118 ;;		_putch
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124     0166                     _printf:	
  4125                           ;psect for function _printf
  4126                           
  4127     0166                     l1770:	
  4128                           ;incstack = 0
  4129                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4130                           
  4131                           
  4132                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  4133     0166  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4134     0167  0020               	movlb	0	; select bank0
  4135     0168  00AA               	movwf	printf@ap
  4136                           
  4137                           ;doprnt.c: 553: while((c = *f++)) {
  4138     0169  2A3F               	goto	l1830
  4139     016A                     l1772:
  4140                           
  4141                           ;doprnt.c: 555: if(c != '%')
  4142     016A  3025               	movlw	37
  4143     016B  062F               	xorwf	printf@c,w
  4144     016C  1903               	btfsc	3,2
  4145     016D  296F               	goto	u1371
  4146     016E  2970               	goto	u1370
  4147     016F                     u1371:
  4148     016F  2975               	goto	l1776
  4149     0170                     u1370:
  4150     0170                     l1774:
  4151                           
  4152                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  4153     0170  082F               	movf	printf@c,w
  4154     0171  318E  260C  3181   	fcall	_putch
  4155                           
  4156                           ;doprnt.c: 559: continue;
  4157     0174  2A3F               	goto	l1830
  4158     0175                     l1776:
  4159                           
  4160                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4161     0175  01A8               	clrf	printf@flag
  4162                           
  4163                           ;doprnt.c: 661: switch(c = *f++) {
  4164     0176  29A4               	goto	l1794
  4165     0177                     l1778:
  4166                           
  4167                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4168     0177  082A               	movf	printf@ap,w
  4169     0178  0086               	movwf	6
  4170     0179  0187               	clrf	7
  4171     017A  3F40               	moviw [0]fsr1
  4172     017B  00AB               	movwf	printf@cp
  4173     017C  3F41               	moviw [1]fsr1
  4174     017D  00AC               	movwf	printf@cp+1
  4175     017E                     l1780:
  4176     017E  3002               	movlw	2
  4177     017F  00A4               	movwf	??_printf
  4178     0180  0824               	movf	??_printf,w
  4179     0181  07AA               	addwf	printf@ap,f
  4180     0182                     l1782:
  4181                           
  4182                           ;doprnt.c: 766: if(!cp)
  4183     0182  082B               	movf	printf@cp,w
  4184     0183  042C               	iorwf	printf@cp+1,w
  4185     0184  1D03               	btfss	3,2
  4186     0185  2987               	goto	u1381
  4187     0186  2988               	goto	u1380
  4188     0187                     u1381:
  4189     0187  299A               	goto	l1790
  4190     0188                     u1380:
  4191     0188                     l1784:
  4192                           
  4193                           ;doprnt.c: 767: cp = "(null)";
  4194     0188  3056               	movlw	low (STR_44| (0+32768))
  4195     0189  00AB               	movwf	printf@cp
  4196     018A  3090               	movlw	high (STR_44| (0+32768))
  4197     018B  00AC               	movwf	printf@cp+1
  4198     018C  299A               	goto	l1790
  4199     018D                     l1786:
  4200                           
  4201                           ;doprnt.c: 804: (putch(*cp++) );
  4202     018D  082B               	movf	printf@cp,w
  4203     018E  0084               	movwf	4
  4204     018F  082C               	movf	printf@cp+1,w
  4205     0190  0085               	movwf	5
  4206     0191  0800               	movf	0,w	;code access
  4207     0192  318E  260C  3181   	fcall	_putch
  4208     0195                     l1788:
  4209     0195  3001               	movlw	1
  4210     0196  0020               	movlb	0	; select bank0
  4211     0197  07AB               	addwf	printf@cp,f
  4212     0198  3000               	movlw	0
  4213     0199  3DAC               	addwfc	printf@cp+1,f
  4214     019A                     l1790:
  4215     019A  082B               	movf	printf@cp,w
  4216     019B  0084               	movwf	4
  4217     019C  082C               	movf	printf@cp+1,w
  4218     019D  0085               	movwf	5
  4219     019E  0012               	moviw fsr0++
  4220     019F  1D03               	btfss	3,2
  4221     01A0  29A2               	goto	u1391
  4222     01A1  29A3               	goto	u1390
  4223     01A2                     u1391:
  4224     01A2  298D               	goto	l1786
  4225     01A3                     u1390:
  4226     01A3  2A3F               	goto	l1830
  4227     01A4                     l1794:
  4228     01A4  0821               	movf	printf@f+1,w
  4229     01A5  00A5               	movwf	??_printf+1
  4230     01A6  0820               	movf	printf@f,w
  4231     01A7  00A4               	movwf	??_printf
  4232     01A8  0AA0               	incf	printf@f,f
  4233     01A9  1903               	skipnz
  4234     01AA  0AA1               	incf	printf@f+1,f
  4235     01AB  0824               	movf	??_printf,w
  4236     01AC  0084               	movwf	4
  4237     01AD  0825               	movf	??_printf+1,w
  4238     01AE  0085               	movwf	5
  4239     01AF  0800               	movf	0,w	;code access
  4240     01B0  00AF               	movwf	printf@c
  4241                           
  4242                           ; Switch size 1, requested type "simple"
  4243                           ; Number of cases is 4, Range of values is 0 to 115
  4244                           ; switch strategies available:
  4245                           ; Name         Instructions Cycles
  4246                           ; simple_byte           13     7 (average)
  4247                           ; direct_byte          238     6 (fixed)
  4248                           ; jumptable            260     6 (fixed)
  4249                           ;	Chosen strategy is simple_byte
  4250     01B1  3A00               	xorlw	0	; case 0
  4251     01B2  1903               	skipnz
  4252     01B3  2A52               	goto	l293
  4253     01B4  3A64               	xorlw	100	; case 100
  4254     01B5  1903               	skipnz
  4255     01B6  29BE               	goto	l1796
  4256     01B7  3A0D               	xorlw	13	; case 105
  4257     01B8  1903               	skipnz
  4258     01B9  29BE               	goto	l1796
  4259     01BA  3A1A               	xorlw	26	; case 115
  4260     01BB  1903               	skipnz
  4261     01BC  2977               	goto	l1778
  4262     01BD  2A3F               	goto	l1830
  4263     01BE                     l1796:
  4264                           
  4265                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  4266     01BE  082A               	movf	printf@ap,w
  4267     01BF  0086               	movwf	6
  4268     01C0  0187               	clrf	7
  4269     01C1  3F40               	moviw [0]fsr1
  4270     01C2  00AD               	movwf	printf@val
  4271     01C3  3F41               	moviw [1]fsr1
  4272     01C4  00AE               	movwf	printf@val+1
  4273     01C5                     l1798:
  4274     01C5  3002               	movlw	2
  4275     01C6  00A4               	movwf	??_printf
  4276     01C7  0824               	movf	??_printf,w
  4277     01C8  07AA               	addwf	printf@ap,f
  4278     01C9                     l1800:
  4279                           
  4280                           ;doprnt.c: 1287: if((int)val < 0) {
  4281     01C9  1FAE               	btfss	printf@val+1,7
  4282     01CA  29CC               	goto	u1401
  4283     01CB  29CD               	goto	u1400
  4284     01CC                     u1401:
  4285     01CC  29D6               	goto	l1806
  4286     01CD                     u1400:
  4287     01CD                     l1802:
  4288                           
  4289                           ;doprnt.c: 1288: flag |= 0x03;
  4290     01CD  3003               	movlw	3
  4291     01CE  00A4               	movwf	??_printf
  4292     01CF  0824               	movf	??_printf,w
  4293     01D0  04A8               	iorwf	printf@flag,f
  4294     01D1                     l1804:
  4295                           
  4296                           ;doprnt.c: 1289: val = -val;
  4297     01D1  09AD               	comf	printf@val,f
  4298     01D2  09AE               	comf	printf@val+1,f
  4299     01D3  0AAD               	incf	printf@val,f
  4300     01D4  1903               	skipnz
  4301     01D5  0AAE               	incf	printf@val+1,f
  4302     01D6                     l1806:
  4303                           
  4304                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  4305     01D6  01AF               	clrf	printf@c
  4306     01D7  0AAF               	incf	printf@c,f
  4307     01D8                     l1812:
  4308                           
  4309                           ;doprnt.c: 1332: if(val < dpowers[c])
  4310     01D8  082F               	movf	printf@c,w
  4311     01D9  00A4               	movwf	??_printf
  4312     01DA  01A5               	clrf	??_printf+1
  4313     01DB  35A4               	lslf	??_printf,f
  4314     01DC  0DA5               	rlf	??_printf+1,f
  4315     01DD  3000               	movlw	low _dpowers
  4316     01DE  0724               	addwf	??_printf,w
  4317     01DF  0084               	movwf	4
  4318     01E0  3010               	movlw	high _dpowers
  4319     01E1  3D25               	addwfc	??_printf+1,w
  4320     01E2  3880               	iorlw	128
  4321     01E3  0085               	movwf	5
  4322     01E4  3F00               	moviw [0]fsr0
  4323     01E5  00A6               	movwf	??_printf+2
  4324     01E6  3F01               	moviw [1]fsr0
  4325     01E7  00A7               	movwf	??_printf+3
  4326     01E8  0827               	movf	??_printf+3,w
  4327     01E9  022E               	subwf	printf@val+1,w
  4328     01EA  1D03               	skipz
  4329     01EB  29EE               	goto	u1415
  4330     01EC  0826               	movf	??_printf+2,w
  4331     01ED  022D               	subwf	printf@val,w
  4332     01EE                     u1415:
  4333     01EE  1803               	skipnc
  4334     01EF  29F1               	goto	u1411
  4335     01F0  29F2               	goto	u1410
  4336     01F1                     u1411:
  4337     01F1  29F3               	goto	l1816
  4338     01F2                     u1410:
  4339     01F2  29FD               	goto	l1818
  4340     01F3                     l1816:
  4341     01F3  3001               	movlw	1
  4342     01F4  00A4               	movwf	??_printf
  4343     01F5  0824               	movf	??_printf,w
  4344     01F6  07AF               	addwf	printf@c,f
  4345     01F7  3005               	movlw	5
  4346     01F8  062F               	xorwf	printf@c,w
  4347     01F9  1D03               	btfss	3,2
  4348     01FA  29FC               	goto	u1421
  4349     01FB  29FD               	goto	u1420
  4350     01FC                     u1421:
  4351     01FC  29D8               	goto	l1812
  4352     01FD                     u1420:
  4353     01FD                     l1818:
  4354                           
  4355                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4356     01FD  0828               	movf	printf@flag,w
  4357     01FE  3903               	andlw	3
  4358     01FF  1903               	btfsc	3,2
  4359     0200  2A02               	goto	u1431
  4360     0201  2A03               	goto	u1430
  4361     0202                     u1431:
  4362     0202  2A07               	goto	l1822
  4363     0203                     u1430:
  4364     0203                     l1820:
  4365                           
  4366                           ;doprnt.c: 1465: (putch('-') );
  4367     0203  302D               	movlw	45
  4368     0204  318E  260C  3181   	fcall	_putch
  4369     0207                     l1822:
  4370                           
  4371                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4372     0207  0020               	movlb	0	; select bank0
  4373     0208  082F               	movf	printf@c,w
  4374     0209  00A9               	movwf	printf@prec
  4375                           
  4376                           ;doprnt.c: 1500: while(prec--) {
  4377     020A  2A35               	goto	l1828
  4378     020B                     l1824:
  4379                           
  4380                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  4381     020B  300A               	movlw	10
  4382     020C  00F8               	movwf	___lwmod@divisor
  4383     020D  3000               	movlw	0
  4384     020E  00F9               	movwf	___lwmod@divisor+1
  4385     020F  0829               	movf	printf@prec,w
  4386     0210  00A4               	movwf	??_printf
  4387     0211  01A5               	clrf	??_printf+1
  4388     0212  35A4               	lslf	??_printf,f
  4389     0213  0DA5               	rlf	??_printf+1,f
  4390     0214  3000               	movlw	low _dpowers
  4391     0215  0724               	addwf	??_printf,w
  4392     0216  0084               	movwf	4
  4393     0217  3010               	movlw	high _dpowers
  4394     0218  3D25               	addwfc	??_printf+1,w
  4395     0219  3880               	iorlw	128
  4396     021A  0085               	movwf	5
  4397     021B  3F00               	moviw [0]fsr0
  4398     021C  00F0               	movwf	___lwdiv@divisor
  4399     021D  3F01               	moviw [1]fsr0
  4400     021E  00F1               	movwf	___lwdiv@divisor+1
  4401     021F  082E               	movf	printf@val+1,w
  4402     0220  00F3               	movwf	___lwdiv@dividend+1
  4403     0221  082D               	movf	printf@val,w
  4404     0222  00F2               	movwf	___lwdiv@dividend
  4405     0223  318F  276A  3181   	fcall	___lwdiv
  4406     0226  0871               	movf	?___lwdiv+1,w
  4407     0227  00FB               	movwf	___lwmod@dividend+1
  4408     0228  0870               	movf	?___lwdiv,w
  4409     0229  00FA               	movwf	___lwmod@dividend
  4410     022A  318E  2696  3181   	fcall	___lwmod
  4411     022D  0878               	movf	?___lwmod,w
  4412     022E  3E30               	addlw	48
  4413     022F  0020               	movlb	0	; select bank0
  4414     0230  00AF               	movwf	printf@c
  4415     0231                     l1826:
  4416                           
  4417                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  4418     0231  082F               	movf	printf@c,w
  4419     0232  318E  260C  3181   	fcall	_putch
  4420     0235                     l1828:
  4421     0235  30FF               	movlw	255
  4422     0236  0020               	movlb	0	; select bank0
  4423     0237  00A4               	movwf	??_printf
  4424     0238  0824               	movf	??_printf,w
  4425     0239  07A9               	addwf	printf@prec,f
  4426     023A  0A29               	incf	printf@prec,w
  4427     023B  1D03               	btfss	3,2
  4428     023C  2A3E               	goto	u1441
  4429     023D  2A3F               	goto	u1440
  4430     023E                     u1441:
  4431     023E  2A0B               	goto	l1824
  4432     023F                     u1440:
  4433     023F                     l1830:
  4434     023F  0020               	movlb	0	; select bank0
  4435     0240  0821               	movf	printf@f+1,w
  4436     0241  00A5               	movwf	??_printf+1
  4437     0242  0820               	movf	printf@f,w
  4438     0243  00A4               	movwf	??_printf
  4439     0244  0AA0               	incf	printf@f,f
  4440     0245  1903               	skipnz
  4441     0246  0AA1               	incf	printf@f+1,f
  4442     0247  0824               	movf	??_printf,w
  4443     0248  0084               	movwf	4
  4444     0249  0825               	movf	??_printf+1,w
  4445     024A  0085               	movwf	5
  4446     024B  0800               	movf	0,w	;code access
  4447     024C  00AF               	movwf	printf@c
  4448     024D  082F               	movf	printf@c,w
  4449     024E  1D03               	btfss	3,2
  4450     024F  2A51               	goto	u1451
  4451     0250  2A52               	goto	u1450
  4452     0251                     u1451:
  4453     0251  296A               	goto	l1772
  4454     0252                     u1450:
  4455     0252                     l293:
  4456     0252  0008               	return
  4457     0253                     __end_of_printf:
  4458                           
  4459                           	psect	text9
  4460     0E96                     __ptext9:	
  4461 ;; *************** function ___lwmod *****************
  4462 ;; Defined at:
  4463 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  divisor         2    8[COMMON] unsigned int 
  4466 ;;  dividend        2   10[COMMON] unsigned int 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  counter         1   13[COMMON] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    8[COMMON] unsigned int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;Total ram usage:        6 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_printf
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491     0E96                     ___lwmod:	
  4492                           ;psect for function ___lwmod
  4493                           
  4494     0E96                     l1650:	
  4495                           ;incstack = 0
  4496                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4497                           
  4498     0E96  0878               	movf	___lwmod@divisor,w
  4499     0E97  0479               	iorwf	___lwmod@divisor+1,w
  4500     0E98  1903               	btfsc	3,2
  4501     0E99  2E9B               	goto	u1221
  4502     0E9A  2E9C               	goto	u1220
  4503     0E9B                     u1221:
  4504     0E9B  2EC5               	goto	l1668
  4505     0E9C                     u1220:
  4506     0E9C                     l1652:
  4507     0E9C  01FD               	clrf	___lwmod@counter
  4508     0E9D  0AFD               	incf	___lwmod@counter,f
  4509     0E9E  2EA8               	goto	l1658
  4510     0E9F                     l1654:
  4511     0E9F  3001               	movlw	1
  4512     0EA0                     u1235:
  4513     0EA0  35F8               	lslf	___lwmod@divisor,f
  4514     0EA1  0DF9               	rlf	___lwmod@divisor+1,f
  4515     0EA2  0B89               	decfsz	9,f
  4516     0EA3  2EA0               	goto	u1235
  4517     0EA4                     l1656:
  4518     0EA4  3001               	movlw	1
  4519     0EA5  00FC               	movwf	??___lwmod
  4520     0EA6  087C               	movf	??___lwmod,w
  4521     0EA7  07FD               	addwf	___lwmod@counter,f
  4522     0EA8                     l1658:
  4523     0EA8  1FF9               	btfss	___lwmod@divisor+1,7
  4524     0EA9  2EAB               	goto	u1241
  4525     0EAA  2EAC               	goto	u1240
  4526     0EAB                     u1241:
  4527     0EAB  2E9F               	goto	l1654
  4528     0EAC                     u1240:
  4529     0EAC                     l1660:
  4530     0EAC  0879               	movf	___lwmod@divisor+1,w
  4531     0EAD  027B               	subwf	___lwmod@dividend+1,w
  4532     0EAE  1D03               	skipz
  4533     0EAF  2EB2               	goto	u1255
  4534     0EB0  0878               	movf	___lwmod@divisor,w
  4535     0EB1  027A               	subwf	___lwmod@dividend,w
  4536     0EB2                     u1255:
  4537     0EB2  1C03               	skipc
  4538     0EB3  2EB5               	goto	u1251
  4539     0EB4  2EB6               	goto	u1250
  4540     0EB5                     u1251:
  4541     0EB5  2EBA               	goto	l1664
  4542     0EB6                     u1250:
  4543     0EB6                     l1662:
  4544     0EB6  0878               	movf	___lwmod@divisor,w
  4545     0EB7  02FA               	subwf	___lwmod@dividend,f
  4546     0EB8  0879               	movf	___lwmod@divisor+1,w
  4547     0EB9  3BFB               	subwfb	___lwmod@dividend+1,f
  4548     0EBA                     l1664:
  4549     0EBA  3001               	movlw	1
  4550     0EBB                     u1265:
  4551     0EBB  36F9               	lsrf	___lwmod@divisor+1,f
  4552     0EBC  0CF8               	rrf	___lwmod@divisor,f
  4553     0EBD  0B89               	decfsz	9,f
  4554     0EBE  2EBB               	goto	u1265
  4555     0EBF                     l1666:
  4556     0EBF  3001               	movlw	1
  4557     0EC0  02FD               	subwf	___lwmod@counter,f
  4558     0EC1  1D03               	btfss	3,2
  4559     0EC2  2EC4               	goto	u1271
  4560     0EC3  2EC5               	goto	u1270
  4561     0EC4                     u1271:
  4562     0EC4  2EAC               	goto	l1660
  4563     0EC5                     u1270:
  4564     0EC5                     l1668:
  4565     0EC5  087B               	movf	___lwmod@dividend+1,w
  4566     0EC6  00F9               	movwf	?___lwmod+1
  4567     0EC7  087A               	movf	___lwmod@dividend,w
  4568     0EC8  00F8               	movwf	?___lwmod
  4569     0EC9                     l579:
  4570     0EC9  0008               	return
  4571     0ECA                     __end_of___lwmod:
  4572                           
  4573                           	psect	text10
  4574     0F6A                     __ptext10:	
  4575 ;; *************** function ___lwdiv *****************
  4576 ;; Defined at:
  4577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  divisor         2    0[COMMON] unsigned int 
  4580 ;;  dividend        2    2[COMMON] unsigned int 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  quotient        2    5[COMMON] unsigned int 
  4583 ;;  counter         1    7[COMMON] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  2    0[COMMON] unsigned int 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        8 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_printf
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606     0F6A                     ___lwdiv:	
  4607                           ;psect for function ___lwdiv
  4608                           
  4609     0F6A                     l1624:	
  4610                           ;incstack = 0
  4611                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4612                           
  4613     0F6A  01F5               	clrf	___lwdiv@quotient
  4614     0F6B  01F6               	clrf	___lwdiv@quotient+1
  4615     0F6C                     l1626:
  4616     0F6C  0870               	movf	___lwdiv@divisor,w
  4617     0F6D  0471               	iorwf	___lwdiv@divisor+1,w
  4618     0F6E  1903               	btfsc	3,2
  4619     0F6F  2F71               	goto	u1151
  4620     0F70  2F72               	goto	u1150
  4621     0F71                     u1151:
  4622     0F71  2FA1               	goto	l1646
  4623     0F72                     u1150:
  4624     0F72                     l1628:
  4625     0F72  01F7               	clrf	___lwdiv@counter
  4626     0F73  0AF7               	incf	___lwdiv@counter,f
  4627     0F74  2F7E               	goto	l1634
  4628     0F75                     l1630:
  4629     0F75  3001               	movlw	1
  4630     0F76                     u1165:
  4631     0F76  35F0               	lslf	___lwdiv@divisor,f
  4632     0F77  0DF1               	rlf	___lwdiv@divisor+1,f
  4633     0F78  0B89               	decfsz	9,f
  4634     0F79  2F76               	goto	u1165
  4635     0F7A                     l1632:
  4636     0F7A  3001               	movlw	1
  4637     0F7B  00F4               	movwf	??___lwdiv
  4638     0F7C  0874               	movf	??___lwdiv,w
  4639     0F7D  07F7               	addwf	___lwdiv@counter,f
  4640     0F7E                     l1634:
  4641     0F7E  1FF1               	btfss	___lwdiv@divisor+1,7
  4642     0F7F  2F81               	goto	u1171
  4643     0F80  2F82               	goto	u1170
  4644     0F81                     u1171:
  4645     0F81  2F75               	goto	l1630
  4646     0F82                     u1170:
  4647     0F82                     l1636:
  4648     0F82  3001               	movlw	1
  4649     0F83                     u1185:
  4650     0F83  35F5               	lslf	___lwdiv@quotient,f
  4651     0F84  0DF6               	rlf	___lwdiv@quotient+1,f
  4652     0F85  0B89               	decfsz	9,f
  4653     0F86  2F83               	goto	u1185
  4654     0F87  0871               	movf	___lwdiv@divisor+1,w
  4655     0F88  0273               	subwf	___lwdiv@dividend+1,w
  4656     0F89  1D03               	skipz
  4657     0F8A  2F8D               	goto	u1195
  4658     0F8B  0870               	movf	___lwdiv@divisor,w
  4659     0F8C  0272               	subwf	___lwdiv@dividend,w
  4660     0F8D                     u1195:
  4661     0F8D  1C03               	skipc
  4662     0F8E  2F90               	goto	u1191
  4663     0F8F  2F91               	goto	u1190
  4664     0F90                     u1191:
  4665     0F90  2F96               	goto	l1642
  4666     0F91                     u1190:
  4667     0F91                     l1638:
  4668     0F91  0870               	movf	___lwdiv@divisor,w
  4669     0F92  02F2               	subwf	___lwdiv@dividend,f
  4670     0F93  0871               	movf	___lwdiv@divisor+1,w
  4671     0F94  3BF3               	subwfb	___lwdiv@dividend+1,f
  4672     0F95                     l1640:
  4673     0F95  1475               	bsf	___lwdiv@quotient,0
  4674     0F96                     l1642:
  4675     0F96  3001               	movlw	1
  4676     0F97                     u1205:
  4677     0F97  36F1               	lsrf	___lwdiv@divisor+1,f
  4678     0F98  0CF0               	rrf	___lwdiv@divisor,f
  4679     0F99  0B89               	decfsz	9,f
  4680     0F9A  2F97               	goto	u1205
  4681     0F9B                     l1644:
  4682     0F9B  3001               	movlw	1
  4683     0F9C  02F7               	subwf	___lwdiv@counter,f
  4684     0F9D  1D03               	btfss	3,2
  4685     0F9E  2FA0               	goto	u1211
  4686     0F9F  2FA1               	goto	u1210
  4687     0FA0                     u1211:
  4688     0FA0  2F82               	goto	l1636
  4689     0FA1                     u1210:
  4690     0FA1                     l1646:
  4691     0FA1  0876               	movf	___lwdiv@quotient+1,w
  4692     0FA2  00F1               	movwf	?___lwdiv+1
  4693     0FA3  0875               	movf	___lwdiv@quotient,w
  4694     0FA4  00F0               	movwf	?___lwdiv
  4695     0FA5                     l569:
  4696     0FA5  0008               	return
  4697     0FA6                     __end_of___lwdiv:
  4698                           
  4699                           	psect	text11
  4700     0E04                     __ptext11:	
  4701 ;; *************** function _gets *****************
  4702 ;; Defined at:
  4703 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  s               2   10[COMMON] PTR unsigned char 
  4706 ;;		 -> main@tmp(300), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2   10[COMMON] PTR unsigned char 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;Total ram usage:        2 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 3
  4725 ;; This function calls:
  4726 ;;		_cgets
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732     0E04                     _gets:	
  4733                           ;psect for function _gets
  4734                           
  4735     0E04                     l1766:	
  4736                           ;incstack = 0
  4737                           ; Regs used in _gets: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4738                           
  4739                           
  4740                           ;	Return value of _gets is never used
  4741     0E04  087B               	movf	gets@s+1,w
  4742     0E05  00F3               	movwf	cgets@s+1
  4743     0E06  087A               	movf	gets@s,w
  4744     0E07  00F2               	movwf	cgets@s
  4745     0E08  3180  2082  318E   	fcall	_cgets
  4746     0E0B                     l765:
  4747     0E0B  0008               	return
  4748     0E0C                     __end_of_gets:
  4749                           
  4750                           	psect	text12
  4751     0082                     __ptext12:	
  4752 ;; *************** function _cgets *****************
  4753 ;; Defined at:
  4754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  s               2    2[COMMON] PTR unsigned char 
  4757 ;;		 -> main@tmp(300), 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  s1              2    8[COMMON] PTR unsigned char 
  4760 ;;		 -> main@tmp(300), 
  4761 ;;  c               2    6[COMMON] int 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2    2[COMMON] PTR unsigned char 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;Total ram usage:        8 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 2
  4778 ;; This function calls:
  4779 ;;		_getche
  4780 ;;		_putch
  4781 ;; This function is called by:
  4782 ;;		_gets
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786     0082                     _cgets:	
  4787                           ;psect for function _cgets
  4788                           
  4789     0082                     l1684:	
  4790                           ;incstack = 0
  4791                           ; Regs used in _cgets: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4792                           
  4793     0082  0873               	movf	cgets@s+1,w
  4794     0083  00F9               	movwf	cgets@s1+1
  4795     0084  0872               	movf	cgets@s,w
  4796     0085  00F8               	movwf	cgets@s1
  4797     0086  28CA               	goto	l1712
  4798     0087                     l1686:
  4799     0087  0879               	movf	cgets@s1+1,w
  4800     0088  0673               	xorwf	cgets@s+1,w
  4801     0089  1D03               	skipz
  4802     008A  288D               	goto	u1305
  4803     008B  0878               	movf	cgets@s1,w
  4804     008C  0672               	xorwf	cgets@s,w
  4805     008D                     u1305:
  4806     008D  1D03               	skipz
  4807     008E  2890               	goto	u1301
  4808     008F  2891               	goto	u1300
  4809     0090                     u1301:
  4810     0090  2892               	goto	l1690
  4811     0091                     u1300:
  4812     0091  28CA               	goto	l1712
  4813     0092                     l1690:
  4814     0092  3020               	movlw	32
  4815     0093  318E  260C  3180   	fcall	_putch
  4816     0096  3008               	movlw	8
  4817     0097  318E  260C  3180   	fcall	_putch
  4818     009A                     l1692:
  4819     009A  3001               	movlw	1
  4820     009B  02F8               	subwf	cgets@s1,f
  4821     009C  3000               	movlw	0
  4822     009D  3BF9               	subwfb	cgets@s1+1,f
  4823     009E  28CA               	goto	l1712
  4824     009F                     l1694:
  4825     009F  3008               	movlw	8
  4826     00A0  318E  260C  3180   	fcall	_putch
  4827     00A3  3020               	movlw	32
  4828     00A4  318E  260C  3180   	fcall	_putch
  4829     00A7  3008               	movlw	8
  4830     00A8  318E  260C  3180   	fcall	_putch
  4831     00AB                     l1696:
  4832     00AB  3001               	movlw	1
  4833     00AC  02F8               	subwf	cgets@s1,f
  4834     00AD  3000               	movlw	0
  4835     00AE  3BF9               	subwfb	cgets@s1+1,f
  4836     00AF                     l1698:
  4837     00AF  0879               	movf	cgets@s1+1,w
  4838     00B0  0273               	subwf	cgets@s+1,w
  4839     00B1  1D03               	skipz
  4840     00B2  28B5               	goto	u1315
  4841     00B3  0878               	movf	cgets@s1,w
  4842     00B4  0272               	subwf	cgets@s,w
  4843     00B5                     u1315:
  4844     00B5  1C03               	skipc
  4845     00B6  28B8               	goto	u1311
  4846     00B7  28B9               	goto	u1310
  4847     00B8                     u1311:
  4848     00B8  289F               	goto	l1694
  4849     00B9                     u1310:
  4850     00B9  28CA               	goto	l1712
  4851     00BA                     l1700:
  4852     00BA  0878               	movf	cgets@s1,w
  4853     00BB  0086               	movwf	6
  4854     00BC  0879               	movf	cgets@s1+1,w
  4855     00BD  0087               	movwf	7
  4856     00BE  0181               	clrf	1
  4857     00BF                     l1702:
  4858     00BF  28E6               	goto	l783
  4859     00C0                     l1706:
  4860     00C0  0878               	movf	cgets@s1,w
  4861     00C1  0086               	movwf	6
  4862     00C2  0879               	movf	cgets@s1+1,w
  4863     00C3  0087               	movwf	7
  4864     00C4  0876               	movf	cgets@c,w
  4865     00C5  0081               	movwf	1
  4866     00C6                     l1708:
  4867     00C6  3001               	movlw	1
  4868     00C7  07F8               	addwf	cgets@s1,f
  4869     00C8  3000               	movlw	0
  4870     00C9  3DF9               	addwfc	cgets@s1+1,f
  4871     00CA                     l1712:
  4872     00CA  318E  2616  3180   	fcall	_getche
  4873     00CD  00F4               	movwf	??_cgets
  4874     00CE  01F5               	clrf	??_cgets+1
  4875     00CF  0874               	movf	??_cgets,w
  4876     00D0  00F6               	movwf	cgets@c
  4877     00D1  0875               	movf	??_cgets+1,w
  4878     00D2  00F7               	movwf	cgets@c+1
  4879                           
  4880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4881                           ; Switch size 1, requested type "simple"
  4882                           ; Number of cases is 1, Range of values is 0 to 0
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte            4     3 (average)
  4886                           ; direct_byte            8     6 (fixed)
  4887                           ; jumptable            260     6 (fixed)
  4888                           ;	Chosen strategy is simple_byte
  4889     00D3  0877               	movf	cgets@c+1,w
  4890     00D4  3A00               	xorlw	0	; case 0
  4891     00D5  1903               	skipnz
  4892     00D6  28D8               	goto	l2218
  4893     00D7  28C0               	goto	l1706
  4894     00D8                     l2218:
  4895                           
  4896                           ; Switch size 1, requested type "simple"
  4897                           ; Number of cases is 4, Range of values is 8 to 21
  4898                           ; switch strategies available:
  4899                           ; Name         Instructions Cycles
  4900                           ; simple_byte           13     7 (average)
  4901                           ; direct_byte           37     9 (fixed)
  4902                           ; jumptable            263     9 (fixed)
  4903                           ;	Chosen strategy is simple_byte
  4904     00D8  0876               	movf	cgets@c,w
  4905     00D9  3A08               	xorlw	8	; case 8
  4906     00DA  1903               	skipnz
  4907     00DB  2887               	goto	l1686
  4908     00DC  3A02               	xorlw	2	; case 10
  4909     00DD  1903               	skipnz
  4910     00DE  28BA               	goto	l1700
  4911     00DF  3A07               	xorlw	7	; case 13
  4912     00E0  1903               	skipnz
  4913     00E1  28BA               	goto	l1700
  4914     00E2  3A18               	xorlw	24	; case 21
  4915     00E3  1903               	skipnz
  4916     00E4  28AF               	goto	l1698
  4917     00E5  28C0               	goto	l1706
  4918     00E6                     l783:
  4919     00E6  0008               	return
  4920     00E7                     __end_of_cgets:
  4921                           
  4922                           	psect	text13
  4923     0E16                     __ptext13:	
  4924 ;; *************** function _getche *****************
  4925 ;; Defined at:
  4926 ;;		line 28 in file "uart.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  c               1    1[COMMON] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      unsigned char 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, pclath, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;Total ram usage:        1 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 1
  4947 ;; This function calls:
  4948 ;;		_getch
  4949 ;;		_putch
  4950 ;; This function is called by:
  4951 ;;		_cgets
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955     0E16                     _getche:	
  4956                           ;psect for function _getche
  4957                           
  4958     0E16                     l1568:	
  4959                           ;incstack = 0
  4960                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  4961                           
  4962                           
  4963                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  4964     0E16  318D  25FC  318E   	fcall	_getch
  4965     0E19  00F1               	movwf	getche@c
  4966     0E1A                     l1570:
  4967                           
  4968                           ;uart.c: 33: putch(c);
  4969     0E1A  0871               	movf	getche@c,w
  4970     0E1B  318E  260C  318E   	fcall	_putch
  4971     0E1E                     l1572:
  4972                           
  4973                           ;uart.c: 35: return c;
  4974     0E1E  0871               	movf	getche@c,w
  4975     0E1F                     l194:
  4976     0E1F  0008               	return
  4977     0E20                     __end_of_getche:
  4978                           
  4979                           	psect	text14
  4980     0E0C                     __ptext14:	
  4981 ;; *************** function _putch *****************
  4982 ;; Defined at:
  4983 ;;		line 13 in file "uart.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  byte            1    wreg     unsigned char 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  byte            1    0[COMMON] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        1 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_getche
  5007 ;;		_printf
  5008 ;;		_cgets
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012     0E0C                     _putch:	
  5013                           ;psect for function _putch
  5014                           
  5015                           
  5016                           ;incstack = 0
  5017                           ; Regs used in _putch: [wreg]
  5018                           ;putch@byte stored from wreg
  5019     0E0C  00F0               	movwf	putch@byte
  5020     0E0D                     l1558:
  5021     0E0D                     l182:	
  5022                           ;uart.c: 15: while(!TXIF){
  5023                           
  5024     0E0D  0020               	movlb	0	; select bank0
  5025     0E0E  1E11               	btfss	17,4	;volatile
  5026     0E0F  2E11               	goto	u1001
  5027     0E10  2E12               	goto	u1000
  5028     0E11                     u1001:
  5029     0E11  2E0D               	goto	l182
  5030     0E12                     u1000:
  5031     0E12                     l1560:
  5032                           
  5033                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  5034     0E12  0870               	movf	putch@byte,w
  5035     0E13  0023               	movlb	3	; select bank3
  5036     0E14  009A               	movwf	26	;volatile
  5037     0E15                     l185:
  5038     0E15  0008               	return
  5039     0E16                     __end_of_putch:
  5040                           
  5041                           	psect	text15
  5042     0DFC                     __ptext15:	
  5043 ;; *************** function _getch *****************
  5044 ;; Defined at:
  5045 ;;		line 20 in file "uart.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      unsigned char 
  5052 ;; Registers used:
  5053 ;;		wreg
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;Total ram usage:        0 bytes
  5064 ;; Hardware stack levels used: 1
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_getche
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072     0DFC                     _getch:	
  5073                           ;psect for function _getch
  5074                           
  5075     0DFC                     l1562:	
  5076                           ;incstack = 0
  5077                           ; Regs used in _getch: [wreg]
  5078                           
  5079     0DFC                     l188:	
  5080                           ;uart.c: 22: while(!RCIF){
  5081                           
  5082     0DFC  0020               	movlb	0	; select bank0
  5083     0DFD  1E91               	btfss	17,5	;volatile
  5084     0DFE  2E00               	goto	u1011
  5085     0DFF  2E01               	goto	u1010
  5086     0E00                     u1011:
  5087     0E00  2DFC               	goto	l188
  5088     0E01                     u1010:
  5089     0E01                     l1564:
  5090                           
  5091                           ;uart.c: 23: };uart.c: 25: return RCREG;
  5092     0E01  0023               	movlb	3	; select bank3
  5093     0E02  0819               	movf	25,w	;volatile
  5094     0E03                     l191:
  5095     0E03  0008               	return
  5096     0E04                     __end_of_getch:
  5097                           
  5098                           	psect	text16
  5099     00E7                     __ptext16:	
  5100 ;; *************** function _atoi *****************
  5101 ;; Defined at:
  5102 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  s               2    6[COMMON] PTR const unsigned char 
  5105 ;;		 -> NULL(0), main@tmp(300), 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  a               2    1[BANK0 ] int 
  5108 ;;  sign            1    0[BANK0 ] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  2    6[COMMON] int 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;Total ram usage:        9 bytes
  5123 ;; Hardware stack levels used: 1
  5124 ;; Hardware stack levels required when called: 1
  5125 ;; This function calls:
  5126 ;;		___wmul
  5127 ;;		_isdigit
  5128 ;; This function is called by:
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133     00E7                     _atoi:	
  5134                           ;psect for function _atoi
  5135                           
  5136     00E7                     l1876:	
  5137                           ;incstack = 0
  5138                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5139                           
  5140     00E7  28EC               	goto	l1880
  5141     00E8                     l1878:
  5142     00E8  3001               	movlw	1
  5143     00E9  07F6               	addwf	atoi@s,f
  5144     00EA  3000               	movlw	0
  5145     00EB  3DF7               	addwfc	atoi@s+1,f
  5146     00EC                     l1880:
  5147     00EC  0876               	movf	atoi@s,w
  5148     00ED  0086               	movwf	6
  5149     00EE  0877               	movf	atoi@s+1,w
  5150     00EF  0087               	movwf	7
  5151     00F0  3020               	movlw	32
  5152     00F1  0601               	xorwf	1,w
  5153     00F2  1903               	btfsc	3,2
  5154     00F3  28F5               	goto	u1521
  5155     00F4  28F6               	goto	u1520
  5156     00F5                     u1521:
  5157     00F5  28E8               	goto	l1878
  5158     00F6                     u1520:
  5159     00F6                     l1882:
  5160     00F6  0876               	movf	atoi@s,w
  5161     00F7  0086               	movwf	6
  5162     00F8  0877               	movf	atoi@s+1,w
  5163     00F9  0087               	movwf	7
  5164     00FA  3009               	movlw	9
  5165     00FB  0601               	xorwf	1,w
  5166     00FC  1903               	btfsc	3,2
  5167     00FD  28FF               	goto	u1531
  5168     00FE  2900               	goto	u1530
  5169     00FF                     u1531:
  5170     00FF  28E8               	goto	l1878
  5171     0100                     u1530:
  5172     0100                     l1884:
  5173     0100  0020               	movlb	0	; select bank0
  5174     0101  01A1               	clrf	atoi@a
  5175     0102  01A2               	clrf	atoi@a+1
  5176     0103  01A0               	clrf	atoi@sign
  5177     0104                     l1886:
  5178     0104  0876               	movf	atoi@s,w
  5179     0105  0086               	movwf	6
  5180     0106  0877               	movf	atoi@s+1,w
  5181     0107  0087               	movwf	7
  5182     0108  302D               	movlw	45
  5183     0109  0601               	xorwf	1,w
  5184     010A  1D03               	btfss	3,2
  5185     010B  290D               	goto	u1541
  5186     010C  290E               	goto	u1540
  5187     010D                     u1541:
  5188     010D  2917               	goto	l1892
  5189     010E                     u1540:
  5190     010E                     l1888:
  5191     010E  3001               	movlw	1
  5192     010F  00F8               	movwf	??_atoi
  5193     0110  0878               	movf	??_atoi,w
  5194     0111  07A0               	addwf	atoi@sign,f
  5195     0112                     l1890:
  5196     0112  3001               	movlw	1
  5197     0113  07F6               	addwf	atoi@s,f
  5198     0114  3000               	movlw	0
  5199     0115  3DF7               	addwfc	atoi@s+1,f
  5200     0116  2943               	goto	l1900
  5201     0117                     l1892:
  5202     0117  0876               	movf	atoi@s,w
  5203     0118  0086               	movwf	6
  5204     0119  0877               	movf	atoi@s+1,w
  5205     011A  0087               	movwf	7
  5206     011B  302B               	movlw	43
  5207     011C  0601               	xorwf	1,w
  5208     011D  1D03               	btfss	3,2
  5209     011E  2920               	goto	u1551
  5210     011F  2921               	goto	u1550
  5211     0120                     u1551:
  5212     0120  2943               	goto	l1900
  5213     0121                     u1550:
  5214     0121  2912               	goto	l1890
  5215     0122                     l1896:
  5216     0122  0876               	movf	atoi@s,w
  5217     0123  0086               	movwf	6
  5218     0124  0877               	movf	atoi@s+1,w
  5219     0125  0087               	movwf	7
  5220     0126  0801               	movf	1,w
  5221     0127  00F8               	movwf	??_atoi
  5222     0128  01F9               	clrf	??_atoi+1
  5223     0129  0020               	movlb	0	; select bank0
  5224     012A  0822               	movf	atoi@a+1,w
  5225     012B  00F1               	movwf	___wmul@multiplier+1
  5226     012C  0821               	movf	atoi@a,w
  5227     012D  00F0               	movwf	___wmul@multiplier
  5228     012E  300A               	movlw	10
  5229     012F  00F2               	movwf	___wmul@multiplicand
  5230     0130  3000               	movlw	0
  5231     0131  00F3               	movwf	___wmul@multiplicand+1
  5232     0132  3180  2009  3180   	fcall	___wmul
  5233     0135  0878               	movf	??_atoi,w
  5234     0136  0770               	addwf	?___wmul,w
  5235     0137  00FA               	movwf	??_atoi+2
  5236     0138  0879               	movf	??_atoi+1,w
  5237     0139  3D71               	addwfc	?___wmul+1,w
  5238     013A  00FB               	movwf	??_atoi+3
  5239     013B  087A               	movf	??_atoi+2,w
  5240     013C  3ED0               	addlw	208
  5241     013D  0020               	movlb	0	; select bank0
  5242     013E  00A1               	movwf	atoi@a
  5243     013F  30FF               	movlw	255
  5244     0140  3D7B               	addwfc	??_atoi+3,w
  5245     0141  00A2               	movwf	atoi@a+1
  5246     0142  2912               	goto	l1890
  5247     0143                     l1900:
  5248     0143  0876               	movf	atoi@s,w
  5249     0144  0086               	movwf	6
  5250     0145  0877               	movf	atoi@s+1,w
  5251     0146  0087               	movwf	7
  5252     0147  0801               	movf	1,w
  5253     0148  318E  263E  3180   	fcall	_isdigit
  5254     014B  1803               	btfsc	3,0
  5255     014C  294E               	goto	u1561
  5256     014D  294F               	goto	u1560
  5257     014E                     u1561:
  5258     014E  2922               	goto	l1896
  5259     014F                     u1560:
  5260     014F                     l1902:
  5261     014F  0020               	movlb	0	; select bank0
  5262     0150  0820               	movf	atoi@sign,w
  5263     0151  1903               	btfsc	3,2
  5264     0152  2954               	goto	u1571
  5265     0153  2955               	goto	u1570
  5266     0154                     u1571:
  5267     0154  2961               	goto	l1908
  5268     0155                     u1570:
  5269     0155                     l1904:
  5270     0155  0921               	comf	atoi@a,w
  5271     0156  00F8               	movwf	??_atoi
  5272     0157  0922               	comf	atoi@a+1,w
  5273     0158  00F9               	movwf	??_atoi+1
  5274     0159  0AF8               	incf	??_atoi,f
  5275     015A  1903               	skipnz
  5276     015B  0AF9               	incf	??_atoi+1,f
  5277     015C  0878               	movf	??_atoi,w
  5278     015D  00F6               	movwf	?_atoi
  5279     015E  0879               	movf	??_atoi+1,w
  5280     015F  00F7               	movwf	?_atoi+1
  5281     0160  2965               	goto	l760
  5282     0161                     l1908:
  5283     0161  0822               	movf	atoi@a+1,w
  5284     0162  00F7               	movwf	?_atoi+1
  5285     0163  0821               	movf	atoi@a,w
  5286     0164  00F6               	movwf	?_atoi
  5287     0165                     l760:
  5288     0165  0008               	return
  5289     0166                     __end_of_atoi:
  5290                           
  5291                           	psect	text17
  5292     0E3E                     __ptext17:	
  5293 ;; *************** function _isdigit *****************
  5294 ;; Defined at:
  5295 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  c               1    wreg     unsigned char 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  c               1    1[COMMON] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;		None               void
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;Total ram usage:        2 bytes
  5314 ;; Hardware stack levels used: 1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_atoi
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322     0E3E                     _isdigit:	
  5323                           ;psect for function _isdigit
  5324                           
  5325                           
  5326                           ;incstack = 0
  5327                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5328                           ;isdigit@c stored from wreg
  5329     0E3E  00F1               	movwf	isdigit@c
  5330     0E3F                     l1672:
  5331     0E3F  01F0               	clrf	_isdigit$549
  5332     0E40                     l1674:
  5333     0E40  303A               	movlw	58
  5334     0E41  0271               	subwf	isdigit@c,w
  5335     0E42  1803               	skipnc
  5336     0E43  2E45               	goto	u1281
  5337     0E44  2E46               	goto	u1280
  5338     0E45                     u1281:
  5339     0E45  2E4E               	goto	l1680
  5340     0E46                     u1280:
  5341     0E46                     l1676:
  5342     0E46  3030               	movlw	48
  5343     0E47  0271               	subwf	isdigit@c,w
  5344     0E48  1C03               	skipc
  5345     0E49  2E4B               	goto	u1291
  5346     0E4A  2E4C               	goto	u1290
  5347     0E4B                     u1291:
  5348     0E4B  2E4E               	goto	l1680
  5349     0E4C                     u1290:
  5350     0E4C                     l1678:
  5351     0E4C  01F0               	clrf	_isdigit$549
  5352     0E4D  0AF0               	incf	_isdigit$549,f
  5353     0E4E                     l1680:
  5354     0E4E  0C70               	rrf	_isdigit$549,w
  5355     0E4F                     l790:
  5356     0E4F  0008               	return
  5357     0E50                     __end_of_isdigit:
  5358                           
  5359                           	psect	text18
  5360     0009                     __ptext18:	
  5361 ;; *************** function ___wmul *****************
  5362 ;; Defined at:
  5363 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  multiplier      2    0[COMMON] unsigned int 
  5366 ;;  multiplicand    2    2[COMMON] unsigned int 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  product         2    4[COMMON] unsigned int 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  2    0[COMMON] unsigned int 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        6 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_atoi
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391     0009                     ___wmul:	
  5392                           ;psect for function ___wmul
  5393                           
  5394     0009                     l1586:	
  5395                           ;incstack = 0
  5396                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5397                           
  5398     0009  01F4               	clrf	___wmul@product
  5399     000A  01F5               	clrf	___wmul@product+1
  5400     000B                     l1588:
  5401     000B  1C70               	btfss	___wmul@multiplier,0
  5402     000C  280E               	goto	u1041
  5403     000D  280F               	goto	u1040
  5404     000E                     u1041:
  5405     000E  2813               	goto	l297
  5406     000F                     u1040:
  5407     000F                     l1590:
  5408     000F  0872               	movf	___wmul@multiplicand,w
  5409     0010  07F4               	addwf	___wmul@product,f
  5410     0011  0873               	movf	___wmul@multiplicand+1,w
  5411     0012  3DF5               	addwfc	___wmul@product+1,f
  5412     0013                     l297:
  5413     0013  3001               	movlw	1
  5414     0014                     u1055:
  5415     0014  35F2               	lslf	___wmul@multiplicand,f
  5416     0015  0DF3               	rlf	___wmul@multiplicand+1,f
  5417     0016  0B89               	decfsz	9,f
  5418     0017  2814               	goto	u1055
  5419     0018                     l1592:
  5420     0018  3001               	movlw	1
  5421     0019                     u1065:
  5422     0019  36F1               	lsrf	___wmul@multiplier+1,f
  5423     001A  0CF0               	rrf	___wmul@multiplier,f
  5424     001B  0B89               	decfsz	9,f
  5425     001C  2819               	goto	u1065
  5426     001D                     l1594:
  5427     001D  0870               	movf	___wmul@multiplier,w
  5428     001E  0471               	iorwf	___wmul@multiplier+1,w
  5429     001F  1D03               	btfss	3,2
  5430     0020  2822               	goto	u1071
  5431     0021  2823               	goto	u1070
  5432     0022                     u1071:
  5433     0022  280B               	goto	l1588
  5434     0023                     u1070:
  5435     0023                     l1596:
  5436     0023  0875               	movf	___wmul@product+1,w
  5437     0024  00F1               	movwf	?___wmul+1
  5438     0025  0874               	movf	___wmul@product,w
  5439     0026  00F0               	movwf	?___wmul
  5440     0027                     l299:
  5441     0027  0008               	return
  5442     0028                     __end_of___wmul:
  5443                           
  5444                           	psect	text19
  5445     0E2C                     __ptext19:	
  5446 ;; *************** function _PICinit *****************
  5447 ;; Defined at:
  5448 ;;		line 52 in file "main.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;		None
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;Total ram usage:        0 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_main
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475     0E2C                     _PICinit:	
  5476                           ;psect for function _PICinit
  5477                           
  5478     0E2C                     l1752:	
  5479                           ;incstack = 0
  5480                           ; Regs used in _PICinit: [wreg+status,2]
  5481                           
  5482                           
  5483                           ;main.c: 53: OSCCON = 0b01110000 ;
  5484     0E2C  3070               	movlw	112
  5485     0E2D  0021               	movlb	1	; select bank1
  5486     0E2E  0099               	movwf	25	;volatile
  5487     0E2F                     l1754:
  5488                           
  5489                           ;main.c: 54: ANSELA = 0b00000000 ;
  5490     0E2F  0023               	movlb	3	; select bank3
  5491     0E30  018C               	clrf	12	;volatile
  5492     0E31                     l1756:
  5493                           
  5494                           ;main.c: 55: ANSELC = 0b00000000 ;
  5495     0E31  018E               	clrf	14	;volatile
  5496                           
  5497                           ;main.c: 56: TRISA = 0b00000010 ;
  5498     0E32  3002               	movlw	2
  5499     0E33  0021               	movlb	1	; select bank1
  5500     0E34  008C               	movwf	12	;volatile
  5501     0E35                     l1758:
  5502                           
  5503                           ;main.c: 57: TRISC = 0b00000000 ;
  5504     0E35  018E               	clrf	14	;volatile
  5505     0E36                     l1760:
  5506                           
  5507                           ;main.c: 58: PORTA = 0b00000000 ;
  5508     0E36  0020               	movlb	0	; select bank0
  5509     0E37  018C               	clrf	12	;volatile
  5510     0E38                     l1762:
  5511                           
  5512                           ;main.c: 59: PORTC = 0b00000000 ;
  5513     0E38  018E               	clrf	14	;volatile
  5514     0E39                     l1764:
  5515                           
  5516                           ;main.c: 61: DAC1CON0 = 0b10010000;
  5517     0E39  3090               	movlw	144
  5518     0E3A  0022               	movlb	2	; select bank2
  5519     0E3B  0098               	movwf	24	;volatile
  5520                           
  5521                           ;main.c: 62: DAC1CON1 = 0;
  5522     0E3C  0199               	clrf	25	;volatile
  5523     0E3D                     l50:
  5524     0E3D  0008               	return
  5525     0E3E                     __end_of_PICinit:
  5526     007E                     btemp	set	126	;btemp
  5527     007E                     wtemp0	set	126
  5528     206C                     
  5529                           	psect	idloc
  5530                           
  5531                           ;Config register IDLOC0 @ 0x8000
  5532                           ;	unspecified, using default values
  5533     8000                     	org	32768
  5534     8000  3FFF               	dw	16383
  5535                           
  5536                           ;Config register IDLOC1 @ 0x8001
  5537                           ;	unspecified, using default values
  5538     8001                     	org	32769
  5539     8001  3FFF               	dw	16383
  5540                           
  5541                           ;Config register IDLOC2 @ 0x8002
  5542                           ;	unspecified, using default values
  5543     8002                     	org	32770
  5544     8002  3FFF               	dw	16383
  5545                           
  5546                           ;Config register IDLOC3 @ 0x8003
  5547                           ;	unspecified, using default values
  5548     8003                     	org	32771
  5549     8003  3FFF               	dw	16383
  5550                           
  5551                           	psect	config
  5552                           
  5553                           ;Config register CONFIG1 @ 0x8007
  5554                           ;	Oscillator Selection Bits
  5555                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5556                           ;	Watchdog Timer Enable
  5557                           ;	WDTE = OFF, WDT disabled
  5558                           ;	Power-up Timer Enable
  5559                           ;	PWRTE = ON, PWRT enabled
  5560                           ;	MCLR Pin Function Select
  5561                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5562                           ;	Flash Program Memory Code Protection
  5563                           ;	CP = OFF, Program memory code protection is disabled
  5564                           ;	Brown-out Reset Enable
  5565                           ;	BOREN = ON, Brown-out Reset enabled
  5566                           ;	Clock Out Enable
  5567                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5568                           ;	Internal/External Switchover Mode
  5569                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  5570                           ;	Fail-Safe Clock Monitor Enable
  5571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5572     8007                     	org	32775
  5573     8007  0F84               	dw	3972
  5574                           
  5575                           ;Config register CONFIG2 @ 0x8008
  5576                           ;	Flash Memory Self-Write Protection
  5577                           ;	WRT = OFF, Write protection off
  5578                           ;	Peripheral Pin Select one-way control
  5579                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  5580                           ;	Zero-cross detect disable
  5581                           ;	ZCDDIS = ON, Zero-cross detect circuit is disabled at POR
  5582                           ;	Phase Lock Loop enable
  5583                           ;	PLLEN = ON, 4x PLL is always enabled
  5584                           ;	Stack Overflow/Underflow Reset Enable
  5585                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5586                           ;	Brown-out Reset Voltage Selection
  5587                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  5588                           ;	Low-Power Brown Out Reset
  5589                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5590                           ;	Low-Voltage Programming Enable
  5591                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5592     8008                     	org	32776
  5593     8008  1BFB               	dw	7163

Data Sizes:
    Strings     149
    Constant    10
    Data        0
    BSS         22
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      75
    BANK1            28      0      20
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_35(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_35(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_35(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_17(CODE[2]), NULL(NULL[0]), 
		 -> STR_16(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_35(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_35(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_41(CODE[3]), STR_40(CODE[3]), STR_39(CODE[3]), STR_38(CODE[3]), 
		 -> STR_37(CODE[3]), STR_36(CODE[3]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), main@rcmd(BANK0[4]), 

    cgets@s	PTR unsigned char  size(2) Largest target is 300
		 -> main@tmp(BIGRAM[300]), 

    cgets@s1	PTR unsigned char  size(2) Largest target is 300
		 -> main@tmp(BIGRAM[300]), 

    sp__cgets	PTR unsigned char  size(2) Largest target is 300
		 -> main@tmp(BIGRAM[300]), 

    gets@s	PTR unsigned char  size(2) Largest target is 300
		 -> main@tmp(BIGRAM[300]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_43(CODE[11]), STR_42(CODE[9]), STR_34(CODE[8]), STR_31(CODE[8]), 
		 -> STR_28(CODE[8]), STR_25(CODE[8]), STR_22(CODE[8]), STR_21(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[4]), STR_1(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 300
		 -> STR_44(CODE[7]), ?_printf(BANK0[2]), main@tmp(BIGRAM[300]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 300
		 -> NULL(NULL[0]), main@tmp(BIGRAM[300]), 

    sp__gets	PTR unsigned char  size(2) Largest target is 300
		 -> main@tmp(BIGRAM[300]), 


Critical Paths under _main in COMMON

    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _serial_init->___lldiv
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   12492
                                             16 BANK0     57    57      0
                            _PICinit
                               _atoi
                               _gets
                             _printf
                        _serial_init
                             _strcmp
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    3294
                                              2 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               8     4      4     635
                                              7 COMMON     6     2      4
                                              0 BANK0      2     2      0
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              8     4      4     635
                                              7 COMMON     6     2      4
                                              0 BANK0      2     2      0
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     392
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4    3131
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _serial_init                                         10     6      4     457
                                              0 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1961
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _gets                                                 2     0      2     466
                                             10 COMMON     2     0      2
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                8     6      2     368
                                              2 COMMON     8     6      2
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 9     7      2    1300
                                              6 COMMON     6     4      2
                                              0 BANK0      3     3      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PICinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PICinit
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _serial_init
     ___lldiv
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               1C      0      14       7       71.4%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Nov 19 11:28:45 2023

                     l50 0E3D                       l61 0275                       l47 0F69  
                     l83 03E6                       l94 047D      ___wmul@multiplicand 0072  
                    l104 04E5                      l141 0723                      l133 06C1  
                    l151 078C                      l136 06EA                      l146 075A  
                    l333 0FFF                      l182 0E0D                      l191 0E03  
                    l185 0E15                      l194 0E1F                      l188 0DFC  
                    l293 0252                      l297 0013                      l299 0027  
                    l822 0EFD                      l760 0165                      l569 0FA5  
                    l825 0E50                      l809 0081                      l579 0EC9  
                    l827 0E6D                      l765 0E0B                      l790 0E4F  
                    l838 0F31                      l783 00E6                      l798 0E95  
            main@fp1_amp 0036              main@fp2_amp 003A              main@fp3_amp 003E  
            main@fp4_amp 0042                      wreg 0009                     l2000 03CD  
                   l2010 03FB                     l2002 03D1                     l2100 05F1  
                   l2020 0435                     l2012 040F                     l2004 03E2  
                   l2110 0624                     l2102 05F7                     l2030 048B  
                   l2022 043B                     l2014 0413                     l2006 03E6  
                   l2120 065D                     l2112 062C                     l2104 0603  
                   l2040 04B1                     l2032 0494                     l2024 0457  
                   l2016 0421                     l2008 03F8                     l2122 0661  
                   l2130 068C                     l2114 062E                     l2106 0612  
                   l2050 04E1                     l2042 04B5                     l2034 0497  
                   l2026 0473                     l2018 0425                     l2140 06B2  
                   l2132 069E                     l2124 0675                     l2108 0618  
                   l2060 0519                     l2052 04F3                     l2044 04C5  
                   l2036 049F                     l2028 0478                     l2150 06F8  
                   l2134 06A2                     l2142 06C2                     l2126 0678  
                   l2118 063C                     l2070 054E                     l2062 0525  
                   l2054 04FC                     l2046 04CB                     l2038 04A3  
                   l1600 0FA6                     l2144 06D4                     l2152 06FB  
                   l2136 06AA                     l2128 067D                     l2080 0584  
                   l2072 055D                     l2064 0534                     l2056 0504  
                   l2048 04DC                     l2218 00D8                     l1610 0FCF  
                   l1602 0FB6                     l2154 070D                     l2162 0732  
                   l2146 06D8                     l2138 06AD                     l2090 05B9  
                   l2082 0590                     l2074 0563                     l2066 053A  
                   l2058 0513                     l1700 00BA                     l1612 0FE1  
                   l1604 0FB9                     l1620 0FF7                     l2164 0744  
                   l2172 0769                     l2156 0711                     l2148 06DC  
                   l2092 05C8                     l2084 0598                     l2076 056F  
                   l2068 0546                     l1702 00BF                     l1630 0F75  
                   l1614 0FE9                     l1606 0FC4                     l2190 07AE  
                   l2174 077B                     l2166 0748                     l2158 0715  
                   l2182 079B                     l2094 05CE                     l2086 05A7  
                   l2078 057E                     l1560 0E12                     l1712 00CA  
                   l1640 0F95                     l1632 0F7A                     l1624 0F6A  
                   l1800 01C9                     l1616 0FEA                     l1608 0FC8  
                   l1720 0F02                     l2192 07B1                     l2176 077F  
                   l2168 074C                     l2096 05DA                     l2088 05AD  
                   l1562 0DFC                     l1570 0E1A                     l1706 00C0  
                   l1642 0F96                     l1634 0F7E                     l1626 0F6C  
                   l1650 0E96                     l1802 01CD                     l1618 0FF1  
                   l1730 0ECA                     l1722 0F0B                     l2178 0783  
                   l2186 07A1                     l2098 05E2                     l1900 0143  
                   l1564 0E01                     l1572 0E1E                     l1708 00C6  
                   l1644 0F9B                     l1636 0F82                     l1628 0F72  
                   l1660 0EAC                     l1652 0E9C                     l1820 0203  
                   l1812 01D8                     l1804 01D1                     l1580 0E5B  
                   l1732 0ECE                     l1724 0F14                     l2188 07AA  
                   l2196 07B9                     l1590 000F                     l1902 014F  
                   l1558 0E0D                     l1638 0F91                     l1646 0FA1  
                   l1662 0EB6                     l1654 0E9F                     l1822 0207  
                   l1806 01D6                     l1830 023F                     l1750 0F65  
                   l1742 0F32                     l1582 0E6B                     l1734 0ED7  
                   l1726 0F2C                     l1718 0EFE                     l1760 0E36  
                   l1752 0E2C                     l1592 0018                     l1680 0E4E  
                   l1672 0E3F                     l1904 0155                     l1568 0E16  
                   l1664 0EBA                     l1656 0EA4                     l1824 020B  
                   l1816 01F3                     l1744 0F35                     l1840 0E90  
                   l1832 0E6E                     l1576 0E50                     l1736 0EE0  
                   l1920 0263                     l1912 0253                     l1762 0E38  
                   l1754 0E2F                     l1594 001D                     l1586 0009  
                   l1674 0E40                     l1690 0092                     l1666 0EBF  
                   l1658 0EA8                     l1826 0231                     l1818 01FD  
                   l1770 0166                     l1746 0F38                     l1834 0E6F  
                   l1578 0E5A                     l1738 0EF8                     l1850 0039  
                   l1930 0283                     l1922 0266                     l1914 025C  
                   l1764 0E39                     l1756 0E31                     l1596 0023  
                   l1588 000B                     l1676 0E46                     l1908 0161  
                   l1692 009A                     l1684 0082                     l1668 0EC5  
                   l1828 0235                     l1780 017E                     l1772 016A  
                   l1748 0F62                     l1836 0E77                     l1844 0028  
                   l1940 02A8                     l1932 0289                     l1924 0269  
                   l1916 025E                     l1758 0E35                     l1678 0E4C  
                   l1694 009F                     l1686 0087                     l1766 0E04  
                   l1790 019A                     l1782 0182                     l1774 0170  
                   l1838 0E87                     l1870 007F                     l1862 005A  
                   l1854 003C                     l1846 002F                     l1950 02C1  
                   l1942 02B0                     l1934 028F                     l1926 027C  
                   l1918 0260                     l1880 00EC                     l1696 00AB  
                   l1784 0188                     l1776 0175                     l1872 0081  
                   l1864 006C                     l1856 004C                     l1848 0033  
                   l1960 02FB                     l1952 02D2                     l1944 02B7  
                   l1936 0295                     l1928 027D                     l1890 0112  
                   l1882 00F6                     l1698 00AF                     l1786 018D  
                   l1778 0177                     l1794 01A4                     l1866 0075  
                   l1858 0055                     l1970 0329                     l1962 02FF  
                   l1954 02D6                     l1946 02BE                     l1938 029C  
                   l1892 0117                     l1884 0100                     l1876 00E7  
                   l1796 01BE                     l1788 0195                     l1868 007A  
                   l1980 0364                     l1972 033A                     l1964 0310  
                   l1956 02E7                     l1948 02BF                     l1886 0104  
                   l1878 00E8                     l1798 01C5                     l1990 0392  
                   l1982 0368                     l1974 033E                     l1966 0314  
                   l1958 02EA                     l1896 0122                     l1888 010E  
                   l1992 03A3                     l1984 0379                     l1976 034F  
                   l1968 0325                     l1994 03A7                     l1986 037D  
                   l1978 0353                     l1996 03B8                     l1988 038E  
                   l1998 03BC                     STR_1 1061                     STR_2 1099  
                   STR_3 1065                     STR_4 106D                     STR_5 1075  
                   STR_6 1069                     STR_7 1071                     STR_8 1079  
                   STR_9 107D                     u1000 0E12                     u1001 0E11  
                   u1010 0E01                     u1011 0E00                     u1100 0FC8  
                   u1020 0E5A                     u1101 0FC7                     u1021 0E59  
                   u1030 0E6B                     u1031 0E6A                     u1040 000F  
                   u1120 0FE1                     u1041 000E                     u1121 0FE0  
                   u1210 0FA1                     u1211 0FA0                     u1115 0FC9  
                   u1300 0091                     u1220 0E9C                     u1140 0FF7  
                   u1301 0090                     u1205 0F97                     u1221 0E9B  
                   u1141 0FF6                     u1125 0FDD                     u1070 0023  
                   u1310 00B9                     u1150 0F72                     u1071 0022  
                   u1055 0014                     u1311 00B8                     u1151 0F71  
                   u1135 0FEB                     u2007 06AB                     u1240 0EAC  
                   u1400 01CD                     u1080 0FB6                     u1320 0F14  
                   u1065 0019                     u1305 008D                     u1241 0EAB  
                   u1401 01CC                     u1081 0FB5                     u1321 0F13  
                   u2017 06E0                     u1170 0F82                     u1250 0EB6  
                   u1410 01F2                     u1330 0F2C                     u1315 00B5  
                   u1171 0F81                     u1251 0EB5                     u1235 0EA0  
                   u1411 01F1                     u1331 0F2B                     u2027 0719  
                   u1420 01FD                     u1340 0EE0                     u1500 0055  
                   u1165 0F76                     u1421 01FC                     u1341 0EDF  
                   u1501 0054                     u2037 0750                     u1190 0F91  
                   u1270 0EC5                     u1430 0203                     u1350 0EF8  
                   u1510 0075                     u1191 0F90                     u1271 0EC4  
                   u1255 0EB2                     u1431 0202                     u1415 01EE  
                   u1095 0FBA                     u1351 0EF7                     u1511 0074  
                   u2047 0784                     u1280 0E46                     u1520 00F6  
                   u1440 023F                     u1360 0F5A                     u1600 02FB  
                   u1281 0E45                     u1521 00F5                     u1185 0F83  
                   u1265 0EBB                     u1441 023E                     u1601 02FA  
                   u1290 0E4C                     u1530 0100                     u1450 0252  
                   u1370 0170                     u1610 0310                     u1291 0E4B  
                   u1531 00FF                     u1195 0F8D                     u1451 0251  
                   u1371 016F                     u1611 030F                     u1540 010E  
                   u1380 0188                     u1460 0E87                     u1700 03CD  
                   u1620 0325                     u1541 010D                     u1381 0187  
                   u1365 0F56                     u1461 0E86                     u1701 03CC  
                   u1621 0324                     u1550 0121                     u1390 01A3  
                   u1470 0E90                     u1710 03E2                     u1630 033A  
                   u1551 0120                     u1391 01A2                     u1471 0E8F  
                   u1711 03E1                     u1631 0339                     u1560 014F  
                   u1480 002F                     u1800 0563                     u1720 0421  
                   u1640 034F                     u1561 014E                     u1481 002E  
                   u1801 0562                     u1721 0420                     u1641 034E  
                   u1570 0155                     u1490 0039                     u1810 0584  
                   u1730 043B                     u1650 0364                     u1571 0154  
                   u1491 0038                     u1811 0583                     u1731 043A  
                   u1651 0363                     u1900 06C0                     u1820 05AD  
                   u1740 048B                     u1660 0379                     u1580 02D2  
                   u1901 06BF                     u1821 05AC                     u1741 048A  
                   u1725 041D                     u1661 0378                     u1581 02D1  
                   u1910 06D4                     u1830 05CE                     u1750 04B1  
                   u1670 038E                     u1590 02E7                     u1911 06D3  
                   u1831 05CD                     u1751 04B0                     u1671 038D  
                   u1591 02E6                     u1920 06F8                     u1840 05F7  
                   u1760 04CB                     u1680 03A3                     u1921 06F7  
                   u1905 06BC                     u1841 05F6                     u1761 04CA  
                   u1745 0487                     u1681 03A2                     u1930 070D  
                   u1850 0618                     u1770 04F3                     u1690 03B8  
                   u1931 070C                     u1851 0617                     u1771 04F2  
                   u1755 04AD                     u1691 03B7                     u1940 0731  
                   u1860 063B                     u1780 0519                     u1941 0730  
                   u1925 06F4                     u1861 063A                     u1781 0518  
                   u1950 0744                     u1870 065D                     u1790 053A  
                   u1951 0743                     u1871 065C                     u1791 0539  
                   u1775 04EF                     u1960 0768                     u1880 068B  
                   u1961 0767                     u1945 072D                     u1881 068A  
                   u1865 0637                     u1970 077B                     u1890 069E  
                   u1971 077A                     u1891 069D                     u1980 079A  
                   u1981 0799                     u1965 0764                     u1885 0687  
                   u1985 0796                     _RCIF 008D                     u1997 0676  
                   _TXIF 008C          __end_of_PICinit 0E3E                     _atoi 00E7  
                   _gets 0E04                     _main 0253              main@num_ap1 0050  
            main@num_ap2 0052                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E             main@fp1_time 0034  
           main@fp2_time 0038             main@fp3_time 003C                     start 0002  
           main@fp4_time 0040                    ?_atoi 0076                    ?_gets 007A  
                  ?_main 0070                    STR_10 108D                    STR_11 1081  
                  STR_20 109D                    STR_12 1091                    STR_13 1089  
                  STR_21 102E                    STR_30 109D                    STR_14 1085  
                  STR_22 103E                    STR_23 109D                    STR_15 1095  
                  STR_31 1046                    STR_32 109D                    STR_24 109D  
                  STR_40 107A                    STR_16 109D                    _BRG16 0CFB  
                  STR_33 109D                    STR_17 109D                    STR_41 107E  
                  STR_25 1026                    STR_26 109D                    STR_18 105D  
                  STR_34 104E                    STR_42 1015                    STR_35 109D  
                  STR_27 109D                    STR_19 101E                    STR_43 100A  
                  STR_36 1066                    STR_44 1056                    STR_28 1036  
                  STR_29 109D                    STR_37 106E                    STR_38 106A  
                  STR_39 1072          __end_of___lldiv 1000          __end_of___lwdiv 0FA6  
        __end_of___lwmod 0ECA                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTC 000E  
                  _TRISA 008C                    _TRISC 008E                    _RXPPS 0E24  
                  _TXREG 019A                    _TXSTA 019E                    _cgets 0082  
                  _getch 0DFC          __end_of_dpowers 100A          __end_of_isdigit 0E50  
                  atoi@a 0021                    atoi@s 0076                    _putch 0E0C  
                  gets@s 007A                    main@i 0054                    main@k 0058  
                  status 0003                    wtemp0 007E          __end_of_strcspn 0EFE  
        __initialization 07E4             __end_of_atoi 0166             __end_of_gets 0E0C  
           __end_of_main 07E4                   ??_atoi 0078                   ??_gets 007C  
                 ??_main 0030                ??_PICinit 0070                   ?_cgets 0072  
                 ?_getch 0070                   _ANSELA 018C                   ?_putch 0070  
                 _ANSELC 018E                   _RA0PPS 0E90                   _RC1STA 019D  
                 _OSCCON 0099                   _TX1STA 019E             ?_serial_init 0020  
                 ___wmul 0009                ??___lldiv 0078                ??___lwdiv 0074  
              ??___lwmod 007C                   _getche 0E16                   cgets@c 0076  
                 cgets@s 0072                   _printf 0166                   _strchr 0E50  
                 _strcmp 0E6E                   _strtok 0028                   _strspn 0EFE  
              ??_isdigit 0070                ??_strcspn 007B  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_cgets 00E7            __end_of_getch 0E04  
          __end_of_putch 0E16                  ??_cgets 0074                  ??_getch 0070  
                ??_putch 0070               __pbssBANK0 0069               __pbssBANK1 00A0  
             __pmaintext 0253                  ?___wmul 0070                  ?_getche 0070  
                ?_printf 0020                  ?_strchr 0070                  ?_strcmp 0070  
                ?_strtok 0022                  ?_strspn 0077                  _SP1BRGH 019C  
                _SP1BRGL 019B                  _PICinit 0E2C                  _ap1_dat 206C  
                _ap2_dat 00A0                  ___lldiv 0FA6                  ___lwdiv 0F6A  
                ___lwmod 0E96                  __ptext1 0028                  __ptext2 0EFE  
                __ptext3 0ECA                  __ptext4 0E50                  __ptext5 0E6E  
                __ptext6 0F32                  __ptext7 0FA6                  __ptext8 0166  
                __ptext9 0E96                  _dpowers 1000                  _isdigit 0E3E  
                cgets@s1 0078                  getche@c 0071                  main@cmd 0062  
                clrloop0 0E21                  main@ptr 0067                  main@tmp 22C4  
                _strcspn 0ECA     end_of_initialization 07FD          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                  printf@c 002F                  printf@f 0020  
                strcmp@r 0074                  strspn@i 0020           __end_of___wmul 0028  
         __end_of_getche 0E20           __end_of_printf 0253           __end_of_strchr 0E6E  
         __end_of_strcmp 0E96           __end_of_strtok 0082           __end_of_strspn 0F32  
    start_initialization 07E4                 ??___wmul 0074                 ??_getche 0071  
               ??_printf 0024                 ??_strchr 0074                 ??_strcmp 0074  
               ??_strtok 007D                 ??_strspn 007B              __pbssBIGRAM 206C  
              ___latbits 0002            __pcstackBANK0 0020                 ?_PICinit 0070  
       ___lwdiv@dividend 0072                 ?___lldiv 0070                 ?___lwdiv 0070  
               ?___lwmod 0078                 _DAC1CON0 0118                 _DAC1CON1 0119  
               ?_isdigit 0070         ___lwdiv@quotient 0075                 ?_strcspn 0077  
         ___wmul@product 0074                clear_ram0 0E20            ??_serial_init 0024  
          serial_init@BR 0020                main@i_132 0060                main@i_137 0056  
              main@i_161 0048                main@i_138 005E                main@i_163 004A  
              main@i_157 005A                main@i_165 004C                main@i_159 005C  
              main@i_167 004E        ___wmul@multiplier 0070               printf@flag 0028  
             printf@prec 0029      __end_of_serial_init 0F6A              _isdigit$549 0070  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0F6A  
               __ptext11 0E04                 __ptext12 0082                 __ptext13 0E16  
               __ptext14 0E0C                 __ptext15 0DFC                 __ptext16 00E7  
               __ptext17 0E3E                 __ptext18 0009                 __ptext19 0E2C  
        main@num_ap1_cnt 0044          main@num_ap2_cnt 0046                 atoi@sign 0020  
           serial_init@X 0028                printf@val 002D                 main@rcmd 0063  
              putch@byte 0070           __pstringtext10 1056           __pstringtext11 105D  
         __pstringtext20 1081           __pstringtext12 1061           __pstringtext21 1085  
         __pstringtext13 1065           __pstringtext22 1089           __pstringtext14 1069  
         __pstringtext23 108D           __pstringtext15 106D           __pstringtext24 1091  
         __pstringtext16 1071           __pstringtext25 1095           __pstringtext17 1075  
         __pstringtext26 1099           __pstringtext18 1079           __pstringtext27 109D  
         __pstringtext19 107D           __pstringtext28 0000                 isdigit@c 0071  
              strchr@chr 0072         ___lwmod@dividend 007A                strchr@ptr 0070  
       ___lldiv@dividend 0074                strcspn@s1 0077                strcspn@s2 0079  
            _serial_init 0F32                 printf@ap 002A                 printf@cp 002B  
          __pstringtext1 1000            __pstringtext2 1015            __pstringtext3 101E  
          __pstringtext4 1026            __pstringtext5 102E            __pstringtext6 1036  
          __pstringtext7 103E            __pstringtext8 1046            __pstringtext9 104E  
               strcmp@s1 0070                 strcmp@s2 0072         ___lldiv@quotient 0079  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 strcspn@i 0020  
               strtok@s1 0022                 strtok@s2 0024                 strspn@s1 0077  
               strspn@s2 0079                 strtok@sp 0069  
