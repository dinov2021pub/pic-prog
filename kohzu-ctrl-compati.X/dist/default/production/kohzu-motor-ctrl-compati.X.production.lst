

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 19 16:42:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 09/02/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F648A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     008C                     	;# 
    93     008E                     	;# 
    94     0092                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009A                     	;# 
    98     009B                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009F                     	;# 
   102     0000                     	;# 
   103     0001                     	;# 
   104     0002                     	;# 
   105     0003                     	;# 
   106     0004                     	;# 
   107     0005                     	;# 
   108     0006                     	;# 
   109     000A                     	;# 
   110     000B                     	;# 
   111     000C                     	;# 
   112     000E                     	;# 
   113     000E                     	;# 
   114     000F                     	;# 
   115     0010                     	;# 
   116     0011                     	;# 
   117     0012                     	;# 
   118     0015                     	;# 
   119     0015                     	;# 
   120     0016                     	;# 
   121     0017                     	;# 
   122     0018                     	;# 
   123     0019                     	;# 
   124     001A                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     008C                     	;# 
   130     008E                     	;# 
   131     0092                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009F                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     008C                     	;# 
   167     008E                     	;# 
   168     0092                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009A                     	;# 
   172     009B                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009F                     	;# 
   176                           
   177                           	psect	strings
   178     0002                     __pstrings:
   179     0002                     stringtab:
   180     0002                     __stringtab:
   181                           
   182                           ;	String table - string pointers are 1 byte each
   183     0002  1BFF               	btfsc	btemp+1,7
   184     0003  280C               	ljmp	stringcode
   185     0004  1383               	bcf	3,7
   186     0005  187F               	btfsc	btemp+1,0
   187     0006  1783               	bsf	3,7
   188     0007  0800               	movf	0,w
   189     0008  0A84               	incf	4,f
   190     0009  1903               	skipnz
   191     000A  0AFF               	incf	btemp+1,f
   192     000B  0008               	return
   193     000C                     stringcode:
   194     000C                     stringdir:
   195     000C  3000               	movlw	high stringdir
   196     000D  008A               	movwf	10
   197     000E  0804               	movf	4,w
   198     000F  0A84               	incf	4,f
   199     0010  0782               	addwf	2,f
   200     0011                     __stringbase:
   201     0011  3400               	retlw	0
   202     0012                     __end_of__stringtab:
   203     0012                     _dpowers:
   204     0012  3401               	retlw	1
   205     0013  3400               	retlw	0
   206     0014  340A               	retlw	10
   207     0015  3400               	retlw	0
   208     0016  3464               	retlw	100
   209     0017  3400               	retlw	0
   210     0018  34E8               	retlw	232
   211     0019  3403               	retlw	3
   212     001A  3410               	retlw	16
   213     001B  3427               	retlw	39
   214     001C                     __end_of_dpowers:
   215     001A                     _RCREG	set	26
   216     0019                     _TXREG	set	25
   217     0018                     _RCSTA	set	24
   218     001F                     _CMCON	set	31
   219     0006                     _PORTB	set	6
   220     0005                     _PORTA	set	5
   221     0065                     _RCIF	set	101
   222     0064                     _TXIF	set	100
   223     0037                     _RB7	set	55
   224     0036                     _RB6	set	54
   225     0035                     _RB5	set	53
   226     0034                     _RB4	set	52
   227     0098                     _TXSTA	set	152
   228     0099                     _SPBRG	set	153
   229     0086                     _TRISB	set	134
   230     0085                     _TRISA	set	133
   231     001C                     STR_10:
   232     001C  344D               	retlw	77	;'M'
   233     001D  344F               	retlw	79	;'O'
   234     001E  3454               	retlw	84	;'T'
   235     001F  344F               	retlw	79	;'O'
   236     0020  3452               	retlw	82	;'R'
   237     0021  3420               	retlw	32	;' '
   238     0022  343D               	retlw	61	;'='
   239     0023  3420               	retlw	32	;' '
   240     0024  3442               	retlw	66	;'B'
   241     0025  3420               	retlw	32	;' '
   242     0026  3420               	retlw	32	;' '
   243     0027  344F               	retlw	79	;'O'
   244     0028  344B               	retlw	75	;'K'
   245     0029  340D               	retlw	13
   246     002A  340A               	retlw	10
   247     002B  3400               	retlw	0
   248     002C                     STR_8:
   249     002C  344D               	retlw	77	;'M'
   250     002D  344F               	retlw	79	;'O'
   251     002E  3454               	retlw	84	;'T'
   252     002F  344F               	retlw	79	;'O'
   253     0030  3452               	retlw	82	;'R'
   254     0031  3420               	retlw	32	;' '
   255     0032  343D               	retlw	61	;'='
   256     0033  3420               	retlw	32	;' '
   257     0034  3446               	retlw	70	;'F'
   258     0035  3420               	retlw	32	;' '
   259     0036  3420               	retlw	32	;' '
   260     0037  344F               	retlw	79	;'O'
   261     0038  344B               	retlw	75	;'K'
   262     0039  340D               	retlw	13
   263     003A  340A               	retlw	10
   264     003B  3400               	retlw	0
   265     003C                     STR_9:
   266     003C  344D               	retlw	77	;'M'
   267     003D  344F               	retlw	79	;'O'
   268     003E  3454               	retlw	84	;'T'
   269     003F  344F               	retlw	79	;'O'
   270     0040  3452               	retlw	82	;'R'
   271     0041  3420               	retlw	32	;' '
   272     0042  343D               	retlw	61	;'='
   273     0043  3420               	retlw	32	;' '
   274     0044  3442               	retlw	66	;'B'
   275     0045  3420               	retlw	32	;' '
   276     0046  3420               	retlw	32	;' '
   277     0047  344F               	retlw	79	;'O'
   278     0048  344B               	retlw	75	;'K'
   279     0049  3400               	retlw	0
   280     004A                     STR_7:
   281     004A  344D               	retlw	77	;'M'
   282     004B  344F               	retlw	79	;'O'
   283     004C  3454               	retlw	84	;'T'
   284     004D  344F               	retlw	79	;'O'
   285     004E  3452               	retlw	82	;'R'
   286     004F  3420               	retlw	32	;' '
   287     0050  343D               	retlw	61	;'='
   288     0051  3420               	retlw	32	;' '
   289     0052  3446               	retlw	70	;'F'
   290     0053  3420               	retlw	32	;' '
   291     0054  3420               	retlw	32	;' '
   292     0055  344F               	retlw	79	;'O'
   293     0056  344B               	retlw	75	;'K'
   294     0057  3400               	retlw	0
   295     0058                     STR_11:
   296     0058  3428               	retlw	40	;'('
   297     0059  346E               	retlw	110	;'n'
   298     005A  3475               	retlw	117	;'u'
   299     005B  346C               	retlw	108	;'l'
   300     005C  346C               	retlw	108	;'l'
   301     005D  3429               	retlw	41	;')'
   302     005E  3400               	retlw	0
   303     005F                     STR_6:
   304     005F  3425               	retlw	37	;'%'
   305     0060  3464               	retlw	100	;'d'
   306     0061  340A               	retlw	10
   307     0062  3400               	retlw	0
   308     0063                     STR_2:
   309     0063  3425               	retlw	37	;'%'
   310     0064  3473               	retlw	115	;'s'
   311     0065  340A               	retlw	10
   312     0066  3400               	retlw	0
   313     0067                     STR_4:
   314     0067  3452               	retlw	82	;'R'
   315     0068  3454               	retlw	84	;'T'
   316     0069  3453               	retlw	83	;'S'
   317     006A  3400               	retlw	0
   318     006B                     STR_1:
   319     006B  342F               	retlw	47	;'/'
   320     006C  3400               	retlw	0
   321     0063                     
   322                           	psect	cinit
   323     07FA                     start_initialization:	
   324                           ; #config settings
   325                           
   326     07FA                     __initialization:
   327                           
   328                           ; Clear objects allocated to BANK0
   329     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   330     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   331     07FC  01CE               	clrf	__pbssBANK0& (0+127)
   332     07FD                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335     07FD                     __end_of__initialization:
   336     07FD  0183               	clrf	3
   337     07FE  118A  2DE0         	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	bssBANK0
   340     004E                     __pbssBANK0:
   341     004E                     strtok@sp:
   342     004E                     	ds	1
   343                           
   344                           	psect	cstackCOMMON
   345     0070                     __pcstackCOMMON:
   346     0070                     ?_initUART:
   347     0070                     ??_initUART:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ?_gets:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0070                     ?_cgets:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0070                     ?_cputs:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0070                     ?_strchr:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ?_main:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ?_putch:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ??_putch:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_getch:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ??_getch:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_getche:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_strlen:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_strcmp:	
   384                           ; 2 bytes @ 0x0
   385                           
   386     0070                     ?_puts:	
   387                           ; 2 bytes @ 0x0
   388                           
   389     0070                     ?___lwdiv:	
   390                           ; 2 bytes @ 0x0
   391                           
   392     0070                     putch@byte:	
   393                           ; 2 bytes @ 0x0
   394                           
   395     0070                     strcmp@s2:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ___lwdiv@divisor:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     strchr@chr:	
   402                           ; 2 bytes @ 0x0
   403                           
   404                           
   405                           ; 2 bytes @ 0x0
   406     0070                     	ds	1
   407     0071                     ??_cputs:
   408     0071                     ??_getche:	
   409                           ; 1 bytes @ 0x1
   410                           
   411     0071                     getche@c:	
   412                           ; 1 bytes @ 0x1
   413                           
   414     0071                     cputs@s:	
   415                           ; 1 bytes @ 0x1
   416                           
   417                           
   418                           ; 1 bytes @ 0x1
   419     0071                     	ds	1
   420     0072                     ??_strlen:
   421     0072                     ??_strcmp:	
   422                           ; 1 bytes @ 0x2
   423                           
   424     0072                     ??_puts:	
   425                           ; 1 bytes @ 0x2
   426                           
   427     0072                     ??_cgets:	
   428                           ; 1 bytes @ 0x2
   429                           
   430     0072                     ??_strchr:	
   431                           ; 1 bytes @ 0x2
   432                           
   433     0072                     puts@s:	
   434                           ; 1 bytes @ 0x2
   435                           
   436     0072                     strlen@cp:	
   437                           ; 1 bytes @ 0x2
   438                           
   439     0072                     strchr@ptr:	
   440                           ; 1 bytes @ 0x2
   441                           
   442     0072                     ___lwdiv@dividend:	
   443                           ; 1 bytes @ 0x2
   444                           
   445                           
   446                           ; 2 bytes @ 0x2
   447     0072                     	ds	1
   448     0073                     ?_strspn:
   449     0073                     ?_strcspn:	
   450                           ; 2 bytes @ 0x3
   451                           
   452     0073                     strlen@s:	
   453                           ; 2 bytes @ 0x3
   454                           
   455     0073                     strcspn@s2:	
   456                           ; 1 bytes @ 0x3
   457                           
   458     0073                     strspn@s2:	
   459                           ; 1 bytes @ 0x3
   460                           
   461                           
   462                           ; 1 bytes @ 0x3
   463     0073                     	ds	1
   464     0074                     ??___lwdiv:
   465     0074                     strcmp@r:	
   466                           ; 1 bytes @ 0x4
   467                           
   468     0074                     ___lwdiv@quotient:	
   469                           ; 1 bytes @ 0x4
   470                           
   471     0074                     cgets@c:	
   472                           ; 2 bytes @ 0x4
   473                           
   474                           
   475                           ; 2 bytes @ 0x4
   476     0074                     	ds	1
   477     0075                     ??_strspn:
   478     0075                     ??_strcspn:	
   479                           ; 1 bytes @ 0x5
   480                           
   481     0075                     strcmp@s1:	
   482                           ; 1 bytes @ 0x5
   483                           
   484                           
   485                           ; 1 bytes @ 0x5
   486     0075                     	ds	1
   487     0076                     ___lwdiv@counter:
   488     0076                     cgets@s:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 1 bytes @ 0x6
   493     0076                     	ds	1
   494     0077                     ?___lwmod:
   495     0077                     cgets@s1:	
   496                           ; 2 bytes @ 0x7
   497                           
   498     0077                     ___lwmod@divisor:	
   499                           ; 1 bytes @ 0x7
   500                           
   501     0077                     strcspn@i:	
   502                           ; 2 bytes @ 0x7
   503                           
   504     0077                     strspn@i:	
   505                           ; 2 bytes @ 0x7
   506                           
   507                           
   508                           ; 2 bytes @ 0x7
   509     0077                     	ds	1
   510     0078                     ??_gets:
   511     0078                     gets@s:	
   512                           ; 1 bytes @ 0x8
   513                           
   514                           
   515                           ; 1 bytes @ 0x8
   516     0078                     	ds	1
   517     0079                     strcspn@s1:
   518     0079                     strspn@s1:	
   519                           ; 1 bytes @ 0x9
   520                           
   521     0079                     ___lwmod@dividend:	
   522                           ; 1 bytes @ 0x9
   523                           
   524                           
   525                           ; 2 bytes @ 0x9
   526     0079                     	ds	1
   527     007A                     ?_strtok:
   528     007A                     strtok@s2:	
   529                           ; 1 bytes @ 0xA
   530                           
   531                           
   532                           ; 1 bytes @ 0xA
   533     007A                     	ds	1
   534     007B                     ??_strtok:
   535     007B                     ??___lwmod:	
   536                           ; 1 bytes @ 0xB
   537                           
   538     007B                     ___lwmod@counter:	
   539                           ; 1 bytes @ 0xB
   540                           
   541     007B                     strtok@s1:	
   542                           ; 1 bytes @ 0xB
   543                           
   544                           
   545                           ; 1 bytes @ 0xB
   546     007B                     	ds	1
   547     007C                     ?_printf:
   548                           
   549                           ; 2 bytes @ 0xC
   550     007C                     	ds	2
   551                           
   552                           	psect	cstackBANK0
   553     0020                     __pcstackBANK0:
   554     0020                     ??_printf:
   555                           
   556                           ; 1 bytes @ 0x0
   557     0020                     	ds	3
   558     0023                     printf@flag:
   559                           
   560                           ; 1 bytes @ 0x3
   561     0023                     	ds	1
   562     0024                     printf@prec:
   563                           
   564                           ; 1 bytes @ 0x4
   565     0024                     	ds	1
   566     0025                     printf@ap:
   567                           
   568                           ; 1 bytes @ 0x5
   569     0025                     	ds	1
   570     0026                     printf@cp:
   571                           
   572                           ; 2 bytes @ 0x6
   573     0026                     	ds	2
   574     0028                     printf@val:
   575                           
   576                           ; 2 bytes @ 0x8
   577     0028                     	ds	2
   578     002A                     printf@f:
   579                           
   580                           ; 1 bytes @ 0xA
   581     002A                     	ds	1
   582     002B                     printf@c:
   583                           
   584                           ; 1 bytes @ 0xB
   585     002B                     	ds	1
   586     002C                     ??_main:
   587                           
   588                           ; 1 bytes @ 0xC
   589     002C                     	ds	2
   590     002E                     main@tmp:
   591                           
   592                           ; 20 bytes @ 0xE
   593     002E                     	ds	20
   594     0042                     main@len:
   595                           
   596                           ; 2 bytes @ 0x22
   597     0042                     	ds	2
   598     0044                     main@cnt:
   599                           
   600                           ; 2 bytes @ 0x24
   601     0044                     	ds	2
   602     0046                     main@wk:
   603                           
   604                           ; 1 bytes @ 0x26
   605     0046                     	ds	1
   606     0047                     main@k:
   607                           
   608                           ; 2 bytes @ 0x27
   609     0047                     	ds	2
   610     0049                     main@ptr:
   611                           
   612                           ; 1 bytes @ 0x29
   613     0049                     	ds	1
   614     004A                     main@intvl:
   615                           
   616                           ; 2 bytes @ 0x2A
   617     004A                     	ds	2
   618     004C                     main@j:
   619                           
   620                           ; 2 bytes @ 0x2C
   621     004C                     	ds	2
   622                           
   623                           	psect	maintext
   624     05E0                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 57 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  len             2   34[BANK0 ] int 
   635 ;;  wk              1   38[BANK0 ] enum E769
   636 ;;  c               1    0        unsigned char 
   637 ;;  cmd             0    0        unsigned char [0]
   638 ;;  tmp            20   14[BANK0 ] unsigned char [20]
   639 ;;  j               2   44[BANK0 ] int 
   640 ;;  intvl           2   42[BANK0 ] int 
   641 ;;  k               2   39[BANK0 ] int 
   642 ;;  cnt             2   36[BANK0 ] int 
   643 ;;  ptr             1   41[BANK0 ] PTR unsigned char 
   644 ;;		 -> NULL(0), main@tmp(20), 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : B00/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   654 ;;      Params:         0       0       0       0
   655 ;;      Locals:         0      32       0       0
   656 ;;      Temps:          0       2       0       0
   657 ;;      Totals:         0      34       0       0
   658 ;;Total ram usage:       34 bytes
   659 ;; Hardware stack levels required when called: 4
   660 ;; This function calls:
   661 ;;		_gets
   662 ;;		_initUART
   663 ;;		_printf
   664 ;;		_puts
   665 ;;		_strcmp
   666 ;;		_strlen
   667 ;;		_strtok
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673     05E0                     _main:	
   674                           ;psect for function _main
   675                           
   676     05E0                     l1527:	
   677                           ;incstack = 0
   678                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   679                           
   680                           
   681                           ;main.c: 59: PORTA = 0x00;
   682     05E0  1283               	bcf	3,5	;RP0=0, select bank0
   683     05E1  1303               	bcf	3,6	;RP1=0, select bank0
   684     05E2  0185               	clrf	5	;volatile
   685                           
   686                           ;main.c: 60: PORTB = 0x00;
   687     05E3  0186               	clrf	6	;volatile
   688     05E4                     l1529:
   689                           
   690                           ;main.c: 61: TRISA = 0b00000011;
   691     05E4  3003               	movlw	3
   692     05E5  1683               	bsf	3,5	;RP0=1, select bank1
   693     05E6  1303               	bcf	3,6	;RP1=0, select bank1
   694     05E7  0085               	movwf	5	;volatile
   695     05E8                     l1531:
   696                           
   697                           ;main.c: 62: TRISB = 0b00000010;
   698     05E8  3002               	movlw	2
   699     05E9  0086               	movwf	6	;volatile
   700     05EA                     l1533:
   701                           
   702                           ;main.c: 63: CMCON = 0b00000111;
   703     05EA  3007               	movlw	7
   704     05EB  1283               	bcf	3,5	;RP0=0, select bank0
   705     05EC  1303               	bcf	3,6	;RP1=0, select bank0
   706     05ED  009F               	movwf	31	;volatile
   707     05EE                     l1535:
   708                           
   709                           ;main.c: 65: initUART();
   710     05EE  118A  22FE  118A   	fcall	_initUART
   711     05F1                     l1537:
   712     05F1                     l1539:
   713     05F1                     l1541:
   714     05F1                     l1543:
   715                           
   716                           ;main.c: 71: int intvl = 10;
   717     05F1  300A               	movlw	10
   718     05F2  1283               	bcf	3,5	;RP0=0, select bank0
   719     05F3  1303               	bcf	3,6	;RP1=0, select bank0
   720     05F4  00CA               	movwf	main@intvl
   721     05F5  3000               	movlw	0
   722     05F6  00CB               	movwf	main@intvl+1
   723     05F7                     l1545:
   724                           
   725                           ;main.c: 78: gets(tmp);
   726     05F7  302E               	movlw	(low (main@tmp| 0))& (0+255)
   727     05F8  118A  22D2  118A   	fcall	_gets
   728     05FB                     l1547:
   729                           
   730                           ;main.c: 82: ptr = strtok(tmp, "/");
   731     05FB  305A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   732     05FC  00FA               	movwf	strtok@s2
   733     05FD  302E               	movlw	(low (main@tmp| 0))& (0+255)
   734     05FE  118A  2457  118A   	fcall	_strtok
   735     0601  1283               	bcf	3,5	;RP0=0, select bank0
   736     0602  1303               	bcf	3,6	;RP1=0, select bank0
   737     0603  00C9               	movwf	main@ptr
   738     0604                     l1549:
   739                           
   740                           ;main.c: 84: printf("%s\n", ptr);
   741     0604  0849               	movf	main@ptr,w
   742     0605  00FC               	movwf	?_printf
   743     0606  3052               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   744     0607  118A  24F4  118A   	fcall	_printf
   745     060A                     l1551:
   746                           
   747                           ;main.c: 85: printf("%s\n", ptr[0]);
   748     060A  1283               	bcf	3,5	;RP0=0, select bank0
   749     060B  1303               	bcf	3,6	;RP1=0, select bank0
   750     060C  0849               	movf	main@ptr,w
   751     060D  0084               	movwf	4
   752     060E  1383               	bcf	3,7	;select IRP bank0
   753     060F  0800               	movf	0,w
   754     0610  00AC               	movwf	??_main
   755     0611  01AD               	clrf	??_main+1
   756     0612  082C               	movf	??_main,w
   757     0613  00FC               	movwf	?_printf
   758     0614  082D               	movf	??_main+1,w
   759     0615  00FD               	movwf	?_printf+1
   760     0616  3052               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   761     0617  118A  24F4  118A   	fcall	_printf
   762     061A                     l1553:
   763                           
   764                           ;main.c: 86: char c;;main.c: 87: int len = strlen(ptr);
   765     061A  1283               	bcf	3,5	;RP0=0, select bank0
   766     061B  1303               	bcf	3,6	;RP1=0, select bank0
   767     061C  0849               	movf	main@ptr,w
   768     061D  118A  2309  118A   	fcall	_strlen
   769     0620  0871               	movf	?_strlen+1,w
   770     0621  1283               	bcf	3,5	;RP0=0, select bank0
   771     0622  1303               	bcf	3,6	;RP1=0, select bank0
   772     0623  00C3               	movwf	main@len+1
   773     0624  0870               	movf	?_strlen,w
   774     0625  00C2               	movwf	main@len
   775     0626                     l1555:
   776                           
   777                           ;main.c: 89: if( len == 0 ) {
   778     0626  0842               	movf	main@len,w
   779     0627  0443               	iorwf	main@len+1,w
   780     0628  1D03               	btfss	3,2
   781     0629  2E2B               	goto	u951
   782     062A  2E2C               	goto	u950
   783     062B                     u951:
   784     062B  2E2D               	goto	l1559
   785     062C                     u950:
   786     062C                     l1557:
   787                           
   788                           ;main.c: 91: } else {
   789     062C  2E36               	goto	l1563
   790     062D                     l1559:
   791                           
   792                           ;main.c: 93: ptr[len-1] = '\0';
   793     062D  0842               	movf	main@len,w
   794     062E  0749               	addwf	main@ptr,w
   795     062F  00AC               	movwf	??_main
   796     0630  082C               	movf	??_main,w
   797     0631  3EFF               	addlw	-1
   798     0632  0084               	movwf	4
   799     0633  1383               	bcf	3,7	;select IRP bank0
   800     0634  0180               	clrf	0
   801     0635  2E2C               	goto	l1557
   802     0636                     l1563:
   803     0636                     l1565:
   804                           
   805                           ;main.c: 102: if(strcmp(ptr,"RTS") == 0)
   806     0636  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   807     0637  00F0               	movwf	strcmp@s2
   808     0638  0849               	movf	main@ptr,w
   809     0639  118A  2355  118A   	fcall	_strcmp
   810     063C  0870               	movf	?_strcmp,w
   811     063D  0471               	iorwf	?_strcmp+1,w
   812     063E  1D03               	btfss	3,2
   813     063F  2E41               	goto	u961
   814     0640  2E42               	goto	u960
   815     0641                     u961:
   816     0641  2E46               	goto	l47
   817     0642                     u960:
   818     0642                     l1567:
   819                           
   820                           ;main.c: 103: {;main.c: 104: wk = RTS;
   821     0642  1283               	bcf	3,5	;RP0=0, select bank0
   822     0643  1303               	bcf	3,6	;RP1=0, select bank0
   823     0644  01C6               	clrf	main@wk
   824                           
   825                           ;main.c: 107: }else{
   826     0645  2E4A               	goto	l1569
   827     0646                     l47:
   828                           
   829                           ;main.c: 108: wk = BTS;
   830     0646  1283               	bcf	3,5	;RP0=0, select bank0
   831     0647  1303               	bcf	3,6	;RP1=0, select bank0
   832     0648  01C6               	clrf	main@wk
   833     0649  0AC6               	incf	main@wk,f
   834     064A                     l1569:
   835                           
   836                           ;main.c: 109: };main.c: 111: printf("%s\n", tmp);
   837     064A  302E               	movlw	(low (main@tmp| 0))& (0+255)
   838     064B  00FC               	movwf	?_printf
   839     064C  3052               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   840     064D  118A  24F4  118A   	fcall	_printf
   841                           
   842                           ;main.c: 112: printf("%d\n", wk);
   843     0650  1283               	bcf	3,5	;RP0=0, select bank0
   844     0651  1303               	bcf	3,6	;RP1=0, select bank0
   845     0652  0846               	movf	main@wk,w
   846     0653  00AC               	movwf	??_main
   847     0654  01AD               	clrf	??_main+1
   848     0655  082C               	movf	??_main,w
   849     0656  00FC               	movwf	?_printf
   850     0657  082D               	movf	??_main+1,w
   851     0658  00FD               	movwf	?_printf+1
   852     0659  304E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   853     065A  118A  24F4  118A   	fcall	_printf
   854                           
   855                           ;main.c: 114: switch(wk){
   856     065D  2FEE               	goto	l1621
   857     065E                     l1571:
   858     065E  3014               	movlw	20
   859     065F  00C4               	movwf	main@cnt
   860     0660  3000               	movlw	0
   861     0661  00C5               	movwf	main@cnt+1
   862                           
   863                           ;main.c: 117: intvl=5;
   864     0662  3005               	movlw	5
   865     0663  00CA               	movwf	main@intvl
   866     0664  3000               	movlw	0
   867     0665  00CB               	movwf	main@intvl+1
   868     0666                     l1573:
   869                           
   870                           ;main.c: 128: for(k = 0 ; k < cnt ; k++){
   871     0666  01C7               	clrf	main@k
   872     0667  01C8               	clrf	main@k+1
   873     0668  2F11               	goto	l51
   874     0669                     l52:
   875                           
   876                           ;main.c: 129: RB4 = 1;
   877     0669  1283               	bcf	3,5	;RP0=0, select bank0
   878     066A  1303               	bcf	3,6	;RP1=0, select bank0
   879     066B  1606               	bsf	6,4	;volatile
   880                           
   881                           ;main.c: 130: RB5 = 0;
   882     066C  1286               	bcf	6,5	;volatile
   883                           
   884                           ;main.c: 131: RB6 = 0;
   885     066D  1306               	bcf	6,6	;volatile
   886                           
   887                           ;main.c: 132: RB7 = 0;
   888     066E  1386               	bcf	6,7	;volatile
   889     066F                     l1575:
   890                           
   891                           ;main.c: 133: for(j = 0 ; j < intvl ; j++){
   892     066F  01CC               	clrf	main@j
   893     0670  01CD               	clrf	main@j+1
   894     0671  2E83               	goto	l53
   895     0672                     l1577:
   896                           
   897                           ;main.c: 134: _delay((unsigned long)((1)*(4000000/4000.0)));
   898     0672  30C7               	movlw	199
   899     0673  1283               	bcf	3,5	;RP0=0, select bank0
   900     0674  1303               	bcf	3,6	;RP1=0, select bank0
   901     0675  00AC               	movwf	??_main
   902     0676                     u1077:
   903     0676  2E77               	nop2
   904     0677  0BAC               	decfsz	??_main,f
   905     0678  2E76               	goto	u1077
   906     0679  2E7A               	nop2
   907     067A  0000               	nop
   908     067B  3001               	movlw	1
   909     067C  1283               	bcf	3,5	;RP0=0, select bank0
   910     067D  1303               	bcf	3,6	;RP1=0, select bank0
   911     067E  07CC               	addwf	main@j,f
   912     067F  1803               	skipnc
   913     0680  0ACD               	incf	main@j+1,f
   914     0681  3000               	movlw	0
   915     0682  07CD               	addwf	main@j+1,f
   916     0683                     l53:
   917     0683  084D               	movf	main@j+1,w
   918     0684  3A80               	xorlw	128
   919     0685  00AC               	movwf	??_main
   920     0686  084B               	movf	main@intvl+1,w
   921     0687  3A80               	xorlw	128
   922     0688  022C               	subwf	??_main,w
   923     0689  1D03               	skipz
   924     068A  2E8D               	goto	u975
   925     068B  084A               	movf	main@intvl,w
   926     068C  024C               	subwf	main@j,w
   927     068D                     u975:
   928     068D  1C03               	skipc
   929     068E  2E90               	goto	u971
   930     068F  2E91               	goto	u970
   931     0690                     u971:
   932     0690  2E72               	goto	l1577
   933     0691                     u970:
   934     0691                     l55:
   935                           
   936                           ;main.c: 135: };main.c: 136: RB4 = 0;
   937     0691  1283               	bcf	3,5	;RP0=0, select bank0
   938     0692  1303               	bcf	3,6	;RP1=0, select bank0
   939     0693  1206               	bcf	6,4	;volatile
   940                           
   941                           ;main.c: 137: RB5 = 1;
   942     0694  1686               	bsf	6,5	;volatile
   943                           
   944                           ;main.c: 138: RB6 = 0;
   945     0695  1306               	bcf	6,6	;volatile
   946                           
   947                           ;main.c: 139: RB7 = 0;
   948     0696  1386               	bcf	6,7	;volatile
   949     0697                     l1579:
   950                           
   951                           ;main.c: 140: for(j = 0 ; j < intvl ; j++){
   952     0697  01CC               	clrf	main@j
   953     0698  01CD               	clrf	main@j+1
   954     0699  2EAB               	goto	l56
   955     069A                     l1581:
   956                           
   957                           ;main.c: 141: _delay((unsigned long)((1)*(4000000/4000.0)));
   958     069A  30C7               	movlw	199
   959     069B  1283               	bcf	3,5	;RP0=0, select bank0
   960     069C  1303               	bcf	3,6	;RP1=0, select bank0
   961     069D  00AC               	movwf	??_main
   962     069E                     u1087:
   963     069E  2E9F               	nop2
   964     069F  0BAC               	decfsz	??_main,f
   965     06A0  2E9E               	goto	u1087
   966     06A1  2EA2               	nop2
   967     06A2  0000               	nop
   968     06A3  3001               	movlw	1
   969     06A4  1283               	bcf	3,5	;RP0=0, select bank0
   970     06A5  1303               	bcf	3,6	;RP1=0, select bank0
   971     06A6  07CC               	addwf	main@j,f
   972     06A7  1803               	skipnc
   973     06A8  0ACD               	incf	main@j+1,f
   974     06A9  3000               	movlw	0
   975     06AA  07CD               	addwf	main@j+1,f
   976     06AB                     l56:
   977     06AB  084D               	movf	main@j+1,w
   978     06AC  3A80               	xorlw	128
   979     06AD  00AC               	movwf	??_main
   980     06AE  084B               	movf	main@intvl+1,w
   981     06AF  3A80               	xorlw	128
   982     06B0  022C               	subwf	??_main,w
   983     06B1  1D03               	skipz
   984     06B2  2EB5               	goto	u985
   985     06B3  084A               	movf	main@intvl,w
   986     06B4  024C               	subwf	main@j,w
   987     06B5                     u985:
   988     06B5  1C03               	skipc
   989     06B6  2EB8               	goto	u981
   990     06B7  2EB9               	goto	u980
   991     06B8                     u981:
   992     06B8  2E9A               	goto	l1581
   993     06B9                     u980:
   994     06B9                     l58:
   995                           
   996                           ;main.c: 142: };main.c: 143: RB4 = 0;
   997     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   998     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   999     06BB  1206               	bcf	6,4	;volatile
  1000                           
  1001                           ;main.c: 144: RB5 = 0;
  1002     06BC  1286               	bcf	6,5	;volatile
  1003                           
  1004                           ;main.c: 145: RB6 = 1;
  1005     06BD  1706               	bsf	6,6	;volatile
  1006                           
  1007                           ;main.c: 146: RB7 = 0;
  1008     06BE  1386               	bcf	6,7	;volatile
  1009     06BF                     l1583:
  1010                           
  1011                           ;main.c: 147: for(j = 0 ; j < intvl ; j++){
  1012     06BF  01CC               	clrf	main@j
  1013     06C0  01CD               	clrf	main@j+1
  1014     06C1  2ED3               	goto	l59
  1015     06C2                     l1585:
  1016                           
  1017                           ;main.c: 148: _delay((unsigned long)((1)*(4000000/4000.0)));
  1018     06C2  30C7               	movlw	199
  1019     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1020     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1021     06C5  00AC               	movwf	??_main
  1022     06C6                     u1097:
  1023     06C6  2EC7               	nop2
  1024     06C7  0BAC               	decfsz	??_main,f
  1025     06C8  2EC6               	goto	u1097
  1026     06C9  2ECA               	nop2
  1027     06CA  0000               	nop
  1028     06CB  3001               	movlw	1
  1029     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1030     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1031     06CE  07CC               	addwf	main@j,f
  1032     06CF  1803               	skipnc
  1033     06D0  0ACD               	incf	main@j+1,f
  1034     06D1  3000               	movlw	0
  1035     06D2  07CD               	addwf	main@j+1,f
  1036     06D3                     l59:
  1037     06D3  084D               	movf	main@j+1,w
  1038     06D4  3A80               	xorlw	128
  1039     06D5  00AC               	movwf	??_main
  1040     06D6  084B               	movf	main@intvl+1,w
  1041     06D7  3A80               	xorlw	128
  1042     06D8  022C               	subwf	??_main,w
  1043     06D9  1D03               	skipz
  1044     06DA  2EDD               	goto	u995
  1045     06DB  084A               	movf	main@intvl,w
  1046     06DC  024C               	subwf	main@j,w
  1047     06DD                     u995:
  1048     06DD  1C03               	skipc
  1049     06DE  2EE0               	goto	u991
  1050     06DF  2EE1               	goto	u990
  1051     06E0                     u991:
  1052     06E0  2EC2               	goto	l1585
  1053     06E1                     u990:
  1054     06E1                     l61:
  1055                           
  1056                           ;main.c: 149: };main.c: 150: RB4 = 0;
  1057     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1058     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1059     06E3  1206               	bcf	6,4	;volatile
  1060                           
  1061                           ;main.c: 151: RB5 = 0;
  1062     06E4  1286               	bcf	6,5	;volatile
  1063                           
  1064                           ;main.c: 152: RB6 = 0;
  1065     06E5  1306               	bcf	6,6	;volatile
  1066                           
  1067                           ;main.c: 153: RB7 = 1;
  1068     06E6  1786               	bsf	6,7	;volatile
  1069     06E7                     l1587:
  1070                           
  1071                           ;main.c: 154: for(j = 0 ; j < intvl ; j++){
  1072     06E7  01CC               	clrf	main@j
  1073     06E8  01CD               	clrf	main@j+1
  1074     06E9  2EFB               	goto	l62
  1075     06EA                     l1589:
  1076                           
  1077                           ;main.c: 155: _delay((unsigned long)((1)*(4000000/4000.0)));
  1078     06EA  30C7               	movlw	199
  1079     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1080     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1081     06ED  00AC               	movwf	??_main
  1082     06EE                     u1107:
  1083     06EE  2EEF               	nop2
  1084     06EF  0BAC               	decfsz	??_main,f
  1085     06F0  2EEE               	goto	u1107
  1086     06F1  2EF2               	nop2
  1087     06F2  0000               	nop
  1088     06F3  3001               	movlw	1
  1089     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1090     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1091     06F6  07CC               	addwf	main@j,f
  1092     06F7  1803               	skipnc
  1093     06F8  0ACD               	incf	main@j+1,f
  1094     06F9  3000               	movlw	0
  1095     06FA  07CD               	addwf	main@j+1,f
  1096     06FB                     l62:
  1097     06FB  084D               	movf	main@j+1,w
  1098     06FC  3A80               	xorlw	128
  1099     06FD  00AC               	movwf	??_main
  1100     06FE  084B               	movf	main@intvl+1,w
  1101     06FF  3A80               	xorlw	128
  1102     0700  022C               	subwf	??_main,w
  1103     0701  1D03               	skipz
  1104     0702  2F05               	goto	u1005
  1105     0703  084A               	movf	main@intvl,w
  1106     0704  024C               	subwf	main@j,w
  1107     0705                     u1005:
  1108     0705  1C03               	skipc
  1109     0706  2F08               	goto	u1001
  1110     0707  2F09               	goto	u1000
  1111     0708                     u1001:
  1112     0708  2EEA               	goto	l1589
  1113     0709                     u1000:
  1114     0709                     l1591:
  1115     0709  3001               	movlw	1
  1116     070A  1283               	bcf	3,5	;RP0=0, select bank0
  1117     070B  1303               	bcf	3,6	;RP1=0, select bank0
  1118     070C  07C7               	addwf	main@k,f
  1119     070D  1803               	skipnc
  1120     070E  0AC8               	incf	main@k+1,f
  1121     070F  3000               	movlw	0
  1122     0710  07C8               	addwf	main@k+1,f
  1123     0711                     l51:
  1124     0711  0848               	movf	main@k+1,w
  1125     0712  3A80               	xorlw	128
  1126     0713  00AC               	movwf	??_main
  1127     0714  0845               	movf	main@cnt+1,w
  1128     0715  3A80               	xorlw	128
  1129     0716  022C               	subwf	??_main,w
  1130     0717  1D03               	skipz
  1131     0718  2F1B               	goto	u1015
  1132     0719  0844               	movf	main@cnt,w
  1133     071A  0247               	subwf	main@k,w
  1134     071B                     u1015:
  1135     071B  1C03               	skipc
  1136     071C  2F1E               	goto	u1011
  1137     071D  2F1F               	goto	u1010
  1138     071E                     u1011:
  1139     071E  2E69               	goto	l52
  1140     071F                     u1010:
  1141     071F                     l1593:
  1142                           
  1143                           ;main.c: 156: };main.c: 157: };main.c: 159: puts("MOTOR = F  OK");
  1144     071F  3039               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1145     0720  118A  22F4  118A   	fcall	_puts
  1146                           
  1147                           ;main.c: 160: printf("MOTOR = F  OK\r\n");
  1148     0723  301B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1149     0724  118A  24F4  118A   	fcall	_printf
  1150                           
  1151                           ;main.c: 161: break;
  1152     0727  2DF7               	goto	l1545
  1153     0728                     l1595:
  1154     0728  3014               	movlw	20
  1155     0729  00C4               	movwf	main@cnt
  1156     072A  3000               	movlw	0
  1157     072B  00C5               	movwf	main@cnt+1
  1158     072C                     l1597:
  1159                           
  1160                           ;main.c: 164: for(k = 0 ; k < cnt ; k++){
  1161     072C  01C7               	clrf	main@k
  1162     072D  01C8               	clrf	main@k+1
  1163     072E  2FD7               	goto	l68
  1164     072F                     l69:
  1165                           
  1166                           ;main.c: 165: RB4 = 0;
  1167     072F  1283               	bcf	3,5	;RP0=0, select bank0
  1168     0730  1303               	bcf	3,6	;RP1=0, select bank0
  1169     0731  1206               	bcf	6,4	;volatile
  1170                           
  1171                           ;main.c: 166: RB5 = 0;
  1172     0732  1286               	bcf	6,5	;volatile
  1173                           
  1174                           ;main.c: 167: RB6 = 0;
  1175     0733  1306               	bcf	6,6	;volatile
  1176                           
  1177                           ;main.c: 168: RB7 = 1;
  1178     0734  1786               	bsf	6,7	;volatile
  1179     0735                     l1599:
  1180                           
  1181                           ;main.c: 169: for(j = 0 ; j < intvl ; j++){
  1182     0735  01CC               	clrf	main@j
  1183     0736  01CD               	clrf	main@j+1
  1184     0737  2F49               	goto	l70
  1185     0738                     l1601:
  1186                           
  1187                           ;main.c: 170: _delay((unsigned long)((1)*(4000000/4000.0)));
  1188     0738  30C7               	movlw	199
  1189     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1190     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1191     073B  00AC               	movwf	??_main
  1192     073C                     u1117:
  1193     073C  2F3D               	nop2
  1194     073D  0BAC               	decfsz	??_main,f
  1195     073E  2F3C               	goto	u1117
  1196     073F  2F40               	nop2
  1197     0740  0000               	nop
  1198     0741  3001               	movlw	1
  1199     0742  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0743  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0744  07CC               	addwf	main@j,f
  1202     0745  1803               	skipnc
  1203     0746  0ACD               	incf	main@j+1,f
  1204     0747  3000               	movlw	0
  1205     0748  07CD               	addwf	main@j+1,f
  1206     0749                     l70:
  1207     0749  084D               	movf	main@j+1,w
  1208     074A  3A80               	xorlw	128
  1209     074B  00AC               	movwf	??_main
  1210     074C  084B               	movf	main@intvl+1,w
  1211     074D  3A80               	xorlw	128
  1212     074E  022C               	subwf	??_main,w
  1213     074F  1D03               	skipz
  1214     0750  2F53               	goto	u1025
  1215     0751  084A               	movf	main@intvl,w
  1216     0752  024C               	subwf	main@j,w
  1217     0753                     u1025:
  1218     0753  1C03               	skipc
  1219     0754  2F56               	goto	u1021
  1220     0755  2F57               	goto	u1020
  1221     0756                     u1021:
  1222     0756  2F38               	goto	l1601
  1223     0757                     u1020:
  1224     0757                     l72:
  1225                           
  1226                           ;main.c: 171: };main.c: 172: RB4 = 0;
  1227     0757  1283               	bcf	3,5	;RP0=0, select bank0
  1228     0758  1303               	bcf	3,6	;RP1=0, select bank0
  1229     0759  1206               	bcf	6,4	;volatile
  1230                           
  1231                           ;main.c: 173: RB5 = 0;
  1232     075A  1286               	bcf	6,5	;volatile
  1233                           
  1234                           ;main.c: 174: RB6 = 1;
  1235     075B  1706               	bsf	6,6	;volatile
  1236                           
  1237                           ;main.c: 175: RB7 = 0;
  1238     075C  1386               	bcf	6,7	;volatile
  1239     075D                     l1603:
  1240                           
  1241                           ;main.c: 176: for(j = 0 ; j < intvl ; j++){
  1242     075D  01CC               	clrf	main@j
  1243     075E  01CD               	clrf	main@j+1
  1244     075F  2F71               	goto	l73
  1245     0760                     l1605:
  1246                           
  1247                           ;main.c: 177: _delay((unsigned long)((1)*(4000000/4000.0)));
  1248     0760  30C7               	movlw	199
  1249     0761  1283               	bcf	3,5	;RP0=0, select bank0
  1250     0762  1303               	bcf	3,6	;RP1=0, select bank0
  1251     0763  00AC               	movwf	??_main
  1252     0764                     u1127:
  1253     0764  2F65               	nop2
  1254     0765  0BAC               	decfsz	??_main,f
  1255     0766  2F64               	goto	u1127
  1256     0767  2F68               	nop2
  1257     0768  0000               	nop
  1258     0769  3001               	movlw	1
  1259     076A  1283               	bcf	3,5	;RP0=0, select bank0
  1260     076B  1303               	bcf	3,6	;RP1=0, select bank0
  1261     076C  07CC               	addwf	main@j,f
  1262     076D  1803               	skipnc
  1263     076E  0ACD               	incf	main@j+1,f
  1264     076F  3000               	movlw	0
  1265     0770  07CD               	addwf	main@j+1,f
  1266     0771                     l73:
  1267     0771  084D               	movf	main@j+1,w
  1268     0772  3A80               	xorlw	128
  1269     0773  00AC               	movwf	??_main
  1270     0774  084B               	movf	main@intvl+1,w
  1271     0775  3A80               	xorlw	128
  1272     0776  022C               	subwf	??_main,w
  1273     0777  1D03               	skipz
  1274     0778  2F7B               	goto	u1035
  1275     0779  084A               	movf	main@intvl,w
  1276     077A  024C               	subwf	main@j,w
  1277     077B                     u1035:
  1278     077B  1C03               	skipc
  1279     077C  2F7E               	goto	u1031
  1280     077D  2F7F               	goto	u1030
  1281     077E                     u1031:
  1282     077E  2F60               	goto	l1605
  1283     077F                     u1030:
  1284     077F                     l75:
  1285                           
  1286                           ;main.c: 178: };main.c: 179: RB4 = 0;
  1287     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0781  1206               	bcf	6,4	;volatile
  1290                           
  1291                           ;main.c: 180: RB5 = 1;
  1292     0782  1686               	bsf	6,5	;volatile
  1293                           
  1294                           ;main.c: 181: RB6 = 0;
  1295     0783  1306               	bcf	6,6	;volatile
  1296                           
  1297                           ;main.c: 182: RB7 = 0;
  1298     0784  1386               	bcf	6,7	;volatile
  1299     0785                     l1607:
  1300                           
  1301                           ;main.c: 183: for(j = 0 ; j < intvl ; j++){
  1302     0785  01CC               	clrf	main@j
  1303     0786  01CD               	clrf	main@j+1
  1304     0787  2F99               	goto	l76
  1305     0788                     l1609:
  1306                           
  1307                           ;main.c: 184: _delay((unsigned long)((1)*(4000000/4000.0)));
  1308     0788  30C7               	movlw	199
  1309     0789  1283               	bcf	3,5	;RP0=0, select bank0
  1310     078A  1303               	bcf	3,6	;RP1=0, select bank0
  1311     078B  00AC               	movwf	??_main
  1312     078C                     u1137:
  1313     078C  2F8D               	nop2
  1314     078D  0BAC               	decfsz	??_main,f
  1315     078E  2F8C               	goto	u1137
  1316     078F  2F90               	nop2
  1317     0790  0000               	nop
  1318     0791  3001               	movlw	1
  1319     0792  1283               	bcf	3,5	;RP0=0, select bank0
  1320     0793  1303               	bcf	3,6	;RP1=0, select bank0
  1321     0794  07CC               	addwf	main@j,f
  1322     0795  1803               	skipnc
  1323     0796  0ACD               	incf	main@j+1,f
  1324     0797  3000               	movlw	0
  1325     0798  07CD               	addwf	main@j+1,f
  1326     0799                     l76:
  1327     0799  084D               	movf	main@j+1,w
  1328     079A  3A80               	xorlw	128
  1329     079B  00AC               	movwf	??_main
  1330     079C  084B               	movf	main@intvl+1,w
  1331     079D  3A80               	xorlw	128
  1332     079E  022C               	subwf	??_main,w
  1333     079F  1D03               	skipz
  1334     07A0  2FA3               	goto	u1045
  1335     07A1  084A               	movf	main@intvl,w
  1336     07A2  024C               	subwf	main@j,w
  1337     07A3                     u1045:
  1338     07A3  1C03               	skipc
  1339     07A4  2FA6               	goto	u1041
  1340     07A5  2FA7               	goto	u1040
  1341     07A6                     u1041:
  1342     07A6  2F88               	goto	l1609
  1343     07A7                     u1040:
  1344     07A7                     l78:
  1345                           
  1346                           ;main.c: 185: };main.c: 186: RB4 = 1;
  1347     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1348     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1349     07A9  1606               	bsf	6,4	;volatile
  1350                           
  1351                           ;main.c: 187: RB5 = 0;
  1352     07AA  1286               	bcf	6,5	;volatile
  1353                           
  1354                           ;main.c: 188: RB6 = 0;
  1355     07AB  1306               	bcf	6,6	;volatile
  1356                           
  1357                           ;main.c: 189: RB7 = 0;
  1358     07AC  1386               	bcf	6,7	;volatile
  1359     07AD                     l1611:
  1360                           
  1361                           ;main.c: 190: for(j = 0 ; j < intvl ; j++){
  1362     07AD  01CC               	clrf	main@j
  1363     07AE  01CD               	clrf	main@j+1
  1364     07AF  2FC1               	goto	l79
  1365     07B0                     l1613:
  1366                           
  1367                           ;main.c: 191: _delay((unsigned long)((1)*(4000000/4000.0)));
  1368     07B0  30C7               	movlw	199
  1369     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1370     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1371     07B3  00AC               	movwf	??_main
  1372     07B4                     u1147:
  1373     07B4  2FB5               	nop2
  1374     07B5  0BAC               	decfsz	??_main,f
  1375     07B6  2FB4               	goto	u1147
  1376     07B7  2FB8               	nop2
  1377     07B8  0000               	nop
  1378     07B9  3001               	movlw	1
  1379     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1380     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1381     07BC  07CC               	addwf	main@j,f
  1382     07BD  1803               	skipnc
  1383     07BE  0ACD               	incf	main@j+1,f
  1384     07BF  3000               	movlw	0
  1385     07C0  07CD               	addwf	main@j+1,f
  1386     07C1                     l79:
  1387     07C1  084D               	movf	main@j+1,w
  1388     07C2  3A80               	xorlw	128
  1389     07C3  00AC               	movwf	??_main
  1390     07C4  084B               	movf	main@intvl+1,w
  1391     07C5  3A80               	xorlw	128
  1392     07C6  022C               	subwf	??_main,w
  1393     07C7  1D03               	skipz
  1394     07C8  2FCB               	goto	u1055
  1395     07C9  084A               	movf	main@intvl,w
  1396     07CA  024C               	subwf	main@j,w
  1397     07CB                     u1055:
  1398     07CB  1C03               	skipc
  1399     07CC  2FCE               	goto	u1051
  1400     07CD  2FCF               	goto	u1050
  1401     07CE                     u1051:
  1402     07CE  2FB0               	goto	l1613
  1403     07CF                     u1050:
  1404     07CF                     l1615:
  1405     07CF  3001               	movlw	1
  1406     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1407     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1408     07D2  07C7               	addwf	main@k,f
  1409     07D3  1803               	skipnc
  1410     07D4  0AC8               	incf	main@k+1,f
  1411     07D5  3000               	movlw	0
  1412     07D6  07C8               	addwf	main@k+1,f
  1413     07D7                     l68:
  1414     07D7  0848               	movf	main@k+1,w
  1415     07D8  3A80               	xorlw	128
  1416     07D9  00AC               	movwf	??_main
  1417     07DA  0845               	movf	main@cnt+1,w
  1418     07DB  3A80               	xorlw	128
  1419     07DC  022C               	subwf	??_main,w
  1420     07DD  1D03               	skipz
  1421     07DE  2FE1               	goto	u1065
  1422     07DF  0844               	movf	main@cnt,w
  1423     07E0  0247               	subwf	main@k,w
  1424     07E1                     u1065:
  1425     07E1  1C03               	skipc
  1426     07E2  2FE4               	goto	u1061
  1427     07E3  2FE5               	goto	u1060
  1428     07E4                     u1061:
  1429     07E4  2F2F               	goto	l69
  1430     07E5                     u1060:
  1431     07E5                     l1617:
  1432                           
  1433                           ;main.c: 192: };main.c: 193: };main.c: 194: puts("MOTOR = B  OK");
  1434     07E5  302B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1435     07E6  118A  22F4  118A   	fcall	_puts
  1436                           
  1437                           ;main.c: 195: printf("MOTOR = B  OK\r\n");
  1438     07E9  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1439     07EA  118A  24F4  118A   	fcall	_printf
  1440                           
  1441                           ;main.c: 196: break;
  1442     07ED  2DF7               	goto	l1545
  1443     07EE                     l1621:
  1444     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  1445     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  1446     07F0  0846               	movf	main@wk,w
  1447                           
  1448                           ; Switch size 1, requested type "simple"
  1449                           ; Number of cases is 2, Range of values is 0 to 1
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte            7     4 (average)
  1453                           ; direct_byte           11     7 (fixed)
  1454                           ; jumptable            260     6 (fixed)
  1455                           ;	Chosen strategy is simple_byte
  1456     07F1  3A00               	xorlw	0	; case 0
  1457     07F2  1903               	skipnz
  1458     07F3  2E5E               	goto	l1571
  1459     07F4  3A01               	xorlw	1	; case 1
  1460     07F5  1903               	skipnz
  1461     07F6  2F28               	goto	l1595
  1462     07F7  2DF7               	goto	l1545
  1463     07F8  118A  2800         	ljmp	start
  1464     07FA                     __end_of_main:
  1465                           
  1466                           	psect	text1
  1467     0457                     __ptext1:	
  1468 ;; *************** function _strtok *****************
  1469 ;; Defined at:
  1470 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  s1              1    wreg     PTR unsigned char 
  1473 ;;		 -> NULL(0), main@tmp(20), 
  1474 ;;  s2              1   10[COMMON] PTR const unsigned char 
  1475 ;;		 -> STR_1(2), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  s1              1   11[COMMON] PTR unsigned char 
  1478 ;;		 -> NULL(0), main@tmp(20), 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      PTR unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1488 ;;      Params:         1       0       0       0
  1489 ;;      Locals:         1       0       0       0
  1490 ;;      Temps:          0       0       0       0
  1491 ;;      Totals:         2       0       0       0
  1492 ;;Total ram usage:        2 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 3
  1495 ;; This function calls:
  1496 ;;		_strcspn
  1497 ;;		_strspn
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503     0457                     _strtok:	
  1504                           ;psect for function _strtok
  1505                           
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1509                           ;strtok@s1 stored from wreg
  1510     0457  00FB               	movwf	strtok@s1
  1511     0458                     l1401:
  1512     0458  087B               	movf	strtok@s1,w
  1513     0459  1D03               	btfss	3,2
  1514     045A  2C5C               	goto	u791
  1515     045B  2C5D               	goto	u790
  1516     045C                     u791:
  1517     045C  2C61               	goto	l1405
  1518     045D                     u790:
  1519     045D                     l1403:
  1520     045D  1283               	bcf	3,5	;RP0=0, select bank0
  1521     045E  1303               	bcf	3,6	;RP1=0, select bank0
  1522     045F  084E               	movf	strtok@sp,w
  1523     0460  00FB               	movwf	strtok@s1
  1524     0461                     l1405:
  1525     0461  087B               	movf	strtok@s1,w
  1526     0462  1D03               	btfss	3,2
  1527     0463  2C65               	goto	u801
  1528     0464  2C66               	goto	u800
  1529     0465                     u801:
  1530     0465  2C68               	goto	l1411
  1531     0466                     u800:
  1532     0466                     l1407:
  1533     0466  3000               	movlw	0
  1534     0467  2C9C               	goto	l752
  1535     0468                     l1411:
  1536     0468  087A               	movf	strtok@s2,w
  1537     0469  00F3               	movwf	strspn@s2
  1538     046A  087B               	movf	strtok@s1,w
  1539     046B  118A  23AC  118A   	fcall	_strspn
  1540     046E  0873               	movf	?_strspn,w
  1541     046F  00FF               	movwf	btemp+1
  1542     0470  087F               	movf	btemp+1,w
  1543     0471  07FB               	addwf	strtok@s1,f
  1544     0472                     l1413:
  1545     0472  087B               	movf	strtok@s1,w
  1546     0473  0084               	movwf	4
  1547     0474  1383               	bcf	3,7	;select IRP bank0
  1548     0475  0800               	movf	0,w
  1549     0476  1D03               	btfss	3,2
  1550     0477  2C79               	goto	u811
  1551     0478  2C7A               	goto	u810
  1552     0479                     u811:
  1553     0479  2C7F               	goto	l1419
  1554     047A                     u810:
  1555     047A                     l1415:
  1556     047A  1283               	bcf	3,5	;RP0=0, select bank0
  1557     047B  1303               	bcf	3,6	;RP1=0, select bank0
  1558     047C  01CE               	clrf	strtok@sp
  1559     047D  3000               	movlw	0
  1560     047E  2C9C               	goto	l752
  1561     047F                     l1419:
  1562     047F  087A               	movf	strtok@s2,w
  1563     0480  00F3               	movwf	strcspn@s2
  1564     0481  087B               	movf	strtok@s1,w
  1565     0482  118A  237F  118A   	fcall	_strcspn
  1566     0485  0873               	movf	?_strcspn,w
  1567     0486  077B               	addwf	strtok@s1,w
  1568     0487  1283               	bcf	3,5	;RP0=0, select bank0
  1569     0488  1303               	bcf	3,6	;RP1=0, select bank0
  1570     0489  00CE               	movwf	strtok@sp
  1571     048A                     l1421:
  1572     048A  084E               	movf	strtok@sp,w
  1573     048B  0084               	movwf	4
  1574     048C  1383               	bcf	3,7	;select IRP bank0
  1575     048D  0800               	movf	0,w
  1576     048E  1903               	btfsc	3,2
  1577     048F  2C91               	goto	u821
  1578     0490  2C92               	goto	u820
  1579     0491                     u821:
  1580     0491  2C9A               	goto	l1427
  1581     0492                     u820:
  1582     0492                     l1423:
  1583     0492  084E               	movf	strtok@sp,w
  1584     0493  0084               	movwf	4
  1585     0494  0180               	clrf	0
  1586     0495                     l1425:
  1587     0495  3001               	movlw	1
  1588     0496  00FF               	movwf	btemp+1
  1589     0497  087F               	movf	btemp+1,w
  1590     0498  07CE               	addwf	strtok@sp,f
  1591     0499  2C9B               	goto	l1429
  1592     049A                     l1427:
  1593     049A  01CE               	clrf	strtok@sp
  1594     049B                     l1429:
  1595     049B  087B               	movf	strtok@s1,w
  1596     049C                     l752:
  1597     049C  0008               	return
  1598     049D                     __end_of_strtok:
  1599                           
  1600                           	psect	text2
  1601     03AC                     __ptext2:	
  1602 ;; *************** function _strspn *****************
  1603 ;; Defined at:
  1604 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  s1              1    wreg     PTR const unsigned char 
  1607 ;;		 -> NULL(0), main@tmp(20), 
  1608 ;;  s2              1    3[COMMON] PTR const unsigned char 
  1609 ;;		 -> STR_1(2), 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  s1              1    9[COMMON] PTR const unsigned char 
  1612 ;;		 -> NULL(0), main@tmp(20), 
  1613 ;;  i               2    7[COMMON] unsigned int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    3[COMMON] unsigned int 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1623 ;;      Params:         2       0       0       0
  1624 ;;      Locals:         3       0       0       0
  1625 ;;      Temps:          2       0       0       0
  1626 ;;      Totals:         7       0       0       0
  1627 ;;Total ram usage:        7 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 2
  1630 ;; This function calls:
  1631 ;;		_strchr
  1632 ;; This function is called by:
  1633 ;;		_strtok
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637     03AC                     _strspn:	
  1638                           ;psect for function _strspn
  1639                           
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1643                           ;strspn@s1 stored from wreg
  1644     03AC  00F9               	movwf	strspn@s1
  1645     03AD                     l1361:
  1646     03AD  01F7               	clrf	strspn@i
  1647     03AE  01F8               	clrf	strspn@i+1
  1648     03AF  2BBA               	goto	l1365
  1649     03B0                     l1363:
  1650     03B0  3001               	movlw	1
  1651     03B1  00FF               	movwf	btemp+1
  1652     03B2  087F               	movf	btemp+1,w
  1653     03B3  07F9               	addwf	strspn@s1,f
  1654     03B4  3001               	movlw	1
  1655     03B5  07F7               	addwf	strspn@i,f
  1656     03B6  1803               	skipnc
  1657     03B7  0AF8               	incf	strspn@i+1,f
  1658     03B8  3000               	movlw	0
  1659     03B9  07F8               	addwf	strspn@i+1,f
  1660     03BA                     l1365:
  1661     03BA  0879               	movf	strspn@s1,w
  1662     03BB  0084               	movwf	4
  1663     03BC  1383               	bcf	3,7	;select IRP bank0
  1664     03BD  0800               	movf	0,w
  1665     03BE  1903               	btfsc	3,2
  1666     03BF  2BC1               	goto	u741
  1667     03C0  2BC2               	goto	u740
  1668     03C1                     u741:
  1669     03C1  2BD4               	goto	l1369
  1670     03C2                     u740:
  1671     03C2                     l1367:
  1672     03C2  0879               	movf	strspn@s1,w
  1673     03C3  0084               	movwf	4
  1674     03C4  0800               	movf	0,w
  1675     03C5  00F5               	movwf	??_strspn
  1676     03C6  01F6               	clrf	??_strspn+1
  1677     03C7  0875               	movf	??_strspn,w
  1678     03C8  00F0               	movwf	strchr@chr
  1679     03C9  0876               	movf	??_strspn+1,w
  1680     03CA  00F1               	movwf	strchr@chr+1
  1681     03CB  0873               	movf	strspn@s2,w
  1682     03CC  118A  2339  118A   	fcall	_strchr
  1683     03CF  3A00               	xorlw	0
  1684     03D0  1D03               	skipz
  1685     03D1  2BD3               	goto	u751
  1686     03D2  2BD4               	goto	u750
  1687     03D3                     u751:
  1688     03D3  2BB0               	goto	l1363
  1689     03D4                     u750:
  1690     03D4                     l1369:
  1691     03D4  0878               	movf	strspn@i+1,w
  1692     03D5  00F4               	movwf	?_strspn+1
  1693     03D6  0877               	movf	strspn@i,w
  1694     03D7  00F3               	movwf	?_strspn
  1695     03D8                     l781:
  1696     03D8  0008               	return
  1697     03D9                     __end_of_strspn:
  1698                           
  1699                           	psect	text3
  1700     037F                     __ptext3:	
  1701 ;; *************** function _strcspn *****************
  1702 ;; Defined at:
  1703 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  s1              1    wreg     PTR const unsigned char 
  1706 ;;		 -> NULL(0), main@tmp(20), 
  1707 ;;  s2              1    3[COMMON] PTR const unsigned char 
  1708 ;;		 -> STR_1(2), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  s1              1    9[COMMON] PTR const unsigned char 
  1711 ;;		 -> NULL(0), main@tmp(20), 
  1712 ;;  i               2    7[COMMON] unsigned int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2    3[COMMON] unsigned int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1722 ;;      Params:         2       0       0       0
  1723 ;;      Locals:         3       0       0       0
  1724 ;;      Temps:          2       0       0       0
  1725 ;;      Totals:         7       0       0       0
  1726 ;;Total ram usage:        7 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 2
  1729 ;; This function calls:
  1730 ;;		_strchr
  1731 ;; This function is called by:
  1732 ;;		_strtok
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736     037F                     _strcspn:	
  1737                           ;psect for function _strcspn
  1738                           
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1742                           ;strcspn@s1 stored from wreg
  1743     037F  00F9               	movwf	strcspn@s1
  1744     0380                     l1373:
  1745     0380  01F7               	clrf	strcspn@i
  1746     0381  01F8               	clrf	strcspn@i+1
  1747     0382  2B8D               	goto	l1377
  1748     0383                     l1375:
  1749     0383  3001               	movlw	1
  1750     0384  00FF               	movwf	btemp+1
  1751     0385  087F               	movf	btemp+1,w
  1752     0386  07F9               	addwf	strcspn@s1,f
  1753     0387  3001               	movlw	1
  1754     0388  07F7               	addwf	strcspn@i,f
  1755     0389  1803               	skipnc
  1756     038A  0AF8               	incf	strcspn@i+1,f
  1757     038B  3000               	movlw	0
  1758     038C  07F8               	addwf	strcspn@i+1,f
  1759     038D                     l1377:
  1760     038D  0879               	movf	strcspn@s1,w
  1761     038E  0084               	movwf	4
  1762     038F  1383               	bcf	3,7	;select IRP bank0
  1763     0390  0800               	movf	0,w
  1764     0391  1903               	btfsc	3,2
  1765     0392  2B94               	goto	u761
  1766     0393  2B95               	goto	u760
  1767     0394                     u761:
  1768     0394  2BA7               	goto	l1381
  1769     0395                     u760:
  1770     0395                     l1379:
  1771     0395  0879               	movf	strcspn@s1,w
  1772     0396  0084               	movwf	4
  1773     0397  0800               	movf	0,w
  1774     0398  00F5               	movwf	??_strcspn
  1775     0399  01F6               	clrf	??_strcspn+1
  1776     039A  0875               	movf	??_strcspn,w
  1777     039B  00F0               	movwf	strchr@chr
  1778     039C  0876               	movf	??_strcspn+1,w
  1779     039D  00F1               	movwf	strchr@chr+1
  1780     039E  0873               	movf	strcspn@s2,w
  1781     039F  118A  2339  118A   	fcall	_strchr
  1782     03A2  3A00               	xorlw	0
  1783     03A3  1903               	skipnz
  1784     03A4  2BA6               	goto	u771
  1785     03A5  2BA7               	goto	u770
  1786     03A6                     u771:
  1787     03A6  2B83               	goto	l1375
  1788     03A7                     u770:
  1789     03A7                     l1381:
  1790     03A7  0878               	movf	strcspn@i+1,w
  1791     03A8  00F4               	movwf	?_strcspn+1
  1792     03A9  0877               	movf	strcspn@i,w
  1793     03AA  00F3               	movwf	?_strcspn
  1794     03AB                     l765:
  1795     03AB  0008               	return
  1796     03AC                     __end_of_strcspn:
  1797                           
  1798                           	psect	text4
  1799     0339                     __ptext4:	
  1800 ;; *************** function _strchr *****************
  1801 ;; Defined at:
  1802 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  ptr             1    wreg     PTR const unsigned char 
  1805 ;;		 -> STR_1(2), 
  1806 ;;  chr             2    0[COMMON] int 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  1809 ;;		 -> STR_1(2), 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      PTR unsigned char 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, pclath
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1819 ;;      Params:         2       0       0       0
  1820 ;;      Locals:         1       0       0       0
  1821 ;;      Temps:          0       0       0       0
  1822 ;;      Totals:         3       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used: 2
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_strcspn
  1829 ;;		_strspn
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833     0339                     _strchr:	
  1834                           ;psect for function _strchr
  1835                           
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  1839                           ;strchr@ptr stored from wreg
  1840     0339  00F2               	movwf	strchr@ptr
  1841     033A                     l768:
  1842     033A                     l1259:
  1843     033A  0872               	movf	strchr@ptr,w
  1844     033B  0084               	movwf	4
  1845     033C  118A  200C  118A   	fcall	stringdir
  1846     033F  0670               	xorwf	strchr@chr,w
  1847     0340  1D03               	skipz
  1848     0341  2B43               	goto	u561
  1849     0342  2B44               	goto	u560
  1850     0343                     u561:
  1851     0343  2B46               	goto	l1265
  1852     0344                     u560:
  1853     0344                     l1261:
  1854     0344  0872               	movf	strchr@ptr,w
  1855     0345  2B54               	goto	l770
  1856     0346                     l1265:
  1857     0346  3001               	movlw	1
  1858     0347  07F2               	addwf	strchr@ptr,f
  1859     0348  30FF               	movlw	-1
  1860     0349  0772               	addwf	strchr@ptr,w
  1861     034A  0084               	movwf	4
  1862     034B  118A  200C  118A   	fcall	stringdir
  1863     034E  3A00               	xorlw	0
  1864     034F  1D03               	skipz
  1865     0350  2B52               	goto	u571
  1866     0351  2B53               	goto	u570
  1867     0352                     u571:
  1868     0352  2B3A               	goto	l768
  1869     0353                     u570:
  1870     0353                     l1267:
  1871     0353  3000               	movlw	0
  1872     0354                     l770:
  1873     0354  0008               	return
  1874     0355                     __end_of_strchr:
  1875                           
  1876                           	psect	text5
  1877     0309                     __ptext5:	
  1878 ;; *************** function _strlen *****************
  1879 ;; Defined at:
  1880 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  s               1    wreg     PTR const unsigned char 
  1883 ;;		 -> NULL(0), main@tmp(20), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  s               1    3[COMMON] PTR const unsigned char 
  1886 ;;		 -> NULL(0), main@tmp(20), 
  1887 ;;  cp              1    2[COMMON] PTR const unsigned char 
  1888 ;;		 -> NULL(0), main@tmp(20), 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2    0[COMMON] unsigned int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1898 ;;      Params:         2       0       0       0
  1899 ;;      Locals:         2       0       0       0
  1900 ;;      Temps:          0       0       0       0
  1901 ;;      Totals:         4       0       0       0
  1902 ;;Total ram usage:        4 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;;		_my_pop_back
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912     0309                     _strlen:	
  1913                           ;psect for function _strlen
  1914                           
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1]
  1918                           ;strlen@s stored from wreg
  1919     0309  00F3               	movwf	strlen@s
  1920     030A                     l1385:
  1921     030A  0873               	movf	strlen@s,w
  1922     030B  00F2               	movwf	strlen@cp
  1923     030C  2B11               	goto	l1389
  1924     030D                     l1387:
  1925     030D  3001               	movlw	1
  1926     030E  00FF               	movwf	btemp+1
  1927     030F  087F               	movf	btemp+1,w
  1928     0310  07F2               	addwf	strlen@cp,f
  1929     0311                     l1389:
  1930     0311  0872               	movf	strlen@cp,w
  1931     0312  0084               	movwf	4
  1932     0313  1383               	bcf	3,7	;select IRP bank0
  1933     0314  0800               	movf	0,w
  1934     0315  1D03               	btfss	3,2
  1935     0316  2B18               	goto	u781
  1936     0317  2B19               	goto	u780
  1937     0318                     u781:
  1938     0318  2B0D               	goto	l1387
  1939     0319                     u780:
  1940     0319                     l1391:
  1941     0319  0873               	movf	strlen@s,w
  1942     031A  0272               	subwf	strlen@cp,w
  1943     031B  00F0               	movwf	?_strlen
  1944     031C  01F1               	clrf	?_strlen+1
  1945     031D  1BF0               	btfsc	?_strlen,7
  1946     031E  03F1               	decf	?_strlen+1,f
  1947     031F                     l741:
  1948     031F  0008               	return
  1949     0320                     __end_of_strlen:
  1950                           
  1951                           	psect	text6
  1952     0355                     __ptext6:	
  1953 ;; *************** function _strcmp *****************
  1954 ;; Defined at:
  1955 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  s1              1    wreg     PTR const unsigned char 
  1958 ;;		 -> NULL(0), main@tmp(20), 
  1959 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1960 ;;		 -> STR_4(4), 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1963 ;;		 -> NULL(0), main@tmp(20), 
  1964 ;;  r               1    4[COMMON] char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2    0[COMMON] int 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1974 ;;      Params:         2       0       0       0
  1975 ;;      Locals:         2       0       0       0
  1976 ;;      Temps:          2       0       0       0
  1977 ;;      Totals:         6       0       0       0
  1978 ;;Total ram usage:        6 bytes
  1979 ;; Hardware stack levels used: 2
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987     0355                     _strcmp:	
  1988                           ;psect for function _strcmp
  1989                           
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1993                           ;strcmp@s1 stored from wreg
  1994     0355  00F5               	movwf	strcmp@s1
  1995     0356                     l1497:
  1996     0356  2B5F               	goto	l1503
  1997     0357                     l1499:
  1998     0357  3001               	movlw	1
  1999     0358  00FF               	movwf	btemp+1
  2000     0359  087F               	movf	btemp+1,w
  2001     035A  07F5               	addwf	strcmp@s1,f
  2002     035B                     l1501:
  2003     035B  3001               	movlw	1
  2004     035C  00FF               	movwf	btemp+1
  2005     035D  087F               	movf	btemp+1,w
  2006     035E  07F0               	addwf	strcmp@s2,f
  2007     035F                     l1503:
  2008     035F  0870               	movf	strcmp@s2,w
  2009     0360  0084               	movwf	4
  2010     0361  118A  200C  118A   	fcall	stringdir
  2011     0364  00F2               	movwf	??_strcmp
  2012     0365  0875               	movf	strcmp@s1,w
  2013     0366  0084               	movwf	4
  2014     0367  1383               	bcf	3,7	;select IRP bank0
  2015     0368  0800               	movf	0,w
  2016     0369  00F3               	movwf	??_strcmp+1
  2017     036A  0872               	movf	??_strcmp,w
  2018     036B  0273               	subwf	??_strcmp+1,w
  2019     036C  00F4               	movwf	strcmp@r
  2020     036D  0874               	movf	strcmp@r,w
  2021     036E  1D03               	btfss	3,2
  2022     036F  2B71               	goto	u921
  2023     0370  2B72               	goto	u920
  2024     0371                     u921:
  2025     0371  2B79               	goto	l1507
  2026     0372                     u920:
  2027     0372                     l1505:
  2028     0372  0875               	movf	strcmp@s1,w
  2029     0373  0084               	movwf	4
  2030     0374  0800               	movf	0,w
  2031     0375  1D03               	btfss	3,2
  2032     0376  2B78               	goto	u931
  2033     0377  2B79               	goto	u930
  2034     0378                     u931:
  2035     0378  2B57               	goto	l1499
  2036     0379                     u930:
  2037     0379                     l1507:
  2038     0379  0874               	movf	strcmp@r,w
  2039     037A  00F0               	movwf	?_strcmp
  2040     037B  01F1               	clrf	?_strcmp+1
  2041     037C  1BF0               	btfsc	?_strcmp,7
  2042     037D  03F1               	decf	?_strcmp+1,f
  2043     037E                     l735:
  2044     037E  0008               	return
  2045     037F                     __end_of_strcmp:
  2046                           
  2047                           	psect	text7
  2048     02F4                     __ptext7:	
  2049 ;; *************** function _puts *****************
  2050 ;; Defined at:
  2051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  s               1    wreg     PTR const unsigned char 
  2054 ;;		 -> STR_9(14), STR_7(14), 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  s               1    2[COMMON] PTR const unsigned char 
  2057 ;;		 -> STR_9(14), STR_7(14), 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  2   34[None  ] int 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2067 ;;      Params:         0       0       0       0
  2068 ;;      Locals:         1       0       0       0
  2069 ;;      Temps:          0       0       0       0
  2070 ;;      Totals:         1       0       0       0
  2071 ;;Total ram usage:        1 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 2
  2074 ;; This function calls:
  2075 ;;		_cputs
  2076 ;;		_putch
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082     02F4                     _puts:	
  2083                           ;psect for function _puts
  2084                           
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2088                           ;puts@s stored from wreg
  2089     02F4  00F2               	movwf	puts@s
  2090     02F5                     l1511:
  2091     02F5  0872               	movf	puts@s,w
  2092     02F6  118A  2320  118A   	fcall	_cputs
  2093     02F9                     l1513:
  2094     02F9  300A               	movlw	10
  2095     02FA  118A  22E0  118A   	fcall	_putch
  2096     02FD                     l719:
  2097     02FD  0008               	return
  2098     02FE                     __end_of_puts:
  2099                           
  2100                           	psect	text8
  2101     0320                     __ptext8:	
  2102 ;; *************** function _cputs *****************
  2103 ;; Defined at:
  2104 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  s               1    wreg     PTR const unsigned char 
  2107 ;;		 -> STR_9(14), STR_7(14), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  s               1    1[COMMON] PTR const unsigned char 
  2110 ;;		 -> STR_9(14), STR_7(14), 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2120 ;;      Params:         0       0       0       0
  2121 ;;      Locals:         1       0       0       0
  2122 ;;      Temps:          0       0       0       0
  2123 ;;      Totals:         1       0       0       0
  2124 ;;Total ram usage:        1 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 1
  2127 ;; This function calls:
  2128 ;;		_putch
  2129 ;; This function is called by:
  2130 ;;		_puts
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134     0320                     _cputs:	
  2135                           ;psect for function _cputs
  2136                           
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2140                           ;cputs@s stored from wreg
  2141     0320  00F1               	movwf	cputs@s
  2142     0321                     l1353:
  2143     0321  2B2E               	goto	l1359
  2144     0322                     l1355:
  2145     0322  0871               	movf	cputs@s,w
  2146     0323  0084               	movwf	4
  2147     0324  118A  200C  118A   	fcall	stringdir
  2148     0327  118A  22E0  118A   	fcall	_putch
  2149     032A                     l1357:
  2150     032A  3001               	movlw	1
  2151     032B  00FF               	movwf	btemp+1
  2152     032C  087F               	movf	btemp+1,w
  2153     032D  07F1               	addwf	cputs@s,f
  2154     032E                     l1359:
  2155     032E  0871               	movf	cputs@s,w
  2156     032F  0084               	movwf	4
  2157     0330  118A  200C  118A   	fcall	stringdir
  2158     0333  3A00               	xorlw	0
  2159     0334  1D03               	skipz
  2160     0335  2B37               	goto	u731
  2161     0336  2B38               	goto	u730
  2162     0337                     u731:
  2163     0337  2B22               	goto	l1355
  2164     0338                     u730:
  2165     0338                     l727:
  2166     0338  0008               	return
  2167     0339                     __end_of_cputs:
  2168                           
  2169                           	psect	text9
  2170     04F4                     __ptext9:	
  2171 ;; *************** function _printf *****************
  2172 ;; Defined at:
  2173 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  f               1    wreg     PTR const unsigned char 
  2176 ;;		 -> STR_10(16), STR_8(16), STR_6(4), STR_5(4), 
  2177 ;;		 -> STR_3(4), STR_2(4), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  2180 ;;		 -> STR_10(16), STR_8(16), STR_6(4), STR_5(4), 
  2181 ;;		 -> STR_3(4), STR_2(4), 
  2182 ;;  tmpval          4    0        struct .
  2183 ;;  val             2    8[BANK0 ] unsigned int 
  2184 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  2185 ;;		 -> STR_11(7), NULL(0), ?_printf(2), main@tmp(20), 
  2186 ;;  len             2    0        unsigned int 
  2187 ;;  c               1   11[BANK0 ] unsigned char 
  2188 ;;  ap              1    5[BANK0 ] PTR void [1]
  2189 ;;		 -> ?_printf(2), 
  2190 ;;  prec            1    4[BANK0 ] char 
  2191 ;;  flag            1    3[BANK0 ] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   12[COMMON] int 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2201 ;;      Params:         2       0       0       0
  2202 ;;      Locals:         0       9       0       0
  2203 ;;      Temps:          0       3       0       0
  2204 ;;      Totals:         2      12       0       0
  2205 ;;Total ram usage:       14 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 1
  2208 ;; This function calls:
  2209 ;;		___lwdiv
  2210 ;;		___lwmod
  2211 ;;		_putch
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     04F4                     _printf:	
  2218                           ;psect for function _printf
  2219                           
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2223                           ;printf@f stored from wreg
  2224     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2225     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2226     04F6  00AA               	movwf	printf@f
  2227     04F7                     l1433:
  2228                           
  2229                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2230     04F7  307C               	movlw	(low (?_printf| 0))& (0+255)
  2231     04F8  00A5               	movwf	printf@ap
  2232                           
  2233                           ;doprnt.c: 553: while((c = *f++)) {
  2234     04F9  2DCF               	goto	l1495
  2235     04FA                     l1435:
  2236                           
  2237                           ;doprnt.c: 555: if(c != '%')
  2238     04FA  3025               	movlw	37
  2239     04FB  062B               	xorwf	printf@c,w
  2240     04FC  1903               	btfsc	3,2
  2241     04FD  2CFF               	goto	u831
  2242     04FE  2D00               	goto	u830
  2243     04FF                     u831:
  2244     04FF  2D05               	goto	l1439
  2245     0500                     u830:
  2246     0500                     l1437:
  2247                           
  2248                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2249     0500  082B               	movf	printf@c,w
  2250     0501  118A  22E0  118A   	fcall	_putch
  2251                           
  2252                           ;doprnt.c: 559: continue;
  2253     0504  2DCF               	goto	l1495
  2254     0505                     l1439:
  2255                           
  2256                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2257     0505  01A3               	clrf	printf@flag
  2258                           
  2259                           ;doprnt.c: 661: switch(c = *f++) {
  2260     0506  2D3B               	goto	l1457
  2261     0507                     l1441:
  2262                           
  2263                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2264     0507  0825               	movf	printf@ap,w
  2265     0508  0084               	movwf	4
  2266     0509  0800               	movf	0,w
  2267     050A  00A6               	movwf	printf@cp
  2268     050B  3000               	movlw	0
  2269     050C  00A7               	movwf	printf@cp+1
  2270     050D                     l1443:
  2271     050D  3001               	movlw	1
  2272     050E  00FF               	movwf	btemp+1
  2273     050F  087F               	movf	btemp+1,w
  2274     0510  07A5               	addwf	printf@ap,f
  2275     0511                     l1445:
  2276                           
  2277                           ;doprnt.c: 766: if(!cp)
  2278     0511  0826               	movf	printf@cp,w
  2279     0512  0427               	iorwf	printf@cp+1,w
  2280     0513  1D03               	btfss	3,2
  2281     0514  2D16               	goto	u841
  2282     0515  2D17               	goto	u840
  2283     0516                     u841:
  2284     0516  2D2E               	goto	l1453
  2285     0517                     u840:
  2286     0517                     l1447:
  2287                           
  2288                           ;doprnt.c: 767: cp = "(null)";
  2289     0517  3047               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2290     0518  00A6               	movwf	printf@cp
  2291     0519  3080               	movlw	128
  2292     051A  00A7               	movwf	printf@cp+1
  2293     051B  2D2E               	goto	l1453
  2294     051C                     l1449:
  2295                           
  2296                           ;doprnt.c: 804: (putch(*cp++) );
  2297     051C  0827               	movf	printf@cp+1,w
  2298     051D  00FF               	movwf	btemp+1
  2299     051E  0826               	movf	printf@cp,w
  2300     051F  0084               	movwf	4
  2301     0520  118A  2002  118A   	fcall	stringtab
  2302     0523  118A  22E0  118A   	fcall	_putch
  2303     0526                     l1451:
  2304     0526  3001               	movlw	1
  2305     0527  1283               	bcf	3,5	;RP0=0, select bank0
  2306     0528  1303               	bcf	3,6	;RP1=0, select bank0
  2307     0529  07A6               	addwf	printf@cp,f
  2308     052A  1803               	skipnc
  2309     052B  0AA7               	incf	printf@cp+1,f
  2310     052C  3000               	movlw	0
  2311     052D  07A7               	addwf	printf@cp+1,f
  2312     052E                     l1453:
  2313     052E  0827               	movf	printf@cp+1,w
  2314     052F  00FF               	movwf	btemp+1
  2315     0530  0826               	movf	printf@cp,w
  2316     0531  0084               	movwf	4
  2317     0532  118A  2002  118A   	fcall	stringtab
  2318     0535  3A00               	xorlw	0
  2319     0536  1D03               	skipz
  2320     0537  2D39               	goto	u851
  2321     0538  2D3A               	goto	u850
  2322     0539                     u851:
  2323     0539  2D1C               	goto	l1449
  2324     053A                     u850:
  2325     053A  2DCF               	goto	l1495
  2326     053B                     l1457:
  2327     053B  3001               	movlw	1
  2328     053C  07AA               	addwf	printf@f,f
  2329     053D  30FF               	movlw	-1
  2330     053E  072A               	addwf	printf@f,w
  2331     053F  0084               	movwf	4
  2332     0540  118A  200C  118A   	fcall	stringdir
  2333     0543  00AB               	movwf	printf@c
  2334                           
  2335                           ; Switch size 1, requested type "simple"
  2336                           ; Number of cases is 4, Range of values is 0 to 115
  2337                           ; switch strategies available:
  2338                           ; Name         Instructions Cycles
  2339                           ; simple_byte           13     7 (average)
  2340                           ; direct_byte          239     7 (fixed)
  2341                           ; jumptable            260     6 (fixed)
  2342                           ;	Chosen strategy is simple_byte
  2343     0544  3A00               	xorlw	0	; case 0
  2344     0545  1903               	skipnz
  2345     0546  2DDF               	goto	l235
  2346     0547  3A64               	xorlw	100	; case 100
  2347     0548  1903               	skipnz
  2348     0549  2D51               	goto	l1459
  2349     054A  3A0D               	xorlw	13	; case 105
  2350     054B  1903               	skipnz
  2351     054C  2D51               	goto	l1459
  2352     054D  3A1A               	xorlw	26	; case 115
  2353     054E  1903               	skipnz
  2354     054F  2D07               	goto	l1441
  2355     0550  2DCF               	goto	l1495
  2356     0551                     l1459:
  2357                           
  2358                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2359     0551  0825               	movf	printf@ap,w
  2360     0552  0084               	movwf	4
  2361     0553  0800               	movf	0,w
  2362     0554  00A8               	movwf	printf@val
  2363     0555  0A84               	incf	4,f
  2364     0556  0800               	movf	0,w
  2365     0557  00A9               	movwf	printf@val+1
  2366     0558                     l1461:
  2367     0558  3002               	movlw	2
  2368     0559  00FF               	movwf	btemp+1
  2369     055A  087F               	movf	btemp+1,w
  2370     055B  07A5               	addwf	printf@ap,f
  2371     055C                     l1463:
  2372                           
  2373                           ;doprnt.c: 1287: if((int)val < 0) {
  2374     055C  1FA9               	btfss	printf@val+1,7
  2375     055D  2D5F               	goto	u861
  2376     055E  2D60               	goto	u860
  2377     055F                     u861:
  2378     055F  2D69               	goto	l1469
  2379     0560                     u860:
  2380     0560                     l1465:
  2381                           
  2382                           ;doprnt.c: 1288: flag |= 0x03;
  2383     0560  3003               	movlw	3
  2384     0561  00FF               	movwf	btemp+1
  2385     0562  087F               	movf	btemp+1,w
  2386     0563  04A3               	iorwf	printf@flag,f
  2387     0564                     l1467:
  2388                           
  2389                           ;doprnt.c: 1289: val = -val;
  2390     0564  09A8               	comf	printf@val,f
  2391     0565  09A9               	comf	printf@val+1,f
  2392     0566  0AA8               	incf	printf@val,f
  2393     0567  1903               	skipnz
  2394     0568  0AA9               	incf	printf@val+1,f
  2395     0569                     l1469:
  2396                           
  2397                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2398     0569  01AB               	clrf	printf@c
  2399     056A  0AAB               	incf	printf@c,f
  2400     056B                     l1475:
  2401                           
  2402                           ;doprnt.c: 1332: if(val < dpowers[c])
  2403     056B  082B               	movf	printf@c,w
  2404     056C  00A0               	movwf	??_printf
  2405     056D  0720               	addwf	??_printf,w
  2406     056E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2407     056F  0084               	movwf	4
  2408     0570  118A  200C  118A   	fcall	stringdir
  2409     0573  00A1               	movwf	??_printf+1
  2410     0574  118A  200C  118A   	fcall	stringdir
  2411     0577  00A2               	movwf	??_printf+2
  2412     0578  0822               	movf	??_printf+2,w
  2413     0579  0229               	subwf	printf@val+1,w
  2414     057A  1D03               	skipz
  2415     057B  2D7E               	goto	u875
  2416     057C  0821               	movf	??_printf+1,w
  2417     057D  0228               	subwf	printf@val,w
  2418     057E                     u875:
  2419     057E  1803               	skipnc
  2420     057F  2D81               	goto	u871
  2421     0580  2D82               	goto	u870
  2422     0581                     u871:
  2423     0581  2D83               	goto	l1479
  2424     0582                     u870:
  2425     0582  2D8D               	goto	l1483
  2426     0583                     l1479:
  2427     0583  3001               	movlw	1
  2428     0584  00FF               	movwf	btemp+1
  2429     0585  087F               	movf	btemp+1,w
  2430     0586  07AB               	addwf	printf@c,f
  2431     0587                     l1481:
  2432     0587  3005               	movlw	5
  2433     0588  062B               	xorwf	printf@c,w
  2434     0589  1D03               	btfss	3,2
  2435     058A  2D8C               	goto	u881
  2436     058B  2D8D               	goto	u880
  2437     058C                     u881:
  2438     058C  2D6B               	goto	l1475
  2439     058D                     u880:
  2440     058D                     l1483:
  2441                           
  2442                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2443     058D  0823               	movf	printf@flag,w
  2444     058E  3903               	andlw	3
  2445     058F  1903               	btfsc	3,2
  2446     0590  2D92               	goto	u891
  2447     0591  2D93               	goto	u890
  2448     0592                     u891:
  2449     0592  2D97               	goto	l1487
  2450     0593                     u890:
  2451     0593                     l1485:
  2452                           
  2453                           ;doprnt.c: 1465: (putch('-') );
  2454     0593  302D               	movlw	45
  2455     0594  118A  22E0  118A   	fcall	_putch
  2456     0597                     l1487:
  2457                           
  2458                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2459     0597  1283               	bcf	3,5	;RP0=0, select bank0
  2460     0598  1303               	bcf	3,6	;RP1=0, select bank0
  2461     0599  082B               	movf	printf@c,w
  2462     059A  00A4               	movwf	printf@prec
  2463                           
  2464                           ;doprnt.c: 1500: while(prec--) {
  2465     059B  2DC4               	goto	l1493
  2466     059C                     l1489:
  2467                           
  2468                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2469     059C  300A               	movlw	10
  2470     059D  00F7               	movwf	___lwmod@divisor
  2471     059E  3000               	movlw	0
  2472     059F  00F8               	movwf	___lwmod@divisor+1
  2473     05A0  0824               	movf	printf@prec,w
  2474     05A1  00A0               	movwf	??_printf
  2475     05A2  0720               	addwf	??_printf,w
  2476     05A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2477     05A4  0084               	movwf	4
  2478     05A5  118A  200C  118A   	fcall	stringdir
  2479     05A8  00F0               	movwf	___lwdiv@divisor
  2480     05A9  118A  200C  118A   	fcall	stringdir
  2481     05AC  00F1               	movwf	___lwdiv@divisor+1
  2482     05AD  0829               	movf	printf@val+1,w
  2483     05AE  00F3               	movwf	___lwdiv@dividend+1
  2484     05AF  0828               	movf	printf@val,w
  2485     05B0  00F2               	movwf	___lwdiv@dividend
  2486     05B1  118A  2413  118A   	fcall	___lwdiv
  2487     05B4  0871               	movf	?___lwdiv+1,w
  2488     05B5  00FA               	movwf	___lwmod@dividend+1
  2489     05B6  0870               	movf	?___lwdiv,w
  2490     05B7  00F9               	movwf	___lwmod@dividend
  2491     05B8  118A  23D9  118A   	fcall	___lwmod
  2492     05BB  0877               	movf	?___lwmod,w
  2493     05BC  3E30               	addlw	48
  2494     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2495     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2496     05BF  00AB               	movwf	printf@c
  2497     05C0                     l1491:
  2498                           
  2499                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2500     05C0  082B               	movf	printf@c,w
  2501     05C1  118A  22E0  118A   	fcall	_putch
  2502     05C4                     l1493:
  2503     05C4  30FF               	movlw	255
  2504     05C5  00FF               	movwf	btemp+1
  2505     05C6  087F               	movf	btemp+1,w
  2506     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  2507     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  2508     05C9  07A4               	addwf	printf@prec,f
  2509     05CA  0A24               	incf	printf@prec,w
  2510     05CB  1D03               	btfss	3,2
  2511     05CC  2DCE               	goto	u901
  2512     05CD  2DCF               	goto	u900
  2513     05CE                     u901:
  2514     05CE  2D9C               	goto	l1489
  2515     05CF                     u900:
  2516     05CF                     l1495:
  2517     05CF  3001               	movlw	1
  2518     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2519     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2520     05D2  07AA               	addwf	printf@f,f
  2521     05D3  30FF               	movlw	-1
  2522     05D4  072A               	addwf	printf@f,w
  2523     05D5  0084               	movwf	4
  2524     05D6  118A  200C  118A   	fcall	stringdir
  2525     05D9  00AB               	movwf	printf@c
  2526     05DA  082B               	movf	printf@c,w
  2527     05DB  1D03               	btfss	3,2
  2528     05DC  2DDE               	goto	u911
  2529     05DD  2DDF               	goto	u910
  2530     05DE                     u911:
  2531     05DE  2CFA               	goto	l1435
  2532     05DF                     u910:
  2533     05DF                     l235:
  2534     05DF  0008               	return
  2535     05E0                     __end_of_printf:
  2536                           
  2537                           	psect	text10
  2538     03D9                     __ptext10:	
  2539 ;; *************** function ___lwmod *****************
  2540 ;; Defined at:
  2541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  divisor         2    7[COMMON] unsigned int 
  2544 ;;  dividend        2    9[COMMON] unsigned int 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  counter         1   11[COMMON] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  2    7[COMMON] unsigned int 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, btemp+1
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2556 ;;      Params:         4       0       0       0
  2557 ;;      Locals:         1       0       0       0
  2558 ;;      Temps:          0       0       0       0
  2559 ;;      Totals:         5       0       0       0
  2560 ;;Total ram usage:        5 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_printf
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     03D9                     ___lwmod:	
  2570                           ;psect for function ___lwmod
  2571                           
  2572     03D9                     l1297:	
  2573                           ;incstack = 0
  2574                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2575                           
  2576     03D9  0877               	movf	___lwmod@divisor,w
  2577     03DA  0478               	iorwf	___lwmod@divisor+1,w
  2578     03DB  1903               	btfsc	3,2
  2579     03DC  2BDE               	goto	u651
  2580     03DD  2BDF               	goto	u650
  2581     03DE                     u651:
  2582     03DE  2C0E               	goto	l1315
  2583     03DF                     u650:
  2584     03DF                     l1299:
  2585     03DF  01FB               	clrf	___lwmod@counter
  2586     03E0  0AFB               	incf	___lwmod@counter,f
  2587     03E1  2BED               	goto	l1305
  2588     03E2                     l1301:
  2589     03E2  3001               	movlw	1
  2590     03E3                     u665:
  2591     03E3  1003               	clrc
  2592     03E4  0DF7               	rlf	___lwmod@divisor,f
  2593     03E5  0DF8               	rlf	___lwmod@divisor+1,f
  2594     03E6  3EFF               	addlw	-1
  2595     03E7  1D03               	skipz
  2596     03E8  2BE3               	goto	u665
  2597     03E9                     l1303:
  2598     03E9  3001               	movlw	1
  2599     03EA  00FF               	movwf	btemp+1
  2600     03EB  087F               	movf	btemp+1,w
  2601     03EC  07FB               	addwf	___lwmod@counter,f
  2602     03ED                     l1305:
  2603     03ED  1FF8               	btfss	___lwmod@divisor+1,7
  2604     03EE  2BF0               	goto	u671
  2605     03EF  2BF1               	goto	u670
  2606     03F0                     u671:
  2607     03F0  2BE2               	goto	l1301
  2608     03F1                     u670:
  2609     03F1                     l1307:
  2610     03F1  0878               	movf	___lwmod@divisor+1,w
  2611     03F2  027A               	subwf	___lwmod@dividend+1,w
  2612     03F3  1D03               	skipz
  2613     03F4  2BF7               	goto	u685
  2614     03F5  0877               	movf	___lwmod@divisor,w
  2615     03F6  0279               	subwf	___lwmod@dividend,w
  2616     03F7                     u685:
  2617     03F7  1C03               	skipc
  2618     03F8  2BFA               	goto	u681
  2619     03F9  2BFB               	goto	u680
  2620     03FA                     u681:
  2621     03FA  2C01               	goto	l1311
  2622     03FB                     u680:
  2623     03FB                     l1309:
  2624     03FB  0877               	movf	___lwmod@divisor,w
  2625     03FC  02F9               	subwf	___lwmod@dividend,f
  2626     03FD  0878               	movf	___lwmod@divisor+1,w
  2627     03FE  1C03               	skipc
  2628     03FF  03FA               	decf	___lwmod@dividend+1,f
  2629     0400  02FA               	subwf	___lwmod@dividend+1,f
  2630     0401                     l1311:
  2631     0401  3001               	movlw	1
  2632     0402                     u695:
  2633     0402  1003               	clrc
  2634     0403  0CF8               	rrf	___lwmod@divisor+1,f
  2635     0404  0CF7               	rrf	___lwmod@divisor,f
  2636     0405  3EFF               	addlw	-1
  2637     0406  1D03               	skipz
  2638     0407  2C02               	goto	u695
  2639     0408                     l1313:
  2640     0408  3001               	movlw	1
  2641     0409  02FB               	subwf	___lwmod@counter,f
  2642     040A  1D03               	btfss	3,2
  2643     040B  2C0D               	goto	u701
  2644     040C  2C0E               	goto	u700
  2645     040D                     u701:
  2646     040D  2BF1               	goto	l1307
  2647     040E                     u700:
  2648     040E                     l1315:
  2649     040E  087A               	movf	___lwmod@dividend+1,w
  2650     040F  00F8               	movwf	?___lwmod+1
  2651     0410  0879               	movf	___lwmod@dividend,w
  2652     0411  00F7               	movwf	?___lwmod
  2653     0412                     l521:
  2654     0412  0008               	return
  2655     0413                     __end_of___lwmod:
  2656                           
  2657                           	psect	text11
  2658     0413                     __ptext11:	
  2659 ;; *************** function ___lwdiv *****************
  2660 ;; Defined at:
  2661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  divisor         2    0[COMMON] unsigned int 
  2664 ;;  dividend        2    2[COMMON] unsigned int 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  quotient        2    4[COMMON] unsigned int 
  2667 ;;  counter         1    6[COMMON] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2    0[COMMON] unsigned int 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, btemp+1
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2677 ;;      Params:         4       0       0       0
  2678 ;;      Locals:         3       0       0       0
  2679 ;;      Temps:          0       0       0       0
  2680 ;;      Totals:         7       0       0       0
  2681 ;;Total ram usage:        7 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; This function calls:
  2684 ;;		Nothing
  2685 ;; This function is called by:
  2686 ;;		_printf
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690     0413                     ___lwdiv:	
  2691                           ;psect for function ___lwdiv
  2692                           
  2693     0413                     l1271:	
  2694                           ;incstack = 0
  2695                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2696                           
  2697     0413  01F4               	clrf	___lwdiv@quotient
  2698     0414  01F5               	clrf	___lwdiv@quotient+1
  2699     0415                     l1273:
  2700     0415  0870               	movf	___lwdiv@divisor,w
  2701     0416  0471               	iorwf	___lwdiv@divisor+1,w
  2702     0417  1903               	btfsc	3,2
  2703     0418  2C1A               	goto	u581
  2704     0419  2C1B               	goto	u580
  2705     041A                     u581:
  2706     041A  2C52               	goto	l1293
  2707     041B                     u580:
  2708     041B                     l1275:
  2709     041B  01F6               	clrf	___lwdiv@counter
  2710     041C  0AF6               	incf	___lwdiv@counter,f
  2711     041D  2C29               	goto	l1281
  2712     041E                     l1277:
  2713     041E  3001               	movlw	1
  2714     041F                     u595:
  2715     041F  1003               	clrc
  2716     0420  0DF0               	rlf	___lwdiv@divisor,f
  2717     0421  0DF1               	rlf	___lwdiv@divisor+1,f
  2718     0422  3EFF               	addlw	-1
  2719     0423  1D03               	skipz
  2720     0424  2C1F               	goto	u595
  2721     0425                     l1279:
  2722     0425  3001               	movlw	1
  2723     0426  00FF               	movwf	btemp+1
  2724     0427  087F               	movf	btemp+1,w
  2725     0428  07F6               	addwf	___lwdiv@counter,f
  2726     0429                     l1281:
  2727     0429  1FF1               	btfss	___lwdiv@divisor+1,7
  2728     042A  2C2C               	goto	u601
  2729     042B  2C2D               	goto	u600
  2730     042C                     u601:
  2731     042C  2C1E               	goto	l1277
  2732     042D                     u600:
  2733     042D                     l1283:
  2734     042D  3001               	movlw	1
  2735     042E                     u615:
  2736     042E  1003               	clrc
  2737     042F  0DF4               	rlf	___lwdiv@quotient,f
  2738     0430  0DF5               	rlf	___lwdiv@quotient+1,f
  2739     0431  3EFF               	addlw	-1
  2740     0432  1D03               	skipz
  2741     0433  2C2E               	goto	u615
  2742     0434  0871               	movf	___lwdiv@divisor+1,w
  2743     0435  0273               	subwf	___lwdiv@dividend+1,w
  2744     0436  1D03               	skipz
  2745     0437  2C3A               	goto	u625
  2746     0438  0870               	movf	___lwdiv@divisor,w
  2747     0439  0272               	subwf	___lwdiv@dividend,w
  2748     043A                     u625:
  2749     043A  1C03               	skipc
  2750     043B  2C3D               	goto	u621
  2751     043C  2C3E               	goto	u620
  2752     043D                     u621:
  2753     043D  2C45               	goto	l1289
  2754     043E                     u620:
  2755     043E                     l1285:
  2756     043E  0870               	movf	___lwdiv@divisor,w
  2757     043F  02F2               	subwf	___lwdiv@dividend,f
  2758     0440  0871               	movf	___lwdiv@divisor+1,w
  2759     0441  1C03               	skipc
  2760     0442  03F3               	decf	___lwdiv@dividend+1,f
  2761     0443  02F3               	subwf	___lwdiv@dividend+1,f
  2762     0444                     l1287:
  2763     0444  1474               	bsf	___lwdiv@quotient,0
  2764     0445                     l1289:
  2765     0445  3001               	movlw	1
  2766     0446                     u635:
  2767     0446  1003               	clrc
  2768     0447  0CF1               	rrf	___lwdiv@divisor+1,f
  2769     0448  0CF0               	rrf	___lwdiv@divisor,f
  2770     0449  3EFF               	addlw	-1
  2771     044A  1D03               	skipz
  2772     044B  2C46               	goto	u635
  2773     044C                     l1291:
  2774     044C  3001               	movlw	1
  2775     044D  02F6               	subwf	___lwdiv@counter,f
  2776     044E  1D03               	btfss	3,2
  2777     044F  2C51               	goto	u641
  2778     0450  2C52               	goto	u640
  2779     0451                     u641:
  2780     0451  2C2D               	goto	l1283
  2781     0452                     u640:
  2782     0452                     l1293:
  2783     0452  0875               	movf	___lwdiv@quotient+1,w
  2784     0453  00F1               	movwf	?___lwdiv+1
  2785     0454  0874               	movf	___lwdiv@quotient,w
  2786     0455  00F0               	movwf	?___lwdiv
  2787     0456                     l511:
  2788     0456  0008               	return
  2789     0457                     __end_of___lwdiv:
  2790                           
  2791                           	psect	text12
  2792     02FE                     __ptext12:	
  2793 ;; *************** function _initUART *****************
  2794 ;; Defined at:
  2795 ;;		line 6 in file "uart.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2809 ;;      Params:         0       0       0       0
  2810 ;;      Locals:         0       0       0       0
  2811 ;;      Temps:          0       0       0       0
  2812 ;;      Totals:         0       0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822     02FE                     _initUART:	
  2823                           ;psect for function _initUART
  2824                           
  2825     02FE                     l1395:	
  2826                           ;incstack = 0
  2827                           ; Regs used in _initUART: [wreg]
  2828                           
  2829                           
  2830                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  2831     02FE  3019               	movlw	25
  2832     02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2833     0300  1303               	bcf	3,6	;RP1=0, select bank1
  2834     0301  0099               	movwf	25	;volatile
  2835                           
  2836                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  2837     0302  3024               	movlw	36
  2838     0303  0098               	movwf	24	;volatile
  2839                           
  2840                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  2841     0304  3090               	movlw	144
  2842     0305  1283               	bcf	3,5	;RP0=0, select bank0
  2843     0306  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0307  0098               	movwf	24	;volatile
  2845     0308                     l103:
  2846     0308  0008               	return
  2847     0309                     __end_of_initUART:
  2848                           
  2849                           	psect	text13
  2850     02D2                     __ptext13:	
  2851 ;; *************** function _gets *****************
  2852 ;; Defined at:
  2853 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  s               1    wreg     PTR unsigned char 
  2856 ;;		 -> main@tmp(20), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  s               1    8[COMMON] PTR unsigned char 
  2859 ;;		 -> main@tmp(20), 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      PTR unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2869 ;;      Params:         0       0       0       0
  2870 ;;      Locals:         1       0       0       0
  2871 ;;      Temps:          0       0       0       0
  2872 ;;      Totals:         1       0       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 3
  2876 ;; This function calls:
  2877 ;;		_cgets
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883     02D2                     _gets:	
  2884                           ;psect for function _gets
  2885                           
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2889                           ;gets@s stored from wreg
  2890     02D2  00F8               	movwf	gets@s
  2891     02D3                     l1397:
  2892                           
  2893                           ;	Return value of _gets is never used
  2894     02D3  0878               	movf	gets@s,w
  2895     02D4  118A  249D  118A   	fcall	_cgets
  2896     02D7                     l692:
  2897     02D7  0008               	return
  2898     02D8                     __end_of_gets:
  2899                           
  2900                           	psect	text14
  2901     049D                     __ptext14:	
  2902 ;; *************** function _cgets *****************
  2903 ;; Defined at:
  2904 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  s               1    wreg     PTR unsigned char 
  2907 ;;		 -> main@tmp(20), 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  s               1    6[COMMON] PTR unsigned char 
  2910 ;;		 -> main@tmp(20), 
  2911 ;;  c               2    4[COMMON] int 
  2912 ;;  s1              1    7[COMMON] PTR unsigned char 
  2913 ;;		 -> main@tmp(20), 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      PTR unsigned char 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2923 ;;      Params:         0       0       0       0
  2924 ;;      Locals:         4       0       0       0
  2925 ;;      Temps:          2       0       0       0
  2926 ;;      Totals:         6       0       0       0
  2927 ;;Total ram usage:        6 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 2
  2930 ;; This function calls:
  2931 ;;		_getche
  2932 ;;		_putch
  2933 ;; This function is called by:
  2934 ;;		_gets
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938     049D                     _cgets:	
  2939                           ;psect for function _cgets
  2940                           
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2944                           ;cgets@s stored from wreg
  2945     049D  00F6               	movwf	cgets@s
  2946     049E                     l1319:
  2947     049E  0876               	movf	cgets@s,w
  2948     049F  00F7               	movwf	cgets@s1
  2949     04A0  2CD7               	goto	l1347
  2950     04A1                     l1321:
  2951     04A1  0876               	movf	cgets@s,w
  2952     04A2  0677               	xorwf	cgets@s1,w
  2953     04A3  1D03               	skipz
  2954     04A4  2CA6               	goto	u711
  2955     04A5  2CA7               	goto	u710
  2956     04A6                     u711:
  2957     04A6  2CA8               	goto	l1325
  2958     04A7                     u710:
  2959     04A7  2CD7               	goto	l1347
  2960     04A8                     l1325:
  2961     04A8  3020               	movlw	32
  2962     04A9  118A  22E0  118A   	fcall	_putch
  2963     04AC  3008               	movlw	8
  2964     04AD  118A  22E0  118A   	fcall	_putch
  2965     04B0                     l1327:
  2966     04B0  3001               	movlw	1
  2967     04B1  02F7               	subwf	cgets@s1,f
  2968     04B2  2CD7               	goto	l1347
  2969     04B3                     l1329:
  2970     04B3  3008               	movlw	8
  2971     04B4  118A  22E0  118A   	fcall	_putch
  2972     04B7  3020               	movlw	32
  2973     04B8  118A  22E0  118A   	fcall	_putch
  2974     04BB  3008               	movlw	8
  2975     04BC  118A  22E0  118A   	fcall	_putch
  2976     04BF                     l1331:
  2977     04BF  3001               	movlw	1
  2978     04C0  02F7               	subwf	cgets@s1,f
  2979     04C1                     l1333:
  2980     04C1  0877               	movf	cgets@s1,w
  2981     04C2  0276               	subwf	cgets@s,w
  2982     04C3  1C03               	skipc
  2983     04C4  2CC6               	goto	u721
  2984     04C5  2CC7               	goto	u720
  2985     04C6                     u721:
  2986     04C6  2CB3               	goto	l1329
  2987     04C7                     u720:
  2988     04C7  2CD7               	goto	l1347
  2989     04C8                     l1335:
  2990     04C8  0877               	movf	cgets@s1,w
  2991     04C9  0084               	movwf	4
  2992     04CA  1383               	bcf	3,7	;select IRP bank0
  2993     04CB  0180               	clrf	0
  2994     04CC                     l1337:
  2995     04CC  0876               	movf	cgets@s,w
  2996     04CD  2CF3               	goto	l710
  2997     04CE                     l1341:
  2998     04CE  0877               	movf	cgets@s1,w
  2999     04CF  0084               	movwf	4
  3000     04D0  0874               	movf	cgets@c,w
  3001     04D1  1383               	bcf	3,7	;select IRP bank0
  3002     04D2  0080               	movwf	0
  3003     04D3                     l1343:
  3004     04D3  3001               	movlw	1
  3005     04D4  00FF               	movwf	btemp+1
  3006     04D5  087F               	movf	btemp+1,w
  3007     04D6  07F7               	addwf	cgets@s1,f
  3008     04D7                     l1347:
  3009     04D7  118A  22EA  118A   	fcall	_getche
  3010     04DA  00F2               	movwf	??_cgets
  3011     04DB  01F3               	clrf	??_cgets+1
  3012     04DC  0872               	movf	??_cgets,w
  3013     04DD  00F4               	movwf	cgets@c
  3014     04DE  0873               	movf	??_cgets+1,w
  3015     04DF  00F5               	movwf	cgets@c+1
  3016                           
  3017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3018                           ; Switch size 1, requested type "simple"
  3019                           ; Number of cases is 1, Range of values is 0 to 0
  3020                           ; switch strategies available:
  3021                           ; Name         Instructions Cycles
  3022                           ; simple_byte            4     3 (average)
  3023                           ; direct_byte            9     7 (fixed)
  3024                           ; jumptable            260     6 (fixed)
  3025                           ;	Chosen strategy is simple_byte
  3026     04E0  0875               	movf	cgets@c+1,w
  3027     04E1  3A00               	xorlw	0	; case 0
  3028     04E2  1903               	skipnz
  3029     04E3  2CE5               	goto	l1643
  3030     04E4  2CCE               	goto	l1341
  3031     04E5                     l1643:
  3032                           
  3033                           ; Switch size 1, requested type "simple"
  3034                           ; Number of cases is 4, Range of values is 8 to 21
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte           13     7 (average)
  3038                           ; direct_byte           38    10 (fixed)
  3039                           ; jumptable            263     9 (fixed)
  3040                           ;	Chosen strategy is simple_byte
  3041     04E5  0874               	movf	cgets@c,w
  3042     04E6  3A08               	xorlw	8	; case 8
  3043     04E7  1903               	skipnz
  3044     04E8  2CA1               	goto	l1321
  3045     04E9  3A02               	xorlw	2	; case 10
  3046     04EA  1903               	skipnz
  3047     04EB  2CC8               	goto	l1335
  3048     04EC  3A07               	xorlw	7	; case 13
  3049     04ED  1903               	skipnz
  3050     04EE  2CC8               	goto	l1335
  3051     04EF  3A18               	xorlw	24	; case 21
  3052     04F0  1903               	skipnz
  3053     04F1  2CC1               	goto	l1333
  3054     04F2  2CCE               	goto	l1341
  3055     04F3                     l710:
  3056     04F3  0008               	return
  3057     04F4                     __end_of_cgets:
  3058                           
  3059                           	psect	text15
  3060     02EA                     __ptext15:	
  3061 ;; *************** function _getche *****************
  3062 ;; Defined at:
  3063 ;;		line 28 in file "uart.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  c               1    1[COMMON] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3077 ;;      Params:         0       0       0       0
  3078 ;;      Locals:         1       0       0       0
  3079 ;;      Temps:          0       0       0       0
  3080 ;;      Totals:         1       0       0       0
  3081 ;;Total ram usage:        1 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 1
  3084 ;; This function calls:
  3085 ;;		_getch
  3086 ;;		_putch
  3087 ;; This function is called by:
  3088 ;;		_cgets
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092     02EA                     _getche:	
  3093                           ;psect for function _getche
  3094                           
  3095     02EA                     l1251:	
  3096                           ;incstack = 0
  3097                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  3098                           
  3099                           
  3100                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  3101     02EA  118A  22D8  118A   	fcall	_getch
  3102     02ED  00F1               	movwf	getche@c
  3103     02EE                     l1253:
  3104                           
  3105                           ;uart.c: 33: putch(c);
  3106     02EE  0871               	movf	getche@c,w
  3107     02EF  118A  22E0  118A   	fcall	_putch
  3108     02F2                     l1255:
  3109                           
  3110                           ;uart.c: 35: return c;
  3111     02F2  0871               	movf	getche@c,w
  3112     02F3                     l118:
  3113     02F3  0008               	return
  3114     02F4                     __end_of_getche:
  3115                           
  3116                           	psect	text16
  3117     02E0                     __ptext16:	
  3118 ;; *************** function _putch *****************
  3119 ;; Defined at:
  3120 ;;		line 13 in file "uart.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  byte            1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  byte            1    0[COMMON] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3134 ;;      Params:         0       0       0       0
  3135 ;;      Locals:         1       0       0       0
  3136 ;;      Temps:          0       0       0       0
  3137 ;;      Totals:         1       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_getche
  3144 ;;		_printf
  3145 ;;		_cgets
  3146 ;;		_puts
  3147 ;;		_cputs
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151     02E0                     _putch:	
  3152                           ;psect for function _putch
  3153                           
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _putch: [wreg]
  3157                           ;putch@byte stored from wreg
  3158     02E0  00F0               	movwf	putch@byte
  3159     02E1                     l1241:
  3160     02E1                     l106:	
  3161                           ;uart.c: 15: while(!TXIF){
  3162                           
  3163     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3164     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3165     02E3  1E0C               	btfss	12,4	;volatile
  3166     02E4  2AE6               	goto	u541
  3167     02E5  2AE7               	goto	u540
  3168     02E6                     u541:
  3169     02E6  2AE1               	goto	l106
  3170     02E7                     u540:
  3171     02E7                     l1243:
  3172                           
  3173                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  3174     02E7  0870               	movf	putch@byte,w
  3175     02E8  0099               	movwf	25	;volatile
  3176     02E9                     l109:
  3177     02E9  0008               	return
  3178     02EA                     __end_of_putch:
  3179                           
  3180                           	psect	text17
  3181     02D8                     __ptext17:	
  3182 ;; *************** function _getch *****************
  3183 ;; Defined at:
  3184 ;;		line 20 in file "uart.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3198 ;;      Params:         0       0       0       0
  3199 ;;      Locals:         0       0       0       0
  3200 ;;      Temps:          0       0       0       0
  3201 ;;      Totals:         0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_getche
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211     02D8                     _getch:	
  3212                           ;psect for function _getch
  3213                           
  3214     02D8                     l1245:	
  3215                           ;incstack = 0
  3216                           ; Regs used in _getch: [wreg]
  3217                           
  3218     02D8                     l112:	
  3219                           ;uart.c: 22: while(!RCIF){
  3220                           
  3221     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3222     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3223     02DA  1E8C               	btfss	12,5	;volatile
  3224     02DB  2ADD               	goto	u551
  3225     02DC  2ADE               	goto	u550
  3226     02DD                     u551:
  3227     02DD  2AD8               	goto	l112
  3228     02DE                     u550:
  3229     02DE                     l1247:
  3230                           
  3231                           ;uart.c: 23: };uart.c: 25: return RCREG;
  3232     02DE  081A               	movf	26,w	;volatile
  3233     02DF                     l115:
  3234     02DF  0008               	return
  3235     02E0                     __end_of_getch:
  3236     007E                     btemp	set	126	;btemp
  3237     007E                     wtemp0	set	126
  3238                           
  3239                           	psect	idloc
  3240                           
  3241                           ;Config register IDLOC0 @ 0x2000
  3242                           ;	unspecified, using default values
  3243     2000                     	org	8192
  3244     2000  3FFF               	dw	16383
  3245                           
  3246                           ;Config register IDLOC1 @ 0x2001
  3247                           ;	unspecified, using default values
  3248     2001                     	org	8193
  3249     2001  3FFF               	dw	16383
  3250                           
  3251                           ;Config register IDLOC2 @ 0x2002
  3252                           ;	unspecified, using default values
  3253     2002                     	org	8194
  3254     2002  3FFF               	dw	16383
  3255                           
  3256                           ;Config register IDLOC3 @ 0x2003
  3257                           ;	unspecified, using default values
  3258     2003                     	org	8195
  3259     2003  3FFF               	dw	16383
  3260                           
  3261                           	psect	config
  3262                           
  3263                           ;Config register CONFIG @ 0x2007
  3264                           ;	Oscillator Selection bits
  3265                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  3266                           ;	Watchdog Timer Enable bit
  3267                           ;	WDTE = OFF, WDT disabled
  3268                           ;	Power-up Timer Enable bit
  3269                           ;	PWRTE = OFF, PWRT disabled
  3270                           ;	RA5/MCLR/VPP Pin Function Select bit
  3271                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  3272                           ;	Brown-out Detect Enable bit
  3273                           ;	BOREN = ON, BOD enabled
  3274                           ;	Low-Voltage Programming Enable bit
  3275                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3276                           ;	Data EE Memory Code Protection bit
  3277                           ;	CPD = OFF, Data memory code protection off
  3278                           ;	Flash Program Memory Code Protection bit
  3279                           ;	CP = OFF, Code protection off
  3280     2007                     	org	8199
  3281     2007  3F78               	dw	16248

Data Sizes:
    Strings     81
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      47
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), STR_1(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    cputs@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_9(CODE[14]), STR_7(CODE[14]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_9(CODE[14]), STR_7(CODE[14]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    gets@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_10(CODE[16]), STR_8(CODE[16]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[7]), NULL(NULL[0]), ?_printf(COMMON[2]), main@tmp(BANK0[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@tmp(BANK0[20]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 20
		 -> main@tmp(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0    4348
                                             12 BANK0     34    34      0
                               _gets
                           _initUART
                             _printf
                               _puts
                             _strcmp
                             _strlen
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               2     1      1    1321
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     156
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     4      2     200
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     210
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1323
                                             12 COMMON     2     0      2
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch
   _strcmp
   _strlen
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     2E      2F       3       58.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      3D       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      3D      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 19 16:42:35 2023

                      pc 0002                       l51 0711                       l52 0669  
                     l61 06E1                       l53 0683                       l70 0749  
                     l62 06FB                       l55 0691                       l47 0646  
                     l72 0757                       l56 06AB                       l73 0771  
                     l58 06B9                       l75 077F                       l59 06D3  
                     l76 0799                       l68 07D7                       l69 072F  
                     l78 07A7                       l79 07C1                       fsr 0004  
                    l103 0308                      l112 02D8                      l106 02E1  
                    l115 02DF                      l109 02E9                      l118 02F3  
                    l235 05DF                      l511 0456                      l521 0412  
                    l710 04F3                      l741 031F                      l727 0338  
                    l719 02FD                      l735 037E                      l752 049C  
                    l770 0354                      l692 02D7                      l765 03AB  
                    l781 03D8                      l768 033A                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u600 042D                      u601 042C                      u540 02E7  
                    u620 043E                      u700 040E                      u541 02E6  
                    u621 043D                      u701 040D                      u550 02DE  
                    u710 04A7                      u551 02DD                      u711 04A6  
                    u615 042E                      u720 04C7                      u640 0452  
                    u560 0344                      u800 0466                      u721 04C6  
                    u641 0451                      u625 043A                      u561 0343  
                    u801 0465                      u650 03DF                      u730 0338  
                    u570 0353                      u810 047A                      u635 0446  
                    u651 03DE                      u731 0337                      u571 0352  
                    u811 0479                      u580 041B                      u900 05CF  
                    u740 03C2                      u820 0492                      u581 041A  
                    u901 05CE                      u741 03C1                      u821 0491  
                    u670 03F1                      u910 05DF                      u830 0500  
                    u750 03D4                      u671 03F0                      u911 05DE  
                    u831 04FF                      u751 03D3                      u680 03FB  
                    u840 0517                      u920 0372                      u760 0395  
                    u681 03FA                      u665 03E3                      u841 0516  
                    u921 0371                      u761 0394                      u850 053A  
                    u930 0379                      u770 03A7                      u595 041F  
                    u851 0539                      u931 0378                      u771 03A6  
                    u860 0560                      u780 0319                      u685 03F7  
                    u861 055F                      u781 0318                      u870 0582  
                    u790 045D                      u950 062C                      u695 0402  
                    u871 0581                      u791 045C                      u951 062B  
                    u880 058D                      u960 0642                      u881 058C  
                    u961 0641                      u890 0593                      u970 0691  
                    u891 0592                      u875 057E                      u971 0690  
                    u980 06B9                      u981 06B8                      u990 06E1  
                    u991 06E0                      u975 068D                      u985 06B5  
                    u995 06DD                      fsr0 0004                      indf 0000  
                   l1301 03E2                     l1311 0401                     l1303 03E9  
                   l1241 02E1                     l1321 04A1                     l1313 0408  
                   l1305 03ED                     l1401 0458                     l1243 02E7  
                   l1251 02EA                     l1331 04BF                     l1307 03F1  
                   l1315 040E                     l1411 0468                     l1403 045D  
                   l1245 02D8                     l1253 02EE                     l1341 04CE  
                   l1333 04C1                     l1325 04A8                     l1309 03FB  
                   l1501 035B                     l1261 0344                     l1421 048A  
                   l1413 0472                     l1405 0461                     l1247 02DE  
                   l1255 02F2                     l1343 04D3                     l1335 04C8  
                   l1327 04B0                     l1319 049E                     l1271 0413  
                   l1511 02F5                     l1503 035F                     l1423 0492  
                   l1415 047A                     l1407 0466                     l1337 04CC  
                   l1329 04B3                     l1281 0429                     l1273 0415  
                   l1441 0507                     l1433 04F7                     l1353 0321  
                   l1513 02F9                     l1505 0372                     l1265 0346  
                   l1361 03AD                     l1425 0495                     l1601 0738  
                   l1347 04D7                     l1291 044C                     l1283 042D  
                   l1275 041B                     l1451 0526                     l1443 050D  
                   l1435 04FA                     l1355 0322                     l1507 0379  
                   l1267 0353                     l1259 033A                     l1363 03B0  
                   l1427 049A                     l1419 047F                     l1611 07AD  
                   l1603 075D                     l1531 05E8                     l1285 043E  
                   l1277 041E                     l1293 0452                     l1461 0558  
                   l1453 052E                     l1445 0511                     l1437 0500  
                   l1357 032A                     l1381 03A7                     l1373 0380  
                   l1365 03BA                     l1429 049B                     l1613 07B0  
                   l1605 0760                     l1621 07EE                     l1541 05F1  
                   l1533 05EA                     l1287 0444                     l1279 0425  
                   l1463 055C                     l1447 0517                     l1439 0505  
                   l1359 032E                     l1391 0319                     l1375 0383  
                   l1367 03C2                     l1615 07CF                     l1607 0785  
                   l1551 060A                     l1543 05F1                     l1535 05EE  
                   l1527 05E0                     l1289 0445                     l1297 03D9  
                   l1481 0587                     l1465 0560                     l1449 051C  
                   l1457 053B                     l1385 030A                     l1377 038D  
                   l1369 03D4                     l1617 07E5                     l1609 0788  
                   l1553 061A                     l1545 05F7                     l1537 05F1  
                   l1529 05E4                     l1643 04E5                     l1395 02FE  
                   l1299 03DF                     l1491 05C0                     l1483 058D  
                   l1475 056B                     l1467 0564                     l1459 0551  
                   l1387 030D                     l1379 0395                     l1571 065E  
                   l1563 0636                     l1555 0626                     l1547 05FB  
                   l1539 05F1                     l1397 02D3                     l1493 05C4  
                   l1485 0593                     l1469 0569                     l1389 0311  
                   l1581 069A                     l1573 0666                     l1565 0636  
                   l1557 062C                     l1549 0604                     l1487 0597  
                   l1479 0583                     l1495 05CF                     l1591 0709  
                   l1583 06BF                     l1575 066F                     l1567 0642  
                   l1559 062D                     l1489 059C                     l1497 0356  
                   l1593 071F                     l1585 06C2                     l1577 0672  
                   l1569 064A                     l1499 0357                     l1595 0728  
                   l1587 06E7                     l1579 0697                     l1597 072C  
                   l1589 06EA                     l1599 0735                     STR_1 006B  
                   STR_2 0063                     STR_3 0063                     STR_4 0067  
                   STR_5 0063                     STR_6 005F                     STR_7 004A  
                   STR_8 002C                     STR_9 003C                     u1000 0709  
                   u1001 0708                     u1010 071F                     u1011 071E  
                   u1020 0757                     u1021 0756                     u1005 0705  
                   u1030 077F                     u1031 077E                     u1015 071B  
                   u1040 07A7                     u1041 07A6                     u1025 0753  
                   u1050 07CF                     u1051 07CE                     u1035 077B  
                   u1107 06EE                     u1060 07E5                     u1061 07E4  
                   u1045 07A3                     u1117 073C                     u1055 07CB  
                   u1127 0764                     u1065 07E1                     u1137 078C  
                   u1147 07B4                     u1077 0676                     u1087 069E  
                   u1097 06C6                     _RCIF 0065                     _TXIF 0064  
                   _gets 02D2                     _main 05E0                     btemp 007E  
                   _puts 02F4                     start 0000                    ?_gets 0070  
                  ?_main 0070                    STR_10 001C                    STR_11 0058  
                  _CMCON 001F                    ?_puts 0070          __end_of___lwdiv 0457  
        __end_of___lwmod 0413                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  _TXSTA 0098                    _cgets 049D                    _getch 02D8  
        __end_of_dpowers 001C                    _cputs 0320                    _putch 02E0  
                  gets@s 0078                    main@j 004C                    main@k 0047  
                  pclath 000A                    puts@s 0072                    status 0003  
                  wtemp0 007E          __end_of_strcspn 03AC          __initialization 07FA  
           __end_of_gets 02D8             __end_of_main 07FA             __end_of_puts 02FE  
                 ??_gets 0078                   ??_main 002C                   ??_puts 0072  
                 ?_cgets 0070                   ?_getch 0070                   ?_cputs 0070  
                 ?_putch 0070         __end_of_initUART 0309                ??___lwdiv 0074  
              ??___lwmod 007B                   _getche 02EA                   cgets@c 0074  
                 cgets@s 0076                   _printf 04F4                   main@wk 0046  
                 _strchr 0339                   _strcmp 0355                   _strlen 0309  
                 _strtok 0457                   _strspn 03AC                   cputs@s 0071  
              ??_strcspn 0075  __end_of__initialization 07FD           __pcstackCOMMON 0070  
          __end_of_cgets 04F4            __end_of_getch 02E0            __end_of_cputs 0339  
          __end_of_putch 02EA                  ??_cgets 0072                  ??_getch 0070  
                ??_cputs 0071                  ??_putch 0070               __pbssBANK0 004E  
             __pmaintext 05E0                  ?_getche 0070                  ?_printf 007C  
                ?_strchr 0070                  ?_strcmp 0070                  ?_strlen 0070  
                ?_strtok 007A                  ?_strspn 0073               __stringtab 0002  
              ?_initUART 0070                  ___lwdiv 0413                  ___lwmod 03D9  
                __ptext1 0457                  __ptext2 03AC                  __ptext3 037F  
                __ptext4 0339                  __ptext5 0309                  __ptext6 0355  
                __ptext7 02F4                  __ptext8 0320                  __ptext9 04F4  
                _dpowers 0012                  cgets@s1 0077                  getche@c 0071  
                main@cnt 0044                  main@len 0042                  main@ptr 0049  
                main@tmp 002E                  _strcspn 037F     end_of_initialization 07FD  
             ??_initUART 0070                  printf@c 002B                  printf@f 002A  
                strcmp@r 0074                  strlen@s 0073                  strspn@i 0077  
         __end_of_getche 02F4           __end_of_printf 05E0           __end_of_strchr 0355  
         __end_of_strcmp 037F           __end_of_strlen 0320           __end_of_strtok 049D  
         __end_of_strspn 03D9      start_initialization 07FA                 ??_getche 0071  
               ??_printf 0020                 ??_strchr 0072                 ??_strcmp 0072  
               ??_strlen 0072                 ??_strtok 007B                 ??_strspn 0075  
              ___latbits 0001            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0002  
       ___lwdiv@quotient 0074                 ?_strcspn 0073              __stringbase 0011  
             printf@flag 0023               printf@prec 0024                main@intvl 004A  
     __end_of__stringtab 0012          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 03D9                 __ptext11 0413                 __ptext12 02FE  
               __ptext13 02D2                 __ptext14 049D                 __ptext15 02EA  
               __ptext16 02E0                 __ptext17 02D8                 _initUART 02FE  
              printf@val 0028                putch@byte 0070                strchr@chr 0070  
       ___lwmod@dividend 0079                strchr@ptr 0072                strcspn@s1 0079  
              strcspn@s2 0073                stringcode 000C                 printf@ap 0025  
               printf@cp 0026                 strcmp@s1 0075                 strcmp@s2 0070  
        ___lwmod@divisor 0077                 strlen@cp 0072          ___lwmod@counter 007B  
               strcspn@i 0077                 stringdir 000C                 stringtab 0002  
               strtok@s1 007B                 strtok@s2 007A                 strspn@s1 0079  
               strspn@s2 0073                 strtok@sp 004E  
