

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 29 13:59:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 09/02/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F648A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     008C                     	;# 
    96     008E                     	;# 
    97     0092                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009A                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009F                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000E                     	;# 
   116     000E                     	;# 
   117     000F                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0015                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0017                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     001F                     	;# 
   129     0081                     	;# 
   130     0085                     	;# 
   131     0086                     	;# 
   132     008C                     	;# 
   133     008E                     	;# 
   134     0092                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009F                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     008C                     	;# 
   170     008E                     	;# 
   171     0092                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009A                     	;# 
   175     009B                     	;# 
   176     009C                     	;# 
   177     009D                     	;# 
   178     009F                     	;# 
   179                           
   180                           	psect	strings
   181     0002                     __pstrings:
   182     0002                     stringtab:
   183     0002                     __stringtab:
   184                           
   185                           ;	String table - string pointers are 1 byte each
   186     0002  1BFF               	btfsc	btemp+1,7
   187     0003  280C               	ljmp	stringcode
   188     0004  1383               	bcf	3,7
   189     0005  187F               	btfsc	btemp+1,0
   190     0006  1783               	bsf	3,7
   191     0007  0800               	movf	0,w
   192     0008  0A84               	incf	4,f
   193     0009  1903               	skipnz
   194     000A  0AFF               	incf	btemp+1,f
   195     000B  0008               	return
   196     000C                     stringcode:
   197     000C                     stringdir:
   198     000C  3000               	movlw	high stringdir
   199     000D  008A               	movwf	10
   200     000E  0804               	movf	4,w
   201     000F  0A84               	incf	4,f
   202     0010  0782               	addwf	2,f
   203     0011                     __stringbase:
   204     0011  3400               	retlw	0
   205     0012                     __end_of__stringtab:
   206     0012                     _dpowers:
   207     0012  3401               	retlw	1
   208     0013  3400               	retlw	0
   209     0014  340A               	retlw	10
   210     0015  3400               	retlw	0
   211     0016  3464               	retlw	100
   212     0017  3400               	retlw	0
   213     0018  34E8               	retlw	232
   214     0019  3403               	retlw	3
   215     001A  3410               	retlw	16
   216     001B  3427               	retlw	39
   217     001C                     __end_of_dpowers:
   218     001A                     _RCREG	set	26
   219     0019                     _TXREG	set	25
   220     0018                     _RCSTA	set	24
   221     001F                     _CMCON	set	31
   222     0006                     _PORTB	set	6
   223     0005                     _PORTA	set	5
   224     0065                     _RCIF	set	101
   225     0064                     _TXIF	set	100
   226     0029                     _RA1	set	41
   227     0028                     _RA0	set	40
   228     0098                     _TXSTA	set	152
   229     0099                     _SPBRG	set	153
   230     0086                     _TRISB	set	134
   231     0085                     _TRISA	set	133
   232     001C                     STR_9:
   233     001C  3464               	retlw	100	;'d'
   234     001D  3469               	retlw	105	;'i'
   235     001E  3473               	retlw	115	;'s'
   236     001F  3474               	retlw	116	;'t'
   237     0020  3420               	retlw	32	;' '
   238     0021  343D               	retlw	61	;'='
   239     0022  3420               	retlw	32	;' '
   240     0023  3425               	retlw	37	;'%'
   241     0024  3464               	retlw	100	;'d'
   242     0025  340A               	retlw	10
   243     0026  3400               	retlw	0
   244     0027                     STR_15:
   245     0027  3428               	retlw	40	;'('
   246     0028  346E               	retlw	110	;'n'
   247     0029  3475               	retlw	117	;'u'
   248     002A  346C               	retlw	108	;'l'
   249     002B  346C               	retlw	108	;'l'
   250     002C  3429               	retlw	41	;')'
   251     002D  3400               	retlw	0
   252     002E                     STR_11:
   253     002E  3443               	retlw	67	;'C'
   254     002F  340D               	retlw	13
   255     0030  340A               	retlw	10
   256     0031  3400               	retlw	0
   257     0032                     STR_1:
   258     0032  3425               	retlw	37	;'%'
   259     0033  3473               	retlw	115	;'s'
   260     0034  340A               	retlw	10
   261     0035  3400               	retlw	0
   262     0036                     STR_3:
   263     0036  3457               	retlw	87	;'W'
   264     0037  3454               	retlw	84	;'T'
   265     0038  3442               	retlw	66	;'B'
   266     0039  3400               	retlw	0
   267     003A                     STR_2:
   268     003A  3452               	retlw	82	;'R'
   269     003B  3450               	retlw	80	;'P'
   270     003C  3453               	retlw	83	;'S'
   271     003D  3400               	retlw	0
   272     003E                     STR_4:
   273     003E  342F               	retlw	47	;'/'
   274     003F  3400               	retlw	0
   275     0040                     STR_10:
   276     0040  3443               	retlw	67	;'C'
   277     0041  3400               	retlw	0
   278     003E                     
   279                           	psect	cinit
   280     07FA                     start_initialization:	
   281                           ; #config settings
   282                           
   283     07FA                     __initialization:
   284                           
   285                           ; Clear objects allocated to BANK0
   286     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   287     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   288     07FC  01E7               	clrf	__pbssBANK0& (0+127)
   289     07FD                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292     07FD                     __end_of__initialization:
   293     07FD  0183               	clrf	3
   294     07FE  118A  2E2B         	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297     0067                     __pbssBANK0:
   298     0067                     strtok@sp:
   299     0067                     	ds	1
   300                           
   301                           	psect	cstackCOMMON
   302     0070                     __pcstackCOMMON:
   303     0070                     ?_isdigit:
   304     0070                     ?_initUART:	
   305                           ; 1 bit 
   306                           
   307     0070                     ??_initUART:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_gets:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ??_isdigit:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_cgets:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ?_cputs:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_strchr:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_main:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_putch:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ??_putch:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_getch:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ??_getch:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_getche:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_strcmp:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_puts:	
   347                           ; 2 bytes @ 0x0
   348                           
   349     0070                     ?___wmul:	
   350                           ; 2 bytes @ 0x0
   351                           
   352     0070                     ?___awdiv:	
   353                           ; 2 bytes @ 0x0
   354                           
   355     0070                     ?___lwdiv:	
   356                           ; 2 bytes @ 0x0
   357                           
   358     0070                     putch@byte:	
   359                           ; 2 bytes @ 0x0
   360                           
   361     0070                     _isdigit$609:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     strcmp@s2:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ___wmul@multiplier:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ___awdiv@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373     0070                     ___lwdiv@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376     0070                     strchr@chr:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381     0070                     	ds	1
   382     0071                     ??_cputs:
   383     0071                     ??_getche:	
   384                           ; 1 bytes @ 0x1
   385                           
   386     0071                     getche@c:	
   387                           ; 1 bytes @ 0x1
   388                           
   389     0071                     isdigit@c:	
   390                           ; 1 bytes @ 0x1
   391                           
   392     0071                     cputs@s:	
   393                           ; 1 bytes @ 0x1
   394                           
   395                           
   396                           ; 1 bytes @ 0x1
   397     0071                     	ds	1
   398     0072                     ??_strcmp:
   399     0072                     ??_puts:	
   400                           ; 1 bytes @ 0x2
   401                           
   402     0072                     ??_cgets:	
   403                           ; 1 bytes @ 0x2
   404                           
   405     0072                     ??_strchr:	
   406                           ; 1 bytes @ 0x2
   407                           
   408     0072                     puts@s:	
   409                           ; 1 bytes @ 0x2
   410                           
   411     0072                     strchr@ptr:	
   412                           ; 1 bytes @ 0x2
   413                           
   414     0072                     ___wmul@multiplicand:	
   415                           ; 1 bytes @ 0x2
   416                           
   417     0072                     ___awdiv@dividend:	
   418                           ; 2 bytes @ 0x2
   419                           
   420     0072                     ___lwdiv@dividend:	
   421                           ; 2 bytes @ 0x2
   422                           
   423                           
   424                           ; 2 bytes @ 0x2
   425     0072                     	ds	1
   426     0073                     ?_strspn:
   427     0073                     ?_strcspn:	
   428                           ; 2 bytes @ 0x3
   429                           
   430     0073                     strcspn@s2:	
   431                           ; 2 bytes @ 0x3
   432                           
   433     0073                     strspn@s2:	
   434                           ; 1 bytes @ 0x3
   435                           
   436                           
   437                           ; 1 bytes @ 0x3
   438     0073                     	ds	1
   439     0074                     ??___wmul:
   440     0074                     ??___awdiv:	
   441                           ; 1 bytes @ 0x4
   442                           
   443     0074                     ??___lwdiv:	
   444                           ; 1 bytes @ 0x4
   445                           
   446     0074                     ___awdiv@counter:	
   447                           ; 1 bytes @ 0x4
   448                           
   449     0074                     strcmp@r:	
   450                           ; 1 bytes @ 0x4
   451                           
   452     0074                     ___wmul@product:	
   453                           ; 1 bytes @ 0x4
   454                           
   455     0074                     ___lwdiv@quotient:	
   456                           ; 2 bytes @ 0x4
   457                           
   458     0074                     cgets@c:	
   459                           ; 2 bytes @ 0x4
   460                           
   461                           
   462                           ; 2 bytes @ 0x4
   463     0074                     	ds	1
   464     0075                     ??_strspn:
   465     0075                     ??_strcspn:	
   466                           ; 1 bytes @ 0x5
   467                           
   468     0075                     ___awdiv@sign:	
   469                           ; 1 bytes @ 0x5
   470                           
   471     0075                     strcmp@s1:	
   472                           ; 1 bytes @ 0x5
   473                           
   474                           
   475                           ; 1 bytes @ 0x5
   476     0075                     	ds	1
   477     0076                     ?_atoi:
   478     0076                     ___lwdiv@counter:	
   479                           ; 2 bytes @ 0x6
   480                           
   481     0076                     cgets@s:	
   482                           ; 1 bytes @ 0x6
   483                           
   484     0076                     ___awdiv@quotient:	
   485                           ; 1 bytes @ 0x6
   486                           
   487                           
   488                           ; 2 bytes @ 0x6
   489     0076                     	ds	1
   490     0077                     ?___lwmod:
   491     0077                     cgets@s1:	
   492                           ; 2 bytes @ 0x7
   493                           
   494     0077                     ___lwmod@divisor:	
   495                           ; 1 bytes @ 0x7
   496                           
   497     0077                     strcspn@i:	
   498                           ; 2 bytes @ 0x7
   499                           
   500     0077                     strspn@i:	
   501                           ; 2 bytes @ 0x7
   502                           
   503                           
   504                           ; 2 bytes @ 0x7
   505     0077                     	ds	1
   506     0078                     ??_gets:
   507     0078                     ??_atoi:	
   508                           ; 1 bytes @ 0x8
   509                           
   510     0078                     gets@s:	
   511                           ; 1 bytes @ 0x8
   512                           
   513                           
   514                           ; 1 bytes @ 0x8
   515     0078                     	ds	1
   516     0079                     strcspn@s1:
   517     0079                     strspn@s1:	
   518                           ; 1 bytes @ 0x9
   519                           
   520     0079                     ___lwmod@dividend:	
   521                           ; 1 bytes @ 0x9
   522                           
   523                           
   524                           ; 2 bytes @ 0x9
   525     0079                     	ds	1
   526     007A                     ?_strtok:
   527     007A                     atoi@sign:	
   528                           ; 1 bytes @ 0xA
   529                           
   530     007A                     strtok@s2:	
   531                           ; 1 bytes @ 0xA
   532                           
   533                           
   534                           ; 1 bytes @ 0xA
   535     007A                     	ds	1
   536     007B                     ??_strtok:
   537     007B                     ??___lwmod:	
   538                           ; 1 bytes @ 0xB
   539                           
   540     007B                     ___lwmod@counter:	
   541                           ; 1 bytes @ 0xB
   542                           
   543     007B                     strtok@s1:	
   544                           ; 1 bytes @ 0xB
   545                           
   546     007B                     atoi@a:	
   547                           ; 1 bytes @ 0xB
   548                           
   549                           
   550                           ; 2 bytes @ 0xB
   551     007B                     	ds	1
   552     007C                     ?_printf:
   553                           
   554                           ; 2 bytes @ 0xC
   555     007C                     	ds	1
   556     007D                     atoi@s:
   557                           
   558                           ; 1 bytes @ 0xD
   559     007D                     	ds	1
   560                           
   561                           	psect	cstackBANK0
   562     0020                     __pcstackBANK0:
   563     0020                     ??_printf:
   564                           
   565                           ; 1 bytes @ 0x0
   566     0020                     	ds	3
   567     0023                     printf@flag:
   568                           
   569                           ; 1 bytes @ 0x3
   570     0023                     	ds	1
   571     0024                     printf@prec:
   572                           
   573                           ; 1 bytes @ 0x4
   574     0024                     	ds	1
   575     0025                     printf@ap:
   576                           
   577                           ; 1 bytes @ 0x5
   578     0025                     	ds	1
   579     0026                     printf@f:
   580                           
   581                           ; 1 bytes @ 0x6
   582     0026                     	ds	1
   583     0027                     printf@cp:
   584                           
   585                           ; 2 bytes @ 0x7
   586     0027                     	ds	2
   587     0029                     printf@val:
   588                           
   589                           ; 2 bytes @ 0x9
   590     0029                     	ds	2
   591     002B                     printf@c:
   592                           
   593                           ; 1 bytes @ 0xB
   594     002B                     	ds	1
   595     002C                     ??_main:
   596                           
   597                           ; 1 bytes @ 0xC
   598     002C                     	ds	1
   599     002D                     main@tmp:
   600                           
   601                           ; 40 bytes @ 0xD
   602     002D                     	ds	40
   603     0055                     main@mx_spd:
   604                           
   605                           ; 2 bytes @ 0x35
   606     0055                     	ds	2
   607     0057                     main@set_spd:
   608                           
   609                           ; 2 bytes @ 0x37
   610     0057                     	ds	2
   611     0059                     main@cmd:
   612                           
   613                           ; 1 bytes @ 0x39
   614     0059                     	ds	1
   615     005A                     main@rcmd:
   616                           
   617                           ; 4 bytes @ 0x3A
   618     005A                     	ds	4
   619     005E                     main@k:
   620                           
   621                           ; 2 bytes @ 0x3E
   622     005E                     	ds	2
   623     0060                     main@dist:
   624                           
   625                           ; 2 bytes @ 0x40
   626     0060                     	ds	2
   627     0062                     main@intvl:
   628                           
   629                           ; 2 bytes @ 0x42
   630     0062                     	ds	2
   631     0064                     main@j:
   632                           
   633                           ; 2 bytes @ 0x44
   634     0064                     	ds	2
   635     0066                     main@ptr:
   636                           
   637                           ; 1 bytes @ 0x46
   638     0066                     	ds	1
   639                           
   640                           	psect	maintext
   641     062B                     __pmaintext:	
   642 ;;
   643 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   644 ;;
   645 ;; *************** function _main *****************
   646 ;; Defined at:
   647 ;;		line 50 in file "main.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  cmd             1   57[BANK0 ] enum E765
   652 ;;  tmp            40   13[BANK0 ] unsigned char [40]
   653 ;;  rcmd            4   58[BANK0 ] unsigned char [4]
   654 ;;  ln              4    0        unsigned char [4]
   655 ;;  j               2   68[BANK0 ] int 
   656 ;;  intvl           2   66[BANK0 ] int 
   657 ;;  dist            2   64[BANK0 ] int 
   658 ;;  k               2   62[BANK0 ] int 
   659 ;;  set_spd         2   55[BANK0 ] int 
   660 ;;  mx_spd          2   53[BANK0 ] int 
   661 ;;  cnt             2    0        int 
   662 ;;  ptr             1   70[BANK0 ] PTR unsigned char 
   663 ;;		 -> NULL(0), main@tmp(40), 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : B00/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   673 ;;      Params:         0       0       0       0
   674 ;;      Locals:         0      58       0       0
   675 ;;      Temps:          0       1       0       0
   676 ;;      Totals:         0      59       0       0
   677 ;;Total ram usage:       59 bytes
   678 ;; Hardware stack levels required when called: 4
   679 ;; This function calls:
   680 ;;		___awdiv
   681 ;;		___wmul
   682 ;;		_atoi
   683 ;;		_gets
   684 ;;		_initUART
   685 ;;		_printf
   686 ;;		_puts
   687 ;;		_strcmp
   688 ;;		_strtok
   689 ;; This function is called by:
   690 ;;		Startup code after reset
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694     062B                     _main:	
   695                           ;psect for function _main
   696                           
   697     062B                     l1707:	
   698                           ;incstack = 0
   699                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   700                           
   701                           
   702                           ;main.c: 52: PORTA = 0x00;
   703     062B  1283               	bcf	3,5	;RP0=0, select bank0
   704     062C  1303               	bcf	3,6	;RP1=0, select bank0
   705     062D  0185               	clrf	5	;volatile
   706                           
   707                           ;main.c: 53: PORTB = 0x00;
   708     062E  0186               	clrf	6	;volatile
   709                           
   710                           ;main.c: 54: TRISA = 0b00000000;
   711     062F  1683               	bsf	3,5	;RP0=1, select bank1
   712     0630  1303               	bcf	3,6	;RP1=0, select bank1
   713     0631  0185               	clrf	5	;volatile
   714     0632                     l1709:
   715                           
   716                           ;main.c: 55: TRISB = 0b00000010;
   717     0632  3002               	movlw	2
   718     0633  0086               	movwf	6	;volatile
   719     0634                     l1711:
   720                           
   721                           ;main.c: 56: CMCON = 0b00000111;
   722     0634  3007               	movlw	7
   723     0635  1283               	bcf	3,5	;RP0=0, select bank0
   724     0636  1303               	bcf	3,6	;RP1=0, select bank0
   725     0637  009F               	movwf	31	;volatile
   726     0638                     l1713:
   727                           
   728                           ;main.c: 58: initUART();
   729     0638  118A  224B  118A   	fcall	_initUART
   730     063B                     l1715:
   731     063B                     l1717:
   732     063B                     l1719:
   733     063B                     l1721:
   734                           
   735                           ;main.c: 64: int dist = 10;
   736     063B  300A               	movlw	10
   737     063C  1283               	bcf	3,5	;RP0=0, select bank0
   738     063D  1303               	bcf	3,6	;RP1=0, select bank0
   739     063E  00E0               	movwf	main@dist
   740     063F  3000               	movlw	0
   741     0640  00E1               	movwf	main@dist+1
   742     0641                     l1723:
   743                           
   744                           ;main.c: 65: int intvl = 50;
   745     0641  3032               	movlw	50
   746     0642  00E2               	movwf	main@intvl
   747     0643  3000               	movlw	0
   748     0644  00E3               	movwf	main@intvl+1
   749     0645                     l1725:
   750                           
   751                           ;main.c: 66: char rcmd[4];;main.c: 67: int mx_spd = 20250;
   752     0645  301A               	movlw	26
   753     0646  00D5               	movwf	main@mx_spd
   754     0647  304F               	movlw	79
   755     0648  00D6               	movwf	main@mx_spd+1
   756     0649                     l1727:
   757                           
   758                           ;main.c: 74: rcmd[0] = 'Q';
   759     0649  3051               	movlw	81
   760     064A  1283               	bcf	3,5	;RP0=0, select bank0
   761     064B  1303               	bcf	3,6	;RP1=0, select bank0
   762     064C  00DA               	movwf	main@rcmd
   763     064D                     l1729:
   764                           
   765                           ;main.c: 75: rcmd[1] = 'Q';
   766     064D  3051               	movlw	81
   767     064E  00DB               	movwf	main@rcmd+1
   768     064F                     l1731:
   769                           
   770                           ;main.c: 76: rcmd[2] = 'Q';
   771     064F  3051               	movlw	81
   772     0650  00DC               	movwf	main@rcmd+2
   773     0651                     l1733:
   774                           
   775                           ;main.c: 77: rcmd[3] = '\0';
   776     0651  01DD               	clrf	main@rcmd+3
   777     0652                     l1735:
   778                           
   779                           ;main.c: 79: tmp[0] = 'Q';
   780     0652  3051               	movlw	81
   781     0653  00AD               	movwf	main@tmp
   782     0654                     l1737:
   783                           
   784                           ;main.c: 80: tmp[1] = 'Q';
   785     0654  3051               	movlw	81
   786     0655  00AE               	movwf	main@tmp+1
   787     0656                     l1739:
   788                           
   789                           ;main.c: 81: tmp[2] = 'Q';
   790     0656  3051               	movlw	81
   791     0657  00AF               	movwf	main@tmp+2
   792     0658                     l1741:
   793                           
   794                           ;main.c: 82: tmp[3] = '\0';
   795     0658  01B0               	clrf	main@tmp+3
   796     0659                     l1743:
   797                           
   798                           ;main.c: 84: gets(tmp);
   799     0659  302D               	movlw	(low (main@tmp| 0))& (0+255)
   800     065A  118A  221F  118A   	fcall	_gets
   801     065D                     l1745:
   802                           
   803                           ;main.c: 85: printf("%s\n", tmp);
   804     065D  302D               	movlw	(low (main@tmp| 0))& (0+255)
   805     065E  00FC               	movwf	?_printf
   806     065F  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   807     0660  118A  253F  118A   	fcall	_printf
   808     0663                     l1747:
   809                           
   810                           ;main.c: 87: rcmd[0] = tmp[1];
   811     0663  1283               	bcf	3,5	;RP0=0, select bank0
   812     0664  1303               	bcf	3,6	;RP1=0, select bank0
   813     0665  082E               	movf	main@tmp+1,w
   814     0666  00DA               	movwf	main@rcmd
   815     0667                     l1749:
   816                           
   817                           ;main.c: 88: rcmd[1] = tmp[2];
   818     0667  082F               	movf	main@tmp+2,w
   819     0668  00DB               	movwf	main@rcmd+1
   820     0669                     l1751:
   821                           
   822                           ;main.c: 89: rcmd[2] = tmp[3];
   823     0669  0830               	movf	main@tmp+3,w
   824     066A  00DC               	movwf	main@rcmd+2
   825     066B                     l1753:
   826                           
   827                           ;main.c: 90: rcmd[3] = '\0';
   828     066B  01DD               	clrf	main@rcmd+3
   829     066C                     l1755:
   830                           
   831                           ;main.c: 93: enum command cmd;;main.c: 95: cmd = VE;
   832     066C  3002               	movlw	2
   833     066D  00D9               	movwf	main@cmd
   834     066E                     l1757:
   835                           
   836                           ;main.c: 97: if(strcmp(rcmd,"RPS") == 0) {
   837     066E  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   838     066F  00F0               	movwf	strcmp@s2
   839     0670  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   840     0671  118A  22C2  118A   	fcall	_strcmp
   841     0674  0870               	movf	?_strcmp,w
   842     0675  0471               	iorwf	?_strcmp+1,w
   843     0676  1D03               	btfss	3,2
   844     0677  2E79               	goto	u1351
   845     0678  2E7A               	goto	u1350
   846     0679                     u1351:
   847     0679  2E7E               	goto	l1761
   848     067A                     u1350:
   849     067A                     l1759:
   850                           
   851                           ;main.c: 98: cmd = F;
   852     067A  1283               	bcf	3,5	;RP0=0, select bank0
   853     067B  1303               	bcf	3,6	;RP1=0, select bank0
   854     067C  01D9               	clrf	main@cmd
   855                           
   856                           ;main.c: 99: }else if(strcmp(rcmd,"WTB") == 0){
   857     067D  2E8E               	goto	l1765
   858     067E                     l1761:
   859     067E  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   860     067F  00F0               	movwf	strcmp@s2
   861     0680  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   862     0681  118A  22C2  118A   	fcall	_strcmp
   863     0684  0870               	movf	?_strcmp,w
   864     0685  0471               	iorwf	?_strcmp+1,w
   865     0686  1D03               	btfss	3,2
   866     0687  2E89               	goto	u1361
   867     0688  2E8A               	goto	u1360
   868     0689                     u1361:
   869     0689  2E8E               	goto	l1765
   870     068A                     u1360:
   871     068A                     l1763:
   872                           
   873                           ;main.c: 100: cmd = WTB;
   874     068A  1283               	bcf	3,5	;RP0=0, select bank0
   875     068B  1303               	bcf	3,6	;RP1=0, select bank0
   876     068C  01D9               	clrf	main@cmd
   877     068D  0AD9               	incf	main@cmd,f
   878     068E                     l1765:
   879     068E  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   880     068F  00FA               	movwf	strtok@s2
   881     0690  302D               	movlw	(low (main@tmp| 0))& (0+255)
   882     0691  118A  23C4  118A   	fcall	_strtok
   883                           
   884                           ;main.c: 105: switch(cmd){
   885     0694  2FEB               	goto	l1819
   886     0695                     l1767:
   887                           
   888                           ;main.c: 108: ptr = strtok((0), "/");
   889     0695  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   890     0696  00FA               	movwf	strtok@s2
   891     0697  3000               	movlw	0
   892     0698  118A  23C4  118A   	fcall	_strtok
   893     069B  1283               	bcf	3,5	;RP0=0, select bank0
   894     069C  1303               	bcf	3,6	;RP1=0, select bank0
   895     069D  00E6               	movwf	main@ptr
   896                           
   897                           ;main.c: 109: ptr = strtok((0), "/");
   898     069E  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   899     069F  00FA               	movwf	strtok@s2
   900     06A0  3000               	movlw	0
   901     06A1  118A  23C4  118A   	fcall	_strtok
   902     06A4  1283               	bcf	3,5	;RP0=0, select bank0
   903     06A5  1303               	bcf	3,6	;RP1=0, select bank0
   904     06A6  00E6               	movwf	main@ptr
   905                           
   906                           ;main.c: 110: ptr = strtok((0), "/");
   907     06A7  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   908     06A8  00FA               	movwf	strtok@s2
   909     06A9  3000               	movlw	0
   910     06AA  118A  23C4  118A   	fcall	_strtok
   911     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   912     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   913     06AF  00E6               	movwf	main@ptr
   914                           
   915                           ;main.c: 111: ptr = strtok((0), "/");
   916     06B0  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   917     06B1  00FA               	movwf	strtok@s2
   918     06B2  3000               	movlw	0
   919     06B3  118A  23C4  118A   	fcall	_strtok
   920     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   921     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   922     06B8  00E6               	movwf	main@ptr
   923     06B9                     l1769:
   924                           
   925                           ;main.c: 112: if(ptr != (0)) {
   926     06B9  0866               	movf	main@ptr,w
   927     06BA  1903               	btfsc	3,2
   928     06BB  2EBD               	goto	u1371
   929     06BC  2EBE               	goto	u1370
   930     06BD                     u1371:
   931     06BD  2EC8               	goto	l41
   932     06BE                     u1370:
   933     06BE                     l1771:
   934                           
   935                           ;main.c: 113: dist = atoi(ptr);
   936     06BE  0866               	movf	main@ptr,w
   937     06BF  118A  24C8  118A   	fcall	_atoi
   938     06C2  0877               	movf	?_atoi+1,w
   939     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   940     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   941     06C5  00E1               	movwf	main@dist+1
   942     06C6  0876               	movf	?_atoi,w
   943     06C7  00E0               	movwf	main@dist
   944     06C8                     l41:
   945                           
   946                           ;main.c: 114: };main.c: 115: printf("dist = %d\n", dist);
   947     06C8  0861               	movf	main@dist+1,w
   948     06C9  00FD               	movwf	?_printf+1
   949     06CA  0860               	movf	main@dist,w
   950     06CB  00FC               	movwf	?_printf
   951     06CC  300B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   952     06CD  118A  253F  118A   	fcall	_printf
   953     06D0                     l1773:
   954                           
   955                           ;main.c: 117: if (dist > 0){
   956     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   957     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   958     06D2  0861               	movf	main@dist+1,w
   959     06D3  3A80               	xorlw	128
   960     06D4  00FF               	movwf	btemp+1
   961     06D5  3080               	movlw	128
   962     06D6  027F               	subwf	btemp+1,w
   963     06D7  1D03               	skipz
   964     06D8  2EDB               	goto	u1385
   965     06D9  3001               	movlw	1
   966     06DA  0260               	subwf	main@dist,w
   967     06DB                     u1385:
   968     06DB  1C03               	skipc
   969     06DC  2EDE               	goto	u1381
   970     06DD  2EDF               	goto	u1380
   971     06DE                     u1381:
   972     06DE  2F35               	goto	l1787
   973     06DF                     u1380:
   974     06DF                     l1775:
   975                           
   976                           ;main.c: 118: for(k = 0 ; k < dist ; k++){
   977     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   978     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   979     06E1  01DE               	clrf	main@k
   980     06E2  01DF               	clrf	main@k+1
   981     06E3  2F26               	goto	l43
   982     06E4                     l44:
   983                           
   984                           ;main.c: 119: RA0 = 1;
   985     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   986     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   987     06E6  1405               	bsf	5,0	;volatile
   988     06E7                     l1777:
   989                           
   990                           ;main.c: 120: for(j = 0 ; j < intvl ; j++){
   991     06E7  01E4               	clrf	main@j
   992     06E8  01E5               	clrf	main@j+1
   993     06E9  2EF3               	goto	l45
   994     06EA                     l46:
   995                           
   996                           ;main.c: 121: _delay((unsigned long)((1)*(4000000/4000000.0)));
   997     06EA  0000               	nop
   998     06EB                     l1779:
   999     06EB  3001               	movlw	1
  1000     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1001     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1002     06EE  07E4               	addwf	main@j,f
  1003     06EF  1803               	skipnc
  1004     06F0  0AE5               	incf	main@j+1,f
  1005     06F1  3000               	movlw	0
  1006     06F2  07E5               	addwf	main@j+1,f
  1007     06F3                     l45:
  1008     06F3  0865               	movf	main@j+1,w
  1009     06F4  3A80               	xorlw	128
  1010     06F5  00AC               	movwf	??_main
  1011     06F6  0863               	movf	main@intvl+1,w
  1012     06F7  3A80               	xorlw	128
  1013     06F8  022C               	subwf	??_main,w
  1014     06F9  1D03               	skipz
  1015     06FA  2EFD               	goto	u1395
  1016     06FB  0862               	movf	main@intvl,w
  1017     06FC  0264               	subwf	main@j,w
  1018     06FD                     u1395:
  1019     06FD  1C03               	skipc
  1020     06FE  2F00               	goto	u1391
  1021     06FF  2F01               	goto	u1390
  1022     0700                     u1391:
  1023     0700  2EEA               	goto	l46
  1024     0701                     u1390:
  1025     0701                     l47:
  1026                           
  1027                           ;main.c: 122: };main.c: 123: RA0 = 0;
  1028     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1030     0703  1005               	bcf	5,0	;volatile
  1031     0704                     l1781:
  1032                           
  1033                           ;main.c: 124: for(j = 0 ; j < intvl ; j++){
  1034     0704  01E4               	clrf	main@j
  1035     0705  01E5               	clrf	main@j+1
  1036     0706  2F10               	goto	l48
  1037     0707                     l49:
  1038                           
  1039                           ;main.c: 125: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1040     0707  0000               	nop
  1041     0708                     l1783:
  1042     0708  3001               	movlw	1
  1043     0709  1283               	bcf	3,5	;RP0=0, select bank0
  1044     070A  1303               	bcf	3,6	;RP1=0, select bank0
  1045     070B  07E4               	addwf	main@j,f
  1046     070C  1803               	skipnc
  1047     070D  0AE5               	incf	main@j+1,f
  1048     070E  3000               	movlw	0
  1049     070F  07E5               	addwf	main@j+1,f
  1050     0710                     l48:
  1051     0710  0865               	movf	main@j+1,w
  1052     0711  3A80               	xorlw	128
  1053     0712  00AC               	movwf	??_main
  1054     0713  0863               	movf	main@intvl+1,w
  1055     0714  3A80               	xorlw	128
  1056     0715  022C               	subwf	??_main,w
  1057     0716  1D03               	skipz
  1058     0717  2F1A               	goto	u1405
  1059     0718  0862               	movf	main@intvl,w
  1060     0719  0264               	subwf	main@j,w
  1061     071A                     u1405:
  1062     071A  1C03               	skipc
  1063     071B  2F1D               	goto	u1401
  1064     071C  2F1E               	goto	u1400
  1065     071D                     u1401:
  1066     071D  2F07               	goto	l49
  1067     071E                     u1400:
  1068     071E                     l1785:
  1069     071E  3001               	movlw	1
  1070     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1071     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1072     0721  07DE               	addwf	main@k,f
  1073     0722  1803               	skipnc
  1074     0723  0ADF               	incf	main@k+1,f
  1075     0724  3000               	movlw	0
  1076     0725  07DF               	addwf	main@k+1,f
  1077     0726                     l43:
  1078     0726  085F               	movf	main@k+1,w
  1079     0727  3A80               	xorlw	128
  1080     0728  00AC               	movwf	??_main
  1081     0729  0861               	movf	main@dist+1,w
  1082     072A  3A80               	xorlw	128
  1083     072B  022C               	subwf	??_main,w
  1084     072C  1D03               	skipz
  1085     072D  2F30               	goto	u1415
  1086     072E  0860               	movf	main@dist,w
  1087     072F  025E               	subwf	main@k,w
  1088     0730                     u1415:
  1089     0730  1C03               	skipc
  1090     0731  2F33               	goto	u1411
  1091     0732  2F34               	goto	u1410
  1092     0733                     u1411:
  1093     0733  2EE4               	goto	l44
  1094     0734                     u1410:
  1095     0734  2F9B               	goto	l1801
  1096     0735                     l1787:
  1097                           
  1098                           ;main.c: 129: dist *= -1;
  1099     0735  30FF               	movlw	255
  1100     0736  00F0               	movwf	___wmul@multiplier
  1101     0737  30FF               	movlw	255
  1102     0738  00F1               	movwf	___wmul@multiplier+1
  1103     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1104     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1105     073B  0861               	movf	main@dist+1,w
  1106     073C  00F3               	movwf	___wmul@multiplicand+1
  1107     073D  0860               	movf	main@dist,w
  1108     073E  00F2               	movwf	___wmul@multiplicand
  1109     073F  118A  229D  118A   	fcall	___wmul
  1110     0742  0871               	movf	?___wmul+1,w
  1111     0743  1283               	bcf	3,5	;RP0=0, select bank0
  1112     0744  1303               	bcf	3,6	;RP1=0, select bank0
  1113     0745  00E1               	movwf	main@dist+1
  1114     0746  0870               	movf	?___wmul,w
  1115     0747  00E0               	movwf	main@dist
  1116     0748                     l1789:
  1117                           
  1118                           ;main.c: 130: for(k = 0 ; k < dist ; k++){
  1119     0748  01DE               	clrf	main@k
  1120     0749  01DF               	clrf	main@k+1
  1121     074A  2F8D               	goto	l53
  1122     074B                     l54:
  1123                           
  1124                           ;main.c: 131: RA1 = 1;
  1125     074B  1283               	bcf	3,5	;RP0=0, select bank0
  1126     074C  1303               	bcf	3,6	;RP1=0, select bank0
  1127     074D  1485               	bsf	5,1	;volatile
  1128     074E                     l1791:
  1129                           
  1130                           ;main.c: 132: for(j = 0 ; j < intvl ; j++){
  1131     074E  01E4               	clrf	main@j
  1132     074F  01E5               	clrf	main@j+1
  1133     0750  2F5A               	goto	l55
  1134     0751                     l56:
  1135                           
  1136                           ;main.c: 133: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1137     0751  0000               	nop
  1138     0752                     l1793:
  1139     0752  3001               	movlw	1
  1140     0753  1283               	bcf	3,5	;RP0=0, select bank0
  1141     0754  1303               	bcf	3,6	;RP1=0, select bank0
  1142     0755  07E4               	addwf	main@j,f
  1143     0756  1803               	skipnc
  1144     0757  0AE5               	incf	main@j+1,f
  1145     0758  3000               	movlw	0
  1146     0759  07E5               	addwf	main@j+1,f
  1147     075A                     l55:
  1148     075A  0865               	movf	main@j+1,w
  1149     075B  3A80               	xorlw	128
  1150     075C  00AC               	movwf	??_main
  1151     075D  0863               	movf	main@intvl+1,w
  1152     075E  3A80               	xorlw	128
  1153     075F  022C               	subwf	??_main,w
  1154     0760  1D03               	skipz
  1155     0761  2F64               	goto	u1425
  1156     0762  0862               	movf	main@intvl,w
  1157     0763  0264               	subwf	main@j,w
  1158     0764                     u1425:
  1159     0764  1C03               	skipc
  1160     0765  2F67               	goto	u1421
  1161     0766  2F68               	goto	u1420
  1162     0767                     u1421:
  1163     0767  2F51               	goto	l56
  1164     0768                     u1420:
  1165     0768                     l57:
  1166                           
  1167                           ;main.c: 134: };main.c: 135: RA1 = 0;
  1168     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1170     076A  1085               	bcf	5,1	;volatile
  1171     076B                     l1795:
  1172                           
  1173                           ;main.c: 136: for(j = 0 ; j < intvl ; j++){
  1174     076B  01E4               	clrf	main@j
  1175     076C  01E5               	clrf	main@j+1
  1176     076D  2F77               	goto	l58
  1177     076E                     l59:
  1178                           
  1179                           ;main.c: 137: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1180     076E  0000               	nop
  1181     076F                     l1797:
  1182     076F  3001               	movlw	1
  1183     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1184     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1185     0772  07E4               	addwf	main@j,f
  1186     0773  1803               	skipnc
  1187     0774  0AE5               	incf	main@j+1,f
  1188     0775  3000               	movlw	0
  1189     0776  07E5               	addwf	main@j+1,f
  1190     0777                     l58:
  1191     0777  0865               	movf	main@j+1,w
  1192     0778  3A80               	xorlw	128
  1193     0779  00AC               	movwf	??_main
  1194     077A  0863               	movf	main@intvl+1,w
  1195     077B  3A80               	xorlw	128
  1196     077C  022C               	subwf	??_main,w
  1197     077D  1D03               	skipz
  1198     077E  2F81               	goto	u1435
  1199     077F  0862               	movf	main@intvl,w
  1200     0780  0264               	subwf	main@j,w
  1201     0781                     u1435:
  1202     0781  1C03               	skipc
  1203     0782  2F84               	goto	u1431
  1204     0783  2F85               	goto	u1430
  1205     0784                     u1431:
  1206     0784  2F6E               	goto	l59
  1207     0785                     u1430:
  1208     0785                     l1799:
  1209     0785  3001               	movlw	1
  1210     0786  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0787  1303               	bcf	3,6	;RP1=0, select bank0
  1212     0788  07DE               	addwf	main@k,f
  1213     0789  1803               	skipnc
  1214     078A  0ADF               	incf	main@k+1,f
  1215     078B  3000               	movlw	0
  1216     078C  07DF               	addwf	main@k+1,f
  1217     078D                     l53:
  1218     078D  085F               	movf	main@k+1,w
  1219     078E  3A80               	xorlw	128
  1220     078F  00AC               	movwf	??_main
  1221     0790  0861               	movf	main@dist+1,w
  1222     0791  3A80               	xorlw	128
  1223     0792  022C               	subwf	??_main,w
  1224     0793  1D03               	skipz
  1225     0794  2F97               	goto	u1445
  1226     0795  0860               	movf	main@dist,w
  1227     0796  025E               	subwf	main@k,w
  1228     0797                     u1445:
  1229     0797  1C03               	skipc
  1230     0798  2F9A               	goto	u1441
  1231     0799  2F9B               	goto	u1440
  1232     079A                     u1441:
  1233     079A  2F4B               	goto	l54
  1234     079B                     u1440:
  1235     079B                     l1801:
  1236                           
  1237                           ;main.c: 138: };main.c: 139: };main.c: 140: };main.c: 142: puts("C");
  1238     079B  302F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1239     079C  118A  2241  118A   	fcall	_puts
  1240                           
  1241                           ;main.c: 143: printf("C\r\n");
  1242     079F  301D               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1243     07A0  118A  253F  118A   	fcall	_printf
  1244                           
  1245                           ;main.c: 144: break;
  1246     07A3  2E49               	goto	l1727
  1247     07A4                     l1803:
  1248                           
  1249                           ;main.c: 147: ptr = strtok((0), "/");
  1250     07A4  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1251     07A5  00FA               	movwf	strtok@s2
  1252     07A6  3000               	movlw	0
  1253     07A7  118A  23C4  118A   	fcall	_strtok
  1254     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1255     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1256     07AC  00E6               	movwf	main@ptr
  1257                           
  1258                           ;main.c: 148: ptr = strtok((0), "/");
  1259     07AD  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1260     07AE  00FA               	movwf	strtok@s2
  1261     07AF  3000               	movlw	0
  1262     07B0  118A  23C4  118A   	fcall	_strtok
  1263     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1264     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1265     07B5  00E6               	movwf	main@ptr
  1266                           
  1267                           ;main.c: 149: ptr = strtok((0), "/");
  1268     07B6  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1269     07B7  00FA               	movwf	strtok@s2
  1270     07B8  3000               	movlw	0
  1271     07B9  118A  23C4  118A   	fcall	_strtok
  1272     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1273     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1274     07BE  00E6               	movwf	main@ptr
  1275     07BF                     l1805:
  1276                           
  1277                           ;main.c: 150: if(ptr != (0)) {
  1278     07BF  0866               	movf	main@ptr,w
  1279     07C0  1903               	btfsc	3,2
  1280     07C1  2FC3               	goto	u1451
  1281     07C2  2FC4               	goto	u1450
  1282     07C3                     u1451:
  1283     07C3  2FCE               	goto	l1809
  1284     07C4                     u1450:
  1285     07C4                     l1807:
  1286                           
  1287                           ;main.c: 151: set_spd = atoi(ptr);
  1288     07C4  0866               	movf	main@ptr,w
  1289     07C5  118A  24C8  118A   	fcall	_atoi
  1290     07C8  0877               	movf	?_atoi+1,w
  1291     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1292     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1293     07CB  00D8               	movwf	main@set_spd+1
  1294     07CC  0876               	movf	?_atoi,w
  1295     07CD  00D7               	movwf	main@set_spd
  1296     07CE                     l1809:
  1297                           
  1298                           ;main.c: 152: };main.c: 153: intvl = mx_spd / set_spd;
  1299     07CE  0858               	movf	main@set_spd+1,w
  1300     07CF  00F1               	movwf	___awdiv@divisor+1
  1301     07D0  0857               	movf	main@set_spd,w
  1302     07D1  00F0               	movwf	___awdiv@divisor
  1303     07D2  0856               	movf	main@mx_spd+1,w
  1304     07D3  00F3               	movwf	___awdiv@dividend+1
  1305     07D4  0855               	movf	main@mx_spd,w
  1306     07D5  00F2               	movwf	___awdiv@dividend
  1307     07D6  118A  2461  118A   	fcall	___awdiv
  1308     07D9  0871               	movf	?___awdiv+1,w
  1309     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1310     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1311     07DC  00E3               	movwf	main@intvl+1
  1312     07DD  0870               	movf	?___awdiv,w
  1313     07DE  00E2               	movwf	main@intvl
  1314     07DF                     l1811:
  1315                           
  1316                           ;main.c: 154: if (intvl == 0){
  1317     07DF  0862               	movf	main@intvl,w
  1318     07E0  0463               	iorwf	main@intvl+1,w
  1319     07E1  1D03               	btfss	3,2
  1320     07E2  2FE4               	goto	u1461
  1321     07E3  2FE5               	goto	u1460
  1322     07E4                     u1461:
  1323     07E4  2E49               	goto	l1727
  1324     07E5                     u1460:
  1325     07E5                     l1813:
  1326                           
  1327                           ;main.c: 155: intvl = 1;
  1328     07E5  3001               	movlw	1
  1329     07E6  00E2               	movwf	main@intvl
  1330     07E7  3000               	movlw	0
  1331     07E8  00E3               	movwf	main@intvl+1
  1332     07E9  2E49               	goto	l1727
  1333     07EA                     l1815:
  1334                           
  1335                           ;main.c: 160: break;
  1336     07EA  2E49               	goto	l1727
  1337     07EB                     l1819:
  1338     07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1339     07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1340     07ED  0859               	movf	main@cmd,w
  1341                           
  1342                           ; Switch size 1, requested type "simple"
  1343                           ; Number of cases is 3, Range of values is 0 to 2
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           10     6 (average)
  1347                           ; direct_byte           13     7 (fixed)
  1348                           ; jumptable            260     6 (fixed)
  1349                           ;	Chosen strategy is simple_byte
  1350     07EE  3A00               	xorlw	0	; case 0
  1351     07EF  1903               	skipnz
  1352     07F0  2E95               	goto	l1767
  1353     07F1  3A01               	xorlw	1	; case 1
  1354     07F2  1903               	skipnz
  1355     07F3  2FA4               	goto	l1803
  1356     07F4  3A03               	xorlw	3	; case 2
  1357     07F5  1903               	skipnz
  1358     07F6  2FEA               	goto	l1815
  1359     07F7  2E49               	goto	l1727
  1360     07F8  118A  2800         	ljmp	start
  1361     07FA                     __end_of_main:
  1362                           
  1363                           	psect	text1
  1364     03C4                     __ptext1:	
  1365 ;; *************** function _strtok *****************
  1366 ;; Defined at:
  1367 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  s1              1    wreg     PTR unsigned char 
  1370 ;;		 -> NULL(0), main@tmp(40), 
  1371 ;;  s2              1   10[COMMON] PTR const unsigned char 
  1372 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_8(2), 
  1373 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  s1              1   11[COMMON] PTR unsigned char 
  1376 ;;		 -> NULL(0), main@tmp(40), 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      PTR unsigned char 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1386 ;;      Params:         1       0       0       0
  1387 ;;      Locals:         1       0       0       0
  1388 ;;      Temps:          0       0       0       0
  1389 ;;      Totals:         2       0       0       0
  1390 ;;Total ram usage:        2 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 3
  1393 ;; This function calls:
  1394 ;;		_strcspn
  1395 ;;		_strspn
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401     03C4                     _strtok:	
  1402                           ;psect for function _strtok
  1403                           
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1407                           ;strtok@s1 stored from wreg
  1408     03C4  00FB               	movwf	strtok@s1
  1409     03C5                     l1593:
  1410     03C5  087B               	movf	strtok@s1,w
  1411     03C6  1D03               	btfss	3,2
  1412     03C7  2BC9               	goto	u1151
  1413     03C8  2BCA               	goto	u1150
  1414     03C9                     u1151:
  1415     03C9  2BCE               	goto	l1597
  1416     03CA                     u1150:
  1417     03CA                     l1595:
  1418     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1419     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1420     03CC  0867               	movf	strtok@sp,w
  1421     03CD  00FB               	movwf	strtok@s1
  1422     03CE                     l1597:
  1423     03CE  087B               	movf	strtok@s1,w
  1424     03CF  1D03               	btfss	3,2
  1425     03D0  2BD2               	goto	u1161
  1426     03D1  2BD3               	goto	u1160
  1427     03D2                     u1161:
  1428     03D2  2BD5               	goto	l1603
  1429     03D3                     u1160:
  1430     03D3                     l1599:
  1431     03D3  3000               	movlw	0
  1432     03D4  2C09               	goto	l750
  1433     03D5                     l1603:
  1434     03D5  087A               	movf	strtok@s2,w
  1435     03D6  00F3               	movwf	strspn@s2
  1436     03D7  087B               	movf	strtok@s1,w
  1437     03D8  118A  2319  118A   	fcall	_strspn
  1438     03DB  0873               	movf	?_strspn,w
  1439     03DC  00FF               	movwf	btemp+1
  1440     03DD  087F               	movf	btemp+1,w
  1441     03DE  07FB               	addwf	strtok@s1,f
  1442     03DF                     l1605:
  1443     03DF  087B               	movf	strtok@s1,w
  1444     03E0  0084               	movwf	4
  1445     03E1  1383               	bcf	3,7	;select IRP bank0
  1446     03E2  0800               	movf	0,w
  1447     03E3  1D03               	btfss	3,2
  1448     03E4  2BE6               	goto	u1171
  1449     03E5  2BE7               	goto	u1170
  1450     03E6                     u1171:
  1451     03E6  2BEC               	goto	l1611
  1452     03E7                     u1170:
  1453     03E7                     l1607:
  1454     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  1455     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  1456     03E9  01E7               	clrf	strtok@sp
  1457     03EA  3000               	movlw	0
  1458     03EB  2C09               	goto	l750
  1459     03EC                     l1611:
  1460     03EC  087A               	movf	strtok@s2,w
  1461     03ED  00F3               	movwf	strcspn@s2
  1462     03EE  087B               	movf	strtok@s1,w
  1463     03EF  118A  22EC  118A   	fcall	_strcspn
  1464     03F2  0873               	movf	?_strcspn,w
  1465     03F3  077B               	addwf	strtok@s1,w
  1466     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1467     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1468     03F6  00E7               	movwf	strtok@sp
  1469     03F7                     l1613:
  1470     03F7  0867               	movf	strtok@sp,w
  1471     03F8  0084               	movwf	4
  1472     03F9  1383               	bcf	3,7	;select IRP bank0
  1473     03FA  0800               	movf	0,w
  1474     03FB  1903               	btfsc	3,2
  1475     03FC  2BFE               	goto	u1181
  1476     03FD  2BFF               	goto	u1180
  1477     03FE                     u1181:
  1478     03FE  2C07               	goto	l1619
  1479     03FF                     u1180:
  1480     03FF                     l1615:
  1481     03FF  0867               	movf	strtok@sp,w
  1482     0400  0084               	movwf	4
  1483     0401  0180               	clrf	0
  1484     0402                     l1617:
  1485     0402  3001               	movlw	1
  1486     0403  00FF               	movwf	btemp+1
  1487     0404  087F               	movf	btemp+1,w
  1488     0405  07E7               	addwf	strtok@sp,f
  1489     0406  2C08               	goto	l1621
  1490     0407                     l1619:
  1491     0407  01E7               	clrf	strtok@sp
  1492     0408                     l1621:
  1493     0408  087B               	movf	strtok@s1,w
  1494     0409                     l750:
  1495     0409  0008               	return
  1496     040A                     __end_of_strtok:
  1497                           
  1498                           	psect	text2
  1499     0319                     __ptext2:	
  1500 ;; *************** function _strspn *****************
  1501 ;; Defined at:
  1502 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  s1              1    wreg     PTR const unsigned char 
  1505 ;;		 -> NULL(0), main@tmp(40), 
  1506 ;;  s2              1    3[COMMON] PTR const unsigned char 
  1507 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_8(2), 
  1508 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  s1              1    9[COMMON] PTR const unsigned char 
  1511 ;;		 -> NULL(0), main@tmp(40), 
  1512 ;;  i               2    7[COMMON] unsigned int 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2    3[COMMON] unsigned int 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1522 ;;      Params:         2       0       0       0
  1523 ;;      Locals:         3       0       0       0
  1524 ;;      Temps:          2       0       0       0
  1525 ;;      Totals:         7       0       0       0
  1526 ;;Total ram usage:        7 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 2
  1529 ;; This function calls:
  1530 ;;		_strchr
  1531 ;; This function is called by:
  1532 ;;		_strtok
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536     0319                     _strspn:	
  1537                           ;psect for function _strspn
  1538                           
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1542                           ;strspn@s1 stored from wreg
  1543     0319  00F9               	movwf	strspn@s1
  1544     031A                     l1485:
  1545     031A  01F7               	clrf	strspn@i
  1546     031B  01F8               	clrf	strspn@i+1
  1547     031C  2B27               	goto	l1489
  1548     031D                     l1487:
  1549     031D  3001               	movlw	1
  1550     031E  00FF               	movwf	btemp+1
  1551     031F  087F               	movf	btemp+1,w
  1552     0320  07F9               	addwf	strspn@s1,f
  1553     0321  3001               	movlw	1
  1554     0322  07F7               	addwf	strspn@i,f
  1555     0323  1803               	skipnc
  1556     0324  0AF8               	incf	strspn@i+1,f
  1557     0325  3000               	movlw	0
  1558     0326  07F8               	addwf	strspn@i+1,f
  1559     0327                     l1489:
  1560     0327  0879               	movf	strspn@s1,w
  1561     0328  0084               	movwf	4
  1562     0329  1383               	bcf	3,7	;select IRP bank0
  1563     032A  0800               	movf	0,w
  1564     032B  1903               	btfsc	3,2
  1565     032C  2B2E               	goto	u1001
  1566     032D  2B2F               	goto	u1000
  1567     032E                     u1001:
  1568     032E  2B41               	goto	l1493
  1569     032F                     u1000:
  1570     032F                     l1491:
  1571     032F  0879               	movf	strspn@s1,w
  1572     0330  0084               	movwf	4
  1573     0331  0800               	movf	0,w
  1574     0332  00F5               	movwf	??_strspn
  1575     0333  01F6               	clrf	??_strspn+1
  1576     0334  0875               	movf	??_strspn,w
  1577     0335  00F0               	movwf	strchr@chr
  1578     0336  0876               	movf	??_strspn+1,w
  1579     0337  00F1               	movwf	strchr@chr+1
  1580     0338  0873               	movf	strspn@s2,w
  1581     0339  118A  2281  118A   	fcall	_strchr
  1582     033C  3A00               	xorlw	0
  1583     033D  1D03               	skipz
  1584     033E  2B40               	goto	u1011
  1585     033F  2B41               	goto	u1010
  1586     0340                     u1011:
  1587     0340  2B1D               	goto	l1487
  1588     0341                     u1010:
  1589     0341                     l1493:
  1590     0341  0878               	movf	strspn@i+1,w
  1591     0342  00F4               	movwf	?_strspn+1
  1592     0343  0877               	movf	strspn@i,w
  1593     0344  00F3               	movwf	?_strspn
  1594     0345                     l779:
  1595     0345  0008               	return
  1596     0346                     __end_of_strspn:
  1597                           
  1598                           	psect	text3
  1599     02EC                     __ptext3:	
  1600 ;; *************** function _strcspn *****************
  1601 ;; Defined at:
  1602 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  s1              1    wreg     PTR const unsigned char 
  1605 ;;		 -> NULL(0), main@tmp(40), 
  1606 ;;  s2              1    3[COMMON] PTR const unsigned char 
  1607 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_8(2), 
  1608 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  s1              1    9[COMMON] PTR const unsigned char 
  1611 ;;		 -> NULL(0), main@tmp(40), 
  1612 ;;  i               2    7[COMMON] unsigned int 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  2    3[COMMON] unsigned int 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1622 ;;      Params:         2       0       0       0
  1623 ;;      Locals:         3       0       0       0
  1624 ;;      Temps:          2       0       0       0
  1625 ;;      Totals:         7       0       0       0
  1626 ;;Total ram usage:        7 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 2
  1629 ;; This function calls:
  1630 ;;		_strchr
  1631 ;; This function is called by:
  1632 ;;		_strtok
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636     02EC                     _strcspn:	
  1637                           ;psect for function _strcspn
  1638                           
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1642                           ;strcspn@s1 stored from wreg
  1643     02EC  00F9               	movwf	strcspn@s1
  1644     02ED                     l1497:
  1645     02ED  01F7               	clrf	strcspn@i
  1646     02EE  01F8               	clrf	strcspn@i+1
  1647     02EF  2AFA               	goto	l1501
  1648     02F0                     l1499:
  1649     02F0  3001               	movlw	1
  1650     02F1  00FF               	movwf	btemp+1
  1651     02F2  087F               	movf	btemp+1,w
  1652     02F3  07F9               	addwf	strcspn@s1,f
  1653     02F4  3001               	movlw	1
  1654     02F5  07F7               	addwf	strcspn@i,f
  1655     02F6  1803               	skipnc
  1656     02F7  0AF8               	incf	strcspn@i+1,f
  1657     02F8  3000               	movlw	0
  1658     02F9  07F8               	addwf	strcspn@i+1,f
  1659     02FA                     l1501:
  1660     02FA  0879               	movf	strcspn@s1,w
  1661     02FB  0084               	movwf	4
  1662     02FC  1383               	bcf	3,7	;select IRP bank0
  1663     02FD  0800               	movf	0,w
  1664     02FE  1903               	btfsc	3,2
  1665     02FF  2B01               	goto	u1021
  1666     0300  2B02               	goto	u1020
  1667     0301                     u1021:
  1668     0301  2B14               	goto	l1505
  1669     0302                     u1020:
  1670     0302                     l1503:
  1671     0302  0879               	movf	strcspn@s1,w
  1672     0303  0084               	movwf	4
  1673     0304  0800               	movf	0,w
  1674     0305  00F5               	movwf	??_strcspn
  1675     0306  01F6               	clrf	??_strcspn+1
  1676     0307  0875               	movf	??_strcspn,w
  1677     0308  00F0               	movwf	strchr@chr
  1678     0309  0876               	movf	??_strcspn+1,w
  1679     030A  00F1               	movwf	strchr@chr+1
  1680     030B  0873               	movf	strcspn@s2,w
  1681     030C  118A  2281  118A   	fcall	_strchr
  1682     030F  3A00               	xorlw	0
  1683     0310  1903               	skipnz
  1684     0311  2B13               	goto	u1031
  1685     0312  2B14               	goto	u1030
  1686     0313                     u1031:
  1687     0313  2AF0               	goto	l1499
  1688     0314                     u1030:
  1689     0314                     l1505:
  1690     0314  0878               	movf	strcspn@i+1,w
  1691     0315  00F4               	movwf	?_strcspn+1
  1692     0316  0877               	movf	strcspn@i,w
  1693     0317  00F3               	movwf	?_strcspn
  1694     0318                     l763:
  1695     0318  0008               	return
  1696     0319                     __end_of_strcspn:
  1697                           
  1698                           	psect	text4
  1699     0281                     __ptext4:	
  1700 ;; *************** function _strchr *****************
  1701 ;; Defined at:
  1702 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  ptr             1    wreg     PTR const unsigned char 
  1705 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_8(2), 
  1706 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1707 ;;  chr             2    0[COMMON] int 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  1710 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_8(2), 
  1711 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      PTR unsigned char 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr0l, fsr0h, pclath
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1721 ;;      Params:         2       0       0       0
  1722 ;;      Locals:         1       0       0       0
  1723 ;;      Temps:          0       0       0       0
  1724 ;;      Totals:         3       0       0       0
  1725 ;;Total ram usage:        3 bytes
  1726 ;; Hardware stack levels used: 2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_strcspn
  1731 ;;		_strspn
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735     0281                     _strchr:	
  1736                           ;psect for function _strchr
  1737                           
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  1741                           ;strchr@ptr stored from wreg
  1742     0281  00F2               	movwf	strchr@ptr
  1743     0282                     l766:
  1744     0282                     l1357:
  1745     0282  0872               	movf	strchr@ptr,w
  1746     0283  0084               	movwf	4
  1747     0284  118A  200C  118A   	fcall	stringdir
  1748     0287  0670               	xorwf	strchr@chr,w
  1749     0288  1D03               	skipz
  1750     0289  2A8B               	goto	u761
  1751     028A  2A8C               	goto	u760
  1752     028B                     u761:
  1753     028B  2A8E               	goto	l1363
  1754     028C                     u760:
  1755     028C                     l1359:
  1756     028C  0872               	movf	strchr@ptr,w
  1757     028D  2A9C               	goto	l768
  1758     028E                     l1363:
  1759     028E  3001               	movlw	1
  1760     028F  07F2               	addwf	strchr@ptr,f
  1761     0290  30FF               	movlw	-1
  1762     0291  0772               	addwf	strchr@ptr,w
  1763     0292  0084               	movwf	4
  1764     0293  118A  200C  118A   	fcall	stringdir
  1765     0296  3A00               	xorlw	0
  1766     0297  1D03               	skipz
  1767     0298  2A9A               	goto	u771
  1768     0299  2A9B               	goto	u770
  1769     029A                     u771:
  1770     029A  2A82               	goto	l766
  1771     029B                     u770:
  1772     029B                     l1365:
  1773     029B  3000               	movlw	0
  1774     029C                     l768:
  1775     029C  0008               	return
  1776     029D                     __end_of_strchr:
  1777                           
  1778                           	psect	text5
  1779     02C2                     __ptext5:	
  1780 ;; *************** function _strcmp *****************
  1781 ;; Defined at:
  1782 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  s1              1    wreg     PTR const unsigned char 
  1785 ;;		 -> main@rcmd(4), 
  1786 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1787 ;;		 -> STR_3(4), STR_2(4), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1790 ;;		 -> main@rcmd(4), 
  1791 ;;  r               1    4[COMMON] char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2    0[COMMON] int 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1801 ;;      Params:         2       0       0       0
  1802 ;;      Locals:         2       0       0       0
  1803 ;;      Temps:          2       0       0       0
  1804 ;;      Totals:         6       0       0       0
  1805 ;;Total ram usage:        6 bytes
  1806 ;; Hardware stack levels used: 2
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814     02C2                     _strcmp:	
  1815                           ;psect for function _strcmp
  1816                           
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1820                           ;strcmp@s1 stored from wreg
  1821     02C2  00F5               	movwf	strcmp@s1
  1822     02C3                     l1579:
  1823     02C3  2ACC               	goto	l1585
  1824     02C4                     l1581:
  1825     02C4  3001               	movlw	1
  1826     02C5  00FF               	movwf	btemp+1
  1827     02C6  087F               	movf	btemp+1,w
  1828     02C7  07F5               	addwf	strcmp@s1,f
  1829     02C8                     l1583:
  1830     02C8  3001               	movlw	1
  1831     02C9  00FF               	movwf	btemp+1
  1832     02CA  087F               	movf	btemp+1,w
  1833     02CB  07F0               	addwf	strcmp@s2,f
  1834     02CC                     l1585:
  1835     02CC  0870               	movf	strcmp@s2,w
  1836     02CD  0084               	movwf	4
  1837     02CE  118A  200C  118A   	fcall	stringdir
  1838     02D1  00F2               	movwf	??_strcmp
  1839     02D2  0875               	movf	strcmp@s1,w
  1840     02D3  0084               	movwf	4
  1841     02D4  1383               	bcf	3,7	;select IRP bank0
  1842     02D5  0800               	movf	0,w
  1843     02D6  00F3               	movwf	??_strcmp+1
  1844     02D7  0872               	movf	??_strcmp,w
  1845     02D8  0273               	subwf	??_strcmp+1,w
  1846     02D9  00F4               	movwf	strcmp@r
  1847     02DA  0874               	movf	strcmp@r,w
  1848     02DB  1D03               	btfss	3,2
  1849     02DC  2ADE               	goto	u1131
  1850     02DD  2ADF               	goto	u1130
  1851     02DE                     u1131:
  1852     02DE  2AE6               	goto	l1589
  1853     02DF                     u1130:
  1854     02DF                     l1587:
  1855     02DF  0875               	movf	strcmp@s1,w
  1856     02E0  0084               	movwf	4
  1857     02E1  0800               	movf	0,w
  1858     02E2  1D03               	btfss	3,2
  1859     02E3  2AE5               	goto	u1141
  1860     02E4  2AE6               	goto	u1140
  1861     02E5                     u1141:
  1862     02E5  2AC4               	goto	l1581
  1863     02E6                     u1140:
  1864     02E6                     l1589:
  1865     02E6  0874               	movf	strcmp@r,w
  1866     02E7  00F0               	movwf	?_strcmp
  1867     02E8  01F1               	clrf	?_strcmp+1
  1868     02E9  1BF0               	btfsc	?_strcmp,7
  1869     02EA  03F1               	decf	?_strcmp+1,f
  1870     02EB                     l739:
  1871     02EB  0008               	return
  1872     02EC                     __end_of_strcmp:
  1873                           
  1874                           	psect	text6
  1875     0241                     __ptext6:	
  1876 ;; *************** function _puts *****************
  1877 ;; Defined at:
  1878 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  s               1    wreg     PTR const unsigned char 
  1881 ;;		 -> STR_10(2), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  s               1    2[COMMON] PTR const unsigned char 
  1884 ;;		 -> STR_10(2), 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2   30[None  ] int 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1894 ;;      Params:         0       0       0       0
  1895 ;;      Locals:         1       0       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         1       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 2
  1901 ;; This function calls:
  1902 ;;		_cputs
  1903 ;;		_putch
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909     0241                     _puts:	
  1910                           ;psect for function _puts
  1911                           
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1915                           ;puts@s stored from wreg
  1916     0241  00F2               	movwf	puts@s
  1917     0242                     l1659:
  1918     0242  0872               	movf	puts@s,w
  1919     0243  118A  2268  118A   	fcall	_cputs
  1920     0246                     l1661:
  1921     0246  300A               	movlw	10
  1922     0247  118A  222D  118A   	fcall	_putch
  1923     024A                     l723:
  1924     024A  0008               	return
  1925     024B                     __end_of_puts:
  1926                           
  1927                           	psect	text7
  1928     0268                     __ptext7:	
  1929 ;; *************** function _cputs *****************
  1930 ;; Defined at:
  1931 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  s               1    wreg     PTR const unsigned char 
  1934 ;;		 -> STR_10(2), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  s               1    1[COMMON] PTR const unsigned char 
  1937 ;;		 -> STR_10(2), 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1947 ;;      Params:         0       0       0       0
  1948 ;;      Locals:         1       0       0       0
  1949 ;;      Temps:          0       0       0       0
  1950 ;;      Totals:         1       0       0       0
  1951 ;;Total ram usage:        1 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 1
  1954 ;; This function calls:
  1955 ;;		_putch
  1956 ;; This function is called by:
  1957 ;;		_puts
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961     0268                     _cputs:	
  1962                           ;psect for function _cputs
  1963                           
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1967                           ;cputs@s stored from wreg
  1968     0268  00F1               	movwf	cputs@s
  1969     0269                     l1477:
  1970     0269  2A76               	goto	l1483
  1971     026A                     l1479:
  1972     026A  0871               	movf	cputs@s,w
  1973     026B  0084               	movwf	4
  1974     026C  118A  200C  118A   	fcall	stringdir
  1975     026F  118A  222D  118A   	fcall	_putch
  1976     0272                     l1481:
  1977     0272  3001               	movlw	1
  1978     0273  00FF               	movwf	btemp+1
  1979     0274  087F               	movf	btemp+1,w
  1980     0275  07F1               	addwf	cputs@s,f
  1981     0276                     l1483:
  1982     0276  0871               	movf	cputs@s,w
  1983     0277  0084               	movwf	4
  1984     0278  118A  200C  118A   	fcall	stringdir
  1985     027B  3A00               	xorlw	0
  1986     027C  1D03               	skipz
  1987     027D  2A7F               	goto	u991
  1988     027E  2A80               	goto	u990
  1989     027F                     u991:
  1990     027F  2A6A               	goto	l1479
  1991     0280                     u990:
  1992     0280                     l731:
  1993     0280  0008               	return
  1994     0281                     __end_of_cputs:
  1995                           
  1996                           	psect	text8
  1997     053F                     __ptext8:	
  1998 ;; *************** function _printf *****************
  1999 ;; Defined at:
  2000 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  f               1    wreg     PTR const unsigned char 
  2003 ;;		 -> STR_11(4), STR_9(11), STR_1(4), 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2006 ;;		 -> STR_11(4), STR_9(11), STR_1(4), 
  2007 ;;  tmpval          4    0        struct .
  2008 ;;  val             2    9[BANK0 ] unsigned int 
  2009 ;;  cp              2    7[BANK0 ] PTR const unsigned char 
  2010 ;;		 -> STR_15(7), ?_printf(2), main@tmp(40), 
  2011 ;;  len             2    0        unsigned int 
  2012 ;;  c               1   11[BANK0 ] unsigned char 
  2013 ;;  ap              1    5[BANK0 ] PTR void [1]
  2014 ;;		 -> ?_printf(2), 
  2015 ;;  prec            1    4[BANK0 ] char 
  2016 ;;  flag            1    3[BANK0 ] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2   12[COMMON] int 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2026 ;;      Params:         2       0       0       0
  2027 ;;      Locals:         0       9       0       0
  2028 ;;      Temps:          0       3       0       0
  2029 ;;      Totals:         2      12       0       0
  2030 ;;Total ram usage:       14 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 1
  2033 ;; This function calls:
  2034 ;;		___lwdiv
  2035 ;;		___lwmod
  2036 ;;		_putch
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042     053F                     _printf:	
  2043                           ;psect for function _printf
  2044                           
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2048                           ;printf@f stored from wreg
  2049     053F  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0540  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0541  00A6               	movwf	printf@f
  2052     0542                     l1515:
  2053                           
  2054                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2055     0542  307C               	movlw	(low (?_printf| 0))& (0+255)
  2056     0543  00A5               	movwf	printf@ap
  2057                           
  2058                           ;doprnt.c: 553: while((c = *f++)) {
  2059     0544  2E1A               	goto	l1577
  2060     0545                     l1517:
  2061                           
  2062                           ;doprnt.c: 555: if(c != '%')
  2063     0545  3025               	movlw	37
  2064     0546  062B               	xorwf	printf@c,w
  2065     0547  1903               	btfsc	3,2
  2066     0548  2D4A               	goto	u1041
  2067     0549  2D4B               	goto	u1040
  2068     054A                     u1041:
  2069     054A  2D50               	goto	l1521
  2070     054B                     u1040:
  2071     054B                     l1519:
  2072                           
  2073                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2074     054B  082B               	movf	printf@c,w
  2075     054C  118A  222D  118A   	fcall	_putch
  2076                           
  2077                           ;doprnt.c: 559: continue;
  2078     054F  2E1A               	goto	l1577
  2079     0550                     l1521:
  2080                           
  2081                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2082     0550  01A3               	clrf	printf@flag
  2083                           
  2084                           ;doprnt.c: 661: switch(c = *f++) {
  2085     0551  2D86               	goto	l1539
  2086     0552                     l1523:
  2087                           
  2088                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2089     0552  0825               	movf	printf@ap,w
  2090     0553  0084               	movwf	4
  2091     0554  0800               	movf	0,w
  2092     0555  00A7               	movwf	printf@cp
  2093     0556  3000               	movlw	0
  2094     0557  00A8               	movwf	printf@cp+1
  2095     0558                     l1525:
  2096     0558  3001               	movlw	1
  2097     0559  00FF               	movwf	btemp+1
  2098     055A  087F               	movf	btemp+1,w
  2099     055B  07A5               	addwf	printf@ap,f
  2100     055C                     l1527:
  2101                           
  2102                           ;doprnt.c: 766: if(!cp)
  2103     055C  0827               	movf	printf@cp,w
  2104     055D  0428               	iorwf	printf@cp+1,w
  2105     055E  1D03               	btfss	3,2
  2106     055F  2D61               	goto	u1051
  2107     0560  2D62               	goto	u1050
  2108     0561                     u1051:
  2109     0561  2D79               	goto	l1535
  2110     0562                     u1050:
  2111     0562                     l1529:
  2112                           
  2113                           ;doprnt.c: 767: cp = "(null)";
  2114     0562  3016               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2115     0563  00A7               	movwf	printf@cp
  2116     0564  3080               	movlw	128
  2117     0565  00A8               	movwf	printf@cp+1
  2118     0566  2D79               	goto	l1535
  2119     0567                     l1531:
  2120                           
  2121                           ;doprnt.c: 804: (putch(*cp++) );
  2122     0567  0828               	movf	printf@cp+1,w
  2123     0568  00FF               	movwf	btemp+1
  2124     0569  0827               	movf	printf@cp,w
  2125     056A  0084               	movwf	4
  2126     056B  118A  2002  118A   	fcall	stringtab
  2127     056E  118A  222D  118A   	fcall	_putch
  2128     0571                     l1533:
  2129     0571  3001               	movlw	1
  2130     0572  1283               	bcf	3,5	;RP0=0, select bank0
  2131     0573  1303               	bcf	3,6	;RP1=0, select bank0
  2132     0574  07A7               	addwf	printf@cp,f
  2133     0575  1803               	skipnc
  2134     0576  0AA8               	incf	printf@cp+1,f
  2135     0577  3000               	movlw	0
  2136     0578  07A8               	addwf	printf@cp+1,f
  2137     0579                     l1535:
  2138     0579  0828               	movf	printf@cp+1,w
  2139     057A  00FF               	movwf	btemp+1
  2140     057B  0827               	movf	printf@cp,w
  2141     057C  0084               	movwf	4
  2142     057D  118A  2002  118A   	fcall	stringtab
  2143     0580  3A00               	xorlw	0
  2144     0581  1D03               	skipz
  2145     0582  2D84               	goto	u1061
  2146     0583  2D85               	goto	u1060
  2147     0584                     u1061:
  2148     0584  2D67               	goto	l1531
  2149     0585                     u1060:
  2150     0585  2E1A               	goto	l1577
  2151     0586                     l1539:
  2152     0586  3001               	movlw	1
  2153     0587  07A6               	addwf	printf@f,f
  2154     0588  30FF               	movlw	-1
  2155     0589  0726               	addwf	printf@f,w
  2156     058A  0084               	movwf	4
  2157     058B  118A  200C  118A   	fcall	stringdir
  2158     058E  00AB               	movwf	printf@c
  2159                           
  2160                           ; Switch size 1, requested type "simple"
  2161                           ; Number of cases is 4, Range of values is 0 to 115
  2162                           ; switch strategies available:
  2163                           ; Name         Instructions Cycles
  2164                           ; simple_byte           13     7 (average)
  2165                           ; direct_byte          239     7 (fixed)
  2166                           ; jumptable            260     6 (fixed)
  2167                           ;	Chosen strategy is simple_byte
  2168     058F  3A00               	xorlw	0	; case 0
  2169     0590  1903               	skipnz
  2170     0591  2E2A               	goto	l219
  2171     0592  3A64               	xorlw	100	; case 100
  2172     0593  1903               	skipnz
  2173     0594  2D9C               	goto	l1541
  2174     0595  3A0D               	xorlw	13	; case 105
  2175     0596  1903               	skipnz
  2176     0597  2D9C               	goto	l1541
  2177     0598  3A1A               	xorlw	26	; case 115
  2178     0599  1903               	skipnz
  2179     059A  2D52               	goto	l1523
  2180     059B  2E1A               	goto	l1577
  2181     059C                     l1541:
  2182                           
  2183                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2184     059C  0825               	movf	printf@ap,w
  2185     059D  0084               	movwf	4
  2186     059E  0800               	movf	0,w
  2187     059F  00A9               	movwf	printf@val
  2188     05A0  0A84               	incf	4,f
  2189     05A1  0800               	movf	0,w
  2190     05A2  00AA               	movwf	printf@val+1
  2191     05A3                     l1543:
  2192     05A3  3002               	movlw	2
  2193     05A4  00FF               	movwf	btemp+1
  2194     05A5  087F               	movf	btemp+1,w
  2195     05A6  07A5               	addwf	printf@ap,f
  2196     05A7                     l1545:
  2197                           
  2198                           ;doprnt.c: 1287: if((int)val < 0) {
  2199     05A7  1FAA               	btfss	printf@val+1,7
  2200     05A8  2DAA               	goto	u1071
  2201     05A9  2DAB               	goto	u1070
  2202     05AA                     u1071:
  2203     05AA  2DB4               	goto	l1551
  2204     05AB                     u1070:
  2205     05AB                     l1547:
  2206                           
  2207                           ;doprnt.c: 1288: flag |= 0x03;
  2208     05AB  3003               	movlw	3
  2209     05AC  00FF               	movwf	btemp+1
  2210     05AD  087F               	movf	btemp+1,w
  2211     05AE  04A3               	iorwf	printf@flag,f
  2212     05AF                     l1549:
  2213                           
  2214                           ;doprnt.c: 1289: val = -val;
  2215     05AF  09A9               	comf	printf@val,f
  2216     05B0  09AA               	comf	printf@val+1,f
  2217     05B1  0AA9               	incf	printf@val,f
  2218     05B2  1903               	skipnz
  2219     05B3  0AAA               	incf	printf@val+1,f
  2220     05B4                     l1551:
  2221                           
  2222                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2223     05B4  01AB               	clrf	printf@c
  2224     05B5  0AAB               	incf	printf@c,f
  2225     05B6                     l1557:
  2226                           
  2227                           ;doprnt.c: 1332: if(val < dpowers[c])
  2228     05B6  082B               	movf	printf@c,w
  2229     05B7  00A0               	movwf	??_printf
  2230     05B8  0720               	addwf	??_printf,w
  2231     05B9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2232     05BA  0084               	movwf	4
  2233     05BB  118A  200C  118A   	fcall	stringdir
  2234     05BE  00A1               	movwf	??_printf+1
  2235     05BF  118A  200C  118A   	fcall	stringdir
  2236     05C2  00A2               	movwf	??_printf+2
  2237     05C3  0822               	movf	??_printf+2,w
  2238     05C4  022A               	subwf	printf@val+1,w
  2239     05C5  1D03               	skipz
  2240     05C6  2DC9               	goto	u1085
  2241     05C7  0821               	movf	??_printf+1,w
  2242     05C8  0229               	subwf	printf@val,w
  2243     05C9                     u1085:
  2244     05C9  1803               	skipnc
  2245     05CA  2DCC               	goto	u1081
  2246     05CB  2DCD               	goto	u1080
  2247     05CC                     u1081:
  2248     05CC  2DCE               	goto	l1561
  2249     05CD                     u1080:
  2250     05CD  2DD8               	goto	l1565
  2251     05CE                     l1561:
  2252     05CE  3001               	movlw	1
  2253     05CF  00FF               	movwf	btemp+1
  2254     05D0  087F               	movf	btemp+1,w
  2255     05D1  07AB               	addwf	printf@c,f
  2256     05D2                     l1563:
  2257     05D2  3005               	movlw	5
  2258     05D3  062B               	xorwf	printf@c,w
  2259     05D4  1D03               	btfss	3,2
  2260     05D5  2DD7               	goto	u1091
  2261     05D6  2DD8               	goto	u1090
  2262     05D7                     u1091:
  2263     05D7  2DB6               	goto	l1557
  2264     05D8                     u1090:
  2265     05D8                     l1565:
  2266                           
  2267                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2268     05D8  0823               	movf	printf@flag,w
  2269     05D9  3903               	andlw	3
  2270     05DA  1903               	btfsc	3,2
  2271     05DB  2DDD               	goto	u1101
  2272     05DC  2DDE               	goto	u1100
  2273     05DD                     u1101:
  2274     05DD  2DE2               	goto	l1569
  2275     05DE                     u1100:
  2276     05DE                     l1567:
  2277                           
  2278                           ;doprnt.c: 1465: (putch('-') );
  2279     05DE  302D               	movlw	45
  2280     05DF  118A  222D  118A   	fcall	_putch
  2281     05E2                     l1569:
  2282                           
  2283                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2284     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2285     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2286     05E4  082B               	movf	printf@c,w
  2287     05E5  00A4               	movwf	printf@prec
  2288                           
  2289                           ;doprnt.c: 1500: while(prec--) {
  2290     05E6  2E0F               	goto	l1575
  2291     05E7                     l1571:
  2292                           
  2293                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2294     05E7  300A               	movlw	10
  2295     05E8  00F7               	movwf	___lwmod@divisor
  2296     05E9  3000               	movlw	0
  2297     05EA  00F8               	movwf	___lwmod@divisor+1
  2298     05EB  0824               	movf	printf@prec,w
  2299     05EC  00A0               	movwf	??_printf
  2300     05ED  0720               	addwf	??_printf,w
  2301     05EE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2302     05EF  0084               	movwf	4
  2303     05F0  118A  200C  118A   	fcall	stringdir
  2304     05F3  00F0               	movwf	___lwdiv@divisor
  2305     05F4  118A  200C  118A   	fcall	stringdir
  2306     05F7  00F1               	movwf	___lwdiv@divisor+1
  2307     05F8  082A               	movf	printf@val+1,w
  2308     05F9  00F3               	movwf	___lwdiv@dividend+1
  2309     05FA  0829               	movf	printf@val,w
  2310     05FB  00F2               	movwf	___lwdiv@dividend
  2311     05FC  118A  2380  118A   	fcall	___lwdiv
  2312     05FF  0871               	movf	?___lwdiv+1,w
  2313     0600  00FA               	movwf	___lwmod@dividend+1
  2314     0601  0870               	movf	?___lwdiv,w
  2315     0602  00F9               	movwf	___lwmod@dividend
  2316     0603  118A  2346  118A   	fcall	___lwmod
  2317     0606  0877               	movf	?___lwmod,w
  2318     0607  3E30               	addlw	48
  2319     0608  1283               	bcf	3,5	;RP0=0, select bank0
  2320     0609  1303               	bcf	3,6	;RP1=0, select bank0
  2321     060A  00AB               	movwf	printf@c
  2322     060B                     l1573:
  2323                           
  2324                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2325     060B  082B               	movf	printf@c,w
  2326     060C  118A  222D  118A   	fcall	_putch
  2327     060F                     l1575:
  2328     060F  30FF               	movlw	255
  2329     0610  00FF               	movwf	btemp+1
  2330     0611  087F               	movf	btemp+1,w
  2331     0612  1283               	bcf	3,5	;RP0=0, select bank0
  2332     0613  1303               	bcf	3,6	;RP1=0, select bank0
  2333     0614  07A4               	addwf	printf@prec,f
  2334     0615  0A24               	incf	printf@prec,w
  2335     0616  1D03               	btfss	3,2
  2336     0617  2E19               	goto	u1111
  2337     0618  2E1A               	goto	u1110
  2338     0619                     u1111:
  2339     0619  2DE7               	goto	l1571
  2340     061A                     u1110:
  2341     061A                     l1577:
  2342     061A  3001               	movlw	1
  2343     061B  1283               	bcf	3,5	;RP0=0, select bank0
  2344     061C  1303               	bcf	3,6	;RP1=0, select bank0
  2345     061D  07A6               	addwf	printf@f,f
  2346     061E  30FF               	movlw	-1
  2347     061F  0726               	addwf	printf@f,w
  2348     0620  0084               	movwf	4
  2349     0621  118A  200C  118A   	fcall	stringdir
  2350     0624  00AB               	movwf	printf@c
  2351     0625  082B               	movf	printf@c,w
  2352     0626  1D03               	btfss	3,2
  2353     0627  2E29               	goto	u1121
  2354     0628  2E2A               	goto	u1120
  2355     0629                     u1121:
  2356     0629  2D45               	goto	l1517
  2357     062A                     u1120:
  2358     062A                     l219:
  2359     062A  0008               	return
  2360     062B                     __end_of_printf:
  2361                           
  2362                           	psect	text9
  2363     0346                     __ptext9:	
  2364 ;; *************** function ___lwmod *****************
  2365 ;; Defined at:
  2366 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  divisor         2    7[COMMON] unsigned int 
  2369 ;;  dividend        2    9[COMMON] unsigned int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  counter         1   11[COMMON] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2    7[COMMON] unsigned int 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, btemp+1
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2381 ;;      Params:         4       0       0       0
  2382 ;;      Locals:         1       0       0       0
  2383 ;;      Temps:          0       0       0       0
  2384 ;;      Totals:         5       0       0       0
  2385 ;;Total ram usage:        5 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_printf
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394     0346                     ___lwmod:	
  2395                           ;psect for function ___lwmod
  2396                           
  2397     0346                     l1409:	
  2398                           ;incstack = 0
  2399                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2400                           
  2401     0346  0877               	movf	___lwmod@divisor,w
  2402     0347  0478               	iorwf	___lwmod@divisor+1,w
  2403     0348  1903               	btfsc	3,2
  2404     0349  2B4B               	goto	u891
  2405     034A  2B4C               	goto	u890
  2406     034B                     u891:
  2407     034B  2B7B               	goto	l1427
  2408     034C                     u890:
  2409     034C                     l1411:
  2410     034C  01FB               	clrf	___lwmod@counter
  2411     034D  0AFB               	incf	___lwmod@counter,f
  2412     034E  2B5A               	goto	l1417
  2413     034F                     l1413:
  2414     034F  3001               	movlw	1
  2415     0350                     u905:
  2416     0350  1003               	clrc
  2417     0351  0DF7               	rlf	___lwmod@divisor,f
  2418     0352  0DF8               	rlf	___lwmod@divisor+1,f
  2419     0353  3EFF               	addlw	-1
  2420     0354  1D03               	skipz
  2421     0355  2B50               	goto	u905
  2422     0356                     l1415:
  2423     0356  3001               	movlw	1
  2424     0357  00FF               	movwf	btemp+1
  2425     0358  087F               	movf	btemp+1,w
  2426     0359  07FB               	addwf	___lwmod@counter,f
  2427     035A                     l1417:
  2428     035A  1FF8               	btfss	___lwmod@divisor+1,7
  2429     035B  2B5D               	goto	u911
  2430     035C  2B5E               	goto	u910
  2431     035D                     u911:
  2432     035D  2B4F               	goto	l1413
  2433     035E                     u910:
  2434     035E                     l1419:
  2435     035E  0878               	movf	___lwmod@divisor+1,w
  2436     035F  027A               	subwf	___lwmod@dividend+1,w
  2437     0360  1D03               	skipz
  2438     0361  2B64               	goto	u925
  2439     0362  0877               	movf	___lwmod@divisor,w
  2440     0363  0279               	subwf	___lwmod@dividend,w
  2441     0364                     u925:
  2442     0364  1C03               	skipc
  2443     0365  2B67               	goto	u921
  2444     0366  2B68               	goto	u920
  2445     0367                     u921:
  2446     0367  2B6E               	goto	l1423
  2447     0368                     u920:
  2448     0368                     l1421:
  2449     0368  0877               	movf	___lwmod@divisor,w
  2450     0369  02F9               	subwf	___lwmod@dividend,f
  2451     036A  0878               	movf	___lwmod@divisor+1,w
  2452     036B  1C03               	skipc
  2453     036C  03FA               	decf	___lwmod@dividend+1,f
  2454     036D  02FA               	subwf	___lwmod@dividend+1,f
  2455     036E                     l1423:
  2456     036E  3001               	movlw	1
  2457     036F                     u935:
  2458     036F  1003               	clrc
  2459     0370  0CF8               	rrf	___lwmod@divisor+1,f
  2460     0371  0CF7               	rrf	___lwmod@divisor,f
  2461     0372  3EFF               	addlw	-1
  2462     0373  1D03               	skipz
  2463     0374  2B6F               	goto	u935
  2464     0375                     l1425:
  2465     0375  3001               	movlw	1
  2466     0376  02FB               	subwf	___lwmod@counter,f
  2467     0377  1D03               	btfss	3,2
  2468     0378  2B7A               	goto	u941
  2469     0379  2B7B               	goto	u940
  2470     037A                     u941:
  2471     037A  2B5E               	goto	l1419
  2472     037B                     u940:
  2473     037B                     l1427:
  2474     037B  087A               	movf	___lwmod@dividend+1,w
  2475     037C  00F8               	movwf	?___lwmod+1
  2476     037D  0879               	movf	___lwmod@dividend,w
  2477     037E  00F7               	movwf	?___lwmod
  2478     037F                     l505:
  2479     037F  0008               	return
  2480     0380                     __end_of___lwmod:
  2481                           
  2482                           	psect	text10
  2483     0380                     __ptext10:	
  2484 ;; *************** function ___lwdiv *****************
  2485 ;; Defined at:
  2486 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  divisor         2    0[COMMON] unsigned int 
  2489 ;;  dividend        2    2[COMMON] unsigned int 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  quotient        2    4[COMMON] unsigned int 
  2492 ;;  counter         1    6[COMMON] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2    0[COMMON] unsigned int 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, btemp+1
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2502 ;;      Params:         4       0       0       0
  2503 ;;      Locals:         3       0       0       0
  2504 ;;      Temps:          0       0       0       0
  2505 ;;      Totals:         7       0       0       0
  2506 ;;Total ram usage:        7 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_printf
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515     0380                     ___lwdiv:	
  2516                           ;psect for function ___lwdiv
  2517                           
  2518     0380                     l1383:	
  2519                           ;incstack = 0
  2520                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2521                           
  2522     0380  01F4               	clrf	___lwdiv@quotient
  2523     0381  01F5               	clrf	___lwdiv@quotient+1
  2524     0382                     l1385:
  2525     0382  0870               	movf	___lwdiv@divisor,w
  2526     0383  0471               	iorwf	___lwdiv@divisor+1,w
  2527     0384  1903               	btfsc	3,2
  2528     0385  2B87               	goto	u821
  2529     0386  2B88               	goto	u820
  2530     0387                     u821:
  2531     0387  2BBF               	goto	l1405
  2532     0388                     u820:
  2533     0388                     l1387:
  2534     0388  01F6               	clrf	___lwdiv@counter
  2535     0389  0AF6               	incf	___lwdiv@counter,f
  2536     038A  2B96               	goto	l1393
  2537     038B                     l1389:
  2538     038B  3001               	movlw	1
  2539     038C                     u835:
  2540     038C  1003               	clrc
  2541     038D  0DF0               	rlf	___lwdiv@divisor,f
  2542     038E  0DF1               	rlf	___lwdiv@divisor+1,f
  2543     038F  3EFF               	addlw	-1
  2544     0390  1D03               	skipz
  2545     0391  2B8C               	goto	u835
  2546     0392                     l1391:
  2547     0392  3001               	movlw	1
  2548     0393  00FF               	movwf	btemp+1
  2549     0394  087F               	movf	btemp+1,w
  2550     0395  07F6               	addwf	___lwdiv@counter,f
  2551     0396                     l1393:
  2552     0396  1FF1               	btfss	___lwdiv@divisor+1,7
  2553     0397  2B99               	goto	u841
  2554     0398  2B9A               	goto	u840
  2555     0399                     u841:
  2556     0399  2B8B               	goto	l1389
  2557     039A                     u840:
  2558     039A                     l1395:
  2559     039A  3001               	movlw	1
  2560     039B                     u855:
  2561     039B  1003               	clrc
  2562     039C  0DF4               	rlf	___lwdiv@quotient,f
  2563     039D  0DF5               	rlf	___lwdiv@quotient+1,f
  2564     039E  3EFF               	addlw	-1
  2565     039F  1D03               	skipz
  2566     03A0  2B9B               	goto	u855
  2567     03A1  0871               	movf	___lwdiv@divisor+1,w
  2568     03A2  0273               	subwf	___lwdiv@dividend+1,w
  2569     03A3  1D03               	skipz
  2570     03A4  2BA7               	goto	u865
  2571     03A5  0870               	movf	___lwdiv@divisor,w
  2572     03A6  0272               	subwf	___lwdiv@dividend,w
  2573     03A7                     u865:
  2574     03A7  1C03               	skipc
  2575     03A8  2BAA               	goto	u861
  2576     03A9  2BAB               	goto	u860
  2577     03AA                     u861:
  2578     03AA  2BB2               	goto	l1401
  2579     03AB                     u860:
  2580     03AB                     l1397:
  2581     03AB  0870               	movf	___lwdiv@divisor,w
  2582     03AC  02F2               	subwf	___lwdiv@dividend,f
  2583     03AD  0871               	movf	___lwdiv@divisor+1,w
  2584     03AE  1C03               	skipc
  2585     03AF  03F3               	decf	___lwdiv@dividend+1,f
  2586     03B0  02F3               	subwf	___lwdiv@dividend+1,f
  2587     03B1                     l1399:
  2588     03B1  1474               	bsf	___lwdiv@quotient,0
  2589     03B2                     l1401:
  2590     03B2  3001               	movlw	1
  2591     03B3                     u875:
  2592     03B3  1003               	clrc
  2593     03B4  0CF1               	rrf	___lwdiv@divisor+1,f
  2594     03B5  0CF0               	rrf	___lwdiv@divisor,f
  2595     03B6  3EFF               	addlw	-1
  2596     03B7  1D03               	skipz
  2597     03B8  2BB3               	goto	u875
  2598     03B9                     l1403:
  2599     03B9  3001               	movlw	1
  2600     03BA  02F6               	subwf	___lwdiv@counter,f
  2601     03BB  1D03               	btfss	3,2
  2602     03BC  2BBE               	goto	u881
  2603     03BD  2BBF               	goto	u880
  2604     03BE                     u881:
  2605     03BE  2B9A               	goto	l1395
  2606     03BF                     u880:
  2607     03BF                     l1405:
  2608     03BF  0875               	movf	___lwdiv@quotient+1,w
  2609     03C0  00F1               	movwf	?___lwdiv+1
  2610     03C1  0874               	movf	___lwdiv@quotient,w
  2611     03C2  00F0               	movwf	?___lwdiv
  2612     03C3                     l495:
  2613     03C3  0008               	return
  2614     03C4                     __end_of___lwdiv:
  2615                           
  2616                           	psect	text11
  2617     024B                     __ptext11:	
  2618 ;; *************** function _initUART *****************
  2619 ;; Defined at:
  2620 ;;		line 6 in file "uart.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2634 ;;      Params:         0       0       0       0
  2635 ;;      Locals:         0       0       0       0
  2636 ;;      Temps:          0       0       0       0
  2637 ;;      Totals:         0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647     024B                     _initUART:	
  2648                           ;psect for function _initUART
  2649                           
  2650     024B                     l1509:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _initUART: [wreg]
  2653                           
  2654                           
  2655                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  2656     024B  3019               	movlw	25
  2657     024C  1683               	bsf	3,5	;RP0=1, select bank1
  2658     024D  1303               	bcf	3,6	;RP1=0, select bank1
  2659     024E  0099               	movwf	25	;volatile
  2660                           
  2661                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  2662     024F  3024               	movlw	36
  2663     0250  0098               	movwf	24	;volatile
  2664                           
  2665                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  2666     0251  3090               	movlw	144
  2667     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2668     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2669     0254  0098               	movwf	24	;volatile
  2670     0255                     l87:
  2671     0255  0008               	return
  2672     0256                     __end_of_initUART:
  2673                           
  2674                           	psect	text12
  2675     021F                     __ptext12:	
  2676 ;; *************** function _gets *****************
  2677 ;; Defined at:
  2678 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  s               1    wreg     PTR unsigned char 
  2681 ;;		 -> main@tmp(40), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  s               1    8[COMMON] PTR unsigned char 
  2684 ;;		 -> main@tmp(40), 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      PTR unsigned char 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2694 ;;      Params:         0       0       0       0
  2695 ;;      Locals:         1       0       0       0
  2696 ;;      Temps:          0       0       0       0
  2697 ;;      Totals:         1       0       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 3
  2701 ;; This function calls:
  2702 ;;		_cgets
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708     021F                     _gets:	
  2709                           ;psect for function _gets
  2710                           
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2714                           ;gets@s stored from wreg
  2715     021F  00F8               	movwf	gets@s
  2716     0220                     l1511:
  2717                           
  2718                           ;	Return value of _gets is never used
  2719     0220  0878               	movf	gets@s,w
  2720     0221  118A  240A  118A   	fcall	_cgets
  2721     0224                     l691:
  2722     0224  0008               	return
  2723     0225                     __end_of_gets:
  2724                           
  2725                           	psect	text13
  2726     040A                     __ptext13:	
  2727 ;; *************** function _cgets *****************
  2728 ;; Defined at:
  2729 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  s               1    wreg     PTR unsigned char 
  2732 ;;		 -> main@tmp(40), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  s               1    6[COMMON] PTR unsigned char 
  2735 ;;		 -> main@tmp(40), 
  2736 ;;  c               2    4[COMMON] int 
  2737 ;;  s1              1    7[COMMON] PTR unsigned char 
  2738 ;;		 -> main@tmp(40), 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      PTR unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2748 ;;      Params:         0       0       0       0
  2749 ;;      Locals:         4       0       0       0
  2750 ;;      Temps:          2       0       0       0
  2751 ;;      Totals:         6       0       0       0
  2752 ;;Total ram usage:        6 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 2
  2755 ;; This function calls:
  2756 ;;		_getche
  2757 ;;		_putch
  2758 ;; This function is called by:
  2759 ;;		_gets
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763     040A                     _cgets:	
  2764                           ;psect for function _cgets
  2765                           
  2766                           
  2767                           ;incstack = 0
  2768                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2769                           ;cgets@s stored from wreg
  2770     040A  00F6               	movwf	cgets@s
  2771     040B                     l1443:
  2772     040B  0876               	movf	cgets@s,w
  2773     040C  00F7               	movwf	cgets@s1
  2774     040D  2C44               	goto	l1471
  2775     040E                     l1445:
  2776     040E  0876               	movf	cgets@s,w
  2777     040F  0677               	xorwf	cgets@s1,w
  2778     0410  1D03               	skipz
  2779     0411  2C13               	goto	u971
  2780     0412  2C14               	goto	u970
  2781     0413                     u971:
  2782     0413  2C15               	goto	l1449
  2783     0414                     u970:
  2784     0414  2C44               	goto	l1471
  2785     0415                     l1449:
  2786     0415  3020               	movlw	32
  2787     0416  118A  222D  118A   	fcall	_putch
  2788     0419  3008               	movlw	8
  2789     041A  118A  222D  118A   	fcall	_putch
  2790     041D                     l1451:
  2791     041D  3001               	movlw	1
  2792     041E  02F7               	subwf	cgets@s1,f
  2793     041F  2C44               	goto	l1471
  2794     0420                     l1453:
  2795     0420  3008               	movlw	8
  2796     0421  118A  222D  118A   	fcall	_putch
  2797     0424  3020               	movlw	32
  2798     0425  118A  222D  118A   	fcall	_putch
  2799     0428  3008               	movlw	8
  2800     0429  118A  222D  118A   	fcall	_putch
  2801     042C                     l1455:
  2802     042C  3001               	movlw	1
  2803     042D  02F7               	subwf	cgets@s1,f
  2804     042E                     l1457:
  2805     042E  0877               	movf	cgets@s1,w
  2806     042F  0276               	subwf	cgets@s,w
  2807     0430  1C03               	skipc
  2808     0431  2C33               	goto	u981
  2809     0432  2C34               	goto	u980
  2810     0433                     u981:
  2811     0433  2C20               	goto	l1453
  2812     0434                     u980:
  2813     0434  2C44               	goto	l1471
  2814     0435                     l1459:
  2815     0435  0877               	movf	cgets@s1,w
  2816     0436  0084               	movwf	4
  2817     0437  1383               	bcf	3,7	;select IRP bank0
  2818     0438  0180               	clrf	0
  2819     0439                     l1461:
  2820     0439  0876               	movf	cgets@s,w
  2821     043A  2C60               	goto	l709
  2822     043B                     l1465:
  2823     043B  0877               	movf	cgets@s1,w
  2824     043C  0084               	movwf	4
  2825     043D  0874               	movf	cgets@c,w
  2826     043E  1383               	bcf	3,7	;select IRP bank0
  2827     043F  0080               	movwf	0
  2828     0440                     l1467:
  2829     0440  3001               	movlw	1
  2830     0441  00FF               	movwf	btemp+1
  2831     0442  087F               	movf	btemp+1,w
  2832     0443  07F7               	addwf	cgets@s1,f
  2833     0444                     l1471:
  2834     0444  118A  2237  118A   	fcall	_getche
  2835     0447  00F2               	movwf	??_cgets
  2836     0448  01F3               	clrf	??_cgets+1
  2837     0449  0872               	movf	??_cgets,w
  2838     044A  00F4               	movwf	cgets@c
  2839     044B  0873               	movf	??_cgets+1,w
  2840     044C  00F5               	movwf	cgets@c+1
  2841                           
  2842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2843                           ; Switch size 1, requested type "simple"
  2844                           ; Number of cases is 1, Range of values is 0 to 0
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte            4     3 (average)
  2848                           ; direct_byte            9     7 (fixed)
  2849                           ; jumptable            260     6 (fixed)
  2850                           ;	Chosen strategy is simple_byte
  2851     044D  0875               	movf	cgets@c+1,w
  2852     044E  3A00               	xorlw	0	; case 0
  2853     044F  1903               	skipnz
  2854     0450  2C52               	goto	l1841
  2855     0451  2C3B               	goto	l1465
  2856     0452                     l1841:
  2857                           
  2858                           ; Switch size 1, requested type "simple"
  2859                           ; Number of cases is 4, Range of values is 8 to 21
  2860                           ; switch strategies available:
  2861                           ; Name         Instructions Cycles
  2862                           ; simple_byte           13     7 (average)
  2863                           ; direct_byte           38    10 (fixed)
  2864                           ; jumptable            263     9 (fixed)
  2865                           ;	Chosen strategy is simple_byte
  2866     0452  0874               	movf	cgets@c,w
  2867     0453  3A08               	xorlw	8	; case 8
  2868     0454  1903               	skipnz
  2869     0455  2C0E               	goto	l1445
  2870     0456  3A02               	xorlw	2	; case 10
  2871     0457  1903               	skipnz
  2872     0458  2C35               	goto	l1459
  2873     0459  3A07               	xorlw	7	; case 13
  2874     045A  1903               	skipnz
  2875     045B  2C35               	goto	l1459
  2876     045C  3A18               	xorlw	24	; case 21
  2877     045D  1903               	skipnz
  2878     045E  2C2E               	goto	l1457
  2879     045F  2C3B               	goto	l1465
  2880     0460                     l709:
  2881     0460  0008               	return
  2882     0461                     __end_of_cgets:
  2883                           
  2884                           	psect	text14
  2885     0237                     __ptext14:	
  2886 ;; *************** function _getche *****************
  2887 ;; Defined at:
  2888 ;;		line 28 in file "uart.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  c               1    1[COMMON] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      unsigned char 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2902 ;;      Params:         0       0       0       0
  2903 ;;      Locals:         1       0       0       0
  2904 ;;      Temps:          0       0       0       0
  2905 ;;      Totals:         1       0       0       0
  2906 ;;Total ram usage:        1 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 1
  2909 ;; This function calls:
  2910 ;;		_getch
  2911 ;;		_putch
  2912 ;; This function is called by:
  2913 ;;		_cgets
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917     0237                     _getche:	
  2918                           ;psect for function _getche
  2919                           
  2920     0237                     l1349:	
  2921                           ;incstack = 0
  2922                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  2923                           
  2924                           
  2925                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  2926     0237  118A  2225  118A   	fcall	_getch
  2927     023A  00F1               	movwf	getche@c
  2928     023B                     l1351:
  2929                           
  2930                           ;uart.c: 33: putch(c);
  2931     023B  0871               	movf	getche@c,w
  2932     023C  118A  222D  118A   	fcall	_putch
  2933     023F                     l1353:
  2934                           
  2935                           ;uart.c: 35: return c;
  2936     023F  0871               	movf	getche@c,w
  2937     0240                     l102:
  2938     0240  0008               	return
  2939     0241                     __end_of_getche:
  2940                           
  2941                           	psect	text15
  2942     022D                     __ptext15:	
  2943 ;; *************** function _putch *****************
  2944 ;; Defined at:
  2945 ;;		line 13 in file "uart.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  byte            1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  byte            1    0[COMMON] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2959 ;;      Params:         0       0       0       0
  2960 ;;      Locals:         1       0       0       0
  2961 ;;      Temps:          0       0       0       0
  2962 ;;      Totals:         1       0       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_getche
  2969 ;;		_printf
  2970 ;;		_cgets
  2971 ;;		_puts
  2972 ;;		_cputs
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976     022D                     _putch:	
  2977                           ;psect for function _putch
  2978                           
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in _putch: [wreg]
  2982                           ;putch@byte stored from wreg
  2983     022D  00F0               	movwf	putch@byte
  2984     022E                     l1339:
  2985     022E                     l90:	
  2986                           ;uart.c: 15: while(!TXIF){
  2987                           
  2988     022E  1283               	bcf	3,5	;RP0=0, select bank0
  2989     022F  1303               	bcf	3,6	;RP1=0, select bank0
  2990     0230  1E0C               	btfss	12,4	;volatile
  2991     0231  2A33               	goto	u741
  2992     0232  2A34               	goto	u740
  2993     0233                     u741:
  2994     0233  2A2E               	goto	l90
  2995     0234                     u740:
  2996     0234                     l1341:
  2997                           
  2998                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  2999     0234  0870               	movf	putch@byte,w
  3000     0235  0099               	movwf	25	;volatile
  3001     0236                     l93:
  3002     0236  0008               	return
  3003     0237                     __end_of_putch:
  3004                           
  3005                           	psect	text16
  3006     0225                     __ptext16:	
  3007 ;; *************** function _getch *****************
  3008 ;; Defined at:
  3009 ;;		line 20 in file "uart.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      unsigned char 
  3016 ;; Registers used:
  3017 ;;		wreg
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3023 ;;      Params:         0       0       0       0
  3024 ;;      Locals:         0       0       0       0
  3025 ;;      Temps:          0       0       0       0
  3026 ;;      Totals:         0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_getche
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036     0225                     _getch:	
  3037                           ;psect for function _getch
  3038                           
  3039     0225                     l1343:	
  3040                           ;incstack = 0
  3041                           ; Regs used in _getch: [wreg]
  3042                           
  3043     0225                     l96:	
  3044                           ;uart.c: 22: while(!RCIF){
  3045                           
  3046     0225  1283               	bcf	3,5	;RP0=0, select bank0
  3047     0226  1303               	bcf	3,6	;RP1=0, select bank0
  3048     0227  1E8C               	btfss	12,5	;volatile
  3049     0228  2A2A               	goto	u751
  3050     0229  2A2B               	goto	u750
  3051     022A                     u751:
  3052     022A  2A25               	goto	l96
  3053     022B                     u750:
  3054     022B                     l1345:
  3055                           
  3056                           ;uart.c: 23: };uart.c: 25: return RCREG;
  3057     022B  081A               	movf	26,w	;volatile
  3058     022C                     l99:
  3059     022C  0008               	return
  3060     022D                     __end_of_getch:
  3061                           
  3062                           	psect	text17
  3063     04C8                     __ptext17:	
  3064 ;; *************** function _atoi *****************
  3065 ;; Defined at:
  3066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  s               1    wreg     PTR const unsigned char 
  3069 ;;		 -> NULL(0), main@tmp(40), 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  s               1   13[COMMON] PTR const unsigned char 
  3072 ;;		 -> NULL(0), main@tmp(40), 
  3073 ;;  a               2   11[COMMON] int 
  3074 ;;  sign            1   10[COMMON] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  2    6[COMMON] int 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3084 ;;      Params:         2       0       0       0
  3085 ;;      Locals:         4       0       0       0
  3086 ;;      Temps:          2       0       0       0
  3087 ;;      Totals:         8       0       0       0
  3088 ;;Total ram usage:        8 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 1
  3091 ;; This function calls:
  3092 ;;		___wmul
  3093 ;;		_isdigit
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099     04C8                     _atoi:	
  3100                           ;psect for function _atoi
  3101                           
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3105                           ;atoi@s stored from wreg
  3106     04C8  00FD               	movwf	atoi@s
  3107     04C9                     l1625:
  3108     04C9  2CCE               	goto	l1629
  3109     04CA                     l1627:
  3110     04CA  3001               	movlw	1
  3111     04CB  00FF               	movwf	btemp+1
  3112     04CC  087F               	movf	btemp+1,w
  3113     04CD  07FD               	addwf	atoi@s,f
  3114     04CE                     l1629:
  3115     04CE  087D               	movf	atoi@s,w
  3116     04CF  0084               	movwf	4
  3117     04D0  3020               	movlw	32
  3118     04D1  1383               	bcf	3,7	;select IRP bank0
  3119     04D2  0600               	xorwf	0,w
  3120     04D3  1903               	btfsc	3,2
  3121     04D4  2CD6               	goto	u1191
  3122     04D5  2CD7               	goto	u1190
  3123     04D6                     u1191:
  3124     04D6  2CCA               	goto	l1627
  3125     04D7                     u1190:
  3126     04D7                     l1631:
  3127     04D7  087D               	movf	atoi@s,w
  3128     04D8  0084               	movwf	4
  3129     04D9  3009               	movlw	9
  3130     04DA  0600               	xorwf	0,w
  3131     04DB  1903               	btfsc	3,2
  3132     04DC  2CDE               	goto	u1201
  3133     04DD  2CDF               	goto	u1200
  3134     04DE                     u1201:
  3135     04DE  2CCA               	goto	l1627
  3136     04DF                     u1200:
  3137     04DF                     l1633:
  3138     04DF  01FB               	clrf	atoi@a
  3139     04E0  01FC               	clrf	atoi@a+1
  3140     04E1  01FA               	clrf	atoi@sign
  3141     04E2                     l1635:
  3142     04E2  087D               	movf	atoi@s,w
  3143     04E3  0084               	movwf	4
  3144     04E4  302D               	movlw	45
  3145     04E5  0600               	xorwf	0,w
  3146     04E6  1D03               	btfss	3,2
  3147     04E7  2CE9               	goto	u1211
  3148     04E8  2CEA               	goto	u1210
  3149     04E9                     u1211:
  3150     04E9  2CF3               	goto	l1639
  3151     04EA                     u1210:
  3152     04EA                     l1637:
  3153     04EA  3001               	movlw	1
  3154     04EB  00FF               	movwf	btemp+1
  3155     04EC  087F               	movf	btemp+1,w
  3156     04ED  07FA               	addwf	atoi@sign,f
  3157     04EE  3001               	movlw	1
  3158     04EF  00FF               	movwf	btemp+1
  3159     04F0  087F               	movf	btemp+1,w
  3160     04F1  07FD               	addwf	atoi@s,f
  3161     04F2  2D1F               	goto	l1647
  3162     04F3                     l1639:
  3163     04F3  087D               	movf	atoi@s,w
  3164     04F4  0084               	movwf	4
  3165     04F5  302B               	movlw	43
  3166     04F6  0600               	xorwf	0,w
  3167     04F7  1D03               	btfss	3,2
  3168     04F8  2CFA               	goto	u1221
  3169     04F9  2CFB               	goto	u1220
  3170     04FA                     u1221:
  3171     04FA  2D1F               	goto	l1647
  3172     04FB                     u1220:
  3173     04FB                     l1641:
  3174     04FB  3001               	movlw	1
  3175     04FC  00FF               	movwf	btemp+1
  3176     04FD  087F               	movf	btemp+1,w
  3177     04FE  07FD               	addwf	atoi@s,f
  3178     04FF  2D1F               	goto	l1647
  3179     0500                     l1643:
  3180     0500  087D               	movf	atoi@s,w
  3181     0501  0084               	movwf	4
  3182     0502  087C               	movf	atoi@a+1,w
  3183     0503  00F1               	movwf	___wmul@multiplier+1
  3184     0504  087B               	movf	atoi@a,w
  3185     0505  00F0               	movwf	___wmul@multiplier
  3186     0506  300A               	movlw	10
  3187     0507  00F2               	movwf	___wmul@multiplicand
  3188     0508  3000               	movlw	0
  3189     0509  00F3               	movwf	___wmul@multiplicand+1
  3190     050A  118A  229D  118A   	fcall	___wmul
  3191     050D  1383               	bcf	3,7	;select IRP bank0
  3192     050E  0800               	movf	0,w
  3193     050F  0770               	addwf	?___wmul,w
  3194     0510  00F8               	movwf	??_atoi
  3195     0511  3000               	movlw	0
  3196     0512  1803               	skipnc
  3197     0513  3001               	movlw	1
  3198     0514  0771               	addwf	?___wmul+1,w
  3199     0515  00F9               	movwf	??_atoi+1
  3200     0516  0878               	movf	??_atoi,w
  3201     0517  3ED0               	addlw	208
  3202     0518  00FB               	movwf	atoi@a
  3203     0519  0879               	movf	??_atoi+1,w
  3204     051A  1803               	skipnc
  3205     051B  3E01               	addlw	1
  3206     051C  3EFF               	addlw	255
  3207     051D  00FC               	movwf	atoi@a+1
  3208     051E  2CFB               	goto	l1641
  3209     051F                     l1647:
  3210     051F  087D               	movf	atoi@s,w
  3211     0520  0084               	movwf	4
  3212     0521  0800               	movf	0,w
  3213     0522  118A  2256  118A   	fcall	_isdigit
  3214     0525  1803               	btfsc	3,0
  3215     0526  2D28               	goto	u1231
  3216     0527  2D29               	goto	u1230
  3217     0528                     u1231:
  3218     0528  2D00               	goto	l1643
  3219     0529                     u1230:
  3220     0529                     l1649:
  3221     0529  087A               	movf	atoi@sign,w
  3222     052A  1903               	btfsc	3,2
  3223     052B  2D2D               	goto	u1241
  3224     052C  2D2E               	goto	u1240
  3225     052D                     u1241:
  3226     052D  2D3A               	goto	l1655
  3227     052E                     u1240:
  3228     052E                     l1651:
  3229     052E  097B               	comf	atoi@a,w
  3230     052F  00F8               	movwf	??_atoi
  3231     0530  097C               	comf	atoi@a+1,w
  3232     0531  00F9               	movwf	??_atoi+1
  3233     0532  0AF8               	incf	??_atoi,f
  3234     0533  1903               	skipnz
  3235     0534  0AF9               	incf	??_atoi+1,f
  3236     0535  0878               	movf	??_atoi,w
  3237     0536  00F6               	movwf	?_atoi
  3238     0537  0879               	movf	??_atoi+1,w
  3239     0538  00F7               	movwf	?_atoi+1
  3240     0539  2D3E               	goto	l686
  3241     053A                     l1655:
  3242     053A  087C               	movf	atoi@a+1,w
  3243     053B  00F7               	movwf	?_atoi+1
  3244     053C  087B               	movf	atoi@a,w
  3245     053D  00F6               	movwf	?_atoi
  3246     053E                     l686:
  3247     053E  0008               	return
  3248     053F                     __end_of_atoi:
  3249                           
  3250                           	psect	text18
  3251     0256                     __ptext18:	
  3252 ;; *************** function _isdigit *****************
  3253 ;; Defined at:
  3254 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  c               1    wreg     unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  c               1    1[COMMON] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3268 ;;      Params:         0       0       0       0
  3269 ;;      Locals:         2       0       0       0
  3270 ;;      Temps:          0       0       0       0
  3271 ;;      Totals:         2       0       0       0
  3272 ;;Total ram usage:        2 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_atoi
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281     0256                     _isdigit:	
  3282                           ;psect for function _isdigit
  3283                           
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3287                           ;isdigit@c stored from wreg
  3288     0256  00F1               	movwf	isdigit@c
  3289     0257                     l1431:
  3290     0257  01F0               	clrf	_isdigit$609
  3291     0258                     l1433:
  3292     0258  303A               	movlw	58
  3293     0259  0271               	subwf	isdigit@c,w
  3294     025A  1803               	skipnc
  3295     025B  2A5D               	goto	u951
  3296     025C  2A5E               	goto	u950
  3297     025D                     u951:
  3298     025D  2A66               	goto	l1439
  3299     025E                     u950:
  3300     025E                     l1435:
  3301     025E  3030               	movlw	48
  3302     025F  0271               	subwf	isdigit@c,w
  3303     0260  1C03               	skipc
  3304     0261  2A63               	goto	u961
  3305     0262  2A64               	goto	u960
  3306     0263                     u961:
  3307     0263  2A66               	goto	l1439
  3308     0264                     u960:
  3309     0264                     l1437:
  3310     0264  01F0               	clrf	_isdigit$609
  3311     0265  0AF0               	incf	_isdigit$609,f
  3312     0266                     l1439:
  3313     0266  0C70               	rrf	_isdigit$609,w
  3314     0267                     l716:
  3315     0267  0008               	return
  3316     0268                     __end_of_isdigit:
  3317                           
  3318                           	psect	text19
  3319     029D                     __ptext19:	
  3320 ;; *************** function ___wmul *****************
  3321 ;; Defined at:
  3322 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  multiplier      2    0[COMMON] unsigned int 
  3325 ;;  multiplicand    2    2[COMMON] unsigned int 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  product         2    4[COMMON] unsigned int 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    0[COMMON] unsigned int 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3337 ;;      Params:         4       0       0       0
  3338 ;;      Locals:         2       0       0       0
  3339 ;;      Temps:          0       0       0       0
  3340 ;;      Totals:         6       0       0       0
  3341 ;;Total ram usage:        6 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;;		_atoi
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351     029D                     ___wmul:	
  3352                           ;psect for function ___wmul
  3353                           
  3354     029D                     l1369:	
  3355                           ;incstack = 0
  3356                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3357                           
  3358     029D  01F4               	clrf	___wmul@product
  3359     029E  01F5               	clrf	___wmul@product+1
  3360     029F                     l1371:
  3361     029F  1C70               	btfss	___wmul@multiplier,0
  3362     02A0  2AA2               	goto	u781
  3363     02A1  2AA3               	goto	u780
  3364     02A2                     u781:
  3365     02A2  2AA9               	goto	l223
  3366     02A3                     u780:
  3367     02A3                     l1373:
  3368     02A3  0872               	movf	___wmul@multiplicand,w
  3369     02A4  07F4               	addwf	___wmul@product,f
  3370     02A5  1803               	skipnc
  3371     02A6  0AF5               	incf	___wmul@product+1,f
  3372     02A7  0873               	movf	___wmul@multiplicand+1,w
  3373     02A8  07F5               	addwf	___wmul@product+1,f
  3374     02A9                     l223:
  3375     02A9  3001               	movlw	1
  3376     02AA                     u795:
  3377     02AA  1003               	clrc
  3378     02AB  0DF2               	rlf	___wmul@multiplicand,f
  3379     02AC  0DF3               	rlf	___wmul@multiplicand+1,f
  3380     02AD  3EFF               	addlw	-1
  3381     02AE  1D03               	skipz
  3382     02AF  2AAA               	goto	u795
  3383     02B0                     l1375:
  3384     02B0  3001               	movlw	1
  3385     02B1                     u805:
  3386     02B1  1003               	clrc
  3387     02B2  0CF1               	rrf	___wmul@multiplier+1,f
  3388     02B3  0CF0               	rrf	___wmul@multiplier,f
  3389     02B4  3EFF               	addlw	-1
  3390     02B5  1D03               	skipz
  3391     02B6  2AB1               	goto	u805
  3392     02B7                     l1377:
  3393     02B7  0870               	movf	___wmul@multiplier,w
  3394     02B8  0471               	iorwf	___wmul@multiplier+1,w
  3395     02B9  1D03               	btfss	3,2
  3396     02BA  2ABC               	goto	u811
  3397     02BB  2ABD               	goto	u810
  3398     02BC                     u811:
  3399     02BC  2A9F               	goto	l1371
  3400     02BD                     u810:
  3401     02BD                     l1379:
  3402     02BD  0875               	movf	___wmul@product+1,w
  3403     02BE  00F1               	movwf	?___wmul+1
  3404     02BF  0874               	movf	___wmul@product,w
  3405     02C0  00F0               	movwf	?___wmul
  3406     02C1                     l225:
  3407     02C1  0008               	return
  3408     02C2                     __end_of___wmul:
  3409                           
  3410                           	psect	text20
  3411     0461                     __ptext20:	
  3412 ;; *************** function ___awdiv *****************
  3413 ;; Defined at:
  3414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  divisor         2    0[COMMON] int 
  3417 ;;  dividend        2    2[COMMON] int 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  quotient        2    6[COMMON] int 
  3420 ;;  sign            1    5[COMMON] unsigned char 
  3421 ;;  counter         1    4[COMMON] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  2    0[COMMON] int 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, btemp+1
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3431 ;;      Params:         4       0       0       0
  3432 ;;      Locals:         4       0       0       0
  3433 ;;      Temps:          0       0       0       0
  3434 ;;      Totals:         8       0       0       0
  3435 ;;Total ram usage:        8 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444     0461                     ___awdiv:	
  3445                           ;psect for function ___awdiv
  3446                           
  3447     0461                     l1663:	
  3448                           ;incstack = 0
  3449                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3450                           
  3451     0461  01F5               	clrf	___awdiv@sign
  3452     0462                     l1665:
  3453     0462  1FF1               	btfss	___awdiv@divisor+1,7
  3454     0463  2C65               	goto	u1251
  3455     0464  2C66               	goto	u1250
  3456     0465                     u1251:
  3457     0465  2C6D               	goto	l1671
  3458     0466                     u1250:
  3459     0466                     l1667:
  3460     0466  09F0               	comf	___awdiv@divisor,f
  3461     0467  09F1               	comf	___awdiv@divisor+1,f
  3462     0468  0AF0               	incf	___awdiv@divisor,f
  3463     0469  1903               	skipnz
  3464     046A  0AF1               	incf	___awdiv@divisor+1,f
  3465     046B                     l1669:
  3466     046B  01F5               	clrf	___awdiv@sign
  3467     046C  0AF5               	incf	___awdiv@sign,f
  3468     046D                     l1671:
  3469     046D  1FF3               	btfss	___awdiv@dividend+1,7
  3470     046E  2C70               	goto	u1261
  3471     046F  2C71               	goto	u1260
  3472     0470                     u1261:
  3473     0470  2C7A               	goto	l1677
  3474     0471                     u1260:
  3475     0471                     l1673:
  3476     0471  09F2               	comf	___awdiv@dividend,f
  3477     0472  09F3               	comf	___awdiv@dividend+1,f
  3478     0473  0AF2               	incf	___awdiv@dividend,f
  3479     0474  1903               	skipnz
  3480     0475  0AF3               	incf	___awdiv@dividend+1,f
  3481     0476                     l1675:
  3482     0476  3001               	movlw	1
  3483     0477  00FF               	movwf	btemp+1
  3484     0478  087F               	movf	btemp+1,w
  3485     0479  06F5               	xorwf	___awdiv@sign,f
  3486     047A                     l1677:
  3487     047A  01F6               	clrf	___awdiv@quotient
  3488     047B  01F7               	clrf	___awdiv@quotient+1
  3489     047C                     l1679:
  3490     047C  0870               	movf	___awdiv@divisor,w
  3491     047D  0471               	iorwf	___awdiv@divisor+1,w
  3492     047E  1903               	btfsc	3,2
  3493     047F  2C81               	goto	u1271
  3494     0480  2C82               	goto	u1270
  3495     0481                     u1271:
  3496     0481  2CB9               	goto	l1699
  3497     0482                     u1270:
  3498     0482                     l1681:
  3499     0482  01F4               	clrf	___awdiv@counter
  3500     0483  0AF4               	incf	___awdiv@counter,f
  3501     0484  2C90               	goto	l1687
  3502     0485                     l1683:
  3503     0485  3001               	movlw	1
  3504     0486                     u1285:
  3505     0486  1003               	clrc
  3506     0487  0DF0               	rlf	___awdiv@divisor,f
  3507     0488  0DF1               	rlf	___awdiv@divisor+1,f
  3508     0489  3EFF               	addlw	-1
  3509     048A  1D03               	skipz
  3510     048B  2C86               	goto	u1285
  3511     048C                     l1685:
  3512     048C  3001               	movlw	1
  3513     048D  00FF               	movwf	btemp+1
  3514     048E  087F               	movf	btemp+1,w
  3515     048F  07F4               	addwf	___awdiv@counter,f
  3516     0490                     l1687:
  3517     0490  1FF1               	btfss	___awdiv@divisor+1,7
  3518     0491  2C93               	goto	u1291
  3519     0492  2C94               	goto	u1290
  3520     0493                     u1291:
  3521     0493  2C85               	goto	l1683
  3522     0494                     u1290:
  3523     0494                     l1689:
  3524     0494  3001               	movlw	1
  3525     0495                     u1305:
  3526     0495  1003               	clrc
  3527     0496  0DF6               	rlf	___awdiv@quotient,f
  3528     0497  0DF7               	rlf	___awdiv@quotient+1,f
  3529     0498  3EFF               	addlw	-1
  3530     0499  1D03               	skipz
  3531     049A  2C95               	goto	u1305
  3532     049B  0871               	movf	___awdiv@divisor+1,w
  3533     049C  0273               	subwf	___awdiv@dividend+1,w
  3534     049D  1D03               	skipz
  3535     049E  2CA1               	goto	u1315
  3536     049F  0870               	movf	___awdiv@divisor,w
  3537     04A0  0272               	subwf	___awdiv@dividend,w
  3538     04A1                     u1315:
  3539     04A1  1C03               	skipc
  3540     04A2  2CA4               	goto	u1311
  3541     04A3  2CA5               	goto	u1310
  3542     04A4                     u1311:
  3543     04A4  2CAC               	goto	l1695
  3544     04A5                     u1310:
  3545     04A5                     l1691:
  3546     04A5  0870               	movf	___awdiv@divisor,w
  3547     04A6  02F2               	subwf	___awdiv@dividend,f
  3548     04A7  0871               	movf	___awdiv@divisor+1,w
  3549     04A8  1C03               	skipc
  3550     04A9  03F3               	decf	___awdiv@dividend+1,f
  3551     04AA  02F3               	subwf	___awdiv@dividend+1,f
  3552     04AB                     l1693:
  3553     04AB  1476               	bsf	___awdiv@quotient,0
  3554     04AC                     l1695:
  3555     04AC  3001               	movlw	1
  3556     04AD                     u1325:
  3557     04AD  1003               	clrc
  3558     04AE  0CF1               	rrf	___awdiv@divisor+1,f
  3559     04AF  0CF0               	rrf	___awdiv@divisor,f
  3560     04B0  3EFF               	addlw	-1
  3561     04B1  1D03               	skipz
  3562     04B2  2CAD               	goto	u1325
  3563     04B3                     l1697:
  3564     04B3  3001               	movlw	1
  3565     04B4  02F4               	subwf	___awdiv@counter,f
  3566     04B5  1D03               	btfss	3,2
  3567     04B6  2CB8               	goto	u1331
  3568     04B7  2CB9               	goto	u1330
  3569     04B8                     u1331:
  3570     04B8  2C94               	goto	l1689
  3571     04B9                     u1330:
  3572     04B9                     l1699:
  3573     04B9  0875               	movf	___awdiv@sign,w
  3574     04BA  1903               	btfsc	3,2
  3575     04BB  2CBD               	goto	u1341
  3576     04BC  2CBE               	goto	u1340
  3577     04BD                     u1341:
  3578     04BD  2CC3               	goto	l1703
  3579     04BE                     u1340:
  3580     04BE                     l1701:
  3581     04BE  09F6               	comf	___awdiv@quotient,f
  3582     04BF  09F7               	comf	___awdiv@quotient+1,f
  3583     04C0  0AF6               	incf	___awdiv@quotient,f
  3584     04C1  1903               	skipnz
  3585     04C2  0AF7               	incf	___awdiv@quotient+1,f
  3586     04C3                     l1703:
  3587     04C3  0877               	movf	___awdiv@quotient+1,w
  3588     04C4  00F1               	movwf	?___awdiv+1
  3589     04C5  0876               	movf	___awdiv@quotient,w
  3590     04C6  00F0               	movwf	?___awdiv
  3591     04C7                     l376:
  3592     04C7  0008               	return
  3593     04C8                     __end_of___awdiv:
  3594     007E                     btemp	set	126	;btemp
  3595     007E                     wtemp0	set	126
  3596                           
  3597                           	psect	idloc
  3598                           
  3599                           ;Config register IDLOC0 @ 0x2000
  3600                           ;	unspecified, using default values
  3601     2000                     	org	8192
  3602     2000  3FFF               	dw	16383
  3603                           
  3604                           ;Config register IDLOC1 @ 0x2001
  3605                           ;	unspecified, using default values
  3606     2001                     	org	8193
  3607     2001  3FFF               	dw	16383
  3608                           
  3609                           ;Config register IDLOC2 @ 0x2002
  3610                           ;	unspecified, using default values
  3611     2002                     	org	8194
  3612     2002  3FFF               	dw	16383
  3613                           
  3614                           ;Config register IDLOC3 @ 0x2003
  3615                           ;	unspecified, using default values
  3616     2003                     	org	8195
  3617     2003  3FFF               	dw	16383
  3618                           
  3619                           	psect	config
  3620                           
  3621                           ;Config register CONFIG @ 0x2007
  3622                           ;	Oscillator Selection bits
  3623                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  3624                           ;	Watchdog Timer Enable bit
  3625                           ;	WDTE = OFF, WDT disabled
  3626                           ;	Power-up Timer Enable bit
  3627                           ;	PWRTE = OFF, PWRT disabled
  3628                           ;	RA5/MCLR/VPP Pin Function Select bit
  3629                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  3630                           ;	Brown-out Detect Enable bit
  3631                           ;	BOREN = ON, BOD enabled
  3632                           ;	Low-Voltage Programming Enable bit
  3633                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3634                           ;	Data EE Memory Code Protection bit
  3635                           ;	CPD = OFF, Data memory code protection off
  3636                           ;	Flash Program Memory Code Protection bit
  3637                           ;	CP = OFF, Code protection off
  3638     2007                     	org	8199
  3639     2007  3F78               	dw	16248

Data Sizes:
    Strings     38
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      72
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), NULL(NULL[0]), 
		 -> STR_4(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 4
		 -> main@rcmd(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_10(CODE[2]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_10(CODE[2]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    gets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_11(CODE[4]), STR_9(CODE[11]), STR_1(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_15(CODE[7]), ?_printf(COMMON[2]), main@tmp(BANK0[40]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0    6741
                                             12 BANK0     59    59      0
                            ___awdiv
                             ___wmul
                               _atoi
                               _gets
                           _initUART
                             _printf
                               _puts
                             _strcmp
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               2     1      1    2084
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     4      2     309
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     177
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1224
                                             12 COMMON     2     0      2
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     758
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     47      48       3       90.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      56       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      56      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 29 13:59:12 2023

                      pc 0002                       l41 06C8                       l43 0726  
                     l44 06E4                       l53 078D                       l45 06F3  
                     l54 074B                       l46 06EA                       l55 075A  
                     l47 0701                       l56 0751                       l48 0710  
                     l57 0768                       l49 0707                       l90 022E  
                     l58 0777                       l59 076E                       l93 0236  
                     l87 0255                       l96 0225                       l99 022C  
           ___awdiv@sign 0075                       fsr 0004      ___wmul@multiplicand 0072  
                    l102 0240                      l223 02A9                      l225 02C1  
                    l219 062A                      l505 037F                      l376 04C7  
                    l731 0280                      l723 024A                      l716 0267  
                    l709 0460                      l750 0409                      l495 03C3  
                    l691 0224                      l739 02EB                      l763 0318  
                    l686 053E                      l766 0282                      l768 029C  
                    l779 0345                      _RA0 0028                      _RA1 0029  
                    u810 02BD                      u811 02BC                      u740 0234  
                    u820 0388                      u805 02B1                      u741 0233  
                    u821 0387                      u750 022B                      u910 035E  
                    u751 022A                      u911 035D                      u840 039A  
                    u920 0368                      u760 028C                      u841 0399  
                    u921 0367                      u905 0350                      u761 028B  
                    u770 029B                      u835 038C                      u771 029A  
                    u780 02A3                      u860 03AB                      u940 037B  
                    u781 02A2                      u861 03AA                      u941 037A  
                    u925 0364                      u950 025E                      u951 025D  
                    u855 039B                      u935 036F                      u960 0264  
                    u880 03BF                      u961 0263                      u881 03BE  
                    u865 03A7                      u970 0414                      u890 034C  
                    u795 02AA                      u971 0413                      u875 03B3  
                    u891 034B                      u980 0434                      u981 0433  
                    u990 0280                      u991 027F                      fsr0 0004  
                    indf 0000                     l1401 03B2                     l1403 03B9  
                   l1411 034C                     l1341 0234                     l1405 03BF  
                   l1421 0368                     l1413 034F                     l1501 02FA  
                   l1431 0257                     l1343 0225                     l1351 023B  
                   l1511 0220                     l1423 036E                     l1415 0356  
                   l1503 0302                     l1433 0258                     l1345 022B  
                   l1353 023F                     l1425 0375                     l1417 035A  
                   l1409 0346                     l1521 0550                     l1505 0314  
                   l1371 029F                     l1435 025E                     l1339 022E  
                   l1451 041D                     l1443 040B                     l1419 035E  
                   l1427 037B                     l1531 0567                     l1523 0552  
                   l1515 0542                     l1363 028E                     l1611 03EC  
                   l1603 03D5                     l1701 04BE                     l1373 02A3  
                   l1437 0264                     l1349 0237                     l1461 0439  
                   l1453 0420                     l1445 040E                     l1509 024B  
                   l1541 059C                     l1533 0571                     l1525 0558  
                   l1517 0545                     l1365 029B                     l1357 0282  
                   l1621 0408                     l1613 03F7                     l1605 03DF  
                   l1703 04C3                     l1375 02B0                     l1439 0266  
                   l1631 04D7                     l1455 042C                     l1471 0444  
                   l1391 0392                     l1383 0380                     l1551 05B4  
                   l1543 05A3                     l1535 0579                     l1527 055C  
                   l1519 054B                     l1359 028C                     l1615 03FF  
                   l1607 03E7                     l1711 0634                     l1377 02B7  
                   l1369 029D                     l1641 04FB                     l1633 04DF  
                   l1625 04C9                     l1465 043B                     l1457 042E  
                   l1449 0415                     l1393 0396                     l1385 0382  
                   l1561 05CE                     l1545 05A7                     l1529 0562  
                   l1481 0272                     l1617 0402                     l1801 079B  
                   l1721 063B                     l1713 0638                     l1379 02BD  
                   l1651 052E                     l1643 0500                     l1635 04E2  
                   l1627 04CA                     l1467 0440                     l1459 0435  
                   l1395 039A                     l1387 0388                     l1571 05E7  
                   l1563 05D2                     l1547 05AB                     l1539 0586  
                   l1483 0276                     l1491 032F                     l1619 0407  
                   l1811 07DF                     l1803 07A4                     l1731 064F  
                   l1723 0641                     l1715 063B                     l1707 062B  
                   l1637 04EA                     l1629 04CE                     l1397 03AB  
                   l1389 038B                     l1573 060B                     l1565 05D8  
                   l1557 05B6                     l1549 05AF                     l1477 0269  
                   l1661 0246                     l1581 02C4                     l1493 0341  
                   l1485 031A                     l1813 07E5                     l1805 07BF  
                   l1741 0658                     l1733 0651                     l1725 0645  
                   l1717 063B                     l1709 0632                     l1671 046D  
                   l1663 0461                     l1655 053A                     l1647 051F  
                   l1639 04F3                     l1399 03B1                     l1575 060F  
                   l1567 05DE                     l1479 026A                     l1583 02C8  
                   l1487 031D                     l1815 07EA                     l1807 07C4  
                   l1751 0669                     l1743 0659                     l1735 0652  
                   l1727 0649                     l1719 063B                     l1681 0482  
                   l1673 0471                     l1665 0462                     l1649 0529  
                   l1841 0452                     l1569 05E2                     l1577 061A  
                   l1585 02CC                     l1497 02ED                     l1489 0327  
                   l1593 03C5                     l1809 07CE                     l1761 067E  
                   l1753 066B                     l1745 065D                     l1737 0654  
                   l1729 064D                     l1691 04A5                     l1683 0485  
                   l1675 0476                     l1667 0466                     l1659 0242  
                   l1587 02DF                     l1579 02C3                     l1499 02F0  
                   l1595 03CA                     l1771 06BE                     l1819 07EB  
                   l1763 068A                     l1755 066C                     l1747 0663  
                   l1739 0656                     l1693 04AB                     l1685 048C  
                   l1677 047A                     l1669 046B                     l1589 02E6  
                   l1597 03CE                     l1781 0704                     l1773 06D0  
                   l1765 068E                     l1757 066E                     l1749 0667  
                   l1695 04AC                     l1687 0490                     l1679 047C  
                   l1599 03D3                     l1791 074E                     l1783 0708  
                   l1775 06DF                     l1767 0695                     l1759 067A  
                   l1697 04B3                     l1689 0494                     l1793 0752  
                   l1785 071E                     l1777 06E7                     l1769 06B9  
                   l1699 04B9                     l1795 076B                     l1779 06EB  
                   l1787 0735                     l1797 076F                     l1789 0748  
                   l1799 0785                     STR_1 0032                     STR_2 003A  
                   STR_3 0036                     STR_4 003E                     STR_5 003E  
                   STR_6 003E                     STR_7 003E                     STR_8 003E  
                   STR_9 001C                     u1000 032F                     u1001 032E  
                   u1010 0341                     u1011 0340                     u1100 05DE  
                   u1020 0302                     u1101 05DD                     u1021 0301  
                   u1110 061A                     u1030 0314                     u1111 0619  
                   u1031 0313                     u1200 04DF                     u1120 062A  
                   u1040 054B                     u1201 04DE                     u1121 0629  
                   u1041 054A                     u1210 04EA                     u1050 0562  
                   u1130 02DF                     u1211 04E9                     u1051 0561  
                   u1131 02DE                     u1220 04FB                     u1060 0585  
                   u1140 02E6                     u1221 04FA                     u1061 0584  
                   u1141 02E5                     u1310 04A5                     u1230 0529  
                   u1070 05AB                     u1150 03CA                     u1311 04A4  
                   u1231 0528                     u1071 05AA                     u1151 03C9  
                   u1240 052E                     u1080 05CD                     u1160 03D3  
                   u1400 071E                     u1305 0495                     u1241 052D  
                   u1081 05CC                     u1161 03D2                     u1401 071D  
                   u1330 04B9                     u1250 0466                     u1090 05D8  
                   u1170 03E7                     u1410 0734                     u1331 04B8  
                   u1315 04A1                     u1251 0465                     u1091 05D7  
                   u1171 03E6                     u1411 0733                     u1340 04BE  
                   u1260 0471                     u1180 03FF                     u1420 0768  
                   u1341 04BD                     u1325 04AD                     u1261 0470  
                   u1085 05C9                     u1181 03FE                     u1421 0767  
                   u1405 071A                     u1270 0482                     u1190 04D7  
                   u1430 0785                     u1350 067A                     u1271 0481  
                   u1191 04D6                     u1431 0784                     u1415 0730  
                   u1351 0679                     u1440 079B                     u1360 068A  
                   u1441 079A                     u1425 0764                     u1361 0689  
                   u1290 0494                     u1450 07C4                     u1370 06BE  
                   u1291 0493                     u1451 07C3                     u1435 0781  
                   u1371 06BD                     u1460 07E5                     u1380 06DF  
                   u1285 0486                     u1461 07E4                     u1445 0797  
                   u1381 06DE                     u1390 0701                     u1391 0700  
                   u1385 06DB                     u1395 06FD                     _RCIF 0065  
                   _TXIF 0064                     _atoi 04C8                     _gets 021F  
                   _main 062B              main@set_spd 0057                     btemp 007E  
                   _puts 0241                     start 0000                    ?_atoi 0076  
                  ?_gets 0070                    ?_main 0070          __end_of___awdiv 04C8  
                  STR_10 0040                    STR_11 002E                    STR_12 003E  
                  STR_13 003E                    STR_14 003E                    STR_15 0027  
                  _CMCON 001F                    ?_puts 0070          ___awdiv@divisor 0070  
        __end_of___lwdiv 03C4          __end_of___lwmod 0380          ___awdiv@counter 0074  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _TXSTA 0098  
                  _cgets 040A                    _getch 0225          __end_of_dpowers 001C  
                  _cputs 0268          __end_of_isdigit 0268                    atoi@a 007B  
                  atoi@s 007D                    _putch 022D                    gets@s 0078  
                  main@j 0064                    main@k 005E                    pclath 000A  
                  puts@s 0072                    status 0003                    wtemp0 007E  
        __end_of_strcspn 0319          __initialization 07FA             __end_of_atoi 053F  
           __end_of_gets 0225             __end_of_main 07FA             __end_of_puts 024B  
                 ??_atoi 0078                   ??_gets 0078                   ??_main 002C  
                 ??_puts 0072                   ?_cgets 0070                   ?_getch 0070  
                 ?_cputs 0070         ___awdiv@dividend 0072                   ?_putch 0070  
                 ___wmul 029D                ??___awdiv 0074         __end_of_initUART 0256  
              ??___lwdiv 0074                ??___lwmod 007B                   _getche 0237  
                 cgets@c 0074                   cgets@s 0076         ___awdiv@quotient 0076  
                 _printf 053F                   _strchr 0281                   _strcmp 02C2  
                 _strtok 03C4                   _strspn 0319                   cputs@s 0071  
              ??_isdigit 0070                ??_strcspn 0075  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_cgets 0461            __end_of_getch 022D  
          __end_of_cputs 0281            __end_of_putch 0237                  ??_cgets 0072  
                ??_getch 0070                  ??_cputs 0071                  ??_putch 0070  
             __pbssBANK0 0067               __pmaintext 062B                  ?___wmul 0070  
                ?_getche 0070                  ?_printf 007C                  ?_strchr 0070  
                ?_strcmp 0070                  ?_strtok 007A                  ?_strspn 0073  
             __stringtab 0002                ?_initUART 0070                  ___awdiv 0461  
                ___lwdiv 0380                  ___lwmod 0346                  __ptext1 03C4  
                __ptext2 0319                  __ptext3 02EC                  __ptext4 0281  
                __ptext5 02C2                  __ptext6 0241                  __ptext7 0268  
                __ptext8 053F                  __ptext9 0346                  _dpowers 0012  
                _isdigit 0256                  cgets@s1 0077                  getche@c 0071  
                main@cmd 0059                  main@ptr 0066                  main@tmp 002D  
                _strcspn 02EC     end_of_initialization 07FD               ??_initUART 0070  
                printf@c 002B                  printf@f 0026                  strcmp@r 0074  
                strspn@i 0077               main@mx_spd 0055           __end_of___wmul 02C2  
         __end_of_getche 0241           __end_of_printf 062B           __end_of_strchr 029D  
         __end_of_strcmp 02EC           __end_of_strtok 040A           __end_of_strspn 0346  
    start_initialization 07FA                 ??___wmul 0074                 ??_getche 0071  
               ??_printf 0020                 ??_strchr 0072                 ??_strcmp 0072  
               ??_strtok 007B                 ??_strspn 0075                ___latbits 0001  
          __pcstackBANK0 0020         ___lwdiv@dividend 0072                 ?___awdiv 0070  
               ?___lwdiv 0070                 ?___lwmod 0077                __pstrings 0002  
               ?_isdigit 0070         ___lwdiv@quotient 0074                 ?_strcspn 0073  
         ___wmul@product 0074              __stringbase 0011        ___wmul@multiplier 0070  
             printf@flag 0023               printf@prec 0024                main@intvl 0062  
     __end_of__stringtab 0012              _isdigit$609 0070          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076                 __ptext10 0380                 __ptext11 024B  
               __ptext20 0461                 __ptext12 021F                 __ptext13 040A  
               __ptext14 0237                 __ptext15 022D                 __ptext16 0225  
               __ptext17 04C8                 __ptext18 0256                 __ptext19 029D  
               _initUART 024B                 atoi@sign 007A                printf@val 0029  
               main@dist 0060                 main@rcmd 005A                putch@byte 0070  
               isdigit@c 0071                strchr@chr 0070         ___lwmod@dividend 0079  
              strchr@ptr 0072                strcspn@s1 0079                strcspn@s2 0073  
              stringcode 000C                 printf@ap 0025                 printf@cp 0027  
               strcmp@s1 0075                 strcmp@s2 0070          ___lwmod@divisor 0077  
        ___lwmod@counter 007B                 strcspn@i 0077                 stringdir 000C  
               stringtab 0002                 strtok@s1 007B                 strtok@s2 007A  
               strspn@s1 0079                 strspn@s2 0073                 strtok@sp 0067  
