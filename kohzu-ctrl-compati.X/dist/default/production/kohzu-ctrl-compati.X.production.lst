

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 29 16:17:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 09/02/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F648A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     008C                     	;# 
    96     008E                     	;# 
    97     0092                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009A                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009F                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000E                     	;# 
   116     000E                     	;# 
   117     000F                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0015                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0017                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     001F                     	;# 
   129     0081                     	;# 
   130     0085                     	;# 
   131     0086                     	;# 
   132     008C                     	;# 
   133     008E                     	;# 
   134     0092                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009F                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     008C                     	;# 
   170     008E                     	;# 
   171     0092                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009A                     	;# 
   175     009B                     	;# 
   176     009C                     	;# 
   177     009D                     	;# 
   178     009F                     	;# 
   179                           
   180                           	psect	strings
   181     0002                     __pstrings:
   182     0002                     stringtab:
   183     0002                     __stringtab:
   184                           
   185                           ;	String table - string pointers are 1 byte each
   186     0002  1BFF               	btfsc	btemp+1,7
   187     0003  280C               	ljmp	stringcode
   188     0004  1383               	bcf	3,7
   189     0005  187F               	btfsc	btemp+1,0
   190     0006  1783               	bsf	3,7
   191     0007  0800               	movf	0,w
   192     0008  0A84               	incf	4,f
   193     0009  1903               	skipnz
   194     000A  0AFF               	incf	btemp+1,f
   195     000B  0008               	return
   196     000C                     stringcode:
   197     000C                     stringdir:
   198     000C  3000               	movlw	high stringdir
   199     000D  008A               	movwf	10
   200     000E  0804               	movf	4,w
   201     000F  0A84               	incf	4,f
   202     0010  0782               	addwf	2,f
   203     0011                     __stringbase:
   204     0011  3400               	retlw	0
   205     0012                     __end_of__stringtab:
   206     0012                     _dpowers:
   207     0012  3401               	retlw	1
   208     0013  3400               	retlw	0
   209     0014  340A               	retlw	10
   210     0015  3400               	retlw	0
   211     0016  3464               	retlw	100
   212     0017  3400               	retlw	0
   213     0018  34E8               	retlw	232
   214     0019  3403               	retlw	3
   215     001A  3410               	retlw	16
   216     001B  3427               	retlw	39
   217     001C                     __end_of_dpowers:
   218     001A                     _RCREG	set	26
   219     0019                     _TXREG	set	25
   220     0018                     _RCSTA	set	24
   221     001F                     _CMCON	set	31
   222     0006                     _PORTB	set	6
   223     0005                     _PORTA	set	5
   224     0065                     _RCIF	set	101
   225     0064                     _TXIF	set	100
   226     0029                     _RA1	set	41
   227     0028                     _RA0	set	40
   228     0098                     _TXSTA	set	152
   229     0099                     _SPBRG	set	153
   230     0086                     _TRISB	set	134
   231     0085                     _TRISA	set	133
   232     001C                     STR_10:
   233     001C  3464               	retlw	100	;'d'
   234     001D  3469               	retlw	105	;'i'
   235     001E  3473               	retlw	115	;'s'
   236     001F  3474               	retlw	116	;'t'
   237     0020  3420               	retlw	32	;' '
   238     0021  343D               	retlw	61	;'='
   239     0022  3420               	retlw	32	;' '
   240     0023  3425               	retlw	37	;'%'
   241     0024  3464               	retlw	100	;'d'
   242     0025  340A               	retlw	10
   243     0026  3400               	retlw	0
   244     0027                     STR_24:
   245     0027  3428               	retlw	40	;'('
   246     0028  346E               	retlw	110	;'n'
   247     0029  3475               	retlw	117	;'u'
   248     002A  346C               	retlw	108	;'l'
   249     002B  346C               	retlw	108	;'l'
   250     002C  3429               	retlw	41	;')'
   251     002D  3400               	retlw	0
   252     002E                     STR_12:
   253     002E  3443               	retlw	67	;'C'
   254     002F  340D               	retlw	13
   255     0030  340A               	retlw	10
   256     0031  3400               	retlw	0
   257     0032                     STR_1:
   258     0032  3425               	retlw	37	;'%'
   259     0033  3473               	retlw	115	;'s'
   260     0034  340A               	retlw	10
   261     0035  3400               	retlw	0
   262     0036                     STR_3:
   263     0036  3457               	retlw	87	;'W'
   264     0037  3454               	retlw	84	;'T'
   265     0038  3442               	retlw	66	;'B'
   266     0039  3400               	retlw	0
   267     003A                     STR_4:
   268     003A  344F               	retlw	79	;'O'
   269     003B  3453               	retlw	83	;'S'
   270     003C  3443               	retlw	67	;'C'
   271     003D  3400               	retlw	0
   272     003E                     STR_2:
   273     003E  3452               	retlw	82	;'R'
   274     003F  3450               	retlw	80	;'P'
   275     0040  3453               	retlw	83	;'S'
   276     0041  3400               	retlw	0
   277     0042                     STR_5:
   278     0042  342F               	retlw	47	;'/'
   279     0043  3400               	retlw	0
   280     002E                     
   281                           	psect	cinit
   282     07FA                     start_initialization:	
   283                           ; #config settings
   284                           
   285     07FA                     __initialization:
   286                           
   287                           ; Clear objects allocated to BANK0
   288     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   289     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   290     07FC  01E7               	clrf	__pbssBANK0& (0+127)
   291     07FD                     end_of_initialization:	
   292                           ;End of C runtime variable initialization code
   293                           
   294     07FD                     __end_of__initialization:
   295     07FD  0183               	clrf	3
   296     07FE  118A  2C55         	ljmp	_main	;jump to C main() function
   297                           
   298                           	psect	bssBANK0
   299     0067                     __pbssBANK0:
   300     0067                     strtok@sp:
   301     0067                     	ds	1
   302                           
   303                           	psect	cstackCOMMON
   304     0070                     __pcstackCOMMON:
   305     0070                     ?_isdigit:
   306     0070                     ?_initUART:	
   307                           ; 1 bit 
   308                           
   309     0070                     ??_initUART:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_gets:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ??_isdigit:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ?_cgets:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_cputs:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ?_strchr:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_putch:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ??_putch:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?_getch:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ??_getch:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_getche:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_strcmp:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_puts:	
   349                           ; 2 bytes @ 0x0
   350                           
   351     0070                     ?___wmul:	
   352                           ; 2 bytes @ 0x0
   353                           
   354     0070                     ?___awdiv:	
   355                           ; 2 bytes @ 0x0
   356                           
   357     0070                     ?___lwdiv:	
   358                           ; 2 bytes @ 0x0
   359                           
   360     0070                     putch@byte:	
   361                           ; 2 bytes @ 0x0
   362                           
   363     0070                     _isdigit$619:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     strcmp@s2:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ___wmul@multiplier:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ___awdiv@divisor:	
   373                           ; 2 bytes @ 0x0
   374                           
   375     0070                     ___lwdiv@divisor:	
   376                           ; 2 bytes @ 0x0
   377                           
   378     0070                     strchr@chr:	
   379                           ; 2 bytes @ 0x0
   380                           
   381                           
   382                           ; 2 bytes @ 0x0
   383     0070                     	ds	1
   384     0071                     ??_cputs:
   385     0071                     ??_getche:	
   386                           ; 1 bytes @ 0x1
   387                           
   388     0071                     getche@c:	
   389                           ; 1 bytes @ 0x1
   390                           
   391     0071                     isdigit@c:	
   392                           ; 1 bytes @ 0x1
   393                           
   394     0071                     cputs@s:	
   395                           ; 1 bytes @ 0x1
   396                           
   397                           
   398                           ; 1 bytes @ 0x1
   399     0071                     	ds	1
   400     0072                     ??_strcmp:
   401     0072                     ??_puts:	
   402                           ; 1 bytes @ 0x2
   403                           
   404     0072                     ??_cgets:	
   405                           ; 1 bytes @ 0x2
   406                           
   407     0072                     ??_strchr:	
   408                           ; 1 bytes @ 0x2
   409                           
   410     0072                     puts@s:	
   411                           ; 1 bytes @ 0x2
   412                           
   413     0072                     strchr@ptr:	
   414                           ; 1 bytes @ 0x2
   415                           
   416     0072                     ___wmul@multiplicand:	
   417                           ; 1 bytes @ 0x2
   418                           
   419     0072                     ___awdiv@dividend:	
   420                           ; 2 bytes @ 0x2
   421                           
   422     0072                     ___lwdiv@dividend:	
   423                           ; 2 bytes @ 0x2
   424                           
   425                           
   426                           ; 2 bytes @ 0x2
   427     0072                     	ds	1
   428     0073                     ?_strspn:
   429     0073                     ?_strcspn:	
   430                           ; 2 bytes @ 0x3
   431                           
   432     0073                     strcspn@s2:	
   433                           ; 2 bytes @ 0x3
   434                           
   435     0073                     strspn@s2:	
   436                           ; 1 bytes @ 0x3
   437                           
   438                           
   439                           ; 1 bytes @ 0x3
   440     0073                     	ds	1
   441     0074                     ??___wmul:
   442     0074                     ??___awdiv:	
   443                           ; 1 bytes @ 0x4
   444                           
   445     0074                     ??___lwdiv:	
   446                           ; 1 bytes @ 0x4
   447                           
   448     0074                     ___awdiv@counter:	
   449                           ; 1 bytes @ 0x4
   450                           
   451     0074                     strcmp@r:	
   452                           ; 1 bytes @ 0x4
   453                           
   454     0074                     ___wmul@product:	
   455                           ; 1 bytes @ 0x4
   456                           
   457     0074                     ___lwdiv@quotient:	
   458                           ; 2 bytes @ 0x4
   459                           
   460     0074                     cgets@c:	
   461                           ; 2 bytes @ 0x4
   462                           
   463                           
   464                           ; 2 bytes @ 0x4
   465     0074                     	ds	1
   466     0075                     ??_strspn:
   467     0075                     ??_strcspn:	
   468                           ; 1 bytes @ 0x5
   469                           
   470     0075                     ___awdiv@sign:	
   471                           ; 1 bytes @ 0x5
   472                           
   473     0075                     strcmp@s1:	
   474                           ; 1 bytes @ 0x5
   475                           
   476                           
   477                           ; 1 bytes @ 0x5
   478     0075                     	ds	1
   479     0076                     ?_atoi:
   480     0076                     ___lwdiv@counter:	
   481                           ; 2 bytes @ 0x6
   482                           
   483     0076                     cgets@s:	
   484                           ; 1 bytes @ 0x6
   485                           
   486     0076                     ___awdiv@quotient:	
   487                           ; 1 bytes @ 0x6
   488                           
   489                           
   490                           ; 2 bytes @ 0x6
   491     0076                     	ds	1
   492     0077                     ?___lwmod:
   493     0077                     cgets@s1:	
   494                           ; 2 bytes @ 0x7
   495                           
   496     0077                     ___lwmod@divisor:	
   497                           ; 1 bytes @ 0x7
   498                           
   499     0077                     strcspn@i:	
   500                           ; 2 bytes @ 0x7
   501                           
   502     0077                     strspn@i:	
   503                           ; 2 bytes @ 0x7
   504                           
   505                           
   506                           ; 2 bytes @ 0x7
   507     0077                     	ds	1
   508     0078                     ??_gets:
   509     0078                     ??_atoi:	
   510                           ; 1 bytes @ 0x8
   511                           
   512     0078                     gets@s:	
   513                           ; 1 bytes @ 0x8
   514                           
   515                           
   516                           ; 1 bytes @ 0x8
   517     0078                     	ds	1
   518     0079                     strcspn@s1:
   519     0079                     strspn@s1:	
   520                           ; 1 bytes @ 0x9
   521                           
   522     0079                     ___lwmod@dividend:	
   523                           ; 1 bytes @ 0x9
   524                           
   525                           
   526                           ; 2 bytes @ 0x9
   527     0079                     	ds	1
   528     007A                     ?_strtok:
   529     007A                     atoi@sign:	
   530                           ; 1 bytes @ 0xA
   531                           
   532     007A                     strtok@s2:	
   533                           ; 1 bytes @ 0xA
   534                           
   535                           
   536                           ; 1 bytes @ 0xA
   537     007A                     	ds	1
   538     007B                     ??_strtok:
   539     007B                     ??___lwmod:	
   540                           ; 1 bytes @ 0xB
   541                           
   542     007B                     ___lwmod@counter:	
   543                           ; 1 bytes @ 0xB
   544                           
   545     007B                     strtok@s1:	
   546                           ; 1 bytes @ 0xB
   547                           
   548     007B                     atoi@a:	
   549                           ; 1 bytes @ 0xB
   550                           
   551                           
   552                           ; 2 bytes @ 0xB
   553     007B                     	ds	1
   554     007C                     ?_printf:
   555                           
   556                           ; 2 bytes @ 0xC
   557     007C                     	ds	1
   558     007D                     atoi@s:
   559                           
   560                           ; 1 bytes @ 0xD
   561     007D                     	ds	1
   562                           
   563                           	psect	cstackBANK0
   564     0020                     __pcstackBANK0:
   565     0020                     ??_printf:
   566                           
   567                           ; 1 bytes @ 0x0
   568     0020                     	ds	3
   569     0023                     printf@flag:
   570                           
   571                           ; 1 bytes @ 0x3
   572     0023                     	ds	1
   573     0024                     printf@prec:
   574                           
   575                           ; 1 bytes @ 0x4
   576     0024                     	ds	1
   577     0025                     printf@ap:
   578                           
   579                           ; 1 bytes @ 0x5
   580     0025                     	ds	1
   581     0026                     printf@cp:
   582                           
   583                           ; 2 bytes @ 0x6
   584     0026                     	ds	2
   585     0028                     printf@f:
   586                           
   587                           ; 1 bytes @ 0x8
   588     0028                     	ds	1
   589     0029                     printf@val:
   590                           
   591                           ; 2 bytes @ 0x9
   592     0029                     	ds	2
   593     002B                     printf@c:
   594                           
   595                           ; 1 bytes @ 0xB
   596     002B                     	ds	1
   597     002C                     ??_main:
   598                           
   599                           ; 1 bytes @ 0xC
   600     002C                     	ds	1
   601     002D                     main@tmp:
   602                           
   603                           ; 40 bytes @ 0xD
   604     002D                     	ds	40
   605     0055                     main@mx_spd:
   606                           
   607                           ; 2 bytes @ 0x35
   608     0055                     	ds	2
   609     0057                     main@set_spd:
   610                           
   611                           ; 2 bytes @ 0x37
   612     0057                     	ds	2
   613     0059                     main@cmd:
   614                           
   615                           ; 1 bytes @ 0x39
   616     0059                     	ds	1
   617     005A                     main@rcmd:
   618                           
   619                           ; 4 bytes @ 0x3A
   620     005A                     	ds	4
   621     005E                     main@k:
   622                           
   623                           ; 2 bytes @ 0x3E
   624     005E                     	ds	2
   625     0060                     main@ptr:
   626                           
   627                           ; 1 bytes @ 0x40
   628     0060                     	ds	1
   629     0061                     main@dist:
   630                           
   631                           ; 2 bytes @ 0x41
   632     0061                     	ds	2
   633     0063                     main@intvl:
   634                           
   635                           ; 2 bytes @ 0x43
   636     0063                     	ds	2
   637     0065                     main@j:
   638                           
   639                           ; 2 bytes @ 0x45
   640     0065                     	ds	2
   641                           
   642                           	psect	maintext
   643     0455                     __pmaintext:	
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 51 in file "main.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  cmd             1   57[BANK0 ] enum E765
   654 ;;  tmp            40   13[BANK0 ] unsigned char [40]
   655 ;;  rcmd            4   58[BANK0 ] unsigned char [4]
   656 ;;  ln              4    0        unsigned char [4]
   657 ;;  j               2   69[BANK0 ] int 
   658 ;;  intvl           2   67[BANK0 ] int 
   659 ;;  dist            2   65[BANK0 ] int 
   660 ;;  k               2   62[BANK0 ] int 
   661 ;;  set_spd         2   55[BANK0 ] int 
   662 ;;  mx_spd          2   53[BANK0 ] int 
   663 ;;  cnt             2    0        int 
   664 ;;  ptr             1   64[BANK0 ] PTR unsigned char 
   665 ;;		 -> NULL(0), main@tmp(40), 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : B00/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   675 ;;      Params:         0       0       0       0
   676 ;;      Locals:         0      58       0       0
   677 ;;      Temps:          0       1       0       0
   678 ;;      Totals:         0      59       0       0
   679 ;;Total ram usage:       59 bytes
   680 ;; Hardware stack levels required when called: 4
   681 ;; This function calls:
   682 ;;		___awdiv
   683 ;;		___wmul
   684 ;;		_atoi
   685 ;;		_gets
   686 ;;		_initUART
   687 ;;		_printf
   688 ;;		_puts
   689 ;;		_strcmp
   690 ;;		_strtok
   691 ;; This function is called by:
   692 ;;		Startup code after reset
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696     0455                     _main:	
   697                           ;psect for function _main
   698                           
   699     0455                     l1813:	
   700                           ;incstack = 0
   701                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   702                           
   703                           
   704                           ;main.c: 53: PORTA = 0x00;
   705     0455  1283               	bcf	3,5	;RP0=0, select bank0
   706     0456  1303               	bcf	3,6	;RP1=0, select bank0
   707     0457  0185               	clrf	5	;volatile
   708                           
   709                           ;main.c: 54: PORTB = 0x00;
   710     0458  0186               	clrf	6	;volatile
   711                           
   712                           ;main.c: 55: TRISA = 0b00000000;
   713     0459  1683               	bsf	3,5	;RP0=1, select bank1
   714     045A  1303               	bcf	3,6	;RP1=0, select bank1
   715     045B  0185               	clrf	5	;volatile
   716     045C                     l1815:
   717                           
   718                           ;main.c: 56: TRISB = 0b00000010;
   719     045C  3002               	movlw	2
   720     045D  0086               	movwf	6	;volatile
   721     045E                     l1817:
   722                           
   723                           ;main.c: 57: CMCON = 0b00000111;
   724     045E  3007               	movlw	7
   725     045F  1283               	bcf	3,5	;RP0=0, select bank0
   726     0460  1303               	bcf	3,6	;RP1=0, select bank0
   727     0461  009F               	movwf	31	;volatile
   728     0462                     l1819:
   729                           
   730                           ;main.c: 59: initUART();
   731     0462  118A  2075  118A   	fcall	_initUART
   732     0465                     l1821:
   733     0465                     l1823:
   734     0465                     l1825:
   735     0465                     l1827:
   736                           
   737                           ;main.c: 65: int dist = 10;
   738     0465  300A               	movlw	10
   739     0466  1283               	bcf	3,5	;RP0=0, select bank0
   740     0467  1303               	bcf	3,6	;RP1=0, select bank0
   741     0468  00E1               	movwf	main@dist
   742     0469  3000               	movlw	0
   743     046A  00E2               	movwf	main@dist+1
   744     046B                     l1829:
   745                           
   746                           ;main.c: 66: int intvl = 50;
   747     046B  3032               	movlw	50
   748     046C  00E3               	movwf	main@intvl
   749     046D  3000               	movlw	0
   750     046E  00E4               	movwf	main@intvl+1
   751     046F                     l1831:
   752                           
   753                           ;main.c: 67: char rcmd[4];;main.c: 68: int mx_spd = 20250;
   754     046F  301A               	movlw	26
   755     0470  00D5               	movwf	main@mx_spd
   756     0471  304F               	movlw	79
   757     0472  00D6               	movwf	main@mx_spd+1
   758     0473                     l1833:
   759                           
   760                           ;main.c: 75: rcmd[0] = 'Q';
   761     0473  3051               	movlw	81
   762     0474  1283               	bcf	3,5	;RP0=0, select bank0
   763     0475  1303               	bcf	3,6	;RP1=0, select bank0
   764     0476  00DA               	movwf	main@rcmd
   765     0477                     l1835:
   766                           
   767                           ;main.c: 76: rcmd[1] = 'Q';
   768     0477  3051               	movlw	81
   769     0478  00DB               	movwf	main@rcmd+1
   770     0479                     l1837:
   771                           
   772                           ;main.c: 77: rcmd[2] = 'Q';
   773     0479  3051               	movlw	81
   774     047A  00DC               	movwf	main@rcmd+2
   775     047B                     l1839:
   776                           
   777                           ;main.c: 78: rcmd[3] = '\0';
   778     047B  01DD               	clrf	main@rcmd+3
   779     047C                     l1841:
   780                           
   781                           ;main.c: 80: tmp[0] = 'Q';
   782     047C  3051               	movlw	81
   783     047D  00AD               	movwf	main@tmp
   784     047E                     l1843:
   785                           
   786                           ;main.c: 81: tmp[1] = 'Q';
   787     047E  3051               	movlw	81
   788     047F  00AE               	movwf	main@tmp+1
   789     0480                     l1845:
   790                           
   791                           ;main.c: 82: tmp[2] = 'Q';
   792     0480  3051               	movlw	81
   793     0481  00AF               	movwf	main@tmp+2
   794     0482                     l1847:
   795                           
   796                           ;main.c: 83: tmp[3] = '\0';
   797     0482  01B0               	clrf	main@tmp+3
   798     0483                     l1849:
   799                           
   800                           ;main.c: 85: gets(tmp);
   801     0483  302D               	movlw	(low (main@tmp| 0))& (0+255)
   802     0484  118A  2049  118A   	fcall	_gets
   803     0487                     l1851:
   804                           
   805                           ;main.c: 86: printf("%s\n", tmp);
   806     0487  302D               	movlw	(low (main@tmp| 0))& (0+255)
   807     0488  00FC               	movwf	?_printf
   808     0489  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   809     048A  118A  2369  118A   	fcall	_printf
   810     048D                     l1853:
   811                           
   812                           ;main.c: 88: rcmd[0] = tmp[1];
   813     048D  1283               	bcf	3,5	;RP0=0, select bank0
   814     048E  1303               	bcf	3,6	;RP1=0, select bank0
   815     048F  082E               	movf	main@tmp+1,w
   816     0490  00DA               	movwf	main@rcmd
   817     0491                     l1855:
   818                           
   819                           ;main.c: 89: rcmd[1] = tmp[2];
   820     0491  082F               	movf	main@tmp+2,w
   821     0492  00DB               	movwf	main@rcmd+1
   822     0493                     l1857:
   823                           
   824                           ;main.c: 90: rcmd[2] = tmp[3];
   825     0493  0830               	movf	main@tmp+3,w
   826     0494  00DC               	movwf	main@rcmd+2
   827     0495                     l1859:
   828                           
   829                           ;main.c: 91: rcmd[3] = '\0';
   830     0495  01DD               	clrf	main@rcmd+3
   831     0496                     l1861:
   832                           
   833                           ;main.c: 94: enum command cmd;;main.c: 96: cmd = VE;
   834     0496  3003               	movlw	3
   835     0497  00D9               	movwf	main@cmd
   836     0498                     l1863:
   837                           
   838                           ;main.c: 98: if(strcmp(rcmd,"RPS") == 0) {
   839     0498  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   840     0499  00F0               	movwf	strcmp@s2
   841     049A  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   842     049B  118A  20EC  118A   	fcall	_strcmp
   843     049E  0870               	movf	?_strcmp,w
   844     049F  0471               	iorwf	?_strcmp+1,w
   845     04A0  1D03               	btfss	3,2
   846     04A1  2CA3               	goto	u1501
   847     04A2  2CA4               	goto	u1500
   848     04A3                     u1501:
   849     04A3  2CA8               	goto	l1867
   850     04A4                     u1500:
   851     04A4                     l1865:
   852                           
   853                           ;main.c: 99: cmd = RPS;
   854     04A4  1283               	bcf	3,5	;RP0=0, select bank0
   855     04A5  1303               	bcf	3,6	;RP1=0, select bank0
   856     04A6  01D9               	clrf	main@cmd
   857                           
   858                           ;main.c: 100: }else if(strcmp(rcmd,"WTB") == 0){
   859     04A7  2CC9               	goto	l1875
   860     04A8                     l1867:
   861     04A8  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   862     04A9  00F0               	movwf	strcmp@s2
   863     04AA  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   864     04AB  118A  20EC  118A   	fcall	_strcmp
   865     04AE  0870               	movf	?_strcmp,w
   866     04AF  0471               	iorwf	?_strcmp+1,w
   867     04B0  1D03               	btfss	3,2
   868     04B1  2CB3               	goto	u1511
   869     04B2  2CB4               	goto	u1510
   870     04B3                     u1511:
   871     04B3  2CB9               	goto	l1871
   872     04B4                     u1510:
   873     04B4                     l1869:
   874                           
   875                           ;main.c: 101: cmd = WTB;
   876     04B4  1283               	bcf	3,5	;RP0=0, select bank0
   877     04B5  1303               	bcf	3,6	;RP1=0, select bank0
   878     04B6  01D9               	clrf	main@cmd
   879     04B7  0AD9               	incf	main@cmd,f
   880                           
   881                           ;main.c: 102: }else if(strcmp(rcmd,"OSC") == 0){
   882     04B8  2CC9               	goto	l1875
   883     04B9                     l1871:
   884     04B9  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   885     04BA  00F0               	movwf	strcmp@s2
   886     04BB  305A               	movlw	(low (main@rcmd| 0))& (0+255)
   887     04BC  118A  20EC  118A   	fcall	_strcmp
   888     04BF  0870               	movf	?_strcmp,w
   889     04C0  0471               	iorwf	?_strcmp+1,w
   890     04C1  1D03               	btfss	3,2
   891     04C2  2CC4               	goto	u1521
   892     04C3  2CC5               	goto	u1520
   893     04C4                     u1521:
   894     04C4  2CC9               	goto	l1875
   895     04C5                     u1520:
   896     04C5                     l1873:
   897                           
   898                           ;main.c: 103: cmd = OSC;
   899     04C5  3002               	movlw	2
   900     04C6  1283               	bcf	3,5	;RP0=0, select bank0
   901     04C7  1303               	bcf	3,6	;RP1=0, select bank0
   902     04C8  00D9               	movwf	main@cmd
   903     04C9                     l1875:
   904     04C9  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   905     04CA  00FA               	movwf	strtok@s2
   906     04CB  302D               	movlw	(low (main@tmp| 0))& (0+255)
   907     04CC  118A  21EE  118A   	fcall	_strtok
   908                           
   909                           ;main.c: 108: switch(cmd){
   910     04CF  2FE8               	goto	l1989
   911     04D0                     l1877:
   912                           
   913                           ;main.c: 111: ptr = strtok((0), "/");
   914     04D0  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   915     04D1  00FA               	movwf	strtok@s2
   916     04D2  3000               	movlw	0
   917     04D3  118A  21EE  118A   	fcall	_strtok
   918     04D6  1283               	bcf	3,5	;RP0=0, select bank0
   919     04D7  1303               	bcf	3,6	;RP1=0, select bank0
   920     04D8  00E0               	movwf	main@ptr
   921                           
   922                           ;main.c: 112: ptr = strtok((0), "/");
   923     04D9  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   924     04DA  00FA               	movwf	strtok@s2
   925     04DB  3000               	movlw	0
   926     04DC  118A  21EE  118A   	fcall	_strtok
   927     04DF  1283               	bcf	3,5	;RP0=0, select bank0
   928     04E0  1303               	bcf	3,6	;RP1=0, select bank0
   929     04E1  00E0               	movwf	main@ptr
   930                           
   931                           ;main.c: 113: ptr = strtok((0), "/");
   932     04E2  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   933     04E3  00FA               	movwf	strtok@s2
   934     04E4  3000               	movlw	0
   935     04E5  118A  21EE  118A   	fcall	_strtok
   936     04E8  1283               	bcf	3,5	;RP0=0, select bank0
   937     04E9  1303               	bcf	3,6	;RP1=0, select bank0
   938     04EA  00E0               	movwf	main@ptr
   939                           
   940                           ;main.c: 114: ptr = strtok((0), "/");
   941     04EB  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   942     04EC  00FA               	movwf	strtok@s2
   943     04ED  3000               	movlw	0
   944     04EE  118A  21EE  118A   	fcall	_strtok
   945     04F1  1283               	bcf	3,5	;RP0=0, select bank0
   946     04F2  1303               	bcf	3,6	;RP1=0, select bank0
   947     04F3  00E0               	movwf	main@ptr
   948     04F4                     l1879:
   949                           
   950                           ;main.c: 115: if(ptr != (0)) {
   951     04F4  0860               	movf	main@ptr,w
   952     04F5  1903               	btfsc	3,2
   953     04F6  2CF8               	goto	u1531
   954     04F7  2CF9               	goto	u1530
   955     04F8                     u1531:
   956     04F8  2D03               	goto	l43
   957     04F9                     u1530:
   958     04F9                     l1881:
   959                           
   960                           ;main.c: 116: dist = atoi(ptr);
   961     04F9  0860               	movf	main@ptr,w
   962     04FA  118A  22F2  118A   	fcall	_atoi
   963     04FD  0877               	movf	?_atoi+1,w
   964     04FE  1283               	bcf	3,5	;RP0=0, select bank0
   965     04FF  1303               	bcf	3,6	;RP1=0, select bank0
   966     0500  00E2               	movwf	main@dist+1
   967     0501  0876               	movf	?_atoi,w
   968     0502  00E1               	movwf	main@dist
   969     0503                     l43:
   970                           
   971                           ;main.c: 117: };main.c: 118: printf("dist = %d\n", dist);
   972     0503  0862               	movf	main@dist+1,w
   973     0504  00FD               	movwf	?_printf+1
   974     0505  0861               	movf	main@dist,w
   975     0506  00FC               	movwf	?_printf
   976     0507  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   977     0508  118A  2369  118A   	fcall	_printf
   978     050B                     l1883:
   979                           
   980                           ;main.c: 120: if (dist > 0){
   981     050B  1283               	bcf	3,5	;RP0=0, select bank0
   982     050C  1303               	bcf	3,6	;RP1=0, select bank0
   983     050D  0862               	movf	main@dist+1,w
   984     050E  3A80               	xorlw	128
   985     050F  00FF               	movwf	btemp+1
   986     0510  3080               	movlw	128
   987     0511  027F               	subwf	btemp+1,w
   988     0512  1D03               	skipz
   989     0513  2D16               	goto	u1545
   990     0514  3001               	movlw	1
   991     0515  0261               	subwf	main@dist,w
   992     0516                     u1545:
   993     0516  1C03               	skipc
   994     0517  2D19               	goto	u1541
   995     0518  2D1A               	goto	u1540
   996     0519                     u1541:
   997     0519  2D70               	goto	l1897
   998     051A                     u1540:
   999     051A                     l1885:
  1000                           
  1001                           ;main.c: 121: for(k = 0 ; k < dist ; k++){
  1002     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1003     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1004     051C  01DE               	clrf	main@k
  1005     051D  01DF               	clrf	main@k+1
  1006     051E  2D61               	goto	l45
  1007     051F                     l46:
  1008                           
  1009                           ;main.c: 122: RA0 = 1;
  1010     051F  1283               	bcf	3,5	;RP0=0, select bank0
  1011     0520  1303               	bcf	3,6	;RP1=0, select bank0
  1012     0521  1405               	bsf	5,0	;volatile
  1013     0522                     l1887:
  1014                           
  1015                           ;main.c: 123: for(j = 0 ; j < intvl ; j++){
  1016     0522  01E5               	clrf	main@j
  1017     0523  01E6               	clrf	main@j+1
  1018     0524  2D2E               	goto	l47
  1019     0525                     l48:
  1020                           
  1021                           ;main.c: 124: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1022     0525  0000               	nop
  1023     0526                     l1889:
  1024     0526  3001               	movlw	1
  1025     0527  1283               	bcf	3,5	;RP0=0, select bank0
  1026     0528  1303               	bcf	3,6	;RP1=0, select bank0
  1027     0529  07E5               	addwf	main@j,f
  1028     052A  1803               	skipnc
  1029     052B  0AE6               	incf	main@j+1,f
  1030     052C  3000               	movlw	0
  1031     052D  07E6               	addwf	main@j+1,f
  1032     052E                     l47:
  1033     052E  0866               	movf	main@j+1,w
  1034     052F  3A80               	xorlw	128
  1035     0530  00AC               	movwf	??_main
  1036     0531  0864               	movf	main@intvl+1,w
  1037     0532  3A80               	xorlw	128
  1038     0533  022C               	subwf	??_main,w
  1039     0534  1D03               	skipz
  1040     0535  2D38               	goto	u1555
  1041     0536  0863               	movf	main@intvl,w
  1042     0537  0265               	subwf	main@j,w
  1043     0538                     u1555:
  1044     0538  1C03               	skipc
  1045     0539  2D3B               	goto	u1551
  1046     053A  2D3C               	goto	u1550
  1047     053B                     u1551:
  1048     053B  2D25               	goto	l48
  1049     053C                     u1550:
  1050     053C                     l49:
  1051                           
  1052                           ;main.c: 125: };main.c: 126: RA0 = 0;
  1053     053C  1283               	bcf	3,5	;RP0=0, select bank0
  1054     053D  1303               	bcf	3,6	;RP1=0, select bank0
  1055     053E  1005               	bcf	5,0	;volatile
  1056     053F                     l1891:
  1057                           
  1058                           ;main.c: 127: for(j = 0 ; j < intvl ; j++){
  1059     053F  01E5               	clrf	main@j
  1060     0540  01E6               	clrf	main@j+1
  1061     0541  2D4B               	goto	l50
  1062     0542                     l51:
  1063                           
  1064                           ;main.c: 128: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1065     0542  0000               	nop
  1066     0543                     l1893:
  1067     0543  3001               	movlw	1
  1068     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0545  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0546  07E5               	addwf	main@j,f
  1071     0547  1803               	skipnc
  1072     0548  0AE6               	incf	main@j+1,f
  1073     0549  3000               	movlw	0
  1074     054A  07E6               	addwf	main@j+1,f
  1075     054B                     l50:
  1076     054B  0866               	movf	main@j+1,w
  1077     054C  3A80               	xorlw	128
  1078     054D  00AC               	movwf	??_main
  1079     054E  0864               	movf	main@intvl+1,w
  1080     054F  3A80               	xorlw	128
  1081     0550  022C               	subwf	??_main,w
  1082     0551  1D03               	skipz
  1083     0552  2D55               	goto	u1565
  1084     0553  0863               	movf	main@intvl,w
  1085     0554  0265               	subwf	main@j,w
  1086     0555                     u1565:
  1087     0555  1C03               	skipc
  1088     0556  2D58               	goto	u1561
  1089     0557  2D59               	goto	u1560
  1090     0558                     u1561:
  1091     0558  2D42               	goto	l51
  1092     0559                     u1560:
  1093     0559                     l1895:
  1094     0559  3001               	movlw	1
  1095     055A  1283               	bcf	3,5	;RP0=0, select bank0
  1096     055B  1303               	bcf	3,6	;RP1=0, select bank0
  1097     055C  07DE               	addwf	main@k,f
  1098     055D  1803               	skipnc
  1099     055E  0ADF               	incf	main@k+1,f
  1100     055F  3000               	movlw	0
  1101     0560  07DF               	addwf	main@k+1,f
  1102     0561                     l45:
  1103     0561  085F               	movf	main@k+1,w
  1104     0562  3A80               	xorlw	128
  1105     0563  00AC               	movwf	??_main
  1106     0564  0862               	movf	main@dist+1,w
  1107     0565  3A80               	xorlw	128
  1108     0566  022C               	subwf	??_main,w
  1109     0567  1D03               	skipz
  1110     0568  2D6B               	goto	u1575
  1111     0569  0861               	movf	main@dist,w
  1112     056A  025E               	subwf	main@k,w
  1113     056B                     u1575:
  1114     056B  1C03               	skipc
  1115     056C  2D6E               	goto	u1571
  1116     056D  2D6F               	goto	u1570
  1117     056E                     u1571:
  1118     056E  2D1F               	goto	l46
  1119     056F                     u1570:
  1120     056F  2DD6               	goto	l1911
  1121     0570                     l1897:
  1122                           
  1123                           ;main.c: 132: dist *= -1;
  1124     0570  30FF               	movlw	255
  1125     0571  00F0               	movwf	___wmul@multiplier
  1126     0572  30FF               	movlw	255
  1127     0573  00F1               	movwf	___wmul@multiplier+1
  1128     0574  1283               	bcf	3,5	;RP0=0, select bank0
  1129     0575  1303               	bcf	3,6	;RP1=0, select bank0
  1130     0576  0862               	movf	main@dist+1,w
  1131     0577  00F3               	movwf	___wmul@multiplicand+1
  1132     0578  0861               	movf	main@dist,w
  1133     0579  00F2               	movwf	___wmul@multiplicand
  1134     057A  118A  20C7  118A   	fcall	___wmul
  1135     057D  0871               	movf	?___wmul+1,w
  1136     057E  1283               	bcf	3,5	;RP0=0, select bank0
  1137     057F  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0580  00E2               	movwf	main@dist+1
  1139     0581  0870               	movf	?___wmul,w
  1140     0582  00E1               	movwf	main@dist
  1141     0583                     l1899:
  1142                           
  1143                           ;main.c: 133: for(k = 0 ; k < dist ; k++){
  1144     0583  01DE               	clrf	main@k
  1145     0584  01DF               	clrf	main@k+1
  1146     0585  2DC8               	goto	l55
  1147     0586                     l56:
  1148                           
  1149                           ;main.c: 134: RA1 = 1;
  1150     0586  1283               	bcf	3,5	;RP0=0, select bank0
  1151     0587  1303               	bcf	3,6	;RP1=0, select bank0
  1152     0588  1485               	bsf	5,1	;volatile
  1153     0589                     l1901:
  1154                           
  1155                           ;main.c: 135: for(j = 0 ; j < intvl ; j++){
  1156     0589  01E5               	clrf	main@j
  1157     058A  01E6               	clrf	main@j+1
  1158     058B  2D95               	goto	l57
  1159     058C                     l58:
  1160                           
  1161                           ;main.c: 136: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1162     058C  0000               	nop
  1163     058D                     l1903:
  1164     058D  3001               	movlw	1
  1165     058E  1283               	bcf	3,5	;RP0=0, select bank0
  1166     058F  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0590  07E5               	addwf	main@j,f
  1168     0591  1803               	skipnc
  1169     0592  0AE6               	incf	main@j+1,f
  1170     0593  3000               	movlw	0
  1171     0594  07E6               	addwf	main@j+1,f
  1172     0595                     l57:
  1173     0595  0866               	movf	main@j+1,w
  1174     0596  3A80               	xorlw	128
  1175     0597  00AC               	movwf	??_main
  1176     0598  0864               	movf	main@intvl+1,w
  1177     0599  3A80               	xorlw	128
  1178     059A  022C               	subwf	??_main,w
  1179     059B  1D03               	skipz
  1180     059C  2D9F               	goto	u1585
  1181     059D  0863               	movf	main@intvl,w
  1182     059E  0265               	subwf	main@j,w
  1183     059F                     u1585:
  1184     059F  1C03               	skipc
  1185     05A0  2DA2               	goto	u1581
  1186     05A1  2DA3               	goto	u1580
  1187     05A2                     u1581:
  1188     05A2  2D8C               	goto	l58
  1189     05A3                     u1580:
  1190     05A3                     l59:
  1191                           
  1192                           ;main.c: 137: };main.c: 138: RA1 = 0;
  1193     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1194     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1195     05A5  1085               	bcf	5,1	;volatile
  1196     05A6                     l1905:
  1197                           
  1198                           ;main.c: 139: for(j = 0 ; j < intvl ; j++){
  1199     05A6  01E5               	clrf	main@j
  1200     05A7  01E6               	clrf	main@j+1
  1201     05A8  2DB2               	goto	l60
  1202     05A9                     l61:
  1203                           
  1204                           ;main.c: 140: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1205     05A9  0000               	nop
  1206     05AA                     l1907:
  1207     05AA  3001               	movlw	1
  1208     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1209     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1210     05AD  07E5               	addwf	main@j,f
  1211     05AE  1803               	skipnc
  1212     05AF  0AE6               	incf	main@j+1,f
  1213     05B0  3000               	movlw	0
  1214     05B1  07E6               	addwf	main@j+1,f
  1215     05B2                     l60:
  1216     05B2  0866               	movf	main@j+1,w
  1217     05B3  3A80               	xorlw	128
  1218     05B4  00AC               	movwf	??_main
  1219     05B5  0864               	movf	main@intvl+1,w
  1220     05B6  3A80               	xorlw	128
  1221     05B7  022C               	subwf	??_main,w
  1222     05B8  1D03               	skipz
  1223     05B9  2DBC               	goto	u1595
  1224     05BA  0863               	movf	main@intvl,w
  1225     05BB  0265               	subwf	main@j,w
  1226     05BC                     u1595:
  1227     05BC  1C03               	skipc
  1228     05BD  2DBF               	goto	u1591
  1229     05BE  2DC0               	goto	u1590
  1230     05BF                     u1591:
  1231     05BF  2DA9               	goto	l61
  1232     05C0                     u1590:
  1233     05C0                     l1909:
  1234     05C0  3001               	movlw	1
  1235     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1236     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1237     05C3  07DE               	addwf	main@k,f
  1238     05C4  1803               	skipnc
  1239     05C5  0ADF               	incf	main@k+1,f
  1240     05C6  3000               	movlw	0
  1241     05C7  07DF               	addwf	main@k+1,f
  1242     05C8                     l55:
  1243     05C8  085F               	movf	main@k+1,w
  1244     05C9  3A80               	xorlw	128
  1245     05CA  00AC               	movwf	??_main
  1246     05CB  0862               	movf	main@dist+1,w
  1247     05CC  3A80               	xorlw	128
  1248     05CD  022C               	subwf	??_main,w
  1249     05CE  1D03               	skipz
  1250     05CF  2DD2               	goto	u1605
  1251     05D0  0861               	movf	main@dist,w
  1252     05D1  025E               	subwf	main@k,w
  1253     05D2                     u1605:
  1254     05D2  1C03               	skipc
  1255     05D3  2DD5               	goto	u1601
  1256     05D4  2DD6               	goto	u1600
  1257     05D5                     u1601:
  1258     05D5  2D86               	goto	l56
  1259     05D6                     u1600:
  1260     05D6                     l1911:
  1261                           
  1262                           ;main.c: 141: };main.c: 142: };main.c: 143: };main.c: 145: puts("C");
  1263     05D6  302B               	movlw	(low (((STR_4+2)-__stringbase)| (0+32768)))& (0+255)
  1264     05D7  118A  206B  118A   	fcall	_puts
  1265                           
  1266                           ;main.c: 146: printf("C\r\n");
  1267     05DA  301D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1268     05DB  118A  2369  118A   	fcall	_printf
  1269                           
  1270                           ;main.c: 147: break;
  1271     05DE  2C73               	goto	l1833
  1272     05DF                     l1913:
  1273                           
  1274                           ;main.c: 150: ptr = strtok((0), "/");
  1275     05DF  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1276     05E0  00FA               	movwf	strtok@s2
  1277     05E1  3000               	movlw	0
  1278     05E2  118A  21EE  118A   	fcall	_strtok
  1279     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1280     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1281     05E7  00E0               	movwf	main@ptr
  1282                           
  1283                           ;main.c: 151: ptr = strtok((0), "/");
  1284     05E8  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1285     05E9  00FA               	movwf	strtok@s2
  1286     05EA  3000               	movlw	0
  1287     05EB  118A  21EE  118A   	fcall	_strtok
  1288     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1289     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1290     05F0  00E0               	movwf	main@ptr
  1291                           
  1292                           ;main.c: 152: ptr = strtok((0), "/");
  1293     05F1  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1294     05F2  00FA               	movwf	strtok@s2
  1295     05F3  3000               	movlw	0
  1296     05F4  118A  21EE  118A   	fcall	_strtok
  1297     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1298     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1299     05F9  00E0               	movwf	main@ptr
  1300     05FA                     l1915:
  1301                           
  1302                           ;main.c: 153: if(ptr != (0)) {
  1303     05FA  0860               	movf	main@ptr,w
  1304     05FB  1903               	btfsc	3,2
  1305     05FC  2DFE               	goto	u1611
  1306     05FD  2DFF               	goto	u1610
  1307     05FE                     u1611:
  1308     05FE  2E09               	goto	l1919
  1309     05FF                     u1610:
  1310     05FF                     l1917:
  1311                           
  1312                           ;main.c: 154: set_spd = atoi(ptr);
  1313     05FF  0860               	movf	main@ptr,w
  1314     0600  118A  22F2  118A   	fcall	_atoi
  1315     0603  0877               	movf	?_atoi+1,w
  1316     0604  1283               	bcf	3,5	;RP0=0, select bank0
  1317     0605  1303               	bcf	3,6	;RP1=0, select bank0
  1318     0606  00D8               	movwf	main@set_spd+1
  1319     0607  0876               	movf	?_atoi,w
  1320     0608  00D7               	movwf	main@set_spd
  1321     0609                     l1919:
  1322                           
  1323                           ;main.c: 155: };main.c: 156: intvl = mx_spd / set_spd;
  1324     0609  0858               	movf	main@set_spd+1,w
  1325     060A  00F1               	movwf	___awdiv@divisor+1
  1326     060B  0857               	movf	main@set_spd,w
  1327     060C  00F0               	movwf	___awdiv@divisor
  1328     060D  0856               	movf	main@mx_spd+1,w
  1329     060E  00F3               	movwf	___awdiv@dividend+1
  1330     060F  0855               	movf	main@mx_spd,w
  1331     0610  00F2               	movwf	___awdiv@dividend
  1332     0611  118A  228B  118A   	fcall	___awdiv
  1333     0614  0871               	movf	?___awdiv+1,w
  1334     0615  1283               	bcf	3,5	;RP0=0, select bank0
  1335     0616  1303               	bcf	3,6	;RP1=0, select bank0
  1336     0617  00E4               	movwf	main@intvl+1
  1337     0618  0870               	movf	?___awdiv,w
  1338     0619  00E3               	movwf	main@intvl
  1339     061A                     l1921:
  1340                           
  1341                           ;main.c: 157: if (intvl == 0){
  1342     061A  0863               	movf	main@intvl,w
  1343     061B  0464               	iorwf	main@intvl+1,w
  1344     061C  1D03               	btfss	3,2
  1345     061D  2E1F               	goto	u1621
  1346     061E  2E20               	goto	u1620
  1347     061F                     u1621:
  1348     061F  2C73               	goto	l1833
  1349     0620                     u1620:
  1350     0620                     l1923:
  1351                           
  1352                           ;main.c: 158: intvl = 1;
  1353     0620  3001               	movlw	1
  1354     0621  00E3               	movwf	main@intvl
  1355     0622  3000               	movlw	0
  1356     0623  00E4               	movwf	main@intvl+1
  1357     0624  2C73               	goto	l1833
  1358     0625                     l1925:
  1359                           
  1360                           ;main.c: 163: ptr = strtok((0), "/");
  1361     0625  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1362     0626  00FA               	movwf	strtok@s2
  1363     0627  3000               	movlw	0
  1364     0628  118A  21EE  118A   	fcall	_strtok
  1365     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1366     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1367     062D  00E0               	movwf	main@ptr
  1368                           
  1369                           ;main.c: 164: ptr = strtok((0), "/");
  1370     062E  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1371     062F  00FA               	movwf	strtok@s2
  1372     0630  3000               	movlw	0
  1373     0631  118A  21EE  118A   	fcall	_strtok
  1374     0634  1283               	bcf	3,5	;RP0=0, select bank0
  1375     0635  1303               	bcf	3,6	;RP1=0, select bank0
  1376     0636  00E0               	movwf	main@ptr
  1377                           
  1378                           ;main.c: 165: ptr = strtok((0), "/");
  1379     0637  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1380     0638  00FA               	movwf	strtok@s2
  1381     0639  3000               	movlw	0
  1382     063A  118A  21EE  118A   	fcall	_strtok
  1383     063D  1283               	bcf	3,5	;RP0=0, select bank0
  1384     063E  1303               	bcf	3,6	;RP1=0, select bank0
  1385     063F  00E0               	movwf	main@ptr
  1386                           
  1387                           ;main.c: 166: ptr = strtok((0), "/");
  1388     0640  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1389     0641  00FA               	movwf	strtok@s2
  1390     0642  3000               	movlw	0
  1391     0643  118A  21EE  118A   	fcall	_strtok
  1392     0646  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0647  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0648  00E0               	movwf	main@ptr
  1395                           
  1396                           ;main.c: 167: ptr = strtok((0), "/");
  1397     0649  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1398     064A  00FA               	movwf	strtok@s2
  1399     064B  3000               	movlw	0
  1400     064C  118A  21EE  118A   	fcall	_strtok
  1401     064F  1283               	bcf	3,5	;RP0=0, select bank0
  1402     0650  1303               	bcf	3,6	;RP1=0, select bank0
  1403     0651  00E0               	movwf	main@ptr
  1404     0652                     l1927:
  1405                           
  1406                           ;main.c: 168: if(ptr != (0)) {
  1407     0652  0860               	movf	main@ptr,w
  1408     0653  1903               	btfsc	3,2
  1409     0654  2E56               	goto	u1631
  1410     0655  2E57               	goto	u1630
  1411     0656                     u1631:
  1412     0656  2E61               	goto	l69
  1413     0657                     u1630:
  1414     0657                     l1929:
  1415                           
  1416                           ;main.c: 169: dist = atoi(ptr);
  1417     0657  0860               	movf	main@ptr,w
  1418     0658  118A  22F2  118A   	fcall	_atoi
  1419     065B  0877               	movf	?_atoi+1,w
  1420     065C  1283               	bcf	3,5	;RP0=0, select bank0
  1421     065D  1303               	bcf	3,6	;RP1=0, select bank0
  1422     065E  00E2               	movwf	main@dist+1
  1423     065F  0876               	movf	?_atoi,w
  1424     0660  00E1               	movwf	main@dist
  1425     0661                     l69:
  1426                           
  1427                           ;main.c: 170: };main.c: 171: printf("dist = %d\n", dist);
  1428     0661  0862               	movf	main@dist+1,w
  1429     0662  00FD               	movwf	?_printf+1
  1430     0663  0861               	movf	main@dist,w
  1431     0664  00FC               	movwf	?_printf
  1432     0665  300B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1433     0666  118A  2369  118A   	fcall	_printf
  1434     0669                     l1931:
  1435                           
  1436                           ;main.c: 173: if (dist > 0){
  1437     0669  1283               	bcf	3,5	;RP0=0, select bank0
  1438     066A  1303               	bcf	3,6	;RP1=0, select bank0
  1439     066B  0862               	movf	main@dist+1,w
  1440     066C  3A80               	xorlw	128
  1441     066D  00FF               	movwf	btemp+1
  1442     066E  3080               	movlw	128
  1443     066F  027F               	subwf	btemp+1,w
  1444     0670  1D03               	skipz
  1445     0671  2E74               	goto	u1645
  1446     0672  3001               	movlw	1
  1447     0673  0261               	subwf	main@dist,w
  1448     0674                     u1645:
  1449     0674  1C03               	skipc
  1450     0675  2E77               	goto	u1641
  1451     0676  2E78               	goto	u1640
  1452     0677                     u1641:
  1453     0677  2F23               	goto	l1957
  1454     0678                     u1640:
  1455     0678                     l1933:
  1456                           
  1457                           ;main.c: 174: for(k = 0 ; k < dist ; k++){
  1458     0678  1283               	bcf	3,5	;RP0=0, select bank0
  1459     0679  1303               	bcf	3,6	;RP1=0, select bank0
  1460     067A  01DE               	clrf	main@k
  1461     067B  01DF               	clrf	main@k+1
  1462     067C  2EBF               	goto	l71
  1463     067D                     l72:
  1464                           
  1465                           ;main.c: 175: RA0 = 1;
  1466     067D  1283               	bcf	3,5	;RP0=0, select bank0
  1467     067E  1303               	bcf	3,6	;RP1=0, select bank0
  1468     067F  1405               	bsf	5,0	;volatile
  1469     0680                     l1935:
  1470                           
  1471                           ;main.c: 176: for(j = 0 ; j < intvl ; j++){
  1472     0680  01E5               	clrf	main@j
  1473     0681  01E6               	clrf	main@j+1
  1474     0682  2E8C               	goto	l73
  1475     0683                     l74:
  1476                           
  1477                           ;main.c: 177: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1478     0683  0000               	nop
  1479     0684                     l1937:
  1480     0684  3001               	movlw	1
  1481     0685  1283               	bcf	3,5	;RP0=0, select bank0
  1482     0686  1303               	bcf	3,6	;RP1=0, select bank0
  1483     0687  07E5               	addwf	main@j,f
  1484     0688  1803               	skipnc
  1485     0689  0AE6               	incf	main@j+1,f
  1486     068A  3000               	movlw	0
  1487     068B  07E6               	addwf	main@j+1,f
  1488     068C                     l73:
  1489     068C  0866               	movf	main@j+1,w
  1490     068D  3A80               	xorlw	128
  1491     068E  00AC               	movwf	??_main
  1492     068F  0864               	movf	main@intvl+1,w
  1493     0690  3A80               	xorlw	128
  1494     0691  022C               	subwf	??_main,w
  1495     0692  1D03               	skipz
  1496     0693  2E96               	goto	u1655
  1497     0694  0863               	movf	main@intvl,w
  1498     0695  0265               	subwf	main@j,w
  1499     0696                     u1655:
  1500     0696  1C03               	skipc
  1501     0697  2E99               	goto	u1651
  1502     0698  2E9A               	goto	u1650
  1503     0699                     u1651:
  1504     0699  2E83               	goto	l74
  1505     069A                     u1650:
  1506     069A                     l75:
  1507                           
  1508                           ;main.c: 178: };main.c: 179: RA0 = 0;
  1509     069A  1283               	bcf	3,5	;RP0=0, select bank0
  1510     069B  1303               	bcf	3,6	;RP1=0, select bank0
  1511     069C  1005               	bcf	5,0	;volatile
  1512     069D                     l1939:
  1513                           
  1514                           ;main.c: 180: for(j = 0 ; j < intvl ; j++){
  1515     069D  01E5               	clrf	main@j
  1516     069E  01E6               	clrf	main@j+1
  1517     069F  2EA9               	goto	l76
  1518     06A0                     l77:
  1519                           
  1520                           ;main.c: 181: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1521     06A0  0000               	nop
  1522     06A1                     l1941:
  1523     06A1  3001               	movlw	1
  1524     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1525     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1526     06A4  07E5               	addwf	main@j,f
  1527     06A5  1803               	skipnc
  1528     06A6  0AE6               	incf	main@j+1,f
  1529     06A7  3000               	movlw	0
  1530     06A8  07E6               	addwf	main@j+1,f
  1531     06A9                     l76:
  1532     06A9  0866               	movf	main@j+1,w
  1533     06AA  3A80               	xorlw	128
  1534     06AB  00AC               	movwf	??_main
  1535     06AC  0864               	movf	main@intvl+1,w
  1536     06AD  3A80               	xorlw	128
  1537     06AE  022C               	subwf	??_main,w
  1538     06AF  1D03               	skipz
  1539     06B0  2EB3               	goto	u1665
  1540     06B1  0863               	movf	main@intvl,w
  1541     06B2  0265               	subwf	main@j,w
  1542     06B3                     u1665:
  1543     06B3  1C03               	skipc
  1544     06B4  2EB6               	goto	u1661
  1545     06B5  2EB7               	goto	u1660
  1546     06B6                     u1661:
  1547     06B6  2EA0               	goto	l77
  1548     06B7                     u1660:
  1549     06B7                     l1943:
  1550     06B7  3001               	movlw	1
  1551     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1552     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1553     06BA  07DE               	addwf	main@k,f
  1554     06BB  1803               	skipnc
  1555     06BC  0ADF               	incf	main@k+1,f
  1556     06BD  3000               	movlw	0
  1557     06BE  07DF               	addwf	main@k+1,f
  1558     06BF                     l71:
  1559     06BF  085F               	movf	main@k+1,w
  1560     06C0  3A80               	xorlw	128
  1561     06C1  00AC               	movwf	??_main
  1562     06C2  0862               	movf	main@dist+1,w
  1563     06C3  3A80               	xorlw	128
  1564     06C4  022C               	subwf	??_main,w
  1565     06C5  1D03               	skipz
  1566     06C6  2EC9               	goto	u1675
  1567     06C7  0861               	movf	main@dist,w
  1568     06C8  025E               	subwf	main@k,w
  1569     06C9                     u1675:
  1570     06C9  1C03               	skipc
  1571     06CA  2ECC               	goto	u1671
  1572     06CB  2ECD               	goto	u1670
  1573     06CC                     u1671:
  1574     06CC  2E7D               	goto	l72
  1575     06CD                     u1670:
  1576     06CD                     l1945:
  1577                           
  1578                           ;main.c: 182: };main.c: 183: };main.c: 184: for(k = 0 ; k < dist ; k++){
  1579     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1580     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1581     06CF  01DE               	clrf	main@k
  1582     06D0  01DF               	clrf	main@k+1
  1583     06D1  2F14               	goto	l80
  1584     06D2                     l81:
  1585                           
  1586                           ;main.c: 185: RA1 = 1;
  1587     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1588     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1589     06D4  1485               	bsf	5,1	;volatile
  1590     06D5                     l1947:
  1591                           
  1592                           ;main.c: 186: for(j = 0 ; j < intvl ; j++){
  1593     06D5  01E5               	clrf	main@j
  1594     06D6  01E6               	clrf	main@j+1
  1595     06D7  2EE1               	goto	l82
  1596     06D8                     l83:
  1597                           
  1598                           ;main.c: 187: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1599     06D8  0000               	nop
  1600     06D9                     l1949:
  1601     06D9  3001               	movlw	1
  1602     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1603     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1604     06DC  07E5               	addwf	main@j,f
  1605     06DD  1803               	skipnc
  1606     06DE  0AE6               	incf	main@j+1,f
  1607     06DF  3000               	movlw	0
  1608     06E0  07E6               	addwf	main@j+1,f
  1609     06E1                     l82:
  1610     06E1  0866               	movf	main@j+1,w
  1611     06E2  3A80               	xorlw	128
  1612     06E3  00AC               	movwf	??_main
  1613     06E4  0864               	movf	main@intvl+1,w
  1614     06E5  3A80               	xorlw	128
  1615     06E6  022C               	subwf	??_main,w
  1616     06E7  1D03               	skipz
  1617     06E8  2EEB               	goto	u1685
  1618     06E9  0863               	movf	main@intvl,w
  1619     06EA  0265               	subwf	main@j,w
  1620     06EB                     u1685:
  1621     06EB  1C03               	skipc
  1622     06EC  2EEE               	goto	u1681
  1623     06ED  2EEF               	goto	u1680
  1624     06EE                     u1681:
  1625     06EE  2ED8               	goto	l83
  1626     06EF                     u1680:
  1627     06EF                     l84:
  1628                           
  1629                           ;main.c: 188: };main.c: 189: RA1 = 0;
  1630     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1631     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1632     06F1  1085               	bcf	5,1	;volatile
  1633     06F2                     l1951:
  1634                           
  1635                           ;main.c: 190: for(j = 0 ; j < intvl ; j++){
  1636     06F2  01E5               	clrf	main@j
  1637     06F3  01E6               	clrf	main@j+1
  1638     06F4  2EFE               	goto	l85
  1639     06F5                     l86:
  1640                           
  1641                           ;main.c: 191: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1642     06F5  0000               	nop
  1643     06F6                     l1953:
  1644     06F6  3001               	movlw	1
  1645     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1646     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1647     06F9  07E5               	addwf	main@j,f
  1648     06FA  1803               	skipnc
  1649     06FB  0AE6               	incf	main@j+1,f
  1650     06FC  3000               	movlw	0
  1651     06FD  07E6               	addwf	main@j+1,f
  1652     06FE                     l85:
  1653     06FE  0866               	movf	main@j+1,w
  1654     06FF  3A80               	xorlw	128
  1655     0700  00AC               	movwf	??_main
  1656     0701  0864               	movf	main@intvl+1,w
  1657     0702  3A80               	xorlw	128
  1658     0703  022C               	subwf	??_main,w
  1659     0704  1D03               	skipz
  1660     0705  2F08               	goto	u1695
  1661     0706  0863               	movf	main@intvl,w
  1662     0707  0265               	subwf	main@j,w
  1663     0708                     u1695:
  1664     0708  1C03               	skipc
  1665     0709  2F0B               	goto	u1691
  1666     070A  2F0C               	goto	u1690
  1667     070B                     u1691:
  1668     070B  2EF5               	goto	l86
  1669     070C                     u1690:
  1670     070C                     l1955:
  1671     070C  3001               	movlw	1
  1672     070D  1283               	bcf	3,5	;RP0=0, select bank0
  1673     070E  1303               	bcf	3,6	;RP1=0, select bank0
  1674     070F  07DE               	addwf	main@k,f
  1675     0710  1803               	skipnc
  1676     0711  0ADF               	incf	main@k+1,f
  1677     0712  3000               	movlw	0
  1678     0713  07DF               	addwf	main@k+1,f
  1679     0714                     l80:
  1680     0714  085F               	movf	main@k+1,w
  1681     0715  3A80               	xorlw	128
  1682     0716  00AC               	movwf	??_main
  1683     0717  0862               	movf	main@dist+1,w
  1684     0718  3A80               	xorlw	128
  1685     0719  022C               	subwf	??_main,w
  1686     071A  1D03               	skipz
  1687     071B  2F1E               	goto	u1705
  1688     071C  0861               	movf	main@dist,w
  1689     071D  025E               	subwf	main@k,w
  1690     071E                     u1705:
  1691     071E  1C03               	skipc
  1692     071F  2F21               	goto	u1701
  1693     0720  2F22               	goto	u1700
  1694     0721                     u1701:
  1695     0721  2ED2               	goto	l81
  1696     0722                     u1700:
  1697     0722  2FDE               	goto	l1983
  1698     0723                     l1957:
  1699                           
  1700                           ;main.c: 195: dist *= -1;
  1701     0723  30FF               	movlw	255
  1702     0724  00F0               	movwf	___wmul@multiplier
  1703     0725  30FF               	movlw	255
  1704     0726  00F1               	movwf	___wmul@multiplier+1
  1705     0727  1283               	bcf	3,5	;RP0=0, select bank0
  1706     0728  1303               	bcf	3,6	;RP1=0, select bank0
  1707     0729  0862               	movf	main@dist+1,w
  1708     072A  00F3               	movwf	___wmul@multiplicand+1
  1709     072B  0861               	movf	main@dist,w
  1710     072C  00F2               	movwf	___wmul@multiplicand
  1711     072D  118A  20C7  118A   	fcall	___wmul
  1712     0730  0871               	movf	?___wmul+1,w
  1713     0731  1283               	bcf	3,5	;RP0=0, select bank0
  1714     0732  1303               	bcf	3,6	;RP1=0, select bank0
  1715     0733  00E2               	movwf	main@dist+1
  1716     0734  0870               	movf	?___wmul,w
  1717     0735  00E1               	movwf	main@dist
  1718     0736                     l1959:
  1719                           
  1720                           ;main.c: 196: for(k = 0 ; k < dist ; k++){
  1721     0736  01DE               	clrf	main@k
  1722     0737  01DF               	clrf	main@k+1
  1723     0738  2F7B               	goto	l90
  1724     0739                     l91:
  1725                           
  1726                           ;main.c: 197: RA1 = 1;
  1727     0739  1283               	bcf	3,5	;RP0=0, select bank0
  1728     073A  1303               	bcf	3,6	;RP1=0, select bank0
  1729     073B  1485               	bsf	5,1	;volatile
  1730     073C                     l1961:
  1731                           
  1732                           ;main.c: 198: for(j = 0 ; j < intvl ; j++){
  1733     073C  01E5               	clrf	main@j
  1734     073D  01E6               	clrf	main@j+1
  1735     073E  2F48               	goto	l92
  1736     073F                     l93:
  1737                           
  1738                           ;main.c: 199: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1739     073F  0000               	nop
  1740     0740                     l1963:
  1741     0740  3001               	movlw	1
  1742     0741  1283               	bcf	3,5	;RP0=0, select bank0
  1743     0742  1303               	bcf	3,6	;RP1=0, select bank0
  1744     0743  07E5               	addwf	main@j,f
  1745     0744  1803               	skipnc
  1746     0745  0AE6               	incf	main@j+1,f
  1747     0746  3000               	movlw	0
  1748     0747  07E6               	addwf	main@j+1,f
  1749     0748                     l92:
  1750     0748  0866               	movf	main@j+1,w
  1751     0749  3A80               	xorlw	128
  1752     074A  00AC               	movwf	??_main
  1753     074B  0864               	movf	main@intvl+1,w
  1754     074C  3A80               	xorlw	128
  1755     074D  022C               	subwf	??_main,w
  1756     074E  1D03               	skipz
  1757     074F  2F52               	goto	u1715
  1758     0750  0863               	movf	main@intvl,w
  1759     0751  0265               	subwf	main@j,w
  1760     0752                     u1715:
  1761     0752  1C03               	skipc
  1762     0753  2F55               	goto	u1711
  1763     0754  2F56               	goto	u1710
  1764     0755                     u1711:
  1765     0755  2F3F               	goto	l93
  1766     0756                     u1710:
  1767     0756                     l94:
  1768                           
  1769                           ;main.c: 200: };main.c: 201: RA1 = 0;
  1770     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1771     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0758  1085               	bcf	5,1	;volatile
  1773     0759                     l1965:
  1774                           
  1775                           ;main.c: 202: for(j = 0 ; j < intvl ; j++){
  1776     0759  01E5               	clrf	main@j
  1777     075A  01E6               	clrf	main@j+1
  1778     075B  2F65               	goto	l95
  1779     075C                     l96:
  1780                           
  1781                           ;main.c: 203: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1782     075C  0000               	nop
  1783     075D                     l1967:
  1784     075D  3001               	movlw	1
  1785     075E  1283               	bcf	3,5	;RP0=0, select bank0
  1786     075F  1303               	bcf	3,6	;RP1=0, select bank0
  1787     0760  07E5               	addwf	main@j,f
  1788     0761  1803               	skipnc
  1789     0762  0AE6               	incf	main@j+1,f
  1790     0763  3000               	movlw	0
  1791     0764  07E6               	addwf	main@j+1,f
  1792     0765                     l95:
  1793     0765  0866               	movf	main@j+1,w
  1794     0766  3A80               	xorlw	128
  1795     0767  00AC               	movwf	??_main
  1796     0768  0864               	movf	main@intvl+1,w
  1797     0769  3A80               	xorlw	128
  1798     076A  022C               	subwf	??_main,w
  1799     076B  1D03               	skipz
  1800     076C  2F6F               	goto	u1725
  1801     076D  0863               	movf	main@intvl,w
  1802     076E  0265               	subwf	main@j,w
  1803     076F                     u1725:
  1804     076F  1C03               	skipc
  1805     0770  2F72               	goto	u1721
  1806     0771  2F73               	goto	u1720
  1807     0772                     u1721:
  1808     0772  2F5C               	goto	l96
  1809     0773                     u1720:
  1810     0773                     l1969:
  1811     0773  3001               	movlw	1
  1812     0774  1283               	bcf	3,5	;RP0=0, select bank0
  1813     0775  1303               	bcf	3,6	;RP1=0, select bank0
  1814     0776  07DE               	addwf	main@k,f
  1815     0777  1803               	skipnc
  1816     0778  0ADF               	incf	main@k+1,f
  1817     0779  3000               	movlw	0
  1818     077A  07DF               	addwf	main@k+1,f
  1819     077B                     l90:
  1820     077B  085F               	movf	main@k+1,w
  1821     077C  3A80               	xorlw	128
  1822     077D  00AC               	movwf	??_main
  1823     077E  0862               	movf	main@dist+1,w
  1824     077F  3A80               	xorlw	128
  1825     0780  022C               	subwf	??_main,w
  1826     0781  1D03               	skipz
  1827     0782  2F85               	goto	u1735
  1828     0783  0861               	movf	main@dist,w
  1829     0784  025E               	subwf	main@k,w
  1830     0785                     u1735:
  1831     0785  1C03               	skipc
  1832     0786  2F88               	goto	u1731
  1833     0787  2F89               	goto	u1730
  1834     0788                     u1731:
  1835     0788  2F39               	goto	l91
  1836     0789                     u1730:
  1837     0789                     l1971:
  1838                           
  1839                           ;main.c: 204: };main.c: 205: };main.c: 206: for(k = 0 ; k < dist ; k++){
  1840     0789  1283               	bcf	3,5	;RP0=0, select bank0
  1841     078A  1303               	bcf	3,6	;RP1=0, select bank0
  1842     078B  01DE               	clrf	main@k
  1843     078C  01DF               	clrf	main@k+1
  1844     078D  2FD0               	goto	l99
  1845     078E                     l100:
  1846                           
  1847                           ;main.c: 207: RA0 = 1;
  1848     078E  1283               	bcf	3,5	;RP0=0, select bank0
  1849     078F  1303               	bcf	3,6	;RP1=0, select bank0
  1850     0790  1405               	bsf	5,0	;volatile
  1851     0791                     l1973:
  1852                           
  1853                           ;main.c: 208: for(j = 0 ; j < intvl ; j++){
  1854     0791  01E5               	clrf	main@j
  1855     0792  01E6               	clrf	main@j+1
  1856     0793  2F9D               	goto	l101
  1857     0794                     l102:
  1858                           
  1859                           ;main.c: 209: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1860     0794  0000               	nop
  1861     0795                     l1975:
  1862     0795  3001               	movlw	1
  1863     0796  1283               	bcf	3,5	;RP0=0, select bank0
  1864     0797  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0798  07E5               	addwf	main@j,f
  1866     0799  1803               	skipnc
  1867     079A  0AE6               	incf	main@j+1,f
  1868     079B  3000               	movlw	0
  1869     079C  07E6               	addwf	main@j+1,f
  1870     079D                     l101:
  1871     079D  0866               	movf	main@j+1,w
  1872     079E  3A80               	xorlw	128
  1873     079F  00AC               	movwf	??_main
  1874     07A0  0864               	movf	main@intvl+1,w
  1875     07A1  3A80               	xorlw	128
  1876     07A2  022C               	subwf	??_main,w
  1877     07A3  1D03               	skipz
  1878     07A4  2FA7               	goto	u1745
  1879     07A5  0863               	movf	main@intvl,w
  1880     07A6  0265               	subwf	main@j,w
  1881     07A7                     u1745:
  1882     07A7  1C03               	skipc
  1883     07A8  2FAA               	goto	u1741
  1884     07A9  2FAB               	goto	u1740
  1885     07AA                     u1741:
  1886     07AA  2F94               	goto	l102
  1887     07AB                     u1740:
  1888     07AB                     l103:
  1889                           
  1890                           ;main.c: 210: };main.c: 211: RA0 = 0;
  1891     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1892     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1893     07AD  1005               	bcf	5,0	;volatile
  1894     07AE                     l1977:
  1895                           
  1896                           ;main.c: 212: for(j = 0 ; j < intvl ; j++){
  1897     07AE  01E5               	clrf	main@j
  1898     07AF  01E6               	clrf	main@j+1
  1899     07B0  2FBA               	goto	l104
  1900     07B1                     l105:
  1901                           
  1902                           ;main.c: 213: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1903     07B1  0000               	nop
  1904     07B2                     l1979:
  1905     07B2  3001               	movlw	1
  1906     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1907     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1908     07B5  07E5               	addwf	main@j,f
  1909     07B6  1803               	skipnc
  1910     07B7  0AE6               	incf	main@j+1,f
  1911     07B8  3000               	movlw	0
  1912     07B9  07E6               	addwf	main@j+1,f
  1913     07BA                     l104:
  1914     07BA  0866               	movf	main@j+1,w
  1915     07BB  3A80               	xorlw	128
  1916     07BC  00AC               	movwf	??_main
  1917     07BD  0864               	movf	main@intvl+1,w
  1918     07BE  3A80               	xorlw	128
  1919     07BF  022C               	subwf	??_main,w
  1920     07C0  1D03               	skipz
  1921     07C1  2FC4               	goto	u1755
  1922     07C2  0863               	movf	main@intvl,w
  1923     07C3  0265               	subwf	main@j,w
  1924     07C4                     u1755:
  1925     07C4  1C03               	skipc
  1926     07C5  2FC7               	goto	u1751
  1927     07C6  2FC8               	goto	u1750
  1928     07C7                     u1751:
  1929     07C7  2FB1               	goto	l105
  1930     07C8                     u1750:
  1931     07C8                     l1981:
  1932     07C8  3001               	movlw	1
  1933     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1934     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1935     07CB  07DE               	addwf	main@k,f
  1936     07CC  1803               	skipnc
  1937     07CD  0ADF               	incf	main@k+1,f
  1938     07CE  3000               	movlw	0
  1939     07CF  07DF               	addwf	main@k+1,f
  1940     07D0                     l99:
  1941     07D0  085F               	movf	main@k+1,w
  1942     07D1  3A80               	xorlw	128
  1943     07D2  00AC               	movwf	??_main
  1944     07D3  0862               	movf	main@dist+1,w
  1945     07D4  3A80               	xorlw	128
  1946     07D5  022C               	subwf	??_main,w
  1947     07D6  1D03               	skipz
  1948     07D7  2FDA               	goto	u1765
  1949     07D8  0861               	movf	main@dist,w
  1950     07D9  025E               	subwf	main@k,w
  1951     07DA                     u1765:
  1952     07DA  1C03               	skipc
  1953     07DB  2FDD               	goto	u1761
  1954     07DC  2FDE               	goto	u1760
  1955     07DD                     u1761:
  1956     07DD  2F8E               	goto	l100
  1957     07DE                     u1760:
  1958     07DE                     l1983:
  1959                           
  1960                           ;main.c: 214: };main.c: 215: };main.c: 216: };main.c: 218: puts("C");
  1961     07DE  302B               	movlw	(low (((STR_4+2)-__stringbase)| (0+32768)))& (0+255)
  1962     07DF  118A  206B  118A   	fcall	_puts
  1963                           
  1964                           ;main.c: 219: printf("C\r\n");
  1965     07E2  301D               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1966     07E3  118A  2369  118A   	fcall	_printf
  1967                           
  1968                           ;main.c: 220: break;
  1969     07E6  2C73               	goto	l1833
  1970     07E7                     l1985:
  1971                           
  1972                           ;main.c: 223: break;
  1973     07E7  2C73               	goto	l1833
  1974     07E8                     l1989:
  1975     07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1976     07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1977     07EA  0859               	movf	main@cmd,w
  1978                           
  1979                           ; Switch size 1, requested type "simple"
  1980                           ; Number of cases is 4, Range of values is 0 to 3
  1981                           ; switch strategies available:
  1982                           ; Name         Instructions Cycles
  1983                           ; simple_byte           13     7 (average)
  1984                           ; direct_byte           15     7 (fixed)
  1985                           ; jumptable            260     6 (fixed)
  1986                           ;	Chosen strategy is simple_byte
  1987     07EB  3A00               	xorlw	0	; case 0
  1988     07EC  1903               	skipnz
  1989     07ED  2CD0               	goto	l1877
  1990     07EE  3A01               	xorlw	1	; case 1
  1991     07EF  1903               	skipnz
  1992     07F0  2DDF               	goto	l1913
  1993     07F1  3A03               	xorlw	3	; case 2
  1994     07F2  1903               	skipnz
  1995     07F3  2E25               	goto	l1925
  1996     07F4  3A01               	xorlw	1	; case 3
  1997     07F5  1903               	skipnz
  1998     07F6  2FE7               	goto	l1985
  1999     07F7  2C73               	goto	l1833
  2000     07F8  118A  2800         	ljmp	start
  2001     07FA                     __end_of_main:
  2002                           
  2003                           	psect	text1
  2004     01EE                     __ptext1:	
  2005 ;; *************** function _strtok *****************
  2006 ;; Defined at:
  2007 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strtok.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  s1              1    wreg     PTR unsigned char 
  2010 ;;		 -> NULL(0), main@tmp(40), 
  2011 ;;  s2              1   10[COMMON] PTR const unsigned char 
  2012 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  2013 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2014 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2015 ;;		 -> STR_5(2), 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  s1              1   11[COMMON] PTR unsigned char 
  2018 ;;		 -> NULL(0), main@tmp(40), 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      PTR unsigned char 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2028 ;;      Params:         1       0       0       0
  2029 ;;      Locals:         1       0       0       0
  2030 ;;      Temps:          0       0       0       0
  2031 ;;      Totals:         2       0       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 3
  2035 ;; This function calls:
  2036 ;;		_strcspn
  2037 ;;		_strspn
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043     01EE                     _strtok:	
  2044                           ;psect for function _strtok
  2045                           
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _strtok: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2049                           ;strtok@s1 stored from wreg
  2050     01EE  00FB               	movwf	strtok@s1
  2051     01EF                     l1699:
  2052     01EF  087B               	movf	strtok@s1,w
  2053     01F0  1D03               	btfss	3,2
  2054     01F1  29F3               	goto	u1301
  2055     01F2  29F4               	goto	u1300
  2056     01F3                     u1301:
  2057     01F3  29F8               	goto	l1703
  2058     01F4                     u1300:
  2059     01F4                     l1701:
  2060     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2061     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2062     01F6  0867               	movf	strtok@sp,w
  2063     01F7  00FB               	movwf	strtok@s1
  2064     01F8                     l1703:
  2065     01F8  087B               	movf	strtok@s1,w
  2066     01F9  1D03               	btfss	3,2
  2067     01FA  29FC               	goto	u1311
  2068     01FB  29FD               	goto	u1310
  2069     01FC                     u1311:
  2070     01FC  29FF               	goto	l1709
  2071     01FD                     u1310:
  2072     01FD                     l1705:
  2073     01FD  3000               	movlw	0
  2074     01FE  2A33               	goto	l792
  2075     01FF                     l1709:
  2076     01FF  087A               	movf	strtok@s2,w
  2077     0200  00F3               	movwf	strspn@s2
  2078     0201  087B               	movf	strtok@s1,w
  2079     0202  118A  2143  118A   	fcall	_strspn
  2080     0205  0873               	movf	?_strspn,w
  2081     0206  00FF               	movwf	btemp+1
  2082     0207  087F               	movf	btemp+1,w
  2083     0208  07FB               	addwf	strtok@s1,f
  2084     0209                     l1711:
  2085     0209  087B               	movf	strtok@s1,w
  2086     020A  0084               	movwf	4
  2087     020B  1383               	bcf	3,7	;select IRP bank0
  2088     020C  0800               	movf	0,w
  2089     020D  1D03               	btfss	3,2
  2090     020E  2A10               	goto	u1321
  2091     020F  2A11               	goto	u1320
  2092     0210                     u1321:
  2093     0210  2A16               	goto	l1717
  2094     0211                     u1320:
  2095     0211                     l1713:
  2096     0211  1283               	bcf	3,5	;RP0=0, select bank0
  2097     0212  1303               	bcf	3,6	;RP1=0, select bank0
  2098     0213  01E7               	clrf	strtok@sp
  2099     0214  3000               	movlw	0
  2100     0215  2A33               	goto	l792
  2101     0216                     l1717:
  2102     0216  087A               	movf	strtok@s2,w
  2103     0217  00F3               	movwf	strcspn@s2
  2104     0218  087B               	movf	strtok@s1,w
  2105     0219  118A  2116  118A   	fcall	_strcspn
  2106     021C  0873               	movf	?_strcspn,w
  2107     021D  077B               	addwf	strtok@s1,w
  2108     021E  1283               	bcf	3,5	;RP0=0, select bank0
  2109     021F  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0220  00E7               	movwf	strtok@sp
  2111     0221                     l1719:
  2112     0221  0867               	movf	strtok@sp,w
  2113     0222  0084               	movwf	4
  2114     0223  1383               	bcf	3,7	;select IRP bank0
  2115     0224  0800               	movf	0,w
  2116     0225  1903               	btfsc	3,2
  2117     0226  2A28               	goto	u1331
  2118     0227  2A29               	goto	u1330
  2119     0228                     u1331:
  2120     0228  2A31               	goto	l1725
  2121     0229                     u1330:
  2122     0229                     l1721:
  2123     0229  0867               	movf	strtok@sp,w
  2124     022A  0084               	movwf	4
  2125     022B  0180               	clrf	0
  2126     022C                     l1723:
  2127     022C  3001               	movlw	1
  2128     022D  00FF               	movwf	btemp+1
  2129     022E  087F               	movf	btemp+1,w
  2130     022F  07E7               	addwf	strtok@sp,f
  2131     0230  2A32               	goto	l1727
  2132     0231                     l1725:
  2133     0231  01E7               	clrf	strtok@sp
  2134     0232                     l1727:
  2135     0232  087B               	movf	strtok@s1,w
  2136     0233                     l792:
  2137     0233  0008               	return
  2138     0234                     __end_of_strtok:
  2139                           
  2140                           	psect	text2
  2141     0143                     __ptext2:	
  2142 ;; *************** function _strspn *****************
  2143 ;; Defined at:
  2144 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strspn.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  s1              1    wreg     PTR const unsigned char 
  2147 ;;		 -> NULL(0), main@tmp(40), 
  2148 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2149 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  2150 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2151 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2152 ;;		 -> STR_5(2), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2155 ;;		 -> NULL(0), main@tmp(40), 
  2156 ;;  i               2    7[COMMON] unsigned int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2    3[COMMON] unsigned int 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2166 ;;      Params:         2       0       0       0
  2167 ;;      Locals:         3       0       0       0
  2168 ;;      Temps:          2       0       0       0
  2169 ;;      Totals:         7       0       0       0
  2170 ;;Total ram usage:        7 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 2
  2173 ;; This function calls:
  2174 ;;		_strchr
  2175 ;; This function is called by:
  2176 ;;		_strtok
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180     0143                     _strspn:	
  2181                           ;psect for function _strspn
  2182                           
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _strspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2186                           ;strspn@s1 stored from wreg
  2187     0143  00F9               	movwf	strspn@s1
  2188     0144                     l1591:
  2189     0144  01F7               	clrf	strspn@i
  2190     0145  01F8               	clrf	strspn@i+1
  2191     0146  2951               	goto	l1595
  2192     0147                     l1593:
  2193     0147  3001               	movlw	1
  2194     0148  00FF               	movwf	btemp+1
  2195     0149  087F               	movf	btemp+1,w
  2196     014A  07F9               	addwf	strspn@s1,f
  2197     014B  3001               	movlw	1
  2198     014C  07F7               	addwf	strspn@i,f
  2199     014D  1803               	skipnc
  2200     014E  0AF8               	incf	strspn@i+1,f
  2201     014F  3000               	movlw	0
  2202     0150  07F8               	addwf	strspn@i+1,f
  2203     0151                     l1595:
  2204     0151  0879               	movf	strspn@s1,w
  2205     0152  0084               	movwf	4
  2206     0153  1383               	bcf	3,7	;select IRP bank0
  2207     0154  0800               	movf	0,w
  2208     0155  1903               	btfsc	3,2
  2209     0156  2958               	goto	u1151
  2210     0157  2959               	goto	u1150
  2211     0158                     u1151:
  2212     0158  296B               	goto	l1599
  2213     0159                     u1150:
  2214     0159                     l1597:
  2215     0159  0879               	movf	strspn@s1,w
  2216     015A  0084               	movwf	4
  2217     015B  0800               	movf	0,w
  2218     015C  00F5               	movwf	??_strspn
  2219     015D  01F6               	clrf	??_strspn+1
  2220     015E  0875               	movf	??_strspn,w
  2221     015F  00F0               	movwf	strchr@chr
  2222     0160  0876               	movf	??_strspn+1,w
  2223     0161  00F1               	movwf	strchr@chr+1
  2224     0162  0873               	movf	strspn@s2,w
  2225     0163  118A  20AB  118A   	fcall	_strchr
  2226     0166  3A00               	xorlw	0
  2227     0167  1D03               	skipz
  2228     0168  296A               	goto	u1161
  2229     0169  296B               	goto	u1160
  2230     016A                     u1161:
  2231     016A  2947               	goto	l1593
  2232     016B                     u1160:
  2233     016B                     l1599:
  2234     016B  0878               	movf	strspn@i+1,w
  2235     016C  00F4               	movwf	?_strspn+1
  2236     016D  0877               	movf	strspn@i,w
  2237     016E  00F3               	movwf	?_strspn
  2238     016F                     l821:
  2239     016F  0008               	return
  2240     0170                     __end_of_strspn:
  2241                           
  2242                           	psect	text3
  2243     0116                     __ptext3:	
  2244 ;; *************** function _strcspn *****************
  2245 ;; Defined at:
  2246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcspn.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  s1              1    wreg     PTR const unsigned char 
  2249 ;;		 -> NULL(0), main@tmp(40), 
  2250 ;;  s2              1    3[COMMON] PTR const unsigned char 
  2251 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  2252 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2253 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2254 ;;		 -> STR_5(2), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  s1              1    9[COMMON] PTR const unsigned char 
  2257 ;;		 -> NULL(0), main@tmp(40), 
  2258 ;;  i               2    7[COMMON] unsigned int 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    3[COMMON] unsigned int 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2268 ;;      Params:         2       0       0       0
  2269 ;;      Locals:         3       0       0       0
  2270 ;;      Temps:          2       0       0       0
  2271 ;;      Totals:         7       0       0       0
  2272 ;;Total ram usage:        7 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 2
  2275 ;; This function calls:
  2276 ;;		_strchr
  2277 ;; This function is called by:
  2278 ;;		_strtok
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282     0116                     _strcspn:	
  2283                           ;psect for function _strcspn
  2284                           
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _strcspn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2288                           ;strcspn@s1 stored from wreg
  2289     0116  00F9               	movwf	strcspn@s1
  2290     0117                     l1603:
  2291     0117  01F7               	clrf	strcspn@i
  2292     0118  01F8               	clrf	strcspn@i+1
  2293     0119  2924               	goto	l1607
  2294     011A                     l1605:
  2295     011A  3001               	movlw	1
  2296     011B  00FF               	movwf	btemp+1
  2297     011C  087F               	movf	btemp+1,w
  2298     011D  07F9               	addwf	strcspn@s1,f
  2299     011E  3001               	movlw	1
  2300     011F  07F7               	addwf	strcspn@i,f
  2301     0120  1803               	skipnc
  2302     0121  0AF8               	incf	strcspn@i+1,f
  2303     0122  3000               	movlw	0
  2304     0123  07F8               	addwf	strcspn@i+1,f
  2305     0124                     l1607:
  2306     0124  0879               	movf	strcspn@s1,w
  2307     0125  0084               	movwf	4
  2308     0126  1383               	bcf	3,7	;select IRP bank0
  2309     0127  0800               	movf	0,w
  2310     0128  1903               	btfsc	3,2
  2311     0129  292B               	goto	u1171
  2312     012A  292C               	goto	u1170
  2313     012B                     u1171:
  2314     012B  293E               	goto	l1611
  2315     012C                     u1170:
  2316     012C                     l1609:
  2317     012C  0879               	movf	strcspn@s1,w
  2318     012D  0084               	movwf	4
  2319     012E  0800               	movf	0,w
  2320     012F  00F5               	movwf	??_strcspn
  2321     0130  01F6               	clrf	??_strcspn+1
  2322     0131  0875               	movf	??_strcspn,w
  2323     0132  00F0               	movwf	strchr@chr
  2324     0133  0876               	movf	??_strcspn+1,w
  2325     0134  00F1               	movwf	strchr@chr+1
  2326     0135  0873               	movf	strcspn@s2,w
  2327     0136  118A  20AB  118A   	fcall	_strchr
  2328     0139  3A00               	xorlw	0
  2329     013A  1903               	skipnz
  2330     013B  293D               	goto	u1181
  2331     013C  293E               	goto	u1180
  2332     013D                     u1181:
  2333     013D  291A               	goto	l1605
  2334     013E                     u1180:
  2335     013E                     l1611:
  2336     013E  0878               	movf	strcspn@i+1,w
  2337     013F  00F4               	movwf	?_strcspn+1
  2338     0140  0877               	movf	strcspn@i,w
  2339     0141  00F3               	movwf	?_strcspn
  2340     0142                     l805:
  2341     0142  0008               	return
  2342     0143                     __end_of_strcspn:
  2343                           
  2344                           	psect	text4
  2345     00AB                     __ptext4:	
  2346 ;; *************** function _strchr *****************
  2347 ;; Defined at:
  2348 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strchr.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  ptr             1    wreg     PTR const unsigned char 
  2351 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  2352 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2353 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2354 ;;		 -> STR_5(2), 
  2355 ;;  chr             2    0[COMMON] int 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  2358 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
  2359 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  2360 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2361 ;;		 -> STR_5(2), 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      PTR unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, pclath
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2371 ;;      Params:         2       0       0       0
  2372 ;;      Locals:         1       0       0       0
  2373 ;;      Temps:          0       0       0       0
  2374 ;;      Totals:         3       0       0       0
  2375 ;;Total ram usage:        3 bytes
  2376 ;; Hardware stack levels used: 2
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_strcspn
  2381 ;;		_strspn
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     00AB                     _strchr:	
  2386                           ;psect for function _strchr
  2387                           
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _strchr: [wreg-fsr0h+pclath]
  2391                           ;strchr@ptr stored from wreg
  2392     00AB  00F2               	movwf	strchr@ptr
  2393     00AC                     l808:
  2394     00AC                     l1463:
  2395     00AC  0872               	movf	strchr@ptr,w
  2396     00AD  0084               	movwf	4
  2397     00AE  118A  200C  118A   	fcall	stringdir
  2398     00B1  0670               	xorwf	strchr@chr,w
  2399     00B2  1D03               	skipz
  2400     00B3  28B5               	goto	u911
  2401     00B4  28B6               	goto	u910
  2402     00B5                     u911:
  2403     00B5  28B8               	goto	l1469
  2404     00B6                     u910:
  2405     00B6                     l1465:
  2406     00B6  0872               	movf	strchr@ptr,w
  2407     00B7  28C6               	goto	l810
  2408     00B8                     l1469:
  2409     00B8  3001               	movlw	1
  2410     00B9  07F2               	addwf	strchr@ptr,f
  2411     00BA  30FF               	movlw	-1
  2412     00BB  0772               	addwf	strchr@ptr,w
  2413     00BC  0084               	movwf	4
  2414     00BD  118A  200C  118A   	fcall	stringdir
  2415     00C0  3A00               	xorlw	0
  2416     00C1  1D03               	skipz
  2417     00C2  28C4               	goto	u921
  2418     00C3  28C5               	goto	u920
  2419     00C4                     u921:
  2420     00C4  28AC               	goto	l808
  2421     00C5                     u920:
  2422     00C5                     l1471:
  2423     00C5  3000               	movlw	0
  2424     00C6                     l810:
  2425     00C6  0008               	return
  2426     00C7                     __end_of_strchr:
  2427                           
  2428                           	psect	text5
  2429     00EC                     __ptext5:	
  2430 ;; *************** function _strcmp *****************
  2431 ;; Defined at:
  2432 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcmp.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  s1              1    wreg     PTR const unsigned char 
  2435 ;;		 -> main@rcmd(4), 
  2436 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2437 ;;		 -> STR_4(4), STR_3(4), STR_2(4), 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  s1              1    5[COMMON] PTR const unsigned char 
  2440 ;;		 -> main@rcmd(4), 
  2441 ;;  r               1    4[COMMON] char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2    0[COMMON] int 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2451 ;;      Params:         2       0       0       0
  2452 ;;      Locals:         2       0       0       0
  2453 ;;      Temps:          2       0       0       0
  2454 ;;      Totals:         6       0       0       0
  2455 ;;Total ram usage:        6 bytes
  2456 ;; Hardware stack levels used: 2
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464     00EC                     _strcmp:	
  2465                           ;psect for function _strcmp
  2466                           
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2470                           ;strcmp@s1 stored from wreg
  2471     00EC  00F5               	movwf	strcmp@s1
  2472     00ED                     l1685:
  2473     00ED  28F6               	goto	l1691
  2474     00EE                     l1687:
  2475     00EE  3001               	movlw	1
  2476     00EF  00FF               	movwf	btemp+1
  2477     00F0  087F               	movf	btemp+1,w
  2478     00F1  07F5               	addwf	strcmp@s1,f
  2479     00F2                     l1689:
  2480     00F2  3001               	movlw	1
  2481     00F3  00FF               	movwf	btemp+1
  2482     00F4  087F               	movf	btemp+1,w
  2483     00F5  07F0               	addwf	strcmp@s2,f
  2484     00F6                     l1691:
  2485     00F6  0870               	movf	strcmp@s2,w
  2486     00F7  0084               	movwf	4
  2487     00F8  118A  200C  118A   	fcall	stringdir
  2488     00FB  00F2               	movwf	??_strcmp
  2489     00FC  0875               	movf	strcmp@s1,w
  2490     00FD  0084               	movwf	4
  2491     00FE  1383               	bcf	3,7	;select IRP bank0
  2492     00FF  0800               	movf	0,w
  2493     0100  00F3               	movwf	??_strcmp+1
  2494     0101  0872               	movf	??_strcmp,w
  2495     0102  0273               	subwf	??_strcmp+1,w
  2496     0103  00F4               	movwf	strcmp@r
  2497     0104  0874               	movf	strcmp@r,w
  2498     0105  1D03               	btfss	3,2
  2499     0106  2908               	goto	u1281
  2500     0107  2909               	goto	u1280
  2501     0108                     u1281:
  2502     0108  2910               	goto	l1695
  2503     0109                     u1280:
  2504     0109                     l1693:
  2505     0109  0875               	movf	strcmp@s1,w
  2506     010A  0084               	movwf	4
  2507     010B  0800               	movf	0,w
  2508     010C  1D03               	btfss	3,2
  2509     010D  290F               	goto	u1291
  2510     010E  2910               	goto	u1290
  2511     010F                     u1291:
  2512     010F  28EE               	goto	l1687
  2513     0110                     u1290:
  2514     0110                     l1695:
  2515     0110  0874               	movf	strcmp@r,w
  2516     0111  00F0               	movwf	?_strcmp
  2517     0112  01F1               	clrf	?_strcmp+1
  2518     0113  1BF0               	btfsc	?_strcmp,7
  2519     0114  03F1               	decf	?_strcmp+1,f
  2520     0115                     l781:
  2521     0115  0008               	return
  2522     0116                     __end_of_strcmp:
  2523                           
  2524                           	psect	text6
  2525     006B                     __ptext6:	
  2526 ;; *************** function _puts *****************
  2527 ;; Defined at:
  2528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\puts.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  s               1    wreg     PTR const unsigned char 
  2531 ;;		 -> STR_22(2), STR_11(2), 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  s               1    2[COMMON] PTR const unsigned char 
  2534 ;;		 -> STR_22(2), STR_11(2), 
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  2   30[None  ] int 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2544 ;;      Params:         0       0       0       0
  2545 ;;      Locals:         1       0       0       0
  2546 ;;      Temps:          0       0       0       0
  2547 ;;      Totals:         1       0       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 2
  2551 ;; This function calls:
  2552 ;;		_cputs
  2553 ;;		_putch
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559     006B                     _puts:	
  2560                           ;psect for function _puts
  2561                           
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2565                           ;puts@s stored from wreg
  2566     006B  00F2               	movwf	puts@s
  2567     006C                     l1765:
  2568     006C  0872               	movf	puts@s,w
  2569     006D  118A  2092  118A   	fcall	_cputs
  2570     0070                     l1767:
  2571     0070  300A               	movlw	10
  2572     0071  118A  2057  118A   	fcall	_putch
  2573     0074                     l765:
  2574     0074  0008               	return
  2575     0075                     __end_of_puts:
  2576                           
  2577                           	psect	text7
  2578     0092                     __ptext7:	
  2579 ;; *************** function _cputs *****************
  2580 ;; Defined at:
  2581 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cputs.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  s               1    wreg     PTR const unsigned char 
  2584 ;;		 -> STR_22(2), STR_11(2), 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  s               1    1[COMMON] PTR const unsigned char 
  2587 ;;		 -> STR_22(2), STR_11(2), 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2597 ;;      Params:         0       0       0       0
  2598 ;;      Locals:         1       0       0       0
  2599 ;;      Temps:          0       0       0       0
  2600 ;;      Totals:         1       0       0       0
  2601 ;;Total ram usage:        1 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 1
  2604 ;; This function calls:
  2605 ;;		_putch
  2606 ;; This function is called by:
  2607 ;;		_puts
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611     0092                     _cputs:	
  2612                           ;psect for function _cputs
  2613                           
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in _cputs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2617                           ;cputs@s stored from wreg
  2618     0092  00F1               	movwf	cputs@s
  2619     0093                     l1583:
  2620     0093  28A0               	goto	l1589
  2621     0094                     l1585:
  2622     0094  0871               	movf	cputs@s,w
  2623     0095  0084               	movwf	4
  2624     0096  118A  200C  118A   	fcall	stringdir
  2625     0099  118A  2057  118A   	fcall	_putch
  2626     009C                     l1587:
  2627     009C  3001               	movlw	1
  2628     009D  00FF               	movwf	btemp+1
  2629     009E  087F               	movf	btemp+1,w
  2630     009F  07F1               	addwf	cputs@s,f
  2631     00A0                     l1589:
  2632     00A0  0871               	movf	cputs@s,w
  2633     00A1  0084               	movwf	4
  2634     00A2  118A  200C  118A   	fcall	stringdir
  2635     00A5  3A00               	xorlw	0
  2636     00A6  1D03               	skipz
  2637     00A7  28A9               	goto	u1141
  2638     00A8  28AA               	goto	u1140
  2639     00A9                     u1141:
  2640     00A9  2894               	goto	l1585
  2641     00AA                     u1140:
  2642     00AA                     l773:
  2643     00AA  0008               	return
  2644     00AB                     __end_of_cputs:
  2645                           
  2646                           	psect	text8
  2647     0369                     __ptext8:	
  2648 ;; *************** function _printf *****************
  2649 ;; Defined at:
  2650 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  f               1    wreg     PTR const unsigned char 
  2653 ;;		 -> STR_23(4), STR_21(11), STR_12(4), STR_10(11), 
  2654 ;;		 -> STR_1(4), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  2657 ;;		 -> STR_23(4), STR_21(11), STR_12(4), STR_10(11), 
  2658 ;;		 -> STR_1(4), 
  2659 ;;  tmpval          4    0        struct .
  2660 ;;  val             2    9[BANK0 ] unsigned int 
  2661 ;;  cp              2    6[BANK0 ] PTR const unsigned char 
  2662 ;;		 -> STR_24(7), ?_printf(2), main@tmp(40), 
  2663 ;;  len             2    0        unsigned int 
  2664 ;;  c               1   11[BANK0 ] unsigned char 
  2665 ;;  ap              1    5[BANK0 ] PTR void [1]
  2666 ;;		 -> ?_printf(2), 
  2667 ;;  prec            1    4[BANK0 ] char 
  2668 ;;  flag            1    3[BANK0 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2   12[COMMON] int 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2678 ;;      Params:         2       0       0       0
  2679 ;;      Locals:         0       9       0       0
  2680 ;;      Temps:          0       3       0       0
  2681 ;;      Totals:         2      12       0       0
  2682 ;;Total ram usage:       14 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 1
  2685 ;; This function calls:
  2686 ;;		___lwdiv
  2687 ;;		___lwmod
  2688 ;;		_putch
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694     0369                     _printf:	
  2695                           ;psect for function _printf
  2696                           
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2700                           ;printf@f stored from wreg
  2701     0369  1283               	bcf	3,5	;RP0=0, select bank0
  2702     036A  1303               	bcf	3,6	;RP1=0, select bank0
  2703     036B  00A8               	movwf	printf@f
  2704     036C                     l1621:
  2705                           
  2706                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2707     036C  307C               	movlw	(low (?_printf| 0))& (0+255)
  2708     036D  00A5               	movwf	printf@ap
  2709                           
  2710                           ;doprnt.c: 553: while((c = *f++)) {
  2711     036E  2C44               	goto	l1683
  2712     036F                     l1623:
  2713                           
  2714                           ;doprnt.c: 555: if(c != '%')
  2715     036F  3025               	movlw	37
  2716     0370  062B               	xorwf	printf@c,w
  2717     0371  1903               	btfsc	3,2
  2718     0372  2B74               	goto	u1191
  2719     0373  2B75               	goto	u1190
  2720     0374                     u1191:
  2721     0374  2B7A               	goto	l1627
  2722     0375                     u1190:
  2723     0375                     l1625:
  2724                           
  2725                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2726     0375  082B               	movf	printf@c,w
  2727     0376  118A  2057  118A   	fcall	_putch
  2728                           
  2729                           ;doprnt.c: 559: continue;
  2730     0379  2C44               	goto	l1683
  2731     037A                     l1627:
  2732                           
  2733                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2734     037A  01A3               	clrf	printf@flag
  2735                           
  2736                           ;doprnt.c: 661: switch(c = *f++) {
  2737     037B  2BB0               	goto	l1645
  2738     037C                     l1629:
  2739                           
  2740                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2741     037C  0825               	movf	printf@ap,w
  2742     037D  0084               	movwf	4
  2743     037E  0800               	movf	0,w
  2744     037F  00A6               	movwf	printf@cp
  2745     0380  3000               	movlw	0
  2746     0381  00A7               	movwf	printf@cp+1
  2747     0382                     l1631:
  2748     0382  3001               	movlw	1
  2749     0383  00FF               	movwf	btemp+1
  2750     0384  087F               	movf	btemp+1,w
  2751     0385  07A5               	addwf	printf@ap,f
  2752     0386                     l1633:
  2753                           
  2754                           ;doprnt.c: 766: if(!cp)
  2755     0386  0826               	movf	printf@cp,w
  2756     0387  0427               	iorwf	printf@cp+1,w
  2757     0388  1D03               	btfss	3,2
  2758     0389  2B8B               	goto	u1201
  2759     038A  2B8C               	goto	u1200
  2760     038B                     u1201:
  2761     038B  2BA3               	goto	l1641
  2762     038C                     u1200:
  2763     038C                     l1635:
  2764                           
  2765                           ;doprnt.c: 767: cp = "(null)";
  2766     038C  3016               	movlw	(low ((STR_24-__stringbase)| (0+32768)))& (0+255)
  2767     038D  00A6               	movwf	printf@cp
  2768     038E  3080               	movlw	128
  2769     038F  00A7               	movwf	printf@cp+1
  2770     0390  2BA3               	goto	l1641
  2771     0391                     l1637:
  2772                           
  2773                           ;doprnt.c: 804: (putch(*cp++) );
  2774     0391  0827               	movf	printf@cp+1,w
  2775     0392  00FF               	movwf	btemp+1
  2776     0393  0826               	movf	printf@cp,w
  2777     0394  0084               	movwf	4
  2778     0395  118A  2002  118A   	fcall	stringtab
  2779     0398  118A  2057  118A   	fcall	_putch
  2780     039B                     l1639:
  2781     039B  3001               	movlw	1
  2782     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2783     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2784     039E  07A6               	addwf	printf@cp,f
  2785     039F  1803               	skipnc
  2786     03A0  0AA7               	incf	printf@cp+1,f
  2787     03A1  3000               	movlw	0
  2788     03A2  07A7               	addwf	printf@cp+1,f
  2789     03A3                     l1641:
  2790     03A3  0827               	movf	printf@cp+1,w
  2791     03A4  00FF               	movwf	btemp+1
  2792     03A5  0826               	movf	printf@cp,w
  2793     03A6  0084               	movwf	4
  2794     03A7  118A  2002  118A   	fcall	stringtab
  2795     03AA  3A00               	xorlw	0
  2796     03AB  1D03               	skipz
  2797     03AC  2BAE               	goto	u1211
  2798     03AD  2BAF               	goto	u1210
  2799     03AE                     u1211:
  2800     03AE  2B91               	goto	l1637
  2801     03AF                     u1210:
  2802     03AF  2C44               	goto	l1683
  2803     03B0                     l1645:
  2804     03B0  3001               	movlw	1
  2805     03B1  07A8               	addwf	printf@f,f
  2806     03B2  30FF               	movlw	-1
  2807     03B3  0728               	addwf	printf@f,w
  2808     03B4  0084               	movwf	4
  2809     03B5  118A  200C  118A   	fcall	stringdir
  2810     03B8  00AB               	movwf	printf@c
  2811                           
  2812                           ; Switch size 1, requested type "simple"
  2813                           ; Number of cases is 4, Range of values is 0 to 115
  2814                           ; switch strategies available:
  2815                           ; Name         Instructions Cycles
  2816                           ; simple_byte           13     7 (average)
  2817                           ; direct_byte          239     7 (fixed)
  2818                           ; jumptable            260     6 (fixed)
  2819                           ;	Chosen strategy is simple_byte
  2820     03B9  3A00               	xorlw	0	; case 0
  2821     03BA  1903               	skipnz
  2822     03BB  2C54               	goto	l261
  2823     03BC  3A64               	xorlw	100	; case 100
  2824     03BD  1903               	skipnz
  2825     03BE  2BC6               	goto	l1647
  2826     03BF  3A0D               	xorlw	13	; case 105
  2827     03C0  1903               	skipnz
  2828     03C1  2BC6               	goto	l1647
  2829     03C2  3A1A               	xorlw	26	; case 115
  2830     03C3  1903               	skipnz
  2831     03C4  2B7C               	goto	l1629
  2832     03C5  2C44               	goto	l1683
  2833     03C6                     l1647:
  2834                           
  2835                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2836     03C6  0825               	movf	printf@ap,w
  2837     03C7  0084               	movwf	4
  2838     03C8  0800               	movf	0,w
  2839     03C9  00A9               	movwf	printf@val
  2840     03CA  0A84               	incf	4,f
  2841     03CB  0800               	movf	0,w
  2842     03CC  00AA               	movwf	printf@val+1
  2843     03CD                     l1649:
  2844     03CD  3002               	movlw	2
  2845     03CE  00FF               	movwf	btemp+1
  2846     03CF  087F               	movf	btemp+1,w
  2847     03D0  07A5               	addwf	printf@ap,f
  2848     03D1                     l1651:
  2849                           
  2850                           ;doprnt.c: 1287: if((int)val < 0) {
  2851     03D1  1FAA               	btfss	printf@val+1,7
  2852     03D2  2BD4               	goto	u1221
  2853     03D3  2BD5               	goto	u1220
  2854     03D4                     u1221:
  2855     03D4  2BDE               	goto	l1657
  2856     03D5                     u1220:
  2857     03D5                     l1653:
  2858                           
  2859                           ;doprnt.c: 1288: flag |= 0x03;
  2860     03D5  3003               	movlw	3
  2861     03D6  00FF               	movwf	btemp+1
  2862     03D7  087F               	movf	btemp+1,w
  2863     03D8  04A3               	iorwf	printf@flag,f
  2864     03D9                     l1655:
  2865                           
  2866                           ;doprnt.c: 1289: val = -val;
  2867     03D9  09A9               	comf	printf@val,f
  2868     03DA  09AA               	comf	printf@val+1,f
  2869     03DB  0AA9               	incf	printf@val,f
  2870     03DC  1903               	skipnz
  2871     03DD  0AAA               	incf	printf@val+1,f
  2872     03DE                     l1657:
  2873                           
  2874                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2875     03DE  01AB               	clrf	printf@c
  2876     03DF  0AAB               	incf	printf@c,f
  2877     03E0                     l1663:
  2878                           
  2879                           ;doprnt.c: 1332: if(val < dpowers[c])
  2880     03E0  082B               	movf	printf@c,w
  2881     03E1  00A0               	movwf	??_printf
  2882     03E2  0720               	addwf	??_printf,w
  2883     03E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2884     03E4  0084               	movwf	4
  2885     03E5  118A  200C  118A   	fcall	stringdir
  2886     03E8  00A1               	movwf	??_printf+1
  2887     03E9  118A  200C  118A   	fcall	stringdir
  2888     03EC  00A2               	movwf	??_printf+2
  2889     03ED  0822               	movf	??_printf+2,w
  2890     03EE  022A               	subwf	printf@val+1,w
  2891     03EF  1D03               	skipz
  2892     03F0  2BF3               	goto	u1235
  2893     03F1  0821               	movf	??_printf+1,w
  2894     03F2  0229               	subwf	printf@val,w
  2895     03F3                     u1235:
  2896     03F3  1803               	skipnc
  2897     03F4  2BF6               	goto	u1231
  2898     03F5  2BF7               	goto	u1230
  2899     03F6                     u1231:
  2900     03F6  2BF8               	goto	l1667
  2901     03F7                     u1230:
  2902     03F7  2C02               	goto	l1671
  2903     03F8                     l1667:
  2904     03F8  3001               	movlw	1
  2905     03F9  00FF               	movwf	btemp+1
  2906     03FA  087F               	movf	btemp+1,w
  2907     03FB  07AB               	addwf	printf@c,f
  2908     03FC                     l1669:
  2909     03FC  3005               	movlw	5
  2910     03FD  062B               	xorwf	printf@c,w
  2911     03FE  1D03               	btfss	3,2
  2912     03FF  2C01               	goto	u1241
  2913     0400  2C02               	goto	u1240
  2914     0401                     u1241:
  2915     0401  2BE0               	goto	l1663
  2916     0402                     u1240:
  2917     0402                     l1671:
  2918                           
  2919                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2920     0402  0823               	movf	printf@flag,w
  2921     0403  3903               	andlw	3
  2922     0404  1903               	btfsc	3,2
  2923     0405  2C07               	goto	u1251
  2924     0406  2C08               	goto	u1250
  2925     0407                     u1251:
  2926     0407  2C0C               	goto	l1675
  2927     0408                     u1250:
  2928     0408                     l1673:
  2929                           
  2930                           ;doprnt.c: 1465: (putch('-') );
  2931     0408  302D               	movlw	45
  2932     0409  118A  2057  118A   	fcall	_putch
  2933     040C                     l1675:
  2934                           
  2935                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2936     040C  1283               	bcf	3,5	;RP0=0, select bank0
  2937     040D  1303               	bcf	3,6	;RP1=0, select bank0
  2938     040E  082B               	movf	printf@c,w
  2939     040F  00A4               	movwf	printf@prec
  2940                           
  2941                           ;doprnt.c: 1500: while(prec--) {
  2942     0410  2C39               	goto	l1681
  2943     0411                     l1677:
  2944                           
  2945                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2946     0411  300A               	movlw	10
  2947     0412  00F7               	movwf	___lwmod@divisor
  2948     0413  3000               	movlw	0
  2949     0414  00F8               	movwf	___lwmod@divisor+1
  2950     0415  0824               	movf	printf@prec,w
  2951     0416  00A0               	movwf	??_printf
  2952     0417  0720               	addwf	??_printf,w
  2953     0418  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2954     0419  0084               	movwf	4
  2955     041A  118A  200C  118A   	fcall	stringdir
  2956     041D  00F0               	movwf	___lwdiv@divisor
  2957     041E  118A  200C  118A   	fcall	stringdir
  2958     0421  00F1               	movwf	___lwdiv@divisor+1
  2959     0422  082A               	movf	printf@val+1,w
  2960     0423  00F3               	movwf	___lwdiv@dividend+1
  2961     0424  0829               	movf	printf@val,w
  2962     0425  00F2               	movwf	___lwdiv@dividend
  2963     0426  118A  21AA  118A   	fcall	___lwdiv
  2964     0429  0871               	movf	?___lwdiv+1,w
  2965     042A  00FA               	movwf	___lwmod@dividend+1
  2966     042B  0870               	movf	?___lwdiv,w
  2967     042C  00F9               	movwf	___lwmod@dividend
  2968     042D  118A  2170  118A   	fcall	___lwmod
  2969     0430  0877               	movf	?___lwmod,w
  2970     0431  3E30               	addlw	48
  2971     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2972     0433  1303               	bcf	3,6	;RP1=0, select bank0
  2973     0434  00AB               	movwf	printf@c
  2974     0435                     l1679:
  2975                           
  2976                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2977     0435  082B               	movf	printf@c,w
  2978     0436  118A  2057  118A   	fcall	_putch
  2979     0439                     l1681:
  2980     0439  30FF               	movlw	255
  2981     043A  00FF               	movwf	btemp+1
  2982     043B  087F               	movf	btemp+1,w
  2983     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2984     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2985     043E  07A4               	addwf	printf@prec,f
  2986     043F  0A24               	incf	printf@prec,w
  2987     0440  1D03               	btfss	3,2
  2988     0441  2C43               	goto	u1261
  2989     0442  2C44               	goto	u1260
  2990     0443                     u1261:
  2991     0443  2C11               	goto	l1677
  2992     0444                     u1260:
  2993     0444                     l1683:
  2994     0444  3001               	movlw	1
  2995     0445  1283               	bcf	3,5	;RP0=0, select bank0
  2996     0446  1303               	bcf	3,6	;RP1=0, select bank0
  2997     0447  07A8               	addwf	printf@f,f
  2998     0448  30FF               	movlw	-1
  2999     0449  0728               	addwf	printf@f,w
  3000     044A  0084               	movwf	4
  3001     044B  118A  200C  118A   	fcall	stringdir
  3002     044E  00AB               	movwf	printf@c
  3003     044F  082B               	movf	printf@c,w
  3004     0450  1D03               	btfss	3,2
  3005     0451  2C53               	goto	u1271
  3006     0452  2C54               	goto	u1270
  3007     0453                     u1271:
  3008     0453  2B6F               	goto	l1623
  3009     0454                     u1270:
  3010     0454                     l261:
  3011     0454  0008               	return
  3012     0455                     __end_of_printf:
  3013                           
  3014                           	psect	text9
  3015     0170                     __ptext9:	
  3016 ;; *************** function ___lwmod *****************
  3017 ;; Defined at:
  3018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  divisor         2    7[COMMON] unsigned int 
  3021 ;;  dividend        2    9[COMMON] unsigned int 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  counter         1   11[COMMON] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2    7[COMMON] unsigned int 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0, btemp+1
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3033 ;;      Params:         4       0       0       0
  3034 ;;      Locals:         1       0       0       0
  3035 ;;      Temps:          0       0       0       0
  3036 ;;      Totals:         5       0       0       0
  3037 ;;Total ram usage:        5 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_printf
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046     0170                     ___lwmod:	
  3047                           ;psect for function ___lwmod
  3048                           
  3049     0170                     l1515:	
  3050                           ;incstack = 0
  3051                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3052                           
  3053     0170  0877               	movf	___lwmod@divisor,w
  3054     0171  0478               	iorwf	___lwmod@divisor+1,w
  3055     0172  1903               	btfsc	3,2
  3056     0173  2975               	goto	u1041
  3057     0174  2976               	goto	u1040
  3058     0175                     u1041:
  3059     0175  29A5               	goto	l1533
  3060     0176                     u1040:
  3061     0176                     l1517:
  3062     0176  01FB               	clrf	___lwmod@counter
  3063     0177  0AFB               	incf	___lwmod@counter,f
  3064     0178  2984               	goto	l1523
  3065     0179                     l1519:
  3066     0179  3001               	movlw	1
  3067     017A                     u1055:
  3068     017A  1003               	clrc
  3069     017B  0DF7               	rlf	___lwmod@divisor,f
  3070     017C  0DF8               	rlf	___lwmod@divisor+1,f
  3071     017D  3EFF               	addlw	-1
  3072     017E  1D03               	skipz
  3073     017F  297A               	goto	u1055
  3074     0180                     l1521:
  3075     0180  3001               	movlw	1
  3076     0181  00FF               	movwf	btemp+1
  3077     0182  087F               	movf	btemp+1,w
  3078     0183  07FB               	addwf	___lwmod@counter,f
  3079     0184                     l1523:
  3080     0184  1FF8               	btfss	___lwmod@divisor+1,7
  3081     0185  2987               	goto	u1061
  3082     0186  2988               	goto	u1060
  3083     0187                     u1061:
  3084     0187  2979               	goto	l1519
  3085     0188                     u1060:
  3086     0188                     l1525:
  3087     0188  0878               	movf	___lwmod@divisor+1,w
  3088     0189  027A               	subwf	___lwmod@dividend+1,w
  3089     018A  1D03               	skipz
  3090     018B  298E               	goto	u1075
  3091     018C  0877               	movf	___lwmod@divisor,w
  3092     018D  0279               	subwf	___lwmod@dividend,w
  3093     018E                     u1075:
  3094     018E  1C03               	skipc
  3095     018F  2991               	goto	u1071
  3096     0190  2992               	goto	u1070
  3097     0191                     u1071:
  3098     0191  2998               	goto	l1529
  3099     0192                     u1070:
  3100     0192                     l1527:
  3101     0192  0877               	movf	___lwmod@divisor,w
  3102     0193  02F9               	subwf	___lwmod@dividend,f
  3103     0194  0878               	movf	___lwmod@divisor+1,w
  3104     0195  1C03               	skipc
  3105     0196  03FA               	decf	___lwmod@dividend+1,f
  3106     0197  02FA               	subwf	___lwmod@dividend+1,f
  3107     0198                     l1529:
  3108     0198  3001               	movlw	1
  3109     0199                     u1085:
  3110     0199  1003               	clrc
  3111     019A  0CF8               	rrf	___lwmod@divisor+1,f
  3112     019B  0CF7               	rrf	___lwmod@divisor,f
  3113     019C  3EFF               	addlw	-1
  3114     019D  1D03               	skipz
  3115     019E  2999               	goto	u1085
  3116     019F                     l1531:
  3117     019F  3001               	movlw	1
  3118     01A0  02FB               	subwf	___lwmod@counter,f
  3119     01A1  1D03               	btfss	3,2
  3120     01A2  29A4               	goto	u1091
  3121     01A3  29A5               	goto	u1090
  3122     01A4                     u1091:
  3123     01A4  2988               	goto	l1525
  3124     01A5                     u1090:
  3125     01A5                     l1533:
  3126     01A5  087A               	movf	___lwmod@dividend+1,w
  3127     01A6  00F8               	movwf	?___lwmod+1
  3128     01A7  0879               	movf	___lwmod@dividend,w
  3129     01A8  00F7               	movwf	?___lwmod
  3130     01A9                     l547:
  3131     01A9  0008               	return
  3132     01AA                     __end_of___lwmod:
  3133                           
  3134                           	psect	text10
  3135     01AA                     __ptext10:	
  3136 ;; *************** function ___lwdiv *****************
  3137 ;; Defined at:
  3138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  divisor         2    0[COMMON] unsigned int 
  3141 ;;  dividend        2    2[COMMON] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  quotient        2    4[COMMON] unsigned int 
  3144 ;;  counter         1    6[COMMON] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2    0[COMMON] unsigned int 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, btemp+1
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3154 ;;      Params:         4       0       0       0
  3155 ;;      Locals:         3       0       0       0
  3156 ;;      Temps:          0       0       0       0
  3157 ;;      Totals:         7       0       0       0
  3158 ;;Total ram usage:        7 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_printf
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167     01AA                     ___lwdiv:	
  3168                           ;psect for function ___lwdiv
  3169                           
  3170     01AA                     l1489:	
  3171                           ;incstack = 0
  3172                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3173                           
  3174     01AA  01F4               	clrf	___lwdiv@quotient
  3175     01AB  01F5               	clrf	___lwdiv@quotient+1
  3176     01AC                     l1491:
  3177     01AC  0870               	movf	___lwdiv@divisor,w
  3178     01AD  0471               	iorwf	___lwdiv@divisor+1,w
  3179     01AE  1903               	btfsc	3,2
  3180     01AF  29B1               	goto	u971
  3181     01B0  29B2               	goto	u970
  3182     01B1                     u971:
  3183     01B1  29E9               	goto	l1511
  3184     01B2                     u970:
  3185     01B2                     l1493:
  3186     01B2  01F6               	clrf	___lwdiv@counter
  3187     01B3  0AF6               	incf	___lwdiv@counter,f
  3188     01B4  29C0               	goto	l1499
  3189     01B5                     l1495:
  3190     01B5  3001               	movlw	1
  3191     01B6                     u985:
  3192     01B6  1003               	clrc
  3193     01B7  0DF0               	rlf	___lwdiv@divisor,f
  3194     01B8  0DF1               	rlf	___lwdiv@divisor+1,f
  3195     01B9  3EFF               	addlw	-1
  3196     01BA  1D03               	skipz
  3197     01BB  29B6               	goto	u985
  3198     01BC                     l1497:
  3199     01BC  3001               	movlw	1
  3200     01BD  00FF               	movwf	btemp+1
  3201     01BE  087F               	movf	btemp+1,w
  3202     01BF  07F6               	addwf	___lwdiv@counter,f
  3203     01C0                     l1499:
  3204     01C0  1FF1               	btfss	___lwdiv@divisor+1,7
  3205     01C1  29C3               	goto	u991
  3206     01C2  29C4               	goto	u990
  3207     01C3                     u991:
  3208     01C3  29B5               	goto	l1495
  3209     01C4                     u990:
  3210     01C4                     l1501:
  3211     01C4  3001               	movlw	1
  3212     01C5                     u1005:
  3213     01C5  1003               	clrc
  3214     01C6  0DF4               	rlf	___lwdiv@quotient,f
  3215     01C7  0DF5               	rlf	___lwdiv@quotient+1,f
  3216     01C8  3EFF               	addlw	-1
  3217     01C9  1D03               	skipz
  3218     01CA  29C5               	goto	u1005
  3219     01CB  0871               	movf	___lwdiv@divisor+1,w
  3220     01CC  0273               	subwf	___lwdiv@dividend+1,w
  3221     01CD  1D03               	skipz
  3222     01CE  29D1               	goto	u1015
  3223     01CF  0870               	movf	___lwdiv@divisor,w
  3224     01D0  0272               	subwf	___lwdiv@dividend,w
  3225     01D1                     u1015:
  3226     01D1  1C03               	skipc
  3227     01D2  29D4               	goto	u1011
  3228     01D3  29D5               	goto	u1010
  3229     01D4                     u1011:
  3230     01D4  29DC               	goto	l1507
  3231     01D5                     u1010:
  3232     01D5                     l1503:
  3233     01D5  0870               	movf	___lwdiv@divisor,w
  3234     01D6  02F2               	subwf	___lwdiv@dividend,f
  3235     01D7  0871               	movf	___lwdiv@divisor+1,w
  3236     01D8  1C03               	skipc
  3237     01D9  03F3               	decf	___lwdiv@dividend+1,f
  3238     01DA  02F3               	subwf	___lwdiv@dividend+1,f
  3239     01DB                     l1505:
  3240     01DB  1474               	bsf	___lwdiv@quotient,0
  3241     01DC                     l1507:
  3242     01DC  3001               	movlw	1
  3243     01DD                     u1025:
  3244     01DD  1003               	clrc
  3245     01DE  0CF1               	rrf	___lwdiv@divisor+1,f
  3246     01DF  0CF0               	rrf	___lwdiv@divisor,f
  3247     01E0  3EFF               	addlw	-1
  3248     01E1  1D03               	skipz
  3249     01E2  29DD               	goto	u1025
  3250     01E3                     l1509:
  3251     01E3  3001               	movlw	1
  3252     01E4  02F6               	subwf	___lwdiv@counter,f
  3253     01E5  1D03               	btfss	3,2
  3254     01E6  29E8               	goto	u1031
  3255     01E7  29E9               	goto	u1030
  3256     01E8                     u1031:
  3257     01E8  29C4               	goto	l1501
  3258     01E9                     u1030:
  3259     01E9                     l1511:
  3260     01E9  0875               	movf	___lwdiv@quotient+1,w
  3261     01EA  00F1               	movwf	?___lwdiv+1
  3262     01EB  0874               	movf	___lwdiv@quotient,w
  3263     01EC  00F0               	movwf	?___lwdiv
  3264     01ED                     l537:
  3265     01ED  0008               	return
  3266     01EE                     __end_of___lwdiv:
  3267                           
  3268                           	psect	text11
  3269     0075                     __ptext11:	
  3270 ;; *************** function _initUART *****************
  3271 ;; Defined at:
  3272 ;;		line 6 in file "uart.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3286 ;;      Params:         0       0       0       0
  3287 ;;      Locals:         0       0       0       0
  3288 ;;      Temps:          0       0       0       0
  3289 ;;      Totals:         0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299     0075                     _initUART:	
  3300                           ;psect for function _initUART
  3301                           
  3302     0075                     l1615:	
  3303                           ;incstack = 0
  3304                           ; Regs used in _initUART: [wreg]
  3305                           
  3306                           
  3307                           ;uart.c: 8: SPBRG = ((unsigned char)(((4000000 / 16) / 9600) - 1));
  3308     0075  3019               	movlw	25
  3309     0076  1683               	bsf	3,5	;RP0=1, select bank1
  3310     0077  1303               	bcf	3,6	;RP1=0, select bank1
  3311     0078  0099               	movwf	25	;volatile
  3312                           
  3313                           ;uart.c: 9: TXSTA = (0x00 | 0x04 | 0x20);
  3314     0079  3024               	movlw	36
  3315     007A  0098               	movwf	24	;volatile
  3316                           
  3317                           ;uart.c: 10: RCSTA = (0x00 | 0x90);
  3318     007B  3090               	movlw	144
  3319     007C  1283               	bcf	3,5	;RP0=0, select bank0
  3320     007D  1303               	bcf	3,6	;RP1=0, select bank0
  3321     007E  0098               	movwf	24	;volatile
  3322     007F                     l129:
  3323     007F  0008               	return
  3324     0080                     __end_of_initUART:
  3325                           
  3326                           	psect	text12
  3327     0049                     __ptext12:	
  3328 ;; *************** function _gets *****************
  3329 ;; Defined at:
  3330 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\gets.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  s               1    wreg     PTR unsigned char 
  3333 ;;		 -> main@tmp(40), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  s               1    8[COMMON] PTR unsigned char 
  3336 ;;		 -> main@tmp(40), 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      PTR unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3346 ;;      Params:         0       0       0       0
  3347 ;;      Locals:         1       0       0       0
  3348 ;;      Temps:          0       0       0       0
  3349 ;;      Totals:         1       0       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 3
  3353 ;; This function calls:
  3354 ;;		_cgets
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360     0049                     _gets:	
  3361                           ;psect for function _gets
  3362                           
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _gets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3366                           ;gets@s stored from wreg
  3367     0049  00F8               	movwf	gets@s
  3368     004A                     l1617:
  3369                           
  3370                           ;	Return value of _gets is never used
  3371     004A  0878               	movf	gets@s,w
  3372     004B  118A  2234  118A   	fcall	_cgets
  3373     004E                     l733:
  3374     004E  0008               	return
  3375     004F                     __end_of_gets:
  3376                           
  3377                           	psect	text13
  3378     0234                     __ptext13:	
  3379 ;; *************** function _cgets *****************
  3380 ;; Defined at:
  3381 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\cgets.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  s               1    wreg     PTR unsigned char 
  3384 ;;		 -> main@tmp(40), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  s               1    6[COMMON] PTR unsigned char 
  3387 ;;		 -> main@tmp(40), 
  3388 ;;  c               2    4[COMMON] int 
  3389 ;;  s1              1    7[COMMON] PTR unsigned char 
  3390 ;;		 -> main@tmp(40), 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      PTR unsigned char 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3400 ;;      Params:         0       0       0       0
  3401 ;;      Locals:         4       0       0       0
  3402 ;;      Temps:          2       0       0       0
  3403 ;;      Totals:         6       0       0       0
  3404 ;;Total ram usage:        6 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 2
  3407 ;; This function calls:
  3408 ;;		_getche
  3409 ;;		_putch
  3410 ;; This function is called by:
  3411 ;;		_gets
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415     0234                     _cgets:	
  3416                           ;psect for function _cgets
  3417                           
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _cgets: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3421                           ;cgets@s stored from wreg
  3422     0234  00F6               	movwf	cgets@s
  3423     0235                     l1549:
  3424     0235  0876               	movf	cgets@s,w
  3425     0236  00F7               	movwf	cgets@s1
  3426     0237  2A6E               	goto	l1577
  3427     0238                     l1551:
  3428     0238  0876               	movf	cgets@s,w
  3429     0239  0677               	xorwf	cgets@s1,w
  3430     023A  1D03               	skipz
  3431     023B  2A3D               	goto	u1121
  3432     023C  2A3E               	goto	u1120
  3433     023D                     u1121:
  3434     023D  2A3F               	goto	l1555
  3435     023E                     u1120:
  3436     023E  2A6E               	goto	l1577
  3437     023F                     l1555:
  3438     023F  3020               	movlw	32
  3439     0240  118A  2057  118A   	fcall	_putch
  3440     0243  3008               	movlw	8
  3441     0244  118A  2057  118A   	fcall	_putch
  3442     0247                     l1557:
  3443     0247  3001               	movlw	1
  3444     0248  02F7               	subwf	cgets@s1,f
  3445     0249  2A6E               	goto	l1577
  3446     024A                     l1559:
  3447     024A  3008               	movlw	8
  3448     024B  118A  2057  118A   	fcall	_putch
  3449     024E  3020               	movlw	32
  3450     024F  118A  2057  118A   	fcall	_putch
  3451     0252  3008               	movlw	8
  3452     0253  118A  2057  118A   	fcall	_putch
  3453     0256                     l1561:
  3454     0256  3001               	movlw	1
  3455     0257  02F7               	subwf	cgets@s1,f
  3456     0258                     l1563:
  3457     0258  0877               	movf	cgets@s1,w
  3458     0259  0276               	subwf	cgets@s,w
  3459     025A  1C03               	skipc
  3460     025B  2A5D               	goto	u1131
  3461     025C  2A5E               	goto	u1130
  3462     025D                     u1131:
  3463     025D  2A4A               	goto	l1559
  3464     025E                     u1130:
  3465     025E  2A6E               	goto	l1577
  3466     025F                     l1565:
  3467     025F  0877               	movf	cgets@s1,w
  3468     0260  0084               	movwf	4
  3469     0261  1383               	bcf	3,7	;select IRP bank0
  3470     0262  0180               	clrf	0
  3471     0263                     l1567:
  3472     0263  0876               	movf	cgets@s,w
  3473     0264  2A8A               	goto	l751
  3474     0265                     l1571:
  3475     0265  0877               	movf	cgets@s1,w
  3476     0266  0084               	movwf	4
  3477     0267  0874               	movf	cgets@c,w
  3478     0268  1383               	bcf	3,7	;select IRP bank0
  3479     0269  0080               	movwf	0
  3480     026A                     l1573:
  3481     026A  3001               	movlw	1
  3482     026B  00FF               	movwf	btemp+1
  3483     026C  087F               	movf	btemp+1,w
  3484     026D  07F7               	addwf	cgets@s1,f
  3485     026E                     l1577:
  3486     026E  118A  2061  118A   	fcall	_getche
  3487     0271  00F2               	movwf	??_cgets
  3488     0272  01F3               	clrf	??_cgets+1
  3489     0273  0872               	movf	??_cgets,w
  3490     0274  00F4               	movwf	cgets@c
  3491     0275  0873               	movf	??_cgets+1,w
  3492     0276  00F5               	movwf	cgets@c+1
  3493                           
  3494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 1, Range of values is 0 to 0
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte            4     3 (average)
  3500                           ; direct_byte            9     7 (fixed)
  3501                           ; jumptable            260     6 (fixed)
  3502                           ;	Chosen strategy is simple_byte
  3503     0277  0875               	movf	cgets@c+1,w
  3504     0278  3A00               	xorlw	0	; case 0
  3505     0279  1903               	skipnz
  3506     027A  2A7C               	goto	l2011
  3507     027B  2A65               	goto	l1571
  3508     027C                     l2011:
  3509                           
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 4, Range of values is 8 to 21
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte           13     7 (average)
  3515                           ; direct_byte           38    10 (fixed)
  3516                           ; jumptable            263     9 (fixed)
  3517                           ;	Chosen strategy is simple_byte
  3518     027C  0874               	movf	cgets@c,w
  3519     027D  3A08               	xorlw	8	; case 8
  3520     027E  1903               	skipnz
  3521     027F  2A38               	goto	l1551
  3522     0280  3A02               	xorlw	2	; case 10
  3523     0281  1903               	skipnz
  3524     0282  2A5F               	goto	l1565
  3525     0283  3A07               	xorlw	7	; case 13
  3526     0284  1903               	skipnz
  3527     0285  2A5F               	goto	l1565
  3528     0286  3A18               	xorlw	24	; case 21
  3529     0287  1903               	skipnz
  3530     0288  2A58               	goto	l1563
  3531     0289  2A65               	goto	l1571
  3532     028A                     l751:
  3533     028A  0008               	return
  3534     028B                     __end_of_cgets:
  3535                           
  3536                           	psect	text14
  3537     0061                     __ptext14:	
  3538 ;; *************** function _getche *****************
  3539 ;; Defined at:
  3540 ;;		line 28 in file "uart.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  c               1    1[COMMON] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      unsigned char 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3554 ;;      Params:         0       0       0       0
  3555 ;;      Locals:         1       0       0       0
  3556 ;;      Temps:          0       0       0       0
  3557 ;;      Totals:         1       0       0       0
  3558 ;;Total ram usage:        1 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 1
  3561 ;; This function calls:
  3562 ;;		_getch
  3563 ;;		_putch
  3564 ;; This function is called by:
  3565 ;;		_cgets
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569     0061                     _getche:	
  3570                           ;psect for function _getche
  3571                           
  3572     0061                     l1455:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  3575                           
  3576                           
  3577                           ;uart.c: 30: unsigned char c;;uart.c: 32: c = getch();
  3578     0061  118A  204F  118A   	fcall	_getch
  3579     0064  00F1               	movwf	getche@c
  3580     0065                     l1457:
  3581                           
  3582                           ;uart.c: 33: putch(c);
  3583     0065  0871               	movf	getche@c,w
  3584     0066  118A  2057  118A   	fcall	_putch
  3585     0069                     l1459:
  3586                           
  3587                           ;uart.c: 35: return c;
  3588     0069  0871               	movf	getche@c,w
  3589     006A                     l144:
  3590     006A  0008               	return
  3591     006B                     __end_of_getche:
  3592                           
  3593                           	psect	text15
  3594     0057                     __ptext15:	
  3595 ;; *************** function _putch *****************
  3596 ;; Defined at:
  3597 ;;		line 13 in file "uart.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  byte            1    wreg     unsigned char 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  byte            1    0[COMMON] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3611 ;;      Params:         0       0       0       0
  3612 ;;      Locals:         1       0       0       0
  3613 ;;      Temps:          0       0       0       0
  3614 ;;      Totals:         1       0       0       0
  3615 ;;Total ram usage:        1 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_getche
  3621 ;;		_printf
  3622 ;;		_cgets
  3623 ;;		_puts
  3624 ;;		_cputs
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628     0057                     _putch:	
  3629                           ;psect for function _putch
  3630                           
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _putch: [wreg]
  3634                           ;putch@byte stored from wreg
  3635     0057  00F0               	movwf	putch@byte
  3636     0058                     l1445:
  3637     0058                     l132:	
  3638                           ;uart.c: 15: while(!TXIF){
  3639                           
  3640     0058  1283               	bcf	3,5	;RP0=0, select bank0
  3641     0059  1303               	bcf	3,6	;RP1=0, select bank0
  3642     005A  1E0C               	btfss	12,4	;volatile
  3643     005B  285D               	goto	u891
  3644     005C  285E               	goto	u890
  3645     005D                     u891:
  3646     005D  2858               	goto	l132
  3647     005E                     u890:
  3648     005E                     l1447:
  3649                           
  3650                           ;uart.c: 16: };uart.c: 17: TXREG = byte;
  3651     005E  0870               	movf	putch@byte,w
  3652     005F  0099               	movwf	25	;volatile
  3653     0060                     l135:
  3654     0060  0008               	return
  3655     0061                     __end_of_putch:
  3656                           
  3657                           	psect	text16
  3658     004F                     __ptext16:	
  3659 ;; *************** function _getch *****************
  3660 ;; Defined at:
  3661 ;;		line 20 in file "uart.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      unsigned char 
  3668 ;; Registers used:
  3669 ;;		wreg
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3675 ;;      Params:         0       0       0       0
  3676 ;;      Locals:         0       0       0       0
  3677 ;;      Temps:          0       0       0       0
  3678 ;;      Totals:         0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_getche
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688     004F                     _getch:	
  3689                           ;psect for function _getch
  3690                           
  3691     004F                     l1449:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _getch: [wreg]
  3694                           
  3695     004F                     l138:	
  3696                           ;uart.c: 22: while(!RCIF){
  3697                           
  3698     004F  1283               	bcf	3,5	;RP0=0, select bank0
  3699     0050  1303               	bcf	3,6	;RP1=0, select bank0
  3700     0051  1E8C               	btfss	12,5	;volatile
  3701     0052  2854               	goto	u901
  3702     0053  2855               	goto	u900
  3703     0054                     u901:
  3704     0054  284F               	goto	l138
  3705     0055                     u900:
  3706     0055                     l1451:
  3707                           
  3708                           ;uart.c: 23: };uart.c: 25: return RCREG;
  3709     0055  081A               	movf	26,w	;volatile
  3710     0056                     l141:
  3711     0056  0008               	return
  3712     0057                     __end_of_getch:
  3713                           
  3714                           	psect	text17
  3715     02F2                     __ptext17:	
  3716 ;; *************** function _atoi *****************
  3717 ;; Defined at:
  3718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\atoi.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  s               1    wreg     PTR const unsigned char 
  3721 ;;		 -> NULL(0), main@tmp(40), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  s               1   13[COMMON] PTR const unsigned char 
  3724 ;;		 -> NULL(0), main@tmp(40), 
  3725 ;;  a               2   11[COMMON] int 
  3726 ;;  sign            1   10[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2    6[COMMON] int 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3736 ;;      Params:         2       0       0       0
  3737 ;;      Locals:         4       0       0       0
  3738 ;;      Temps:          2       0       0       0
  3739 ;;      Totals:         8       0       0       0
  3740 ;;Total ram usage:        8 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 1
  3743 ;; This function calls:
  3744 ;;		___wmul
  3745 ;;		_isdigit
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751     02F2                     _atoi:	
  3752                           ;psect for function _atoi
  3753                           
  3754                           
  3755                           ;incstack = 0
  3756                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3757                           ;atoi@s stored from wreg
  3758     02F2  00FD               	movwf	atoi@s
  3759     02F3                     l1731:
  3760     02F3  2AF8               	goto	l1735
  3761     02F4                     l1733:
  3762     02F4  3001               	movlw	1
  3763     02F5  00FF               	movwf	btemp+1
  3764     02F6  087F               	movf	btemp+1,w
  3765     02F7  07FD               	addwf	atoi@s,f
  3766     02F8                     l1735:
  3767     02F8  087D               	movf	atoi@s,w
  3768     02F9  0084               	movwf	4
  3769     02FA  3020               	movlw	32
  3770     02FB  1383               	bcf	3,7	;select IRP bank0
  3771     02FC  0600               	xorwf	0,w
  3772     02FD  1903               	btfsc	3,2
  3773     02FE  2B00               	goto	u1341
  3774     02FF  2B01               	goto	u1340
  3775     0300                     u1341:
  3776     0300  2AF4               	goto	l1733
  3777     0301                     u1340:
  3778     0301                     l1737:
  3779     0301  087D               	movf	atoi@s,w
  3780     0302  0084               	movwf	4
  3781     0303  3009               	movlw	9
  3782     0304  0600               	xorwf	0,w
  3783     0305  1903               	btfsc	3,2
  3784     0306  2B08               	goto	u1351
  3785     0307  2B09               	goto	u1350
  3786     0308                     u1351:
  3787     0308  2AF4               	goto	l1733
  3788     0309                     u1350:
  3789     0309                     l1739:
  3790     0309  01FB               	clrf	atoi@a
  3791     030A  01FC               	clrf	atoi@a+1
  3792     030B  01FA               	clrf	atoi@sign
  3793     030C                     l1741:
  3794     030C  087D               	movf	atoi@s,w
  3795     030D  0084               	movwf	4
  3796     030E  302D               	movlw	45
  3797     030F  0600               	xorwf	0,w
  3798     0310  1D03               	btfss	3,2
  3799     0311  2B13               	goto	u1361
  3800     0312  2B14               	goto	u1360
  3801     0313                     u1361:
  3802     0313  2B1D               	goto	l1745
  3803     0314                     u1360:
  3804     0314                     l1743:
  3805     0314  3001               	movlw	1
  3806     0315  00FF               	movwf	btemp+1
  3807     0316  087F               	movf	btemp+1,w
  3808     0317  07FA               	addwf	atoi@sign,f
  3809     0318  3001               	movlw	1
  3810     0319  00FF               	movwf	btemp+1
  3811     031A  087F               	movf	btemp+1,w
  3812     031B  07FD               	addwf	atoi@s,f
  3813     031C  2B49               	goto	l1753
  3814     031D                     l1745:
  3815     031D  087D               	movf	atoi@s,w
  3816     031E  0084               	movwf	4
  3817     031F  302B               	movlw	43
  3818     0320  0600               	xorwf	0,w
  3819     0321  1D03               	btfss	3,2
  3820     0322  2B24               	goto	u1371
  3821     0323  2B25               	goto	u1370
  3822     0324                     u1371:
  3823     0324  2B49               	goto	l1753
  3824     0325                     u1370:
  3825     0325                     l1747:
  3826     0325  3001               	movlw	1
  3827     0326  00FF               	movwf	btemp+1
  3828     0327  087F               	movf	btemp+1,w
  3829     0328  07FD               	addwf	atoi@s,f
  3830     0329  2B49               	goto	l1753
  3831     032A                     l1749:
  3832     032A  087D               	movf	atoi@s,w
  3833     032B  0084               	movwf	4
  3834     032C  087C               	movf	atoi@a+1,w
  3835     032D  00F1               	movwf	___wmul@multiplier+1
  3836     032E  087B               	movf	atoi@a,w
  3837     032F  00F0               	movwf	___wmul@multiplier
  3838     0330  300A               	movlw	10
  3839     0331  00F2               	movwf	___wmul@multiplicand
  3840     0332  3000               	movlw	0
  3841     0333  00F3               	movwf	___wmul@multiplicand+1
  3842     0334  118A  20C7  118A   	fcall	___wmul
  3843     0337  1383               	bcf	3,7	;select IRP bank0
  3844     0338  0800               	movf	0,w
  3845     0339  0770               	addwf	?___wmul,w
  3846     033A  00F8               	movwf	??_atoi
  3847     033B  3000               	movlw	0
  3848     033C  1803               	skipnc
  3849     033D  3001               	movlw	1
  3850     033E  0771               	addwf	?___wmul+1,w
  3851     033F  00F9               	movwf	??_atoi+1
  3852     0340  0878               	movf	??_atoi,w
  3853     0341  3ED0               	addlw	208
  3854     0342  00FB               	movwf	atoi@a
  3855     0343  0879               	movf	??_atoi+1,w
  3856     0344  1803               	skipnc
  3857     0345  3E01               	addlw	1
  3858     0346  3EFF               	addlw	255
  3859     0347  00FC               	movwf	atoi@a+1
  3860     0348  2B25               	goto	l1747
  3861     0349                     l1753:
  3862     0349  087D               	movf	atoi@s,w
  3863     034A  0084               	movwf	4
  3864     034B  0800               	movf	0,w
  3865     034C  118A  2080  118A   	fcall	_isdigit
  3866     034F  1803               	btfsc	3,0
  3867     0350  2B52               	goto	u1381
  3868     0351  2B53               	goto	u1380
  3869     0352                     u1381:
  3870     0352  2B2A               	goto	l1749
  3871     0353                     u1380:
  3872     0353                     l1755:
  3873     0353  087A               	movf	atoi@sign,w
  3874     0354  1903               	btfsc	3,2
  3875     0355  2B57               	goto	u1391
  3876     0356  2B58               	goto	u1390
  3877     0357                     u1391:
  3878     0357  2B64               	goto	l1761
  3879     0358                     u1390:
  3880     0358                     l1757:
  3881     0358  097B               	comf	atoi@a,w
  3882     0359  00F8               	movwf	??_atoi
  3883     035A  097C               	comf	atoi@a+1,w
  3884     035B  00F9               	movwf	??_atoi+1
  3885     035C  0AF8               	incf	??_atoi,f
  3886     035D  1903               	skipnz
  3887     035E  0AF9               	incf	??_atoi+1,f
  3888     035F  0878               	movf	??_atoi,w
  3889     0360  00F6               	movwf	?_atoi
  3890     0361  0879               	movf	??_atoi+1,w
  3891     0362  00F7               	movwf	?_atoi+1
  3892     0363  2B68               	goto	l728
  3893     0364                     l1761:
  3894     0364  087C               	movf	atoi@a+1,w
  3895     0365  00F7               	movwf	?_atoi+1
  3896     0366  087B               	movf	atoi@a,w
  3897     0367  00F6               	movwf	?_atoi
  3898     0368                     l728:
  3899     0368  0008               	return
  3900     0369                     __end_of_atoi:
  3901                           
  3902                           	psect	text18
  3903     0080                     __ptext18:	
  3904 ;; *************** function _isdigit *****************
  3905 ;; Defined at:
  3906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  c               1    wreg     unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  c               1    1[COMMON] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3920 ;;      Params:         0       0       0       0
  3921 ;;      Locals:         2       0       0       0
  3922 ;;      Temps:          0       0       0       0
  3923 ;;      Totals:         2       0       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_atoi
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933     0080                     _isdigit:	
  3934                           ;psect for function _isdigit
  3935                           
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3939                           ;isdigit@c stored from wreg
  3940     0080  00F1               	movwf	isdigit@c
  3941     0081                     l1537:
  3942     0081  01F0               	clrf	_isdigit$619
  3943     0082                     l1539:
  3944     0082  303A               	movlw	58
  3945     0083  0271               	subwf	isdigit@c,w
  3946     0084  1803               	skipnc
  3947     0085  2887               	goto	u1101
  3948     0086  2888               	goto	u1100
  3949     0087                     u1101:
  3950     0087  2890               	goto	l1545
  3951     0088                     u1100:
  3952     0088                     l1541:
  3953     0088  3030               	movlw	48
  3954     0089  0271               	subwf	isdigit@c,w
  3955     008A  1C03               	skipc
  3956     008B  288D               	goto	u1111
  3957     008C  288E               	goto	u1110
  3958     008D                     u1111:
  3959     008D  2890               	goto	l1545
  3960     008E                     u1110:
  3961     008E                     l1543:
  3962     008E  01F0               	clrf	_isdigit$619
  3963     008F  0AF0               	incf	_isdigit$619,f
  3964     0090                     l1545:
  3965     0090  0C70               	rrf	_isdigit$619,w
  3966     0091                     l758:
  3967     0091  0008               	return
  3968     0092                     __end_of_isdigit:
  3969                           
  3970                           	psect	text19
  3971     00C7                     __ptext19:	
  3972 ;; *************** function ___wmul *****************
  3973 ;; Defined at:
  3974 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  multiplier      2    0[COMMON] unsigned int 
  3977 ;;  multiplicand    2    2[COMMON] unsigned int 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  product         2    4[COMMON] unsigned int 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2    0[COMMON] unsigned int 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3989 ;;      Params:         4       0       0       0
  3990 ;;      Locals:         2       0       0       0
  3991 ;;      Temps:          0       0       0       0
  3992 ;;      Totals:         6       0       0       0
  3993 ;;Total ram usage:        6 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;;		_atoi
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     00C7                     ___wmul:	
  4004                           ;psect for function ___wmul
  4005                           
  4006     00C7                     l1475:	
  4007                           ;incstack = 0
  4008                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4009                           
  4010     00C7  01F4               	clrf	___wmul@product
  4011     00C8  01F5               	clrf	___wmul@product+1
  4012     00C9                     l1477:
  4013     00C9  1C70               	btfss	___wmul@multiplier,0
  4014     00CA  28CC               	goto	u931
  4015     00CB  28CD               	goto	u930
  4016     00CC                     u931:
  4017     00CC  28D3               	goto	l265
  4018     00CD                     u930:
  4019     00CD                     l1479:
  4020     00CD  0872               	movf	___wmul@multiplicand,w
  4021     00CE  07F4               	addwf	___wmul@product,f
  4022     00CF  1803               	skipnc
  4023     00D0  0AF5               	incf	___wmul@product+1,f
  4024     00D1  0873               	movf	___wmul@multiplicand+1,w
  4025     00D2  07F5               	addwf	___wmul@product+1,f
  4026     00D3                     l265:
  4027     00D3  3001               	movlw	1
  4028     00D4                     u945:
  4029     00D4  1003               	clrc
  4030     00D5  0DF2               	rlf	___wmul@multiplicand,f
  4031     00D6  0DF3               	rlf	___wmul@multiplicand+1,f
  4032     00D7  3EFF               	addlw	-1
  4033     00D8  1D03               	skipz
  4034     00D9  28D4               	goto	u945
  4035     00DA                     l1481:
  4036     00DA  3001               	movlw	1
  4037     00DB                     u955:
  4038     00DB  1003               	clrc
  4039     00DC  0CF1               	rrf	___wmul@multiplier+1,f
  4040     00DD  0CF0               	rrf	___wmul@multiplier,f
  4041     00DE  3EFF               	addlw	-1
  4042     00DF  1D03               	skipz
  4043     00E0  28DB               	goto	u955
  4044     00E1                     l1483:
  4045     00E1  0870               	movf	___wmul@multiplier,w
  4046     00E2  0471               	iorwf	___wmul@multiplier+1,w
  4047     00E3  1D03               	btfss	3,2
  4048     00E4  28E6               	goto	u961
  4049     00E5  28E7               	goto	u960
  4050     00E6                     u961:
  4051     00E6  28C9               	goto	l1477
  4052     00E7                     u960:
  4053     00E7                     l1485:
  4054     00E7  0875               	movf	___wmul@product+1,w
  4055     00E8  00F1               	movwf	?___wmul+1
  4056     00E9  0874               	movf	___wmul@product,w
  4057     00EA  00F0               	movwf	?___wmul
  4058     00EB                     l267:
  4059     00EB  0008               	return
  4060     00EC                     __end_of___wmul:
  4061                           
  4062                           	psect	text20
  4063     028B                     __ptext20:	
  4064 ;; *************** function ___awdiv *****************
  4065 ;; Defined at:
  4066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  divisor         2    0[COMMON] int 
  4069 ;;  dividend        2    2[COMMON] int 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  quotient        2    6[COMMON] int 
  4072 ;;  sign            1    5[COMMON] unsigned char 
  4073 ;;  counter         1    4[COMMON] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2    0[COMMON] int 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0, btemp+1
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4083 ;;      Params:         4       0       0       0
  4084 ;;      Locals:         4       0       0       0
  4085 ;;      Temps:          0       0       0       0
  4086 ;;      Totals:         8       0       0       0
  4087 ;;Total ram usage:        8 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096     028B                     ___awdiv:	
  4097                           ;psect for function ___awdiv
  4098                           
  4099     028B                     l1769:	
  4100                           ;incstack = 0
  4101                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4102                           
  4103     028B  01F5               	clrf	___awdiv@sign
  4104     028C                     l1771:
  4105     028C  1FF1               	btfss	___awdiv@divisor+1,7
  4106     028D  2A8F               	goto	u1401
  4107     028E  2A90               	goto	u1400
  4108     028F                     u1401:
  4109     028F  2A97               	goto	l1777
  4110     0290                     u1400:
  4111     0290                     l1773:
  4112     0290  09F0               	comf	___awdiv@divisor,f
  4113     0291  09F1               	comf	___awdiv@divisor+1,f
  4114     0292  0AF0               	incf	___awdiv@divisor,f
  4115     0293  1903               	skipnz
  4116     0294  0AF1               	incf	___awdiv@divisor+1,f
  4117     0295                     l1775:
  4118     0295  01F5               	clrf	___awdiv@sign
  4119     0296  0AF5               	incf	___awdiv@sign,f
  4120     0297                     l1777:
  4121     0297  1FF3               	btfss	___awdiv@dividend+1,7
  4122     0298  2A9A               	goto	u1411
  4123     0299  2A9B               	goto	u1410
  4124     029A                     u1411:
  4125     029A  2AA4               	goto	l1783
  4126     029B                     u1410:
  4127     029B                     l1779:
  4128     029B  09F2               	comf	___awdiv@dividend,f
  4129     029C  09F3               	comf	___awdiv@dividend+1,f
  4130     029D  0AF2               	incf	___awdiv@dividend,f
  4131     029E  1903               	skipnz
  4132     029F  0AF3               	incf	___awdiv@dividend+1,f
  4133     02A0                     l1781:
  4134     02A0  3001               	movlw	1
  4135     02A1  00FF               	movwf	btemp+1
  4136     02A2  087F               	movf	btemp+1,w
  4137     02A3  06F5               	xorwf	___awdiv@sign,f
  4138     02A4                     l1783:
  4139     02A4  01F6               	clrf	___awdiv@quotient
  4140     02A5  01F7               	clrf	___awdiv@quotient+1
  4141     02A6                     l1785:
  4142     02A6  0870               	movf	___awdiv@divisor,w
  4143     02A7  0471               	iorwf	___awdiv@divisor+1,w
  4144     02A8  1903               	btfsc	3,2
  4145     02A9  2AAB               	goto	u1421
  4146     02AA  2AAC               	goto	u1420
  4147     02AB                     u1421:
  4148     02AB  2AE3               	goto	l1805
  4149     02AC                     u1420:
  4150     02AC                     l1787:
  4151     02AC  01F4               	clrf	___awdiv@counter
  4152     02AD  0AF4               	incf	___awdiv@counter,f
  4153     02AE  2ABA               	goto	l1793
  4154     02AF                     l1789:
  4155     02AF  3001               	movlw	1
  4156     02B0                     u1435:
  4157     02B0  1003               	clrc
  4158     02B1  0DF0               	rlf	___awdiv@divisor,f
  4159     02B2  0DF1               	rlf	___awdiv@divisor+1,f
  4160     02B3  3EFF               	addlw	-1
  4161     02B4  1D03               	skipz
  4162     02B5  2AB0               	goto	u1435
  4163     02B6                     l1791:
  4164     02B6  3001               	movlw	1
  4165     02B7  00FF               	movwf	btemp+1
  4166     02B8  087F               	movf	btemp+1,w
  4167     02B9  07F4               	addwf	___awdiv@counter,f
  4168     02BA                     l1793:
  4169     02BA  1FF1               	btfss	___awdiv@divisor+1,7
  4170     02BB  2ABD               	goto	u1441
  4171     02BC  2ABE               	goto	u1440
  4172     02BD                     u1441:
  4173     02BD  2AAF               	goto	l1789
  4174     02BE                     u1440:
  4175     02BE                     l1795:
  4176     02BE  3001               	movlw	1
  4177     02BF                     u1455:
  4178     02BF  1003               	clrc
  4179     02C0  0DF6               	rlf	___awdiv@quotient,f
  4180     02C1  0DF7               	rlf	___awdiv@quotient+1,f
  4181     02C2  3EFF               	addlw	-1
  4182     02C3  1D03               	skipz
  4183     02C4  2ABF               	goto	u1455
  4184     02C5  0871               	movf	___awdiv@divisor+1,w
  4185     02C6  0273               	subwf	___awdiv@dividend+1,w
  4186     02C7  1D03               	skipz
  4187     02C8  2ACB               	goto	u1465
  4188     02C9  0870               	movf	___awdiv@divisor,w
  4189     02CA  0272               	subwf	___awdiv@dividend,w
  4190     02CB                     u1465:
  4191     02CB  1C03               	skipc
  4192     02CC  2ACE               	goto	u1461
  4193     02CD  2ACF               	goto	u1460
  4194     02CE                     u1461:
  4195     02CE  2AD6               	goto	l1801
  4196     02CF                     u1460:
  4197     02CF                     l1797:
  4198     02CF  0870               	movf	___awdiv@divisor,w
  4199     02D0  02F2               	subwf	___awdiv@dividend,f
  4200     02D1  0871               	movf	___awdiv@divisor+1,w
  4201     02D2  1C03               	skipc
  4202     02D3  03F3               	decf	___awdiv@dividend+1,f
  4203     02D4  02F3               	subwf	___awdiv@dividend+1,f
  4204     02D5                     l1799:
  4205     02D5  1476               	bsf	___awdiv@quotient,0
  4206     02D6                     l1801:
  4207     02D6  3001               	movlw	1
  4208     02D7                     u1475:
  4209     02D7  1003               	clrc
  4210     02D8  0CF1               	rrf	___awdiv@divisor+1,f
  4211     02D9  0CF0               	rrf	___awdiv@divisor,f
  4212     02DA  3EFF               	addlw	-1
  4213     02DB  1D03               	skipz
  4214     02DC  2AD7               	goto	u1475
  4215     02DD                     l1803:
  4216     02DD  3001               	movlw	1
  4217     02DE  02F4               	subwf	___awdiv@counter,f
  4218     02DF  1D03               	btfss	3,2
  4219     02E0  2AE2               	goto	u1481
  4220     02E1  2AE3               	goto	u1480
  4221     02E2                     u1481:
  4222     02E2  2ABE               	goto	l1795
  4223     02E3                     u1480:
  4224     02E3                     l1805:
  4225     02E3  0875               	movf	___awdiv@sign,w
  4226     02E4  1903               	btfsc	3,2
  4227     02E5  2AE7               	goto	u1491
  4228     02E6  2AE8               	goto	u1490
  4229     02E7                     u1491:
  4230     02E7  2AED               	goto	l1809
  4231     02E8                     u1490:
  4232     02E8                     l1807:
  4233     02E8  09F6               	comf	___awdiv@quotient,f
  4234     02E9  09F7               	comf	___awdiv@quotient+1,f
  4235     02EA  0AF6               	incf	___awdiv@quotient,f
  4236     02EB  1903               	skipnz
  4237     02EC  0AF7               	incf	___awdiv@quotient+1,f
  4238     02ED                     l1809:
  4239     02ED  0877               	movf	___awdiv@quotient+1,w
  4240     02EE  00F1               	movwf	?___awdiv+1
  4241     02EF  0876               	movf	___awdiv@quotient,w
  4242     02F0  00F0               	movwf	?___awdiv
  4243     02F1                     l418:
  4244     02F1  0008               	return
  4245     02F2                     __end_of___awdiv:
  4246     007E                     btemp	set	126	;btemp
  4247     007E                     wtemp0	set	126
  4248                           
  4249                           	psect	idloc
  4250                           
  4251                           ;Config register IDLOC0 @ 0x2000
  4252                           ;	unspecified, using default values
  4253     2000                     	org	8192
  4254     2000  3FFF               	dw	16383
  4255                           
  4256                           ;Config register IDLOC1 @ 0x2001
  4257                           ;	unspecified, using default values
  4258     2001                     	org	8193
  4259     2001  3FFF               	dw	16383
  4260                           
  4261                           ;Config register IDLOC2 @ 0x2002
  4262                           ;	unspecified, using default values
  4263     2002                     	org	8194
  4264     2002  3FFF               	dw	16383
  4265                           
  4266                           ;Config register IDLOC3 @ 0x2003
  4267                           ;	unspecified, using default values
  4268     2003                     	org	8195
  4269     2003  3FFF               	dw	16383
  4270                           
  4271                           	psect	config
  4272                           
  4273                           ;Config register CONFIG @ 0x2007
  4274                           ;	Oscillator Selection bits
  4275                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  4276                           ;	Watchdog Timer Enable bit
  4277                           ;	WDTE = OFF, WDT disabled
  4278                           ;	Power-up Timer Enable bit
  4279                           ;	PWRTE = OFF, PWRT disabled
  4280                           ;	RA5/MCLR/VPP Pin Function Select bit
  4281                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  4282                           ;	Brown-out Detect Enable bit
  4283                           ;	BOREN = ON, BOD enabled
  4284                           ;	Low-Voltage Programming Enable bit
  4285                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  4286                           ;	Data EE Memory Code Protection bit
  4287                           ;	CPD = OFF, Data memory code protection off
  4288                           ;	Flash Program Memory Code Protection bit
  4289                           ;	CP = OFF, Code protection off
  4290     2007                     	org	8199
  4291     2007  3F78               	dw	16248

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      72
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> NULL(NULL[0]), STR_5(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strtok@s2	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 4
		 -> main@rcmd(BANK0[4]), 

    cputs@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_22(CODE[2]), STR_11(CODE[2]), 

    puts@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_22(CODE[2]), STR_11(CODE[2]), 

    cgets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    cgets@s1	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    sp__cgets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    gets@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_23(CODE[4]), STR_21(CODE[11]), STR_12(CODE[4]), STR_10(CODE[11]), 
		 -> STR_1(CODE[4]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_24(CODE[7]), ?_printf(COMMON[2]), main@tmp(BANK0[40]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    main@ptr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), main@tmp(BANK0[40]), 

    sp__gets	PTR unsigned char  size(1) Largest target is 40
		 -> main@tmp(BANK0[40]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _main->_printf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _puts->_cputs
    _cputs->_putch
    _printf->___lwmod
    ___lwmod->___lwdiv
    _gets->_cgets
    _cgets->_getche
    _getche->_putch
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0    8523
                                             12 BANK0     59    59      0
                            ___awdiv
                             ___wmul
                               _atoi
                               _gets
                           _initUART
                             _printf
                               _puts
                             _strcmp
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               2     1      1    2629
                                             10 COMMON     2     1      1
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     506
                                              3 COMMON     7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     306
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     4      2     418
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _puts                                                 1     1      0     210
                                              2 COMMON     1     1      0
                              _cputs
                              _putch
 ---------------------------------------------------------------------------------
 (2) _cputs                                                1     1      0     100
                                              1 COMMON     1     1      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1290
                                             12 COMMON     2     0      2
                                              0 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gets                                                 1     1      0     380
                                              8 COMMON     1     1      0
                              _cgets
 ---------------------------------------------------------------------------------
 (2) _cgets                                                6     6      0     325
                                              2 COMMON     6     6      0
                             _getche
                              _putch
 ---------------------------------------------------------------------------------
 (3) _getche                                               1     1      0      67
                                              1 COMMON     1     1      0
                              _getch
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     943
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
   _atoi
     ___wmul
     _isdigit
   _gets
     _cgets
       _getche
         _getch
         _putch
       _putch
   _initUART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _puts
     _cputs
       _putch
     _putch
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     47      48       3       90.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      56       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      56      10        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 29 16:17:56 2023

                      pc 0002                       l50 054B                       l51 0542  
                     l43 0503                       l60 05B2                       l61 05A9  
                     l45 0561                       l46 051F                       l71 06BF  
                     l55 05C8                       l47 052E                       l80 0714  
                     l72 067D                       l56 0586                       l48 0525  
                     l81 06D2                       l73 068C                       l57 0595  
                     l49 053C                       l90 077B                       l82 06E1  
                     l74 0683                       l58 058C                       l91 0739  
                     l83 06D8                       l75 069A                       l59 05A3  
                     l92 0748                       l84 06EF                       l76 06A9  
                     l93 073F                       l85 06FE                       l77 06A0  
                     l69 0661                       l94 0756                       l86 06F5  
                     l95 0765                       l96 075C                       l99 07D0  
           ___awdiv@sign 0075                       fsr 0004      ___wmul@multiplicand 0072  
                    l100 078E                      l101 079D                      l102 0794  
                    l103 07AB                      l104 07BA                      l105 07B1  
                    l132 0058                      l141 0056                      l135 0060  
                    l144 006A                      l129 007F                      l138 004F  
                    l261 0454                      l265 00D3                      l418 02F1  
                    l267 00EB                      l537 01ED                      l810 00C6  
                    l547 01A9                      l733 004E                      l805 0142  
                    l821 016F                      l751 028A                      l728 0368  
                    l808 00AC                      l773 00AA                      l765 0074  
                    l781 0115                      l758 0091                      l792 0233  
                    _RA0 0028                      _RA1 0029                      u900 0055  
                    u901 0054                      u910 00B6                      u911 00B5  
                    u920 00C5                      u921 00C4                      u930 00CD  
                    u931 00CC                      u960 00E7                      u961 00E6  
                    u945 00D4                      u890 005E                      u970 01B2  
                    u955 00DB                      u891 005D                      u971 01B1  
                    u990 01C4                      u991 01C3                      u985 01B6  
                    fsr0 0004                      indf 0000                     l2011 027C  
                   l1501 01C4                     l1503 01D5                     l1511 01E9  
                   l1505 01DB                     l1521 0180                     l1451 0055  
                   l1507 01DC                     l1531 019F                     l1523 0184  
                   l1515 0170                     l1611 013E                     l1603 0117  
                   l1541 0088                     l1445 0058                     l1509 01E3  
                   l1525 0188                     l1517 0176                     l1533 01A5  
                   l1621 036C                     l1605 011A                     l1701 01F4  
                   l1543 008E                     l1447 005E                     l1455 0061  
                   l1551 0238                     l1615 0075                     l1527 0192  
                   l1519 0179                     l1631 0382                     l1623 036F  
                   l1471 00C5                     l1463 00AC                     l1607 0124  
                   l1711 0209                     l1703 01F8                     l1801 02D6  
                   l1481 00DA                     l1545 0090                     l1537 0081  
                   l1449 004F                     l1457 0065                     l1561 0256  
                   l1617 004A                     l1529 0198                     l1641 03A3  
                   l1633 0386                     l1625 0375                     l1465 00B6  
                   l1609 012C                     l1721 0229                     l1713 0211  
                   l1705 01FD                     l1803 02DD                     l1483 00E1  
                   l1475 00C7                     l1539 0082                     l1731 02F3  
                   l1459 0069                     l1571 0265                     l1563 0258  
                   l1555 023F                     l1491 01AC                     l1651 03D1  
                   l1635 038C                     l1627 037A                     l1723 022C  
                   l1805 02E3                     l1485 00E7                     l1477 00C9  
                   l1741 030C                     l1733 02F4                     l1573 026A  
                   l1565 025F                     l1557 0247                     l1549 0235  
                   l1493 01B2                     l1653 03D5                     l1637 0391  
                   l1629 037C                     l1645 03B0                     l1469 00B8  
                   l1725 0231                     l1717 0216                     l1709 01FF  
                   l1901 0589                     l1821 0465                     l1813 0455  
                   l1807 02E8                     l1479 00CD                     l1743 0314  
                   l1735 02F8                     l1567 0263                     l1559 024A  
                   l1495 01B5                     l1671 0402                     l1663 03E0  
                   l1655 03D9                     l1647 03C6                     l1639 039B  
                   l1583 0093                     l1591 0144                     l1727 0232  
                   l1719 0221                     l1903 058D                     l1911 05D6  
                   l1831 046F                     l1823 0465                     l1815 045C  
                   l1809 02ED                     l1761 0364                     l1753 0349  
                   l1745 031D                     l1737 0301                     l1577 026E  
                   l1497 01BC                     l1489 01AA                     l1681 0439  
                   l1673 0408                     l1657 03DE                     l1649 03CD  
                   l1585 0094                     l1593 0147                     l1921 061A  
                   l1913 05DF                     l1905 05A6                     l1841 047C  
                   l1833 0473                     l1825 0465                     l1817 045E  
                   l1771 028C                     l1755 0353                     l1747 0325  
                   l1739 0309                     l1499 01C0                     l1675 040C  
                   l1667 03F8                     l1683 0444                     l1587 009C  
                   l1691 00F6                     l1595 0151                     l1931 0669  
                   l1923 0620                     l1915 05FA                     l1907 05AA  
                   l1851 0487                     l1843 047E                     l1835 0477  
                   l1827 0465                     l1819 0462                     l1781 02A0  
                   l1773 0290                     l1757 0358                     l1749 032A  
                   l1677 0411                     l1669 03FC                     l1589 00A0  
                   l1765 006C                     l1693 0109                     l1685 00ED  
                   l1597 0159                     l1941 06A1                     l1933 0678  
                   l1925 0625                     l1917 05FF                     l1909 05C0  
                   l1861 0496                     l1853 048D                     l1845 0480  
                   l1837 0479                     l1829 046B                     l1791 02B6  
                   l1783 02A4                     l1775 0295                     l1679 0435  
                   l1767 0070                     l1695 0110                     l1687 00EE  
                   l1599 016B                     l1951 06F2                     l1943 06B7  
                   l1935 0680                     l1927 0652                     l1919 0609  
                   l1871 04B9                     l1863 0498                     l1855 0491  
                   l1847 0482                     l1839 047B                     l1793 02BA  
                   l1785 02A6                     l1777 0297                     l1769 028B  
                   l1689 00F2                     l1961 073C                     l1953 06F6  
                   l1945 06CD                     l1937 0684                     l1929 0657  
                   l1881 04F9                     l1873 04C5                     l1865 04A4  
                   l1857 0493                     l1849 0483                     l1795 02BE  
                   l1787 02AC                     l1779 029B                     l1699 01EF  
                   l1971 0789                     l1963 0740                     l1955 070C  
                   l1947 06D5                     l1939 069D                     l1891 053F  
                   l1883 050B                     l1875 04C9                     l1867 04A8  
                   l1859 0495                     l1797 02CF                     l1789 02AF  
                   l1981 07C8                     l1973 0791                     l1965 0759  
                   l1949 06D9                     l1957 0723                     l1893 0543  
                   l1885 051A                     l1877 04D0                     l1869 04B4  
                   l1799 02D5                     l1975 0795                     l1967 075D  
                   l1959 0736                     l1983 07DE                     l1895 0559  
                   l1887 0522                     l1879 04F4                     l1985 07E7  
                   l1977 07AE                     l1969 0773                     l1889 0526  
                   l1897 0570                     l1979 07B2                     l1899 0583  
                   l1989 07E8                     STR_1 0032                     STR_2 003E  
                   STR_3 0036                     STR_4 003A                     STR_5 0042  
                   STR_6 0042                     STR_7 0042                     STR_8 0042  
                   STR_9 0042                     u1010 01D5                     u1011 01D4  
                   u1100 0088                     u1101 0087                     u1005 01C5  
                   u1110 008E                     u1030 01E9                     u1111 008D  
                   u1031 01E8                     u1015 01D1                     u1120 023E  
                   u1040 0176                     u1200 038C                     u1121 023D  
                   u1025 01DD                     u1041 0175                     u1201 038B  
                   u1130 025E                     u1210 03AF                     u1131 025D  
                   u1211 03AE                     u1060 0188                     u1220 03D5  
                   u1140 00AA                     u1300 01F4                     u1061 0187  
                   u1221 03D4                     u1141 00A9                     u1301 01F3  
                   u1070 0192                     u1230 03F7                     u1150 0159  
                   u1310 01FD                     u1071 0191                     u1055 017A  
                   u1231 03F6                     u1151 0158                     u1311 01FC  
                   u1400 0290                     u1240 0402                     u1160 016B  
                   u1320 0211                     u1401 028F                     u1241 0401  
                   u1161 016A                     u1321 0210                     u1410 029B  
                   u1090 01A5                     u1250 0408                     u1170 012C  
                   u1330 0229                     u1411 029A                     u1091 01A4  
                   u1075 018E                     u1251 0407                     u1235 03F3  
                   u1171 012B                     u1331 0228                     u1420 02AC  
                   u1340 0301                     u1260 0444                     u1180 013E  
                   u1500 04A4                     u1421 02AB                     u1341 0300  
                   u1085 0199                     u1261 0443                     u1181 013D  
                   u1501 04A3                     u1350 0309                     u1270 0454  
                   u1190 0375                     u1510 04B4                     u1351 0308  
                   u1271 0453                     u1191 0374                     u1511 04B3  
                   u1440 02BE                     u1360 0314                     u1280 0109  
                   u1600 05D6                     u1520 04C5                     u1441 02BD  
                   u1361 0313                     u1281 0108                     u1601 05D5  
                   u1521 04C4                     u1370 0325                     u1290 0110  
                   u1610 05FF                     u1530 04F9                     u1435 02B0  
                   u1371 0324                     u1291 010F                     u1611 05FE  
                   u1531 04F8                     u1460 02CF                     u1380 0353  
                   u1700 0722                     u1620 0620                     u1540 051A  
                   u1461 02CE                     u1381 0352                     u1701 0721  
                   u1621 061F                     u1605 05D2                     u1541 0519  
                   u1390 0358                     u1710 0756                     u1630 0657  
                   u1550 053C                     u1455 02BF                     u1391 0357  
                   u1711 0755                     u1631 0656                     u1551 053B  
                   u1480 02E3                     u1720 0773                     u1640 0678  
                   u1560 0559                     u1481 02E2                     u1465 02CB  
                   u1721 0772                     u1705 071E                     u1641 0677  
                   u1561 0558                     u1545 0516                     u1490 02E8  
                   u1730 0789                     u1650 069A                     u1570 056F  
                   u1491 02E7                     u1475 02D7                     u1731 0788  
                   u1715 0752                     u1651 0699                     u1571 056E  
                   u1555 0538                     u1740 07AB                     u1660 06B7  
                   u1580 05A3                     u1741 07AA                     u1725 076F  
                   u1661 06B6                     u1645 0674                     u1581 05A2  
                   u1565 0555                     u1750 07C8                     u1670 06CD  
                   u1590 05C0                     u1751 07C7                     u1735 0785  
                   u1671 06CC                     u1655 0696                     u1591 05BF  
                   u1575 056B                     u1760 07DE                     u1680 06EF  
                   u1761 07DD                     u1745 07A7                     u1681 06EE  
                   u1665 06B3                     u1585 059F                     u1690 070C  
                   u1755 07C4                     u1691 070B                     u1675 06C9  
                   u1595 05BC                     u1765 07DA                     u1685 06EB  
                   u1695 0708                     _RCIF 0065                     _TXIF 0064  
                   _atoi 02F2                     _gets 0049                     _main 0455  
            main@set_spd 0057                     btemp 007E                     _puts 006B  
                   start 0000                    ?_atoi 0076                    ?_gets 0070  
                  ?_main 0070          __end_of___awdiv 02F2                    STR_10 001C  
                  STR_11 003C                    STR_20 0042                    STR_12 002E  
                  STR_21 001C                    STR_13 0042                    STR_14 0042  
                  STR_22 003C                    STR_23 002E                    STR_15 0042  
                  STR_16 0042                    STR_24 0027                    STR_17 0042  
                  STR_18 0042                    STR_19 0042                    _CMCON 001F  
                  ?_puts 0070          ___awdiv@divisor 0070          __end_of___lwdiv 01EE  
        __end_of___lwmod 01AA          ___awdiv@counter 0074                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _TXSTA 0098                    _cgets 0234  
                  _getch 004F          __end_of_dpowers 001C                    _cputs 0092  
        __end_of_isdigit 0092                    atoi@a 007B                    atoi@s 007D  
                  _putch 0057                    gets@s 0078                    main@j 0065  
                  main@k 005E                    pclath 000A                    puts@s 0072  
                  status 0003                    wtemp0 007E          __end_of_strcspn 0143  
        __initialization 07FA             __end_of_atoi 0369             __end_of_gets 004F  
           __end_of_main 07FA             __end_of_puts 0075                   ??_atoi 0078  
                 ??_gets 0078                   ??_main 002C                   ??_puts 0072  
                 ?_cgets 0070                   ?_getch 0070                   ?_cputs 0070  
       ___awdiv@dividend 0072                   ?_putch 0070                   ___wmul 00C7  
              ??___awdiv 0074         __end_of_initUART 0080                ??___lwdiv 0074  
              ??___lwmod 007B                   _getche 0061                   cgets@c 0074  
                 cgets@s 0076         ___awdiv@quotient 0076                   _printf 0369  
                 _strchr 00AB                   _strcmp 00EC                   _strtok 01EE  
                 _strspn 0143                   cputs@s 0071                ??_isdigit 0070  
              ??_strcspn 0075  __end_of__initialization 07FD           __pcstackCOMMON 0070  
          __end_of_cgets 028B            __end_of_getch 0057            __end_of_cputs 00AB  
          __end_of_putch 0061                  ??_cgets 0072                  ??_getch 0070  
                ??_cputs 0071                  ??_putch 0070               __pbssBANK0 0067  
             __pmaintext 0455                  ?___wmul 0070                  ?_getche 0070  
                ?_printf 007C                  ?_strchr 0070                  ?_strcmp 0070  
                ?_strtok 007A                  ?_strspn 0073               __stringtab 0002  
              ?_initUART 0070                  ___awdiv 028B                  ___lwdiv 01AA  
                ___lwmod 0170                  __ptext1 01EE                  __ptext2 0143  
                __ptext3 0116                  __ptext4 00AB                  __ptext5 00EC  
                __ptext6 006B                  __ptext7 0092                  __ptext8 0369  
                __ptext9 0170                  _dpowers 0012                  _isdigit 0080  
                cgets@s1 0077                  getche@c 0071                  main@cmd 0059  
                main@ptr 0060                  main@tmp 002D                  _strcspn 0116  
   end_of_initialization 07FD               ??_initUART 0070                  printf@c 002B  
                printf@f 0028                  strcmp@r 0074                  strspn@i 0077  
             main@mx_spd 0055           __end_of___wmul 00EC           __end_of_getche 006B  
         __end_of_printf 0455           __end_of_strchr 00C7           __end_of_strcmp 0116  
         __end_of_strtok 0234           __end_of_strspn 0170      start_initialization 07FA  
               ??___wmul 0074                 ??_getche 0071                 ??_printf 0020  
               ??_strchr 0072                 ??_strcmp 0072                 ??_strtok 007B  
               ??_strspn 0075                ___latbits 0001            __pcstackBANK0 0020  
       ___lwdiv@dividend 0072                 ?___awdiv 0070                 ?___lwdiv 0070  
               ?___lwmod 0077                __pstrings 0002                 ?_isdigit 0070  
       ___lwdiv@quotient 0074                 ?_strcspn 0073           ___wmul@product 0074  
            __stringbase 0011        ___wmul@multiplier 0070               printf@flag 0023  
             printf@prec 0024                main@intvl 0063       __end_of__stringtab 0012  
            _isdigit$619 0070          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 01AA                 __ptext11 0075                 __ptext20 028B  
               __ptext12 0049                 __ptext13 0234                 __ptext14 0061  
               __ptext15 0057                 __ptext16 004F                 __ptext17 02F2  
               __ptext18 0080                 __ptext19 00C7                 _initUART 0075  
               atoi@sign 007A                printf@val 0029                 main@dist 0061  
               main@rcmd 005A                putch@byte 0070                 isdigit@c 0071  
              strchr@chr 0070         ___lwmod@dividend 0079                strchr@ptr 0072  
              strcspn@s1 0079                strcspn@s2 0073                stringcode 000C  
               printf@ap 0025                 printf@cp 0026                 strcmp@s1 0075  
               strcmp@s2 0070          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               strcspn@i 0077                 stringdir 000C                 stringtab 0002  
               strtok@s1 007B                 strtok@s2 007A                 strspn@s1 0079  
               strspn@s2 0073                 strtok@sp 0067  
